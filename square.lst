                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Mon Mar 30 17:08:56 2020
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc616210
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _tim
                             13 	.globl _player
                             14 	.globl _master
                             15 	.globl _sync
                             16 	.globl _tick
                             17 	.globl _decreaseSwing
                             18 	.globl _increaseSwing
                             19 	.globl _decreasePulses
                             20 	.globl _increasePulses
                             21 	.globl _decreaseSteps
                             22 	.globl _increaseSteps
                             23 	.globl _decreaseOffStep
                             24 	.globl _increaseOffStep
                             25 	.globl _setupDrum
                             26 	.globl _fillDrumC
                             27 	.globl _fillDrumB
                             28 	.globl _fillDrumA
                             29 	.globl _makeCSound
                             30 	.globl _makeBSound
                             31 	.globl _makeASound
                             32 	.globl _rand
                             33 	.globl _performantdelay
                             34 	.globl _seldrum
                             35 	.globl _pad
                             36 	.globl _joy
                             37 	.globl _padext
                             38 	.globl _modus
                             39 	.globl _pop
                             40 	.globl _todd
                             41 	.globl _bob
                             42 	.globl _watch
                             43 	.globl _tempo
                             44 	.globl _samp_freq
                             45 	.globl _cOffStep
                             46 	.globl _cDelay
                             47 	.globl _offStepC
                             48 	.globl _offStepB
                             49 	.globl _offStepA
                             50 	.globl _clkC
                             51 	.globl _totalStepsC
                             52 	.globl _numberOfPulsesC
                             53 	.globl _clkB
                             54 	.globl _totalStepsB
                             55 	.globl _numberOfPulsesB
                             56 	.globl _clkA
                             57 	.globl _totalStepsA
                             58 	.globl _numberOfPulsesA
                             59 	.globl _clockToSync
                             60 	.globl _syncToDrum
                             61 	.globl _g
                             62 	.globl _delayC
                             63 	.globl _delayB
                             64 	.globl _delayA
                             65 	.globl _xC
                             66 	.globl _xB
                             67 	.globl _xA
                             68 	.globl _x
                             69 	.globl _f
                             70 	.globl _last
                             71 	.globl _first
                             72 	.globl _randC
                             73 	.globl _randB
                             74 	.globl _randA
                             75 	.globl _y
                             76 	.globl _i
                             77 	.globl _bucket
                             78 	.globl _dYlut
                             79 	.globl _dXlut
                             80 	.globl _drumC
                             81 	.globl _drumB
                             82 	.globl _drumA
                             83 	.globl _saveC
                             84 	.globl _swingC
                             85 	.globl _offsetC
                             86 	.globl _midiC
                             87 	.globl _squareC
                             88 	.globl _squareB
                             89 	.globl _squareA
                             90 ;--------------------------------------------------------
                             91 ; special function registers
                             92 ;--------------------------------------------------------
                             93 ;--------------------------------------------------------
                             94 ; special function bits 
                             95 ;--------------------------------------------------------
                             96 ;--------------------------------------------------------
                             97 ; internal ram data
                             98 ;--------------------------------------------------------
                             99 	.area _DATA
   0000                     100 _squareA::
   0000                     101 	.ds 16
   0010                     102 _squareB::
   0010                     103 	.ds 16
   0020                     104 _squareC::
   0020                     105 	.ds 16
   0030                     106 _midiC::
   0030                     107 	.ds 16
   0040                     108 _offsetC::
   0040                     109 	.ds 16
   0050                     110 _swingC::
   0050                     111 	.ds 16
   0060                     112 _saveC::
   0060                     113 	.ds 16
   0070                     114 _drumA::
   0070                     115 	.ds 32
   0090                     116 _drumB::
   0090                     117 	.ds 32
   00B0                     118 _drumC::
   00B0                     119 	.ds 32
   00D0                     120 _dXlut::
   00D0                     121 	.ds 32
   00F0                     122 _dYlut::
   00F0                     123 	.ds 32
   0110                     124 _bucket::
   0110                     125 	.ds 1
   0111                     126 _i::
   0111                     127 	.ds 1
   0112                     128 _y::
   0112                     129 	.ds 1
   0113                     130 _randA::
   0113                     131 	.ds 1
   0114                     132 _randB::
   0114                     133 	.ds 1
   0115                     134 _randC::
   0115                     135 	.ds 1
   0116                     136 _first::
   0116                     137 	.ds 1
   0117                     138 _last::
   0117                     139 	.ds 1
   0118                     140 _f::
   0118                     141 	.ds 1
   0119                     142 _x::
   0119                     143 	.ds 1
   011A                     144 _xA::
   011A                     145 	.ds 1
   011B                     146 _xB::
   011B                     147 	.ds 1
   011C                     148 _xC::
   011C                     149 	.ds 1
   011D                     150 _delayA::
   011D                     151 	.ds 1
   011E                     152 _delayB::
   011E                     153 	.ds 1
   011F                     154 _delayC::
   011F                     155 	.ds 1
   0120                     156 _g::
   0120                     157 	.ds 1
   0121                     158 _syncToDrum::
   0121                     159 	.ds 1
   0122                     160 _clockToSync::
   0122                     161 	.ds 1
   0123                     162 _numberOfPulsesA::
   0123                     163 	.ds 1
   0124                     164 _totalStepsA::
   0124                     165 	.ds 1
   0125                     166 _clkA::
   0125                     167 	.ds 1
   0126                     168 _numberOfPulsesB::
   0126                     169 	.ds 1
   0127                     170 _totalStepsB::
   0127                     171 	.ds 1
   0128                     172 _clkB::
   0128                     173 	.ds 1
   0129                     174 _numberOfPulsesC::
   0129                     175 	.ds 1
   012A                     176 _totalStepsC::
   012A                     177 	.ds 1
   012B                     178 _clkC::
   012B                     179 	.ds 1
   012C                     180 _offStepA::
   012C                     181 	.ds 1
   012D                     182 _offStepB::
   012D                     183 	.ds 1
   012E                     184 _offStepC::
   012E                     185 	.ds 1
   012F                     186 _cDelay::
   012F                     187 	.ds 1
   0130                     188 _cOffStep::
   0130                     189 	.ds 1
   0131                     190 _current_rand:
   0131                     191 	.ds 1
   0132                     192 _samp_freq::
   0132                     193 	.ds 1
   0133                     194 _tempo::
   0133                     195 	.ds 1
   0134                     196 _watch::
   0134                     197 	.ds 1
   0135                     198 _bob::
   0135                     199 	.ds 1
   0136                     200 _todd::
   0136                     201 	.ds 1
   0137                     202 _pop::
   0137                     203 	.ds 1
   0138                     204 _modus::
   0138                     205 	.ds 1
   0139                     206 _padext::
   0139                     207 	.ds 1
   013A                     208 _joy::
   013A                     209 	.ds 1
   013B                     210 _pad::
   013B                     211 	.ds 1
   013C                     212 _seldrum::
   013C                     213 	.ds 1
                            214 ;--------------------------------------------------------
                            215 ; overlayable items in internal ram 
                            216 ;--------------------------------------------------------
                            217 	.area _OVERLAY
                            218 ;--------------------------------------------------------
                            219 ; indirectly addressable internal ram data
                            220 ;--------------------------------------------------------
                            221 	.area _ISEG
                            222 ;--------------------------------------------------------
                            223 ; bit data
                            224 ;--------------------------------------------------------
                            225 	.area _BSEG
                            226 ;--------------------------------------------------------
                            227 ; external ram data
                            228 ;--------------------------------------------------------
                            229 	.area _XSEG
                            230 ;--------------------------------------------------------
                            231 ; global & static initialisations
                            232 ;--------------------------------------------------------
                            233 	.area _GSINIT
                            234 	.area _GSFINAL
                            235 	.area _GSINIT
                            236 ;	square.c 53
                            237 ;	square.c 1063
                            238 ;	genArrayInit
                            239 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 00 00            240 	ld	hl,#_squareA
   0003 CD 00 00            241 	call	__initrleblock
   0006 02                  242 	.db	2
   0007 FF FF               243 	.db	0xFF, 0xFF
   0009 F4 81               244 	.db	-12,0x81
   000B 02                  245 	.db	2
   000C FF FF               246 	.db	0xFF, 0xFF
   000E 00                  247 	.db	0
                            248 ;	square.c 58
                            249 ;	square.c 1063
                            250 ;	genArrayInit
                            251 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   000F 21 10 00            252 	ld	hl,#_squareB
   0012 CD 00 00            253 	call	__initrleblock
   0015 04                  254 	.db	4
   0016 00 00 7E 7E         255 	.db	0x00, 0x00, 0x7E, 0x7E
   001A F8 42               256 	.db	-8,0x42
   001C 04                  257 	.db	4
   001D 7E 7E 00 00         258 	.db	0x7E, 0x7E, 0x00, 0x00
   0021 00                  259 	.db	0
                            260 ;	square.c 64
                            261 ;	square.c 1063
                            262 ;	genArrayInit
                            263 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0022 21 20 00            264 	ld	hl,#_squareC
   0025 CD 00 00            265 	call	__initrleblock
   0028 04                  266 	.db	4
   0029 00 00 00 00         267 	.db	0x00, 0x00, 0x00, 0x00
   002D F8 3C               268 	.db	-8,0x3C
   002F 04                  269 	.db	4
   0030 00 00 00 00         270 	.db	0x00, 0x00, 0x00, 0x00
   0034 00                  271 	.db	0
                            272 ;	square.c 69
                            273 ;	square.c 1063
                            274 ;	genArrayInit
                            275 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0035 21 30 00            276 	ld	hl,#_midiC
   0038 CD 00 00            277 	call	__initrleblock
   003B 0A                  278 	.db	10
   003C C3 C3 E7 E7 FF FF   279 	.db	0xC3, 0xC3, 0xE7, 0xE7, 0xFF, 0xFF, 0xFF, 0xFF
        FF FF
   0044 DB DB               280 	.db	0xDB, 0xDB
   0046 FA C3               281 	.db	-6,0xC3
   0048 00                  282 	.db	0
                            283 ;	square.c 74
                            284 ;	square.c 1063
                            285 ;	genArrayInit
                            286 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0049 21 40 00            287 	ld	hl,#_offsetC
   004C CD 00 00            288 	call	__initrleblock
   004F 10                  289 	.db	16
   0050 3C 3C 7E 7E E7 E7   290 	.db	0x3C, 0x3C, 0x7E, 0x7E, 0xE7, 0xE7, 0xC3, 0xC3
        C3 C3
   0058 C3 C3 E7 E7 7E 7E   291 	.db	0xC3, 0xC3, 0xE7, 0xE7, 0x7E, 0x7E, 0x3C, 0x3C
        3C 3C
   0060 00                  292 	.db	0
                            293 ;	square.c 80
                            294 ;	square.c 1063
                            295 ;	genArrayInit
                            296 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0061 21 50 00            297 	ld	hl,#_swingC
   0064 CD 00 00            298 	call	__initrleblock
   0067 10                  299 	.db	16
   0068 00 00 00 00 18 18   300 	.db	0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x3C, 0x3C
        3C 3C
   0070 3C 3C 18 18 00 00   301 	.db	0x3C, 0x3C, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00
        00 00
   0078 00                  302 	.db	0
                            303 ;	square.c 85
                            304 ;	square.c 1063
                            305 ;	genArrayInit
                            306 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0079 21 60 00            307 	ld	hl,#_saveC
   007C CD 00 00            308 	call	__initrleblock
   007F 10                  309 	.db	16
   0080 10 10 18 18 1C 1C   310 	.db	0x10, 0x10, 0x18, 0x18, 0x1C, 0x1C, 0x1E, 0x1E
        1E 1E
   0088 1E 1E 1C 1C 18 18   311 	.db	0x1E, 0x1E, 0x1C, 0x1C, 0x18, 0x18, 0x10, 0x10
        10 10
   0090 00                  312 	.db	0
                            313 ;	square.c 91
                            314 ;	square.c 1063
                            315 ;	genArrayInit
                            316 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0091 21 70 00            317 	ld	hl,#_drumA
   0094 CD 00 00            318 	call	__initrleblock
   0097 E0 00               319 	.db	-32,0x00
   0099 00                  320 	.db	0
                            321 ;	square.c 92
                            322 ;	square.c 1063
                            323 ;	genArrayInit
                            324 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   009A 21 90 00            325 	ld	hl,#_drumB
   009D CD 00 00            326 	call	__initrleblock
   00A0 E0 00               327 	.db	-32,0x00
   00A2 00                  328 	.db	0
                            329 ;	square.c 93
                            330 ;	square.c 1063
                            331 ;	genArrayInit
                            332 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00A3 21 B0 00            333 	ld	hl,#_drumC
   00A6 CD 00 00            334 	call	__initrleblock
   00A9 E0 00               335 	.db	-32,0x00
   00AB 00                  336 	.db	0
                            337 ;	square.c 95
                            338 ;	square.c 1063
                            339 ;	genArrayInit
                            340 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00AC 21 D0 00            341 	ld	hl,#_dXlut
   00AF CD 00 00            342 	call	__initrleblock
   00B2 20                  343 	.db	32
   00B3 90 8C 88 84 80 7C   344 	.db	0x90, 0x8C, 0x88, 0x84, 0x80, 0x7C, 0x78, 0x74
        78 74
   00BB 70 6C 68 64 60 5C   345 	.db	0x70, 0x6C, 0x68, 0x64, 0x60, 0x5C, 0x58, 0x54
        58 54
   00C3 50 4C 48 44 40 3C   346 	.db	0x50, 0x4C, 0x48, 0x44, 0x40, 0x3C, 0x38, 0x34
        38 34
   00CB 30 2C 28 24 20 1C   347 	.db	0x30, 0x2C, 0x28, 0x24, 0x20, 0x1C, 0x18, 0x14
        18 14
   00D3 00                  348 	.db	0
                            349 ;	square.c 96
                            350 ;	square.c 1063
                            351 ;	genArrayInit
                            352 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00D4 21 F0 00            353 	ld	hl,#_dYlut
   00D7 CD 00 00            354 	call	__initrleblock
   00DA 20                  355 	.db	32
   00DB 10 14 18 1C 20 24   356 	.db	0x10, 0x14, 0x18, 0x1C, 0x20, 0x24, 0x28, 0x2C
        28 2C
   00E3 30 34 38 3C 40 44   357 	.db	0x30, 0x34, 0x38, 0x3C, 0x40, 0x44, 0x48, 0x4C
        48 4C
   00EB 50 54 58 5C 60 64   358 	.db	0x50, 0x54, 0x58, 0x5C, 0x60, 0x64, 0x68, 0x6C
        68 6C
   00F3 70 74 78 7C 80 84   359 	.db	0x70, 0x74, 0x78, 0x7C, 0x80, 0x84, 0x88, 0x8C
        88 8C
   00FB 00                  360 	.db	0
                            361 ;--------------------------------------------------------
                            362 ; Home
                            363 ;--------------------------------------------------------
                            364 	.area _HOME
                            365 	.area _CODE
                            366 ;--------------------------------------------------------
                            367 ; code
                            368 ;--------------------------------------------------------
                            369 	.area _CODE
                            370 ;	square.c 102
                            371 ;	genLabel
                            372 ;	genFunction
                            373 ;	---------------------------------
                            374 ; Function performantdelay
                            375 ; ---------------------------------
   0000                     376 ___performantdelay_start:
   0000                     377 _performantdelay:
                            378 	
                            379 ;	square.c 104
                            380 ;	genAssign
   0000 0E 00               381 	ld	c,#0x00
                            382 ;	genLabel
   0002                     383 00101$:
                            384 ;	genCmpLt
                            385 ;	AOP_STK for 
   0002 79                  386 	ld	a,c
   0003 F8 02               387 	lda	hl,2(sp)
   0005 96                  388 	sub	a,(hl)
   0006 D2 13 00            389 	jp	nc,00105$
                            390 ;	square.c 105
                            391 ;	genCall
                            392 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0009 C5                  393 	push	bc
   000A CD 00 00            394 	call	_wait_vbl_done
   000D E1                  395 	pop	hl
   000E 4D                  396 	ld	c,l
                            397 ;	square.c 104
                            398 ;	genPlus
                            399 ;	genPlusIncr
                            400 ; Removed redundent load
   000F 0C                  401 	inc	c
                            402 ;	genGoto
   0010 C3 02 00            403 	jp	00101$
                            404 ;	genLabel
   0013                     405 00105$:
                            406 ;	genEndFunction
                            407 	
   0013 C9                  408 	ret
   0014                     409 ___performantdelay_end:
                            410 ;	square.c 109
                            411 ;	genLabel
                            412 ;	genFunction
                            413 ;	---------------------------------
                            414 ; Function rand
                            415 ; ---------------------------------
   0014                     416 ___rand_start:
   0014                     417 _rand:
   0014 E8 FE               418 	lda	sp,-2(sp)
                            419 ;	square.c 112
                            420 ;	genCall
                            421 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0016 CD 00 00            422 	call	_clock
   0019 42                  423 	ld	b,d
   001A 4B                  424 	ld	c,e
                            425 ;	genCast
                            426 ;	AOP_HL for _current_rand
                            427 ;	AOP_STK for _rand_sloc0_1_0
   001B 21 31 01            428 	ld	hl,#_current_rand
   001E 7E                  429 	ld	a,(hl)
   001F F8 00               430 	lda	hl,0(sp)
   0021 22                  431 	ld	(hl+),a
   0022 36 00               432 	ld	(hl),#0x00
                            433 ;	genIpush
                            434 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0024 C5                  435 	push	bc
                            436 ;	genIpush
                            437 ;	AOP_STK for _rand_sloc0_1_0
   0025 2B                  438 	dec	hl
   0026 2A                  439 	ld	a,(hl+)
   0027 66                  440 	ld	h,(hl)
   0028 6F                  441 	ld	l,a
   0029 E5                  442 	push	hl
                            443 ;	genCall
   002A CD 00 00            444 	call	__muluint_rrx_s
   002D 42                  445 	ld	b,d
   002E 4B                  446 	ld	c,e
   002F E8 04               447 	lda	sp,4(sp)
                            448 ;	genPlus
                            449 ;	genPlusIncr
                            450 ;	Can't optimise plus by inc, falling back to the normal way
   0031 79                  451 	ld	a,c
   0032 C6 7B               452 	add	a,#0x7B
   0034 4F                  453 	ld	c,a
   0035 78                  454 	ld	a,b
   0036 CE 00               455 	adc	a,#0x00
                            456 ;	genAnd
   0038 47                  457 	ld	b,a
   0039 E6 07               458 	and	a,#0x07
   003B 47                  459 	ld	b,a
                            460 ;	genCast
                            461 ;	AOP_HL for _current_rand
   003C 21 31 01            462 	ld	hl,#_current_rand
   003F 71                  463 	ld	(hl),c
                            464 ;	square.c 113
                            465 ;	genRet
                            466 ;	AOP_HL for _current_rand
   0040 5E                  467 	ld	e,(hl)
                            468 ;	genLabel
   0041                     469 00101$:
                            470 ;	genEndFunction
   0041 E8 02               471 	lda	sp,2(sp)
   0043 C9                  472 	ret
   0044                     473 ___rand_end:
                            474 ;	square.c 116
                            475 ;	genLabel
                            476 ;	genFunction
                            477 ;	---------------------------------
                            478 ; Function makeASound
                            479 ; ---------------------------------
   0044                     480 ___makeASound_start:
   0044                     481 _makeASound:
   0044 E8 FD               482 	lda	sp,-3(sp)
                            483 ;	square.c 118
                            484 ;	genAssign
   0046 01 10 FF            485 	ld	bc,#0xFF10
                            486 ;	genAssign (pointer)
   0049 3E 29               487 	ld	a,#0x29
   004B 02                  488 	ld	(bc),a
                            489 ;	square.c 119
                            490 ;	genAssign
   004C 01 11 FF            491 	ld	bc,#0xFF11
                            492 ;	genAssign (pointer)
   004F 3E 4F               493 	ld	a,#0x4F
   0051 02                  494 	ld	(bc),a
                            495 ;	square.c 120
                            496 ;	genAssign
   0052 01 12 FF            497 	ld	bc,#0xFF12
                            498 ;	genAssign (pointer)
   0055 3E F1               499 	ld	a,#0xF1
   0057 02                  500 	ld	(bc),a
                            501 ;	square.c 121
                            502 ;	genAssign
   0058 01 13 FF            503 	ld	bc,#0xFF13
                            504 ;	genAssign (pointer)
   005B 3E 6F               505 	ld	a,#0x6F
   005D 02                  506 	ld	(bc),a
                            507 ;	square.c 122
                            508 ;	genAssign
   005E 01 14 FF            509 	ld	bc,#0xFF14
                            510 ;	genAssign (pointer)
   0061 3E C4               511 	ld	a,#0xC4
   0063 02                  512 	ld	(bc),a
                            513 ;	square.c 123
                            514 ;	genAssign
   0064 01 25 FF            515 	ld	bc,#0xFF25
                            516 ;	genAssign
                            517 ;	AOP_STK for _makeASound_sloc0_1_0
   0067 F8 01               518 	lda	hl,1(sp)
   0069 36 25               519 	ld	(hl),#0x25
   006B 23                  520 	inc	hl
   006C 36 FF               521 	ld	(hl),#0xFF
                            522 ;	genPointerGet
                            523 ;	AOP_STK for _makeASound_sloc0_1_0
                            524 ;	AOP_STK for _makeASound_sloc1_1_0
   006E 2B                  525 	dec	hl
   006F 5E                  526 	ld	e,(hl)
   0070 23                  527 	inc	hl
   0071 56                  528 	ld	d,(hl)
   0072 1A                  529 	ld	a,(de)
   0073 2B                  530 	dec	hl
   0074 2B                  531 	dec	hl
                            532 ;	genOr
                            533 ;	AOP_STK for _makeASound_sloc1_1_0
   0075 77                  534 	ld      (hl),a
   0076 7F                  535 	ld      a,a
   0077 F6 FF               536 	or	a,#0xFF
                            537 ;	genAssign (pointer)
   0079 02                  538 	ld	(bc),a
                            539 ;	genLabel
   007A                     540 00101$:
                            541 ;	genEndFunction
   007A E8 03               542 	lda	sp,3(sp)
   007C C9                  543 	ret
   007D                     544 ___makeASound_end:
                            545 ;	square.c 126
                            546 ;	genLabel
                            547 ;	genFunction
                            548 ;	---------------------------------
                            549 ; Function makeBSound
                            550 ; ---------------------------------
   007D                     551 ___makeBSound_start:
   007D                     552 _makeBSound:
   007D E8 FD               553 	lda	sp,-3(sp)
                            554 ;	square.c 128
                            555 ;	genAssign
   007F 01 16 FF            556 	ld	bc,#0xFF16
                            557 ;	genAssign (pointer)
   0082 3E 4A               558 	ld	a,#0x4A
   0084 02                  559 	ld	(bc),a
                            560 ;	square.c 129
                            561 ;	genAssign
   0085 01 17 FF            562 	ld	bc,#0xFF17
                            563 ;	genAssign (pointer)
   0088 3E 15               564 	ld	a,#0x15
   008A 02                  565 	ld	(bc),a
                            566 ;	square.c 130
                            567 ;	genAssign
   008B 01 18 FF            568 	ld	bc,#0xFF18
                            569 ;	genAssign (pointer)
   008E 3E 27               570 	ld	a,#0x27
   0090 02                  571 	ld	(bc),a
                            572 ;	square.c 131
                            573 ;	genAssign
   0091 01 19 FF            574 	ld	bc,#0xFF19
                            575 ;	genAssign (pointer)
   0094 3E C7               576 	ld	a,#0xC7
   0096 02                  577 	ld	(bc),a
                            578 ;	square.c 132
                            579 ;	genAssign
   0097 01 25 FF            580 	ld	bc,#0xFF25
                            581 ;	genAssign
                            582 ;	AOP_STK for _makeBSound_sloc0_1_0
   009A F8 01               583 	lda	hl,1(sp)
   009C 36 25               584 	ld	(hl),#0x25
   009E 23                  585 	inc	hl
   009F 36 FF               586 	ld	(hl),#0xFF
                            587 ;	genPointerGet
                            588 ;	AOP_STK for _makeBSound_sloc0_1_0
                            589 ;	AOP_STK for _makeBSound_sloc1_1_0
   00A1 2B                  590 	dec	hl
   00A2 5E                  591 	ld	e,(hl)
   00A3 23                  592 	inc	hl
   00A4 56                  593 	ld	d,(hl)
   00A5 1A                  594 	ld	a,(de)
   00A6 2B                  595 	dec	hl
   00A7 2B                  596 	dec	hl
                            597 ;	genOr
                            598 ;	AOP_STK for _makeBSound_sloc1_1_0
   00A8 77                  599 	ld      (hl),a
   00A9 7F                  600 	ld      a,a
   00AA F6 FF               601 	or	a,#0xFF
                            602 ;	genAssign (pointer)
   00AC 02                  603 	ld	(bc),a
                            604 ;	genLabel
   00AD                     605 00101$:
                            606 ;	genEndFunction
   00AD E8 03               607 	lda	sp,3(sp)
   00AF C9                  608 	ret
   00B0                     609 ___makeBSound_end:
                            610 ;	square.c 135
                            611 ;	genLabel
                            612 ;	genFunction
                            613 ;	---------------------------------
                            614 ; Function makeCSound
                            615 ; ---------------------------------
   00B0                     616 ___makeCSound_start:
   00B0                     617 _makeCSound:
   00B0 E8 FD               618 	lda	sp,-3(sp)
                            619 ;	square.c 137
                            620 ;	genAssign
   00B2 01 20 FF            621 	ld	bc,#0xFF20
                            622 ;	genAssign (pointer)
   00B5 3E 10               623 	ld	a,#0x10
   00B7 02                  624 	ld	(bc),a
                            625 ;	square.c 138
                            626 ;	genAssign
   00B8 01 21 FF            627 	ld	bc,#0xFF21
                            628 ;	genAssign (pointer)
   00BB 3E 24               629 	ld	a,#0x24
   00BD 02                  630 	ld	(bc),a
                            631 ;	square.c 139
                            632 ;	genAssign
   00BE 01 22 FF            633 	ld	bc,#0xFF22
                            634 ;	genAssign (pointer)
   00C1 3E 31               635 	ld	a,#0x31
   00C3 02                  636 	ld	(bc),a
                            637 ;	square.c 140
                            638 ;	genAssign
   00C4 01 23 FF            639 	ld	bc,#0xFF23
                            640 ;	genAssign (pointer)
   00C7 3E C0               641 	ld	a,#0xC0
   00C9 02                  642 	ld	(bc),a
                            643 ;	square.c 141
                            644 ;	genAssign
   00CA 01 25 FF            645 	ld	bc,#0xFF25
                            646 ;	genAssign
                            647 ;	AOP_STK for _makeCSound_sloc0_1_0
   00CD F8 01               648 	lda	hl,1(sp)
   00CF 36 25               649 	ld	(hl),#0x25
   00D1 23                  650 	inc	hl
   00D2 36 FF               651 	ld	(hl),#0xFF
                            652 ;	genPointerGet
                            653 ;	AOP_STK for _makeCSound_sloc0_1_0
                            654 ;	AOP_STK for _makeCSound_sloc1_1_0
   00D4 2B                  655 	dec	hl
   00D5 5E                  656 	ld	e,(hl)
   00D6 23                  657 	inc	hl
   00D7 56                  658 	ld	d,(hl)
   00D8 1A                  659 	ld	a,(de)
   00D9 2B                  660 	dec	hl
   00DA 2B                  661 	dec	hl
                            662 ;	genOr
                            663 ;	AOP_STK for _makeCSound_sloc1_1_0
   00DB 77                  664 	ld      (hl),a
   00DC 7F                  665 	ld      a,a
   00DD F6 FF               666 	or	a,#0xFF
                            667 ;	genAssign (pointer)
   00DF 02                  668 	ld	(bc),a
                            669 ;	genLabel
   00E0                     670 00101$:
                            671 ;	genEndFunction
   00E0 E8 03               672 	lda	sp,3(sp)
   00E2 C9                  673 	ret
   00E3                     674 ___makeCSound_end:
                            675 ;	square.c 146
                            676 ;	genLabel
                            677 ;	genFunction
                            678 ;	---------------------------------
                            679 ; Function fillDrumA
                            680 ; ---------------------------------
   00E3                     681 ___fillDrumA_start:
   00E3                     682 _fillDrumA:
   00E3 E8 FA               683 	lda	sp,-6(sp)
                            684 ;	square.c 147
                            685 ;	genAssign
                            686 ;	AOP_HL for _bucket
   00E5 21 10 01            687 	ld	hl,#_bucket
   00E8 36 00               688 	ld	(hl),#0x00
                            689 ;	square.c 148
                            690 ;	genAssign
                            691 ;	AOP_HL for _i
   00EA 21 11 01            692 	ld	hl,#_i
   00ED 36 00               693 	ld	(hl),#0x00
                            694 ;	genLabel
   00EF                     695 00118$:
                            696 ;	genCmpLt
                            697 ;	AOP_HL for _i
                            698 ;	AOP_HL for _totalStepsA
   00EF 21 11 01            699 	ld	hl,#_i
   00F2 7E                  700 	ld	a,(hl)
   00F3 21 24 01            701 	ld	hl,#_totalStepsA
   00F6 96                  702 	sub	a,(hl)
   00F7 D2 50 01            703 	jp	nc,00121$
                            704 ;	square.c 150
                            705 ;	genPlus
                            706 ;	AOP_HL for _bucket
                            707 ;	AOP_HL for _numberOfPulsesA
                            708 ;	Can't optimise plus by inc, falling back to the normal way
   00FA 21 10 01            709 	ld	hl,#_bucket
   00FD 7E                  710 	ld	a,(hl)
   00FE 21 23 01            711 	ld	hl,#_numberOfPulsesA
   0101 86                  712 	add	a,(hl)
   0102 21 10 01            713 	ld	hl,#_bucket
   0105 77                  714 	ld	(hl),a
                            715 ;	square.c 151
                            716 ;	genMinus
                            717 ;	AOP_HL for _totalStepsA
   0106 21 24 01            718 	ld	hl,#_totalStepsA
   0109 7E                  719 	ld	a,(hl)
   010A C6 FF               720 	add	a,#0xFF
                            721 ;	genCmpGt
                            722 ;	AOP_HL for _bucket
   010C 4F                  723 	ld	c,a
   010D 21 10 01            724 	ld	hl,#_bucket
   0110 96                  725 	sub	a,(hl)
   0111 D2 2F 01            726 	jp	nc,00104$
                            727 ;	square.c 153
                            728 ;	genMinus
                            729 ;	AOP_HL for _bucket
                            730 ;	AOP_HL for _totalStepsA
   0114 7E                  731 	ld	a,(hl)
   0115 21 24 01            732 	ld	hl,#_totalStepsA
   0118 96                  733 	sub	a,(hl)
   0119 21 10 01            734 	ld	hl,#_bucket
   011C 77                  735 	ld	(hl),a
                            736 ;	square.c 154
                            737 ;	genPlus
                            738 ;	AOP_HL for _i
                            739 ;	Can't optimise plus by inc, falling back to the normal way
   011D 3E 70               740 	ld	a,#<_drumA
   011F 21 11 01            741 	ld	hl,#_i
   0122 86                  742 	add	a,(hl)
   0123 4F                  743 	ld	c,a
   0124 3E 00               744 	ld	a,#>_drumA
   0126 CE 00               745 	adc	a,#0x00
   0128 47                  746 	ld	b,a
                            747 ;	genAssign (pointer)
   0129 3E 01               748 	ld	a,#0x01
   012B 02                  749 	ld	(bc),a
                            750 ;	genGoto
   012C C3 49 01            751 	jp	00120$
                            752 ;	genLabel
   012F                     753 00104$:
                            754 ;	square.c 156
                            755 ;	genCmpLt
                            756 ;	AOP_HL for _bucket
                            757 ;	AOP_HL for _totalStepsA
   012F 21 10 01            758 	ld	hl,#_bucket
   0132 7E                  759 	ld	a,(hl)
   0133 21 24 01            760 	ld	hl,#_totalStepsA
   0136 96                  761 	sub	a,(hl)
   0137 D2 49 01            762 	jp	nc,00120$
                            763 ;	square.c 158
                            764 ;	genPlus
                            765 ;	AOP_HL for _i
                            766 ;	Can't optimise plus by inc, falling back to the normal way
   013A 3E 70               767 	ld	a,#<_drumA
   013C 21 11 01            768 	ld	hl,#_i
   013F 86                  769 	add	a,(hl)
   0140 4F                  770 	ld	c,a
   0141 3E 00               771 	ld	a,#>_drumA
   0143 CE 00               772 	adc	a,#0x00
   0145 47                  773 	ld	b,a
                            774 ;	genAssign (pointer)
   0146 3E 00               775 	ld	a,#0x00
   0148 02                  776 	ld	(bc),a
                            777 ;	genLabel
   0149                     778 00120$:
                            779 ;	square.c 148
                            780 ;	genPlus
                            781 ;	AOP_HL for _i
                            782 ;	genPlusIncr
   0149 21 11 01            783 	ld	hl,#_i
   014C 34                  784 	inc	(hl)
                            785 ;	genGoto
   014D C3 EF 00            786 	jp	00118$
                            787 ;	genLabel
   0150                     788 00121$:
                            789 ;	square.c 161
                            790 ;	genPointerGet
                            791 ;	AOP_HL for _first
   0150 11 70 00            792 	ld	de,#_drumA
   0153 1A                  793 	ld	a,(de)
   0154 21 16 01            794 	ld	hl,#_first
   0157 77                  795 	ld	(hl),a
                            796 ;	square.c 162
                            797 ;	genIpush
                            798 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0158 3E 01               799 	ld	a,#0x01
   015A F5                  800 	push	af
   015B 33                  801 	inc	sp
                            802 ;	genCall
   015C CD 00 00            803 	call	_performantdelay
   015F E8 01               804 	lda	sp,1(sp)
                            805 ;	square.c 164
                            806 ;	genCmpGt
                            807 ;	AOP_HL for _numberOfPulsesA
                            808 ;	AOP_STK for _fillDrumA_sloc3_1_0
   0161 3E 00               809 	ld	a,#0x00
   0163 21 23 01            810 	ld	hl,#_numberOfPulsesA
   0166 96                  811 	sub	a,(hl)
   0167 3E 00               812 	ld	a,#0x00
   0169 17                  813 	rla
   016A F8 00               814 	lda	hl,0(sp)
   016C 77                  815 	ld	(hl),a
                            816 ;	genIfx
                            817 ;	AOP_STK for _fillDrumA_sloc3_1_0
   016D AF                  818 	xor	a,a
   016E B6                  819 	or	a,(hl)
   016F CA FF 01            820 	jp	z,00113$
                            821 ;	genCmpEq
                            822 ;	AOP_HL for _first
                            823 ; genCmpEq: left 1, right 1, result 0
   0172 21 16 01            824 	ld	hl,#_first
   0175 7E                  825 	ld	a,(hl)
   0176 FE 01               826 	cp	a,#0x01
   0178 CA FF 01            827 	jp	z,00113$
   017B                     828 00153$:
                            829 ;	square.c 166
                            830 ;	genAssign
                            831 ;	AOP_HL for _f
   017B 21 18 01            832 	ld	hl,#_f
   017E 36 00               833 	ld	(hl),#0x00
                            834 ;	genLabel
   0180                     835 00108$:
                            836 ;	genCmpLt
                            837 ;	AOP_HL for _f
                            838 ;	AOP_HL for _totalStepsA
   0180 21 18 01            839 	ld	hl,#_f
   0183 7E                  840 	ld	a,(hl)
   0184 21 24 01            841 	ld	hl,#_totalStepsA
   0187 96                  842 	sub	a,(hl)
   0188 D2 FF 01            843 	jp	nc,00113$
                            844 ;	square.c 167
                            845 ;	genAssign
                            846 ;	AOP_HL for _x
   018B 21 19 01            847 	ld	hl,#_x
   018E 36 00               848 	ld	(hl),#0x00
                            849 ;	genLabel
   0190                     850 00122$:
                            851 ;	genCmpLt
                            852 ;	AOP_HL for _x
                            853 ;	AOP_HL for _totalStepsA
   0190 21 19 01            854 	ld	hl,#_x
   0193 7E                  855 	ld	a,(hl)
   0194 21 24 01            856 	ld	hl,#_totalStepsA
   0197 96                  857 	sub	a,(hl)
   0198 3E 00               858 	ld	a,#0x00
   019A 17                  859 	rla
   019B 47                  860 	ld	b,a
                            861 ;	genIfx
   019C AF                  862 	xor	a,a
   019D B0                  863 	or	a,b
   019E CA D9 01            864 	jp	z,00125$
                            865 ;	square.c 168
                            866 ;	genPlus
                            867 ;	AOP_HL for _x
                            868 ;	AOP_STK for _fillDrumA_sloc0_1_0
                            869 ;	Can't optimise plus by inc, falling back to the normal way
   01A1 11 70 00            870 	ld	de,#_drumA
   01A4 21 19 01            871 	ld	hl,#_x
   01A7 6E                  872 	ld	l,(hl)
   01A8 26 00               873 	ld	h,#0x00
   01AA 19                  874 	add	hl,de
   01AB 7D                  875 	ld	a,l
   01AC 54                  876 	ld	d,h
   01AD F8 04               877 	lda	hl,4(sp)
   01AF 22                  878 	ld	(hl+),a
   01B0 72                  879 	ld	(hl),d
                            880 ;	genPlus
                            881 ;	AOP_HL for _x
                            882 ;	AOP_STK for _fillDrumA_sloc1_1_0
                            883 ;	genPlusIncr
                            884 ;	Can't optimise plus by inc, falling back to the normal way
   01B1 21 19 01            885 	ld	hl,#_x
   01B4 7E                  886 	ld	a,(hl)
   01B5 C6 01               887 	add	a,#0x01
   01B7 F8 03               888 	lda	hl,3(sp)
   01B9 77                  889 	ld	(hl),a
                            890 ;	genPlus
                            891 ;	AOP_STK for _fillDrumA_sloc1_1_0
                            892 ;	AOP_STK for _fillDrumA_sloc2_1_0
                            893 ;	Can't optimise plus by inc, falling back to the normal way
   01BA 11 70 00            894 	ld	de,#_drumA
   01BD 6E                  895 	ld	l,(hl)
   01BE 26 00               896 	ld	h,#0x00
   01C0 19                  897 	add	hl,de
   01C1 7D                  898 	ld	a,l
   01C2 54                  899 	ld	d,h
   01C3 F8 01               900 	lda	hl,1(sp)
                            901 ;	genPointerGet
                            902 ;	AOP_STK for _fillDrumA_sloc2_1_0
   01C5 22                  903 	ld	(hl+),a
   01C6 72                  904 	ld	(hl),d
   01C7 5F                  905 	ld	e,a
   01C8 1A                  906 	ld	a,(de)
                            907 ;	genAssign (pointer)
                            908 ;	AOP_STK for _fillDrumA_sloc0_1_0
   01C9 23                  909 	inc	hl
   01CA 23                  910 	inc	hl
   01CB 5E                  911 	ld	e,(hl)
   01CC 23                  912 	inc	hl
   01CD 56                  913 	ld	d,(hl)
   01CE 12                  914 	ld	(de),a
                            915 ;	square.c 167
                            916 ;	genAssign
                            917 ;	AOP_STK for _fillDrumA_sloc1_1_0
   01CF 2B                  918 	dec	hl
   01D0 2B                  919 	dec	hl
   01D1 4E                  920 	ld	c,(hl)
                            921 ;	genAssign
                            922 ;	AOP_HL for _x
   01D2 21 19 01            923 	ld	hl,#_x
   01D5 71                  924 	ld	(hl),c
                            925 ;	genGoto
   01D6 C3 90 01            926 	jp	00122$
                            927 ;	genLabel
   01D9                     928 00125$:
                            929 ;	square.c 170
                            930 ;	genMinus
                            931 ;	AOP_HL for _totalStepsA
   01D9 21 24 01            932 	ld	hl,#_totalStepsA
   01DC 7E                  933 	ld	a,(hl)
   01DD C6 FF               934 	add	a,#0xFF
   01DF 4F                  935 	ld	c,a
                            936 ;	genPlus
                            937 ;	Can't optimise plus by inc, falling back to the normal way
   01E0 3E 70               938 	ld	a,#<_drumA
   01E2 81                  939 	add	a,c
   01E3 4F                  940 	ld	c,a
   01E4 3E 00               941 	ld	a,#>_drumA
   01E6 CE 00               942 	adc	a,#0x00
   01E8 47                  943 	ld	b,a
                            944 ;	genAssign (pointer)
                            945 ;	AOP_HL for _first
   01E9 21 16 01            946 	ld	hl,#_first
   01EC 7E                  947 	ld	a,(hl)
   01ED 02                  948 	ld	(bc),a
                            949 ;	square.c 171
                            950 ;	genPointerGet
   01EE 11 70 00            951 	ld	de,#_drumA
   01F1 1A                  952 	ld	a,(de)
                            953 ;	genCmpEq
                            954 ; genCmpEq: left 1, right 1, result 0
   01F2 4F                  955 	ld	c,a
   01F3 FE 01               956 	cp	a,#0x01
   01F5 CA FF 01            957 	jp	z,00113$
   01F8                     958 00154$:
                            959 ;	square.c 166
                            960 ;	genPlus
                            961 ;	AOP_HL for _f
                            962 ;	genPlusIncr
   01F8 21 18 01            963 	ld	hl,#_f
   01FB 34                  964 	inc	(hl)
                            965 ;	genGoto
   01FC C3 80 01            966 	jp	00108$
                            967 ;	genLabel
   01FF                     968 00113$:
                            969 ;	square.c 179
                            970 ;	genMinus
                            971 ;	AOP_HL for _totalStepsA
   01FF 21 24 01            972 	ld	hl,#_totalStepsA
   0202 7E                  973 	ld	a,(hl)
   0203 C6 FF               974 	add	a,#0xFF
   0205 4F                  975 	ld	c,a
                            976 ;	genPlus
                            977 ;	Can't optimise plus by inc, falling back to the normal way
   0206 3E 70               978 	ld	a,#<_drumA
   0208 81                  979 	add	a,c
   0209 4F                  980 	ld	c,a
   020A 3E 00               981 	ld	a,#>_drumA
   020C CE 00               982 	adc	a,#0x00
   020E 47                  983 	ld	b,a
                            984 ;	genPointerGet
                            985 ;	AOP_HL for _last
   020F 0A                  986 	ld	a,(bc)
   0210 21 17 01            987 	ld	hl,#_last
   0213 77                  988 	ld	(hl),a
                            989 ;	square.c 180
                            990 ;	genIfx
                            991 ;	AOP_STK for _fillDrumA_sloc3_1_0
   0214 AF                  992 	xor	a,a
   0215 F8 00               993 	lda	hl,0(sp)
   0217 B6                  994 	or	a,(hl)
   0218 CA 8F 02            995 	jp	z,00116$
                            996 ;	genCmpEq
                            997 ;	AOP_HL for _offStepA
                            998 ; genCmpEq: left 1, right 1, result 0
   021B 21 2C 01            999 	ld	hl,#_offStepA
   021E 7E                 1000 	ld	a,(hl)
   021F B7                 1001 	or	a,a
   0220 CA 8F 02           1002 	jp	z,00116$
   0223                    1003 00155$:
                           1004 ;	square.c 182
                           1005 ;	genAssign
                           1006 ;	AOP_HL for _f
   0223 21 18 01           1007 	ld	hl,#_f
   0226 36 00              1008 	ld	(hl),#0x00
                           1009 ;	genLabel
   0228                    1010 00130$:
                           1011 ;	genCmpLt
                           1012 ;	AOP_HL for _f
                           1013 ;	AOP_HL for _offStepA
   0228 21 18 01           1014 	ld	hl,#_f
   022B 7E                 1015 	ld	a,(hl)
   022C 21 2C 01           1016 	ld	hl,#_offStepA
   022F 96                 1017 	sub	a,(hl)
   0230 D2 8F 02           1018 	jp	nc,00116$
                           1019 ;	square.c 183
                           1020 ;	genAssign
                           1021 ;	AOP_HL for _totalStepsA
                           1022 ;	AOP_HL for _x
   0233 21 24 01           1023 	ld	hl,#_totalStepsA
   0236 7E                 1024 	ld	a,(hl)
   0237 21 19 01           1025 	ld	hl,#_x
   023A 77                 1026 	ld	(hl),a
                           1027 ;	genLabel
   023B                    1028 00126$:
                           1029 ;	genCmpGt
                           1030 ;	AOP_HL for _x
                           1031 ;	AOP_STK for _fillDrumA_sloc3_1_0
   023B 3E 00              1032 	ld	a,#0x00
   023D 21 19 01           1033 	ld	hl,#_x
   0240 96                 1034 	sub	a,(hl)
   0241 3E 00              1035 	ld	a,#0x00
   0243 17                 1036 	rla
   0244 F8 00              1037 	lda	hl,0(sp)
   0246 77                 1038 	ld	(hl),a
                           1039 ;	genIfx
                           1040 ;	AOP_STK for _fillDrumA_sloc3_1_0
   0247 AF                 1041 	xor	a,a
   0248 B6                 1042 	or	a,(hl)
   0249 CA 80 02           1043 	jp	z,00129$
                           1044 ;	square.c 184
                           1045 ;	genPlus
                           1046 ;	AOP_HL for _x
                           1047 ;	AOP_STK for _fillDrumA_sloc2_1_0
                           1048 ;	Can't optimise plus by inc, falling back to the normal way
   024C 11 70 00           1049 	ld	de,#_drumA
   024F 21 19 01           1050 	ld	hl,#_x
   0252 6E                 1051 	ld	l,(hl)
   0253 26 00              1052 	ld	h,#0x00
   0255 19                 1053 	add	hl,de
   0256 7D                 1054 	ld	a,l
   0257 54                 1055 	ld	d,h
   0258 F8 01              1056 	lda	hl,1(sp)
   025A 22                 1057 	ld	(hl+),a
   025B 72                 1058 	ld	(hl),d
                           1059 ;	genMinus
                           1060 ;	AOP_HL for _x
   025C 21 19 01           1061 	ld	hl,#_x
   025F 7E                 1062 	ld	a,(hl)
   0260 C6 FF              1063 	add	a,#0xFF
   0262 47                 1064 	ld	b,a
                           1065 ;	genPlus
                           1066 ;	AOP_STK for _fillDrumA_sloc0_1_0
                           1067 ;	Can't optimise plus by inc, falling back to the normal way
   0263 11 70 00           1068 	ld	de,#_drumA
   0266 68                 1069 	ld	l,b
   0267 26 00              1070 	ld	h,#0x00
   0269 19                 1071 	add	hl,de
   026A 7D                 1072 	ld	a,l
   026B 54                 1073 	ld	d,h
   026C F8 04              1074 	lda	hl,4(sp)
                           1075 ;	genPointerGet
                           1076 ;	AOP_STK for _fillDrumA_sloc0_1_0
   026E 22                 1077 	ld	(hl+),a
   026F 72                 1078 	ld	(hl),d
   0270 5F                 1079 	ld	e,a
   0271 1A                 1080 	ld	a,(de)
                           1081 ;	genAssign (pointer)
                           1082 ;	AOP_STK for _fillDrumA_sloc2_1_0
   0272 F8 01              1083 	lda	hl,1(sp)
   0274 5E                 1084 	ld	e,(hl)
   0275 23                 1085 	inc	hl
   0276 56                 1086 	ld	d,(hl)
   0277 12                 1087 	ld	(de),a
                           1088 ;	square.c 183
                           1089 ;	genAssign
   0278 48                 1090 	ld	c,b
                           1091 ;	genAssign
                           1092 ;	AOP_HL for _x
   0279 21 19 01           1093 	ld	hl,#_x
   027C 71                 1094 	ld	(hl),c
                           1095 ;	genGoto
   027D C3 3B 02           1096 	jp	00126$
                           1097 ;	genLabel
   0280                    1098 00129$:
                           1099 ;	square.c 186
                           1100 ;	genAssign (pointer)
                           1101 ;	AOP_HL for _last
   0280 11 70 00           1102 	ld	de,#_drumA
   0283 21 17 01           1103 	ld	hl,#_last
   0286 7E                 1104 	ld	a,(hl)
   0287 12                 1105 	ld	(de),a
                           1106 ;	square.c 182
                           1107 ;	genPlus
                           1108 ;	AOP_HL for _f
                           1109 ;	genPlusIncr
   0288 21 18 01           1110 	ld	hl,#_f
   028B 34                 1111 	inc	(hl)
                           1112 ;	genGoto
   028C C3 28 02           1113 	jp	00130$
                           1114 ;	genLabel
   028F                    1115 00116$:
                           1116 ;	square.c 189
                           1117 ;	genCall
                           1118 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   028F CD 14 00           1119 	call	_rand
                           1120 ;	AOP_HL for _randA
   0292 21 13 01           1121 	ld	hl,#_randA
   0295 73                 1122 	ld	(hl),e
                           1123 ;	square.c 190
                           1124 ;	genIpush
                           1125 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0296 3E 1E              1126 	ld	a,#0x1E
   0298 F5                 1127 	push	af
   0299 33                 1128 	inc	sp
                           1129 ;	genIpush
                           1130 ;	AOP_HL for _randA
   029A 21 13 01           1131 	ld	hl,#_randA
   029D 7E                 1132 	ld	a,(hl)
   029E F5                 1133 	push	af
   029F 33                 1134 	inc	sp
                           1135 ;	genCall
   02A0 CD 00 00           1136 	call	__moduchar_rrx_s
   02A3 4B                 1137 	ld	c,e
   02A4 E8 02              1138 	lda	sp,2(sp)
                           1139 ;	genPlus
                           1140 ;	AOP_HL for _delayA
                           1141 ;	AOP_HL for _xA
                           1142 ;	Can't optimise plus by inc, falling back to the normal way
   02A6 21 1D 01           1143 	ld	hl,#_delayA
   02A9 7E                 1144 	ld	a,(hl)
   02AA 81                 1145 	add	a,c
   02AB 21 1A 01           1146 	ld	hl,#_xA
   02AE 77                 1147 	ld	(hl),a
                           1148 ;	genLabel
   02AF                    1149 00134$:
                           1150 ;	genEndFunction
   02AF E8 06              1151 	lda	sp,6(sp)
   02B1 C9                 1152 	ret
   02B2                    1153 ___fillDrumA_end:
                           1154 ;	square.c 194
                           1155 ;	genLabel
                           1156 ;	genFunction
                           1157 ;	---------------------------------
                           1158 ; Function fillDrumB
                           1159 ; ---------------------------------
   02B2                    1160 ___fillDrumB_start:
   02B2                    1161 _fillDrumB:
   02B2 E8 FA              1162 	lda	sp,-6(sp)
                           1163 ;	square.c 195
                           1164 ;	genAssign
                           1165 ;	AOP_HL for _bucket
   02B4 21 10 01           1166 	ld	hl,#_bucket
   02B7 36 00              1167 	ld	(hl),#0x00
                           1168 ;	square.c 196
                           1169 ;	genAssign
                           1170 ;	AOP_HL for _i
   02B9 21 11 01           1171 	ld	hl,#_i
   02BC 36 00              1172 	ld	(hl),#0x00
                           1173 ;	genLabel
   02BE                    1174 00118$:
                           1175 ;	genCmpLt
                           1176 ;	AOP_HL for _i
                           1177 ;	AOP_HL for _totalStepsB
   02BE 21 11 01           1178 	ld	hl,#_i
   02C1 7E                 1179 	ld	a,(hl)
   02C2 21 27 01           1180 	ld	hl,#_totalStepsB
   02C5 96                 1181 	sub	a,(hl)
   02C6 D2 1F 03           1182 	jp	nc,00121$
                           1183 ;	square.c 198
                           1184 ;	genPlus
                           1185 ;	AOP_HL for _bucket
                           1186 ;	AOP_HL for _numberOfPulsesB
                           1187 ;	Can't optimise plus by inc, falling back to the normal way
   02C9 21 10 01           1188 	ld	hl,#_bucket
   02CC 7E                 1189 	ld	a,(hl)
   02CD 21 26 01           1190 	ld	hl,#_numberOfPulsesB
   02D0 86                 1191 	add	a,(hl)
   02D1 21 10 01           1192 	ld	hl,#_bucket
   02D4 77                 1193 	ld	(hl),a
                           1194 ;	square.c 199
                           1195 ;	genMinus
                           1196 ;	AOP_HL for _totalStepsB
   02D5 21 27 01           1197 	ld	hl,#_totalStepsB
   02D8 7E                 1198 	ld	a,(hl)
   02D9 C6 FF              1199 	add	a,#0xFF
                           1200 ;	genCmpGt
                           1201 ;	AOP_HL for _bucket
   02DB 4F                 1202 	ld	c,a
   02DC 21 10 01           1203 	ld	hl,#_bucket
   02DF 96                 1204 	sub	a,(hl)
   02E0 D2 FE 02           1205 	jp	nc,00104$
                           1206 ;	square.c 201
                           1207 ;	genMinus
                           1208 ;	AOP_HL for _bucket
                           1209 ;	AOP_HL for _totalStepsB
   02E3 7E                 1210 	ld	a,(hl)
   02E4 21 27 01           1211 	ld	hl,#_totalStepsB
   02E7 96                 1212 	sub	a,(hl)
   02E8 21 10 01           1213 	ld	hl,#_bucket
   02EB 77                 1214 	ld	(hl),a
                           1215 ;	square.c 202
                           1216 ;	genPlus
                           1217 ;	AOP_HL for _i
                           1218 ;	Can't optimise plus by inc, falling back to the normal way
   02EC 3E 90              1219 	ld	a,#<_drumB
   02EE 21 11 01           1220 	ld	hl,#_i
   02F1 86                 1221 	add	a,(hl)
   02F2 4F                 1222 	ld	c,a
   02F3 3E 00              1223 	ld	a,#>_drumB
   02F5 CE 00              1224 	adc	a,#0x00
   02F7 47                 1225 	ld	b,a
                           1226 ;	genAssign (pointer)
   02F8 3E 01              1227 	ld	a,#0x01
   02FA 02                 1228 	ld	(bc),a
                           1229 ;	genGoto
   02FB C3 18 03           1230 	jp	00120$
                           1231 ;	genLabel
   02FE                    1232 00104$:
                           1233 ;	square.c 204
                           1234 ;	genCmpLt
                           1235 ;	AOP_HL for _bucket
                           1236 ;	AOP_HL for _totalStepsB
   02FE 21 10 01           1237 	ld	hl,#_bucket
   0301 7E                 1238 	ld	a,(hl)
   0302 21 27 01           1239 	ld	hl,#_totalStepsB
   0305 96                 1240 	sub	a,(hl)
   0306 D2 18 03           1241 	jp	nc,00120$
                           1242 ;	square.c 206
                           1243 ;	genPlus
                           1244 ;	AOP_HL for _i
                           1245 ;	Can't optimise plus by inc, falling back to the normal way
   0309 3E 90              1246 	ld	a,#<_drumB
   030B 21 11 01           1247 	ld	hl,#_i
   030E 86                 1248 	add	a,(hl)
   030F 4F                 1249 	ld	c,a
   0310 3E 00              1250 	ld	a,#>_drumB
   0312 CE 00              1251 	adc	a,#0x00
   0314 47                 1252 	ld	b,a
                           1253 ;	genAssign (pointer)
   0315 3E 00              1254 	ld	a,#0x00
   0317 02                 1255 	ld	(bc),a
                           1256 ;	genLabel
   0318                    1257 00120$:
                           1258 ;	square.c 196
                           1259 ;	genPlus
                           1260 ;	AOP_HL for _i
                           1261 ;	genPlusIncr
   0318 21 11 01           1262 	ld	hl,#_i
   031B 34                 1263 	inc	(hl)
                           1264 ;	genGoto
   031C C3 BE 02           1265 	jp	00118$
                           1266 ;	genLabel
   031F                    1267 00121$:
                           1268 ;	square.c 209
                           1269 ;	genPointerGet
                           1270 ;	AOP_HL for _first
   031F 11 90 00           1271 	ld	de,#_drumB
   0322 1A                 1272 	ld	a,(de)
   0323 21 16 01           1273 	ld	hl,#_first
   0326 77                 1274 	ld	(hl),a
                           1275 ;	square.c 210
                           1276 ;	genIpush
                           1277 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0327 3E 01              1278 	ld	a,#0x01
   0329 F5                 1279 	push	af
   032A 33                 1280 	inc	sp
                           1281 ;	genCall
   032B CD 00 00           1282 	call	_performantdelay
   032E E8 01              1283 	lda	sp,1(sp)
                           1284 ;	square.c 212
                           1285 ;	genCmpGt
                           1286 ;	AOP_HL for _numberOfPulsesB
                           1287 ;	AOP_STK for _fillDrumB_sloc3_1_0
   0330 3E 00              1288 	ld	a,#0x00
   0332 21 26 01           1289 	ld	hl,#_numberOfPulsesB
   0335 96                 1290 	sub	a,(hl)
   0336 3E 00              1291 	ld	a,#0x00
   0338 17                 1292 	rla
   0339 F8 00              1293 	lda	hl,0(sp)
   033B 77                 1294 	ld	(hl),a
                           1295 ;	genIfx
                           1296 ;	AOP_STK for _fillDrumB_sloc3_1_0
   033C AF                 1297 	xor	a,a
   033D B6                 1298 	or	a,(hl)
   033E CA CE 03           1299 	jp	z,00113$
                           1300 ;	genCmpEq
                           1301 ;	AOP_HL for _first
                           1302 ; genCmpEq: left 1, right 1, result 0
   0341 21 16 01           1303 	ld	hl,#_first
   0344 7E                 1304 	ld	a,(hl)
   0345 FE 01              1305 	cp	a,#0x01
   0347 CA CE 03           1306 	jp	z,00113$
   034A                    1307 00153$:
                           1308 ;	square.c 214
                           1309 ;	genAssign
                           1310 ;	AOP_HL for _f
   034A 21 18 01           1311 	ld	hl,#_f
   034D 36 00              1312 	ld	(hl),#0x00
                           1313 ;	genLabel
   034F                    1314 00108$:
                           1315 ;	genCmpLt
                           1316 ;	AOP_HL for _f
                           1317 ;	AOP_HL for _totalStepsB
   034F 21 18 01           1318 	ld	hl,#_f
   0352 7E                 1319 	ld	a,(hl)
   0353 21 27 01           1320 	ld	hl,#_totalStepsB
   0356 96                 1321 	sub	a,(hl)
   0357 D2 CE 03           1322 	jp	nc,00113$
                           1323 ;	square.c 215
                           1324 ;	genAssign
                           1325 ;	AOP_HL for _x
   035A 21 19 01           1326 	ld	hl,#_x
   035D 36 00              1327 	ld	(hl),#0x00
                           1328 ;	genLabel
   035F                    1329 00122$:
                           1330 ;	genCmpLt
                           1331 ;	AOP_HL for _x
                           1332 ;	AOP_HL for _totalStepsB
   035F 21 19 01           1333 	ld	hl,#_x
   0362 7E                 1334 	ld	a,(hl)
   0363 21 27 01           1335 	ld	hl,#_totalStepsB
   0366 96                 1336 	sub	a,(hl)
   0367 3E 00              1337 	ld	a,#0x00
   0369 17                 1338 	rla
   036A 47                 1339 	ld	b,a
                           1340 ;	genIfx
   036B AF                 1341 	xor	a,a
   036C B0                 1342 	or	a,b
   036D CA A8 03           1343 	jp	z,00125$
                           1344 ;	square.c 216
                           1345 ;	genPlus
                           1346 ;	AOP_HL for _x
                           1347 ;	AOP_STK for _fillDrumB_sloc0_1_0
                           1348 ;	Can't optimise plus by inc, falling back to the normal way
   0370 11 90 00           1349 	ld	de,#_drumB
   0373 21 19 01           1350 	ld	hl,#_x
   0376 6E                 1351 	ld	l,(hl)
   0377 26 00              1352 	ld	h,#0x00
   0379 19                 1353 	add	hl,de
   037A 7D                 1354 	ld	a,l
   037B 54                 1355 	ld	d,h
   037C F8 04              1356 	lda	hl,4(sp)
   037E 22                 1357 	ld	(hl+),a
   037F 72                 1358 	ld	(hl),d
                           1359 ;	genPlus
                           1360 ;	AOP_HL for _x
                           1361 ;	AOP_STK for _fillDrumB_sloc1_1_0
                           1362 ;	genPlusIncr
                           1363 ;	Can't optimise plus by inc, falling back to the normal way
   0380 21 19 01           1364 	ld	hl,#_x
   0383 7E                 1365 	ld	a,(hl)
   0384 C6 01              1366 	add	a,#0x01
   0386 F8 03              1367 	lda	hl,3(sp)
   0388 77                 1368 	ld	(hl),a
                           1369 ;	genPlus
                           1370 ;	AOP_STK for _fillDrumB_sloc1_1_0
                           1371 ;	AOP_STK for _fillDrumB_sloc2_1_0
                           1372 ;	Can't optimise plus by inc, falling back to the normal way
   0389 11 90 00           1373 	ld	de,#_drumB
   038C 6E                 1374 	ld	l,(hl)
   038D 26 00              1375 	ld	h,#0x00
   038F 19                 1376 	add	hl,de
   0390 7D                 1377 	ld	a,l
   0391 54                 1378 	ld	d,h
   0392 F8 01              1379 	lda	hl,1(sp)
                           1380 ;	genPointerGet
                           1381 ;	AOP_STK for _fillDrumB_sloc2_1_0
   0394 22                 1382 	ld	(hl+),a
   0395 72                 1383 	ld	(hl),d
   0396 5F                 1384 	ld	e,a
   0397 1A                 1385 	ld	a,(de)
                           1386 ;	genAssign (pointer)
                           1387 ;	AOP_STK for _fillDrumB_sloc0_1_0
   0398 23                 1388 	inc	hl
   0399 23                 1389 	inc	hl
   039A 5E                 1390 	ld	e,(hl)
   039B 23                 1391 	inc	hl
   039C 56                 1392 	ld	d,(hl)
   039D 12                 1393 	ld	(de),a
                           1394 ;	square.c 215
                           1395 ;	genAssign
                           1396 ;	AOP_STK for _fillDrumB_sloc1_1_0
   039E 2B                 1397 	dec	hl
   039F 2B                 1398 	dec	hl
   03A0 4E                 1399 	ld	c,(hl)
                           1400 ;	genAssign
                           1401 ;	AOP_HL for _x
   03A1 21 19 01           1402 	ld	hl,#_x
   03A4 71                 1403 	ld	(hl),c
                           1404 ;	genGoto
   03A5 C3 5F 03           1405 	jp	00122$
                           1406 ;	genLabel
   03A8                    1407 00125$:
                           1408 ;	square.c 218
                           1409 ;	genMinus
                           1410 ;	AOP_HL for _totalStepsB
   03A8 21 27 01           1411 	ld	hl,#_totalStepsB
   03AB 7E                 1412 	ld	a,(hl)
   03AC C6 FF              1413 	add	a,#0xFF
   03AE 4F                 1414 	ld	c,a
                           1415 ;	genPlus
                           1416 ;	Can't optimise plus by inc, falling back to the normal way
   03AF 3E 90              1417 	ld	a,#<_drumB
   03B1 81                 1418 	add	a,c
   03B2 4F                 1419 	ld	c,a
   03B3 3E 00              1420 	ld	a,#>_drumB
   03B5 CE 00              1421 	adc	a,#0x00
   03B7 47                 1422 	ld	b,a
                           1423 ;	genAssign (pointer)
                           1424 ;	AOP_HL for _first
   03B8 21 16 01           1425 	ld	hl,#_first
   03BB 7E                 1426 	ld	a,(hl)
   03BC 02                 1427 	ld	(bc),a
                           1428 ;	square.c 219
                           1429 ;	genPointerGet
   03BD 11 90 00           1430 	ld	de,#_drumB
   03C0 1A                 1431 	ld	a,(de)
                           1432 ;	genCmpEq
                           1433 ; genCmpEq: left 1, right 1, result 0
   03C1 4F                 1434 	ld	c,a
   03C2 FE 01              1435 	cp	a,#0x01
   03C4 CA CE 03           1436 	jp	z,00113$
   03C7                    1437 00154$:
                           1438 ;	square.c 214
                           1439 ;	genPlus
                           1440 ;	AOP_HL for _f
                           1441 ;	genPlusIncr
   03C7 21 18 01           1442 	ld	hl,#_f
   03CA 34                 1443 	inc	(hl)
                           1444 ;	genGoto
   03CB C3 4F 03           1445 	jp	00108$
                           1446 ;	genLabel
   03CE                    1447 00113$:
                           1448 ;	square.c 226
                           1449 ;	genMinus
                           1450 ;	AOP_HL for _totalStepsB
   03CE 21 27 01           1451 	ld	hl,#_totalStepsB
   03D1 7E                 1452 	ld	a,(hl)
   03D2 C6 FF              1453 	add	a,#0xFF
   03D4 4F                 1454 	ld	c,a
                           1455 ;	genPlus
                           1456 ;	Can't optimise plus by inc, falling back to the normal way
   03D5 3E 90              1457 	ld	a,#<_drumB
   03D7 81                 1458 	add	a,c
   03D8 4F                 1459 	ld	c,a
   03D9 3E 00              1460 	ld	a,#>_drumB
   03DB CE 00              1461 	adc	a,#0x00
   03DD 47                 1462 	ld	b,a
                           1463 ;	genPointerGet
                           1464 ;	AOP_HL for _last
   03DE 0A                 1465 	ld	a,(bc)
   03DF 21 17 01           1466 	ld	hl,#_last
   03E2 77                 1467 	ld	(hl),a
                           1468 ;	square.c 227
                           1469 ;	genIfx
                           1470 ;	AOP_STK for _fillDrumB_sloc3_1_0
   03E3 AF                 1471 	xor	a,a
   03E4 F8 00              1472 	lda	hl,0(sp)
   03E6 B6                 1473 	or	a,(hl)
   03E7 CA 5E 04           1474 	jp	z,00116$
                           1475 ;	genCmpEq
                           1476 ;	AOP_HL for _offStepB
                           1477 ; genCmpEq: left 1, right 1, result 0
   03EA 21 2D 01           1478 	ld	hl,#_offStepB
   03ED 7E                 1479 	ld	a,(hl)
   03EE B7                 1480 	or	a,a
   03EF CA 5E 04           1481 	jp	z,00116$
   03F2                    1482 00155$:
                           1483 ;	square.c 229
                           1484 ;	genAssign
                           1485 ;	AOP_HL for _f
   03F2 21 18 01           1486 	ld	hl,#_f
   03F5 36 00              1487 	ld	(hl),#0x00
                           1488 ;	genLabel
   03F7                    1489 00130$:
                           1490 ;	genCmpLt
                           1491 ;	AOP_HL for _f
                           1492 ;	AOP_HL for _offStepB
   03F7 21 18 01           1493 	ld	hl,#_f
   03FA 7E                 1494 	ld	a,(hl)
   03FB 21 2D 01           1495 	ld	hl,#_offStepB
   03FE 96                 1496 	sub	a,(hl)
   03FF D2 5E 04           1497 	jp	nc,00116$
                           1498 ;	square.c 230
                           1499 ;	genAssign
                           1500 ;	AOP_HL for _totalStepsB
                           1501 ;	AOP_HL for _x
   0402 21 27 01           1502 	ld	hl,#_totalStepsB
   0405 7E                 1503 	ld	a,(hl)
   0406 21 19 01           1504 	ld	hl,#_x
   0409 77                 1505 	ld	(hl),a
                           1506 ;	genLabel
   040A                    1507 00126$:
                           1508 ;	genCmpGt
                           1509 ;	AOP_HL for _x
                           1510 ;	AOP_STK for _fillDrumB_sloc3_1_0
   040A 3E 00              1511 	ld	a,#0x00
   040C 21 19 01           1512 	ld	hl,#_x
   040F 96                 1513 	sub	a,(hl)
   0410 3E 00              1514 	ld	a,#0x00
   0412 17                 1515 	rla
   0413 F8 00              1516 	lda	hl,0(sp)
   0415 77                 1517 	ld	(hl),a
                           1518 ;	genIfx
                           1519 ;	AOP_STK for _fillDrumB_sloc3_1_0
   0416 AF                 1520 	xor	a,a
   0417 B6                 1521 	or	a,(hl)
   0418 CA 4F 04           1522 	jp	z,00129$
                           1523 ;	square.c 231
                           1524 ;	genPlus
                           1525 ;	AOP_HL for _x
                           1526 ;	AOP_STK for _fillDrumB_sloc2_1_0
                           1527 ;	Can't optimise plus by inc, falling back to the normal way
   041B 11 90 00           1528 	ld	de,#_drumB
   041E 21 19 01           1529 	ld	hl,#_x
   0421 6E                 1530 	ld	l,(hl)
   0422 26 00              1531 	ld	h,#0x00
   0424 19                 1532 	add	hl,de
   0425 7D                 1533 	ld	a,l
   0426 54                 1534 	ld	d,h
   0427 F8 01              1535 	lda	hl,1(sp)
   0429 22                 1536 	ld	(hl+),a
   042A 72                 1537 	ld	(hl),d
                           1538 ;	genMinus
                           1539 ;	AOP_HL for _x
   042B 21 19 01           1540 	ld	hl,#_x
   042E 7E                 1541 	ld	a,(hl)
   042F C6 FF              1542 	add	a,#0xFF
   0431 47                 1543 	ld	b,a
                           1544 ;	genPlus
                           1545 ;	AOP_STK for _fillDrumB_sloc0_1_0
                           1546 ;	Can't optimise plus by inc, falling back to the normal way
   0432 11 90 00           1547 	ld	de,#_drumB
   0435 68                 1548 	ld	l,b
   0436 26 00              1549 	ld	h,#0x00
   0438 19                 1550 	add	hl,de
   0439 7D                 1551 	ld	a,l
   043A 54                 1552 	ld	d,h
   043B F8 04              1553 	lda	hl,4(sp)
                           1554 ;	genPointerGet
                           1555 ;	AOP_STK for _fillDrumB_sloc0_1_0
   043D 22                 1556 	ld	(hl+),a
   043E 72                 1557 	ld	(hl),d
   043F 5F                 1558 	ld	e,a
   0440 1A                 1559 	ld	a,(de)
                           1560 ;	genAssign (pointer)
                           1561 ;	AOP_STK for _fillDrumB_sloc2_1_0
   0441 F8 01              1562 	lda	hl,1(sp)
   0443 5E                 1563 	ld	e,(hl)
   0444 23                 1564 	inc	hl
   0445 56                 1565 	ld	d,(hl)
   0446 12                 1566 	ld	(de),a
                           1567 ;	square.c 230
                           1568 ;	genAssign
   0447 48                 1569 	ld	c,b
                           1570 ;	genAssign
                           1571 ;	AOP_HL for _x
   0448 21 19 01           1572 	ld	hl,#_x
   044B 71                 1573 	ld	(hl),c
                           1574 ;	genGoto
   044C C3 0A 04           1575 	jp	00126$
                           1576 ;	genLabel
   044F                    1577 00129$:
                           1578 ;	square.c 233
                           1579 ;	genAssign (pointer)
                           1580 ;	AOP_HL for _last
   044F 11 90 00           1581 	ld	de,#_drumB
   0452 21 17 01           1582 	ld	hl,#_last
   0455 7E                 1583 	ld	a,(hl)
   0456 12                 1584 	ld	(de),a
                           1585 ;	square.c 229
                           1586 ;	genPlus
                           1587 ;	AOP_HL for _f
                           1588 ;	genPlusIncr
   0457 21 18 01           1589 	ld	hl,#_f
   045A 34                 1590 	inc	(hl)
                           1591 ;	genGoto
   045B C3 F7 03           1592 	jp	00130$
                           1593 ;	genLabel
   045E                    1594 00116$:
                           1595 ;	square.c 236
                           1596 ;	genCall
                           1597 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   045E CD 14 00           1598 	call	_rand
                           1599 ;	AOP_HL for _randB
   0461 21 14 01           1600 	ld	hl,#_randB
   0464 73                 1601 	ld	(hl),e
                           1602 ;	square.c 237
                           1603 ;	genIpush
                           1604 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0465 3E 1E              1605 	ld	a,#0x1E
   0467 F5                 1606 	push	af
   0468 33                 1607 	inc	sp
                           1608 ;	genIpush
                           1609 ;	AOP_HL for _randB
   0469 21 14 01           1610 	ld	hl,#_randB
   046C 7E                 1611 	ld	a,(hl)
   046D F5                 1612 	push	af
   046E 33                 1613 	inc	sp
                           1614 ;	genCall
   046F CD 00 00           1615 	call	__moduchar_rrx_s
   0472 4B                 1616 	ld	c,e
   0473 E8 02              1617 	lda	sp,2(sp)
                           1618 ;	genPlus
                           1619 ;	AOP_HL for _delayB
                           1620 ;	AOP_HL for _xB
                           1621 ;	Can't optimise plus by inc, falling back to the normal way
   0475 21 1E 01           1622 	ld	hl,#_delayB
   0478 7E                 1623 	ld	a,(hl)
   0479 81                 1624 	add	a,c
   047A 21 1B 01           1625 	ld	hl,#_xB
   047D 77                 1626 	ld	(hl),a
                           1627 ;	genLabel
   047E                    1628 00134$:
                           1629 ;	genEndFunction
   047E E8 06              1630 	lda	sp,6(sp)
   0480 C9                 1631 	ret
   0481                    1632 ___fillDrumB_end:
                           1633 ;	square.c 241
                           1634 ;	genLabel
                           1635 ;	genFunction
                           1636 ;	---------------------------------
                           1637 ; Function fillDrumC
                           1638 ; ---------------------------------
   0481                    1639 ___fillDrumC_start:
   0481                    1640 _fillDrumC:
   0481 E8 FA              1641 	lda	sp,-6(sp)
                           1642 ;	square.c 242
                           1643 ;	genAssign
                           1644 ;	AOP_HL for _bucket
   0483 21 10 01           1645 	ld	hl,#_bucket
   0486 36 00              1646 	ld	(hl),#0x00
                           1647 ;	square.c 243
                           1648 ;	genAssign
                           1649 ;	AOP_HL for _i
   0488 21 11 01           1650 	ld	hl,#_i
   048B 36 00              1651 	ld	(hl),#0x00
                           1652 ;	genLabel
   048D                    1653 00118$:
                           1654 ;	genCmpLt
                           1655 ;	AOP_HL for _i
                           1656 ;	AOP_HL for _totalStepsC
   048D 21 11 01           1657 	ld	hl,#_i
   0490 7E                 1658 	ld	a,(hl)
   0491 21 2A 01           1659 	ld	hl,#_totalStepsC
   0494 96                 1660 	sub	a,(hl)
   0495 D2 EE 04           1661 	jp	nc,00121$
                           1662 ;	square.c 245
                           1663 ;	genPlus
                           1664 ;	AOP_HL for _bucket
                           1665 ;	AOP_HL for _numberOfPulsesC
                           1666 ;	Can't optimise plus by inc, falling back to the normal way
   0498 21 10 01           1667 	ld	hl,#_bucket
   049B 7E                 1668 	ld	a,(hl)
   049C 21 29 01           1669 	ld	hl,#_numberOfPulsesC
   049F 86                 1670 	add	a,(hl)
   04A0 21 10 01           1671 	ld	hl,#_bucket
   04A3 77                 1672 	ld	(hl),a
                           1673 ;	square.c 246
                           1674 ;	genMinus
                           1675 ;	AOP_HL for _totalStepsC
   04A4 21 2A 01           1676 	ld	hl,#_totalStepsC
   04A7 7E                 1677 	ld	a,(hl)
   04A8 C6 FF              1678 	add	a,#0xFF
                           1679 ;	genCmpGt
                           1680 ;	AOP_HL for _bucket
   04AA 4F                 1681 	ld	c,a
   04AB 21 10 01           1682 	ld	hl,#_bucket
   04AE 96                 1683 	sub	a,(hl)
   04AF D2 CD 04           1684 	jp	nc,00104$
                           1685 ;	square.c 248
                           1686 ;	genMinus
                           1687 ;	AOP_HL for _bucket
                           1688 ;	AOP_HL for _totalStepsC
   04B2 7E                 1689 	ld	a,(hl)
   04B3 21 2A 01           1690 	ld	hl,#_totalStepsC
   04B6 96                 1691 	sub	a,(hl)
   04B7 21 10 01           1692 	ld	hl,#_bucket
   04BA 77                 1693 	ld	(hl),a
                           1694 ;	square.c 249
                           1695 ;	genPlus
                           1696 ;	AOP_HL for _i
                           1697 ;	Can't optimise plus by inc, falling back to the normal way
   04BB 3E B0              1698 	ld	a,#<_drumC
   04BD 21 11 01           1699 	ld	hl,#_i
   04C0 86                 1700 	add	a,(hl)
   04C1 4F                 1701 	ld	c,a
   04C2 3E 00              1702 	ld	a,#>_drumC
   04C4 CE 00              1703 	adc	a,#0x00
   04C6 47                 1704 	ld	b,a
                           1705 ;	genAssign (pointer)
   04C7 3E 01              1706 	ld	a,#0x01
   04C9 02                 1707 	ld	(bc),a
                           1708 ;	genGoto
   04CA C3 E7 04           1709 	jp	00120$
                           1710 ;	genLabel
   04CD                    1711 00104$:
                           1712 ;	square.c 251
                           1713 ;	genCmpLt
                           1714 ;	AOP_HL for _bucket
                           1715 ;	AOP_HL for _totalStepsC
   04CD 21 10 01           1716 	ld	hl,#_bucket
   04D0 7E                 1717 	ld	a,(hl)
   04D1 21 2A 01           1718 	ld	hl,#_totalStepsC
   04D4 96                 1719 	sub	a,(hl)
   04D5 D2 E7 04           1720 	jp	nc,00120$
                           1721 ;	square.c 253
                           1722 ;	genPlus
                           1723 ;	AOP_HL for _i
                           1724 ;	Can't optimise plus by inc, falling back to the normal way
   04D8 3E B0              1725 	ld	a,#<_drumC
   04DA 21 11 01           1726 	ld	hl,#_i
   04DD 86                 1727 	add	a,(hl)
   04DE 4F                 1728 	ld	c,a
   04DF 3E 00              1729 	ld	a,#>_drumC
   04E1 CE 00              1730 	adc	a,#0x00
   04E3 47                 1731 	ld	b,a
                           1732 ;	genAssign (pointer)
   04E4 3E 00              1733 	ld	a,#0x00
   04E6 02                 1734 	ld	(bc),a
                           1735 ;	genLabel
   04E7                    1736 00120$:
                           1737 ;	square.c 243
                           1738 ;	genPlus
                           1739 ;	AOP_HL for _i
                           1740 ;	genPlusIncr
   04E7 21 11 01           1741 	ld	hl,#_i
   04EA 34                 1742 	inc	(hl)
                           1743 ;	genGoto
   04EB C3 8D 04           1744 	jp	00118$
                           1745 ;	genLabel
   04EE                    1746 00121$:
                           1747 ;	square.c 256
                           1748 ;	genPointerGet
                           1749 ;	AOP_HL for _first
   04EE 11 B0 00           1750 	ld	de,#_drumC
   04F1 1A                 1751 	ld	a,(de)
   04F2 21 16 01           1752 	ld	hl,#_first
   04F5 77                 1753 	ld	(hl),a
                           1754 ;	square.c 257
                           1755 ;	genIpush
                           1756 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   04F6 3E 01              1757 	ld	a,#0x01
   04F8 F5                 1758 	push	af
   04F9 33                 1759 	inc	sp
                           1760 ;	genCall
   04FA CD 00 00           1761 	call	_performantdelay
   04FD E8 01              1762 	lda	sp,1(sp)
                           1763 ;	square.c 259
                           1764 ;	genCmpGt
                           1765 ;	AOP_HL for _numberOfPulsesC
                           1766 ;	AOP_STK for _fillDrumC_sloc3_1_0
   04FF 3E 00              1767 	ld	a,#0x00
   0501 21 29 01           1768 	ld	hl,#_numberOfPulsesC
   0504 96                 1769 	sub	a,(hl)
   0505 3E 00              1770 	ld	a,#0x00
   0507 17                 1771 	rla
   0508 F8 00              1772 	lda	hl,0(sp)
   050A 77                 1773 	ld	(hl),a
                           1774 ;	genIfx
                           1775 ;	AOP_STK for _fillDrumC_sloc3_1_0
   050B AF                 1776 	xor	a,a
   050C B6                 1777 	or	a,(hl)
   050D CA 9D 05           1778 	jp	z,00113$
                           1779 ;	genCmpEq
                           1780 ;	AOP_HL for _first
                           1781 ; genCmpEq: left 1, right 1, result 0
   0510 21 16 01           1782 	ld	hl,#_first
   0513 7E                 1783 	ld	a,(hl)
   0514 FE 01              1784 	cp	a,#0x01
   0516 CA 9D 05           1785 	jp	z,00113$
   0519                    1786 00153$:
                           1787 ;	square.c 261
                           1788 ;	genAssign
                           1789 ;	AOP_HL for _f
   0519 21 18 01           1790 	ld	hl,#_f
   051C 36 00              1791 	ld	(hl),#0x00
                           1792 ;	genLabel
   051E                    1793 00108$:
                           1794 ;	genCmpLt
                           1795 ;	AOP_HL for _f
                           1796 ;	AOP_HL for _totalStepsC
   051E 21 18 01           1797 	ld	hl,#_f
   0521 7E                 1798 	ld	a,(hl)
   0522 21 2A 01           1799 	ld	hl,#_totalStepsC
   0525 96                 1800 	sub	a,(hl)
   0526 D2 9D 05           1801 	jp	nc,00113$
                           1802 ;	square.c 262
                           1803 ;	genAssign
                           1804 ;	AOP_HL for _x
   0529 21 19 01           1805 	ld	hl,#_x
   052C 36 00              1806 	ld	(hl),#0x00
                           1807 ;	genLabel
   052E                    1808 00122$:
                           1809 ;	genCmpLt
                           1810 ;	AOP_HL for _x
                           1811 ;	AOP_HL for _totalStepsC
   052E 21 19 01           1812 	ld	hl,#_x
   0531 7E                 1813 	ld	a,(hl)
   0532 21 2A 01           1814 	ld	hl,#_totalStepsC
   0535 96                 1815 	sub	a,(hl)
   0536 3E 00              1816 	ld	a,#0x00
   0538 17                 1817 	rla
   0539 47                 1818 	ld	b,a
                           1819 ;	genIfx
   053A AF                 1820 	xor	a,a
   053B B0                 1821 	or	a,b
   053C CA 77 05           1822 	jp	z,00125$
                           1823 ;	square.c 263
                           1824 ;	genPlus
                           1825 ;	AOP_HL for _x
                           1826 ;	AOP_STK for _fillDrumC_sloc0_1_0
                           1827 ;	Can't optimise plus by inc, falling back to the normal way
   053F 11 B0 00           1828 	ld	de,#_drumC
   0542 21 19 01           1829 	ld	hl,#_x
   0545 6E                 1830 	ld	l,(hl)
   0546 26 00              1831 	ld	h,#0x00
   0548 19                 1832 	add	hl,de
   0549 7D                 1833 	ld	a,l
   054A 54                 1834 	ld	d,h
   054B F8 04              1835 	lda	hl,4(sp)
   054D 22                 1836 	ld	(hl+),a
   054E 72                 1837 	ld	(hl),d
                           1838 ;	genPlus
                           1839 ;	AOP_HL for _x
                           1840 ;	AOP_STK for _fillDrumC_sloc1_1_0
                           1841 ;	genPlusIncr
                           1842 ;	Can't optimise plus by inc, falling back to the normal way
   054F 21 19 01           1843 	ld	hl,#_x
   0552 7E                 1844 	ld	a,(hl)
   0553 C6 01              1845 	add	a,#0x01
   0555 F8 03              1846 	lda	hl,3(sp)
   0557 77                 1847 	ld	(hl),a
                           1848 ;	genPlus
                           1849 ;	AOP_STK for _fillDrumC_sloc1_1_0
                           1850 ;	AOP_STK for _fillDrumC_sloc2_1_0
                           1851 ;	Can't optimise plus by inc, falling back to the normal way
   0558 11 B0 00           1852 	ld	de,#_drumC
   055B 6E                 1853 	ld	l,(hl)
   055C 26 00              1854 	ld	h,#0x00
   055E 19                 1855 	add	hl,de
   055F 7D                 1856 	ld	a,l
   0560 54                 1857 	ld	d,h
   0561 F8 01              1858 	lda	hl,1(sp)
                           1859 ;	genPointerGet
                           1860 ;	AOP_STK for _fillDrumC_sloc2_1_0
   0563 22                 1861 	ld	(hl+),a
   0564 72                 1862 	ld	(hl),d
   0565 5F                 1863 	ld	e,a
   0566 1A                 1864 	ld	a,(de)
                           1865 ;	genAssign (pointer)
                           1866 ;	AOP_STK for _fillDrumC_sloc0_1_0
   0567 23                 1867 	inc	hl
   0568 23                 1868 	inc	hl
   0569 5E                 1869 	ld	e,(hl)
   056A 23                 1870 	inc	hl
   056B 56                 1871 	ld	d,(hl)
   056C 12                 1872 	ld	(de),a
                           1873 ;	square.c 262
                           1874 ;	genAssign
                           1875 ;	AOP_STK for _fillDrumC_sloc1_1_0
   056D 2B                 1876 	dec	hl
   056E 2B                 1877 	dec	hl
   056F 4E                 1878 	ld	c,(hl)
                           1879 ;	genAssign
                           1880 ;	AOP_HL for _x
   0570 21 19 01           1881 	ld	hl,#_x
   0573 71                 1882 	ld	(hl),c
                           1883 ;	genGoto
   0574 C3 2E 05           1884 	jp	00122$
                           1885 ;	genLabel
   0577                    1886 00125$:
                           1887 ;	square.c 265
                           1888 ;	genMinus
                           1889 ;	AOP_HL for _totalStepsC
   0577 21 2A 01           1890 	ld	hl,#_totalStepsC
   057A 7E                 1891 	ld	a,(hl)
   057B C6 FF              1892 	add	a,#0xFF
   057D 4F                 1893 	ld	c,a
                           1894 ;	genPlus
                           1895 ;	Can't optimise plus by inc, falling back to the normal way
   057E 3E B0              1896 	ld	a,#<_drumC
   0580 81                 1897 	add	a,c
   0581 4F                 1898 	ld	c,a
   0582 3E 00              1899 	ld	a,#>_drumC
   0584 CE 00              1900 	adc	a,#0x00
   0586 47                 1901 	ld	b,a
                           1902 ;	genAssign (pointer)
                           1903 ;	AOP_HL for _first
   0587 21 16 01           1904 	ld	hl,#_first
   058A 7E                 1905 	ld	a,(hl)
   058B 02                 1906 	ld	(bc),a
                           1907 ;	square.c 266
                           1908 ;	genPointerGet
   058C 11 B0 00           1909 	ld	de,#_drumC
   058F 1A                 1910 	ld	a,(de)
                           1911 ;	genCmpEq
                           1912 ; genCmpEq: left 1, right 1, result 0
   0590 4F                 1913 	ld	c,a
   0591 FE 01              1914 	cp	a,#0x01
   0593 CA 9D 05           1915 	jp	z,00113$
   0596                    1916 00154$:
                           1917 ;	square.c 261
                           1918 ;	genPlus
                           1919 ;	AOP_HL for _f
                           1920 ;	genPlusIncr
   0596 21 18 01           1921 	ld	hl,#_f
   0599 34                 1922 	inc	(hl)
                           1923 ;	genGoto
   059A C3 1E 05           1924 	jp	00108$
                           1925 ;	genLabel
   059D                    1926 00113$:
                           1927 ;	square.c 272
                           1928 ;	genMinus
                           1929 ;	AOP_HL for _totalStepsC
   059D 21 2A 01           1930 	ld	hl,#_totalStepsC
   05A0 7E                 1931 	ld	a,(hl)
   05A1 C6 FF              1932 	add	a,#0xFF
   05A3 4F                 1933 	ld	c,a
                           1934 ;	genPlus
                           1935 ;	Can't optimise plus by inc, falling back to the normal way
   05A4 3E B0              1936 	ld	a,#<_drumC
   05A6 81                 1937 	add	a,c
   05A7 4F                 1938 	ld	c,a
   05A8 3E 00              1939 	ld	a,#>_drumC
   05AA CE 00              1940 	adc	a,#0x00
   05AC 47                 1941 	ld	b,a
                           1942 ;	genPointerGet
                           1943 ;	AOP_HL for _last
   05AD 0A                 1944 	ld	a,(bc)
   05AE 21 17 01           1945 	ld	hl,#_last
   05B1 77                 1946 	ld	(hl),a
                           1947 ;	square.c 273
                           1948 ;	genIfx
                           1949 ;	AOP_STK for _fillDrumC_sloc3_1_0
   05B2 AF                 1950 	xor	a,a
   05B3 F8 00              1951 	lda	hl,0(sp)
   05B5 B6                 1952 	or	a,(hl)
   05B6 CA 2D 06           1953 	jp	z,00116$
                           1954 ;	genCmpEq
                           1955 ;	AOP_HL for _offStepC
                           1956 ; genCmpEq: left 1, right 1, result 0
   05B9 21 2E 01           1957 	ld	hl,#_offStepC
   05BC 7E                 1958 	ld	a,(hl)
   05BD B7                 1959 	or	a,a
   05BE CA 2D 06           1960 	jp	z,00116$
   05C1                    1961 00155$:
                           1962 ;	square.c 275
                           1963 ;	genAssign
                           1964 ;	AOP_HL for _f
   05C1 21 18 01           1965 	ld	hl,#_f
   05C4 36 00              1966 	ld	(hl),#0x00
                           1967 ;	genLabel
   05C6                    1968 00130$:
                           1969 ;	genCmpLt
                           1970 ;	AOP_HL for _f
                           1971 ;	AOP_HL for _offStepC
   05C6 21 18 01           1972 	ld	hl,#_f
   05C9 7E                 1973 	ld	a,(hl)
   05CA 21 2E 01           1974 	ld	hl,#_offStepC
   05CD 96                 1975 	sub	a,(hl)
   05CE D2 2D 06           1976 	jp	nc,00116$
                           1977 ;	square.c 276
                           1978 ;	genAssign
                           1979 ;	AOP_HL for _totalStepsC
                           1980 ;	AOP_HL for _x
   05D1 21 2A 01           1981 	ld	hl,#_totalStepsC
   05D4 7E                 1982 	ld	a,(hl)
   05D5 21 19 01           1983 	ld	hl,#_x
   05D8 77                 1984 	ld	(hl),a
                           1985 ;	genLabel
   05D9                    1986 00126$:
                           1987 ;	genCmpGt
                           1988 ;	AOP_HL for _x
                           1989 ;	AOP_STK for _fillDrumC_sloc3_1_0
   05D9 3E 00              1990 	ld	a,#0x00
   05DB 21 19 01           1991 	ld	hl,#_x
   05DE 96                 1992 	sub	a,(hl)
   05DF 3E 00              1993 	ld	a,#0x00
   05E1 17                 1994 	rla
   05E2 F8 00              1995 	lda	hl,0(sp)
   05E4 77                 1996 	ld	(hl),a
                           1997 ;	genIfx
                           1998 ;	AOP_STK for _fillDrumC_sloc3_1_0
   05E5 AF                 1999 	xor	a,a
   05E6 B6                 2000 	or	a,(hl)
   05E7 CA 1E 06           2001 	jp	z,00129$
                           2002 ;	square.c 277
                           2003 ;	genPlus
                           2004 ;	AOP_HL for _x
                           2005 ;	AOP_STK for _fillDrumC_sloc2_1_0
                           2006 ;	Can't optimise plus by inc, falling back to the normal way
   05EA 11 B0 00           2007 	ld	de,#_drumC
   05ED 21 19 01           2008 	ld	hl,#_x
   05F0 6E                 2009 	ld	l,(hl)
   05F1 26 00              2010 	ld	h,#0x00
   05F3 19                 2011 	add	hl,de
   05F4 7D                 2012 	ld	a,l
   05F5 54                 2013 	ld	d,h
   05F6 F8 01              2014 	lda	hl,1(sp)
   05F8 22                 2015 	ld	(hl+),a
   05F9 72                 2016 	ld	(hl),d
                           2017 ;	genMinus
                           2018 ;	AOP_HL for _x
   05FA 21 19 01           2019 	ld	hl,#_x
   05FD 7E                 2020 	ld	a,(hl)
   05FE C6 FF              2021 	add	a,#0xFF
   0600 47                 2022 	ld	b,a
                           2023 ;	genPlus
                           2024 ;	AOP_STK for _fillDrumC_sloc0_1_0
                           2025 ;	Can't optimise plus by inc, falling back to the normal way
   0601 11 B0 00           2026 	ld	de,#_drumC
   0604 68                 2027 	ld	l,b
   0605 26 00              2028 	ld	h,#0x00
   0607 19                 2029 	add	hl,de
   0608 7D                 2030 	ld	a,l
   0609 54                 2031 	ld	d,h
   060A F8 04              2032 	lda	hl,4(sp)
                           2033 ;	genPointerGet
                           2034 ;	AOP_STK for _fillDrumC_sloc0_1_0
   060C 22                 2035 	ld	(hl+),a
   060D 72                 2036 	ld	(hl),d
   060E 5F                 2037 	ld	e,a
   060F 1A                 2038 	ld	a,(de)
                           2039 ;	genAssign (pointer)
                           2040 ;	AOP_STK for _fillDrumC_sloc2_1_0
   0610 F8 01              2041 	lda	hl,1(sp)
   0612 5E                 2042 	ld	e,(hl)
   0613 23                 2043 	inc	hl
   0614 56                 2044 	ld	d,(hl)
   0615 12                 2045 	ld	(de),a
                           2046 ;	square.c 276
                           2047 ;	genAssign
   0616 48                 2048 	ld	c,b
                           2049 ;	genAssign
                           2050 ;	AOP_HL for _x
   0617 21 19 01           2051 	ld	hl,#_x
   061A 71                 2052 	ld	(hl),c
                           2053 ;	genGoto
   061B C3 D9 05           2054 	jp	00126$
                           2055 ;	genLabel
   061E                    2056 00129$:
                           2057 ;	square.c 279
                           2058 ;	genAssign (pointer)
                           2059 ;	AOP_HL for _last
   061E 11 B0 00           2060 	ld	de,#_drumC
   0621 21 17 01           2061 	ld	hl,#_last
   0624 7E                 2062 	ld	a,(hl)
   0625 12                 2063 	ld	(de),a
                           2064 ;	square.c 275
                           2065 ;	genPlus
                           2066 ;	AOP_HL for _f
                           2067 ;	genPlusIncr
   0626 21 18 01           2068 	ld	hl,#_f
   0629 34                 2069 	inc	(hl)
                           2070 ;	genGoto
   062A C3 C6 05           2071 	jp	00130$
                           2072 ;	genLabel
   062D                    2073 00116$:
                           2074 ;	square.c 282
                           2075 ;	genCall
                           2076 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   062D CD 14 00           2077 	call	_rand
                           2078 ;	AOP_HL for _randC
   0630 21 15 01           2079 	ld	hl,#_randC
   0633 73                 2080 	ld	(hl),e
                           2081 ;	square.c 283
                           2082 ;	genIpush
                           2083 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0634 3E 1E              2084 	ld	a,#0x1E
   0636 F5                 2085 	push	af
   0637 33                 2086 	inc	sp
                           2087 ;	genIpush
                           2088 ;	AOP_HL for _randC
   0638 21 15 01           2089 	ld	hl,#_randC
   063B 7E                 2090 	ld	a,(hl)
   063C F5                 2091 	push	af
   063D 33                 2092 	inc	sp
                           2093 ;	genCall
   063E CD 00 00           2094 	call	__moduchar_rrx_s
   0641 4B                 2095 	ld	c,e
   0642 E8 02              2096 	lda	sp,2(sp)
                           2097 ;	genPlus
                           2098 ;	AOP_HL for _delayC
                           2099 ;	AOP_HL for _xC
                           2100 ;	Can't optimise plus by inc, falling back to the normal way
   0644 21 1F 01           2101 	ld	hl,#_delayC
   0647 7E                 2102 	ld	a,(hl)
   0648 81                 2103 	add	a,c
   0649 21 1C 01           2104 	ld	hl,#_xC
   064C 77                 2105 	ld	(hl),a
                           2106 ;	genLabel
   064D                    2107 00134$:
                           2108 ;	genEndFunction
   064D E8 06              2109 	lda	sp,6(sp)
   064F C9                 2110 	ret
   0650                    2111 ___fillDrumC_end:
                           2112 ;	square.c 350
                           2113 ;	genLabel
                           2114 ;	genFunction
                           2115 ;	---------------------------------
                           2116 ; Function setupDrum
                           2117 ; ---------------------------------
   0650                    2118 ___setupDrum_start:
   0650                    2119 _setupDrum:
                           2120 	
                           2121 ;	square.c 352
                           2122 ;	genCmpEq
                           2123 ;	AOP_HL for _seldrum
                           2124 ; genCmpEq: left 1, right 1, result 0
   0650 21 3C 01           2125 	ld	hl,#_seldrum
   0653 7E                 2126 	ld	a,(hl)
   0654 B7                 2127 	or	a,a
   0655 CA 6D 06           2128 	jp	z,00101$
   0658                    2129 00111$:
                           2130 ;	genCmpEq
                           2131 ;	AOP_HL for _seldrum
                           2132 ; genCmpEq: left 1, right 1, result 0
   0658 21 3C 01           2133 	ld	hl,#_seldrum
   065B 7E                 2134 	ld	a,(hl)
   065C FE 01              2135 	cp	a,#0x01
   065E CA 73 06           2136 	jp	z,00102$
   0661                    2137 00112$:
                           2138 ;	genCmpEq
                           2139 ;	AOP_HL for _seldrum
                           2140 ; genCmpEq: left 1, right 1, result 0
   0661 21 3C 01           2141 	ld	hl,#_seldrum
   0664 7E                 2142 	ld	a,(hl)
   0665 FE 02              2143 	cp	a,#0x02
   0667 CA 79 06           2144 	jp	z,00103$
   066A                    2145 00113$:
                           2146 ;	genGoto
   066A C3 7F 06           2147 	jp	00104$
                           2148 ;	square.c 355
                           2149 ;	genLabel
   066D                    2150 00101$:
                           2151 ;	genCall
                           2152 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   066D CD E3 00           2153 	call	_fillDrumA
                           2154 ;	square.c 356
                           2155 ;	genGoto
   0670 C3 88 06           2156 	jp	00106$
                           2157 ;	square.c 358
                           2158 ;	genLabel
   0673                    2159 00102$:
                           2160 ;	genCall
                           2161 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0673 CD B2 02           2162 	call	_fillDrumB
                           2163 ;	square.c 359
                           2164 ;	genGoto
   0676 C3 88 06           2165 	jp	00106$
                           2166 ;	square.c 361
                           2167 ;	genLabel
   0679                    2168 00103$:
                           2169 ;	genCall
                           2170 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0679 CD 81 04           2171 	call	_fillDrumC
                           2172 ;	square.c 362
                           2173 ;	genGoto
   067C C3 88 06           2174 	jp	00106$
                           2175 ;	square.c 364
                           2176 ;	genLabel
   067F                    2177 00104$:
                           2178 ;	genCall
                           2179 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   067F CD E3 00           2180 	call	_fillDrumA
                           2181 ;	square.c 365
                           2182 ;	genCall
                           2183 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0682 CD B2 02           2184 	call	_fillDrumB
                           2185 ;	square.c 366
                           2186 ;	genCall
                           2187 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0685 CD 81 04           2188 	call	_fillDrumC
                           2189 ;	square.c 367
                           2190 ;	genLabel
   0688                    2191 00106$:
                           2192 ;	genEndFunction
                           2193 	
   0688 C9                 2194 	ret
   0689                    2195 ___setupDrum_end:
                           2196 ;	square.c 373
                           2197 ;	genLabel
                           2198 ;	genFunction
                           2199 ;	---------------------------------
                           2200 ; Function increaseOffStep
                           2201 ; ---------------------------------
   0689                    2202 ___increaseOffStep_start:
   0689                    2203 _increaseOffStep:
   0689 E8 FE              2204 	lda	sp,-2(sp)
                           2205 ;	square.c 375
                           2206 ;	genAssign
   068B 0E 00              2207 	ld	c,#0x00
                           2208 ;	square.c 376
                           2209 ;	genAssign
                           2210 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   068D F8 01              2211 	lda	hl,1(sp)
   068F 36 01              2212 	ld	(hl),#0x01
                           2213 ;	square.c 377
                           2214 ;	genCmpEq
                           2215 ;	AOP_HL for _seldrum
                           2216 ; genCmpEq: left 1, right 1, result 1
   0691 21 3C 01           2217 	ld	hl,#_seldrum
   0694 7E                 2218 	ld	a,(hl)
   0695 B7                 2219 	or	a,a
   0696 C2 9D 06           2220 	jp	nz,00120$
   0699 3E 01              2221 	ld	a,#0x01
   069B 18 01              2222 	jr	00121$
   069D                    2223 00120$:
   069D AF                 2224 	xor	a,a
   069E                    2225 00121$:
   069E 47                 2226 	ld	b,a
                           2227 ;	genIfx
   069F AF                 2228 	xor	a,a
   06A0 B0                 2229 	or	a,b
   06A1 C2 B9 06           2230 	jp	nz,00101$
                           2231 ;	genCmpEq
                           2232 ;	AOP_HL for _seldrum
                           2233 ; genCmpEq: left 1, right 1, result 0
   06A4 21 3C 01           2234 	ld	hl,#_seldrum
   06A7 7E                 2235 	ld	a,(hl)
   06A8 FE 01              2236 	cp	a,#0x01
   06AA CA C7 06           2237 	jp	z,00102$
   06AD                    2238 00122$:
                           2239 ;	genCmpEq
                           2240 ;	AOP_HL for _seldrum
                           2241 ; genCmpEq: left 1, right 1, result 0
   06AD 21 3C 01           2242 	ld	hl,#_seldrum
   06B0 7E                 2243 	ld	a,(hl)
   06B1 FE 02              2244 	cp	a,#0x02
   06B3 CA D5 06           2245 	jp	z,00103$
   06B6                    2246 00123$:
                           2247 ;	genGoto
   06B6 C3 E0 06           2248 	jp	00104$
                           2249 ;	square.c 380
                           2250 ;	genLabel
   06B9                    2251 00101$:
                           2252 ;	genAssign
                           2253 ;	AOP_HL for _offStepA
   06B9 21 2C 01           2254 	ld	hl,#_offStepA
   06BC 4E                 2255 	ld	c,(hl)
                           2256 ;	square.c 381
                           2257 ;	genAssign
                           2258 ;	AOP_HL for _totalStepsA
                           2259 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   06BD 21 24 01           2260 	ld	hl,#_totalStepsA
   06C0 7E                 2261 	ld	a,(hl)
   06C1 F8 01              2262 	lda	hl,1(sp)
   06C3 77                 2263 	ld	(hl),a
                           2264 ;	square.c 382
                           2265 ;	genGoto
   06C4 C3 E0 06           2266 	jp	00104$
                           2267 ;	square.c 384
                           2268 ;	genLabel
   06C7                    2269 00102$:
                           2270 ;	genAssign
                           2271 ;	AOP_HL for _offStepB
   06C7 21 2D 01           2272 	ld	hl,#_offStepB
   06CA 4E                 2273 	ld	c,(hl)
                           2274 ;	square.c 385
                           2275 ;	genAssign
                           2276 ;	AOP_HL for _totalStepsB
                           2277 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   06CB 21 27 01           2278 	ld	hl,#_totalStepsB
   06CE 7E                 2279 	ld	a,(hl)
   06CF F8 01              2280 	lda	hl,1(sp)
   06D1 77                 2281 	ld	(hl),a
                           2282 ;	square.c 386
                           2283 ;	genGoto
   06D2 C3 E0 06           2284 	jp	00104$
                           2285 ;	square.c 388
                           2286 ;	genLabel
   06D5                    2287 00103$:
                           2288 ;	genAssign
                           2289 ;	AOP_HL for _offStepC
   06D5 21 2E 01           2290 	ld	hl,#_offStepC
   06D8 4E                 2291 	ld	c,(hl)
                           2292 ;	square.c 389
                           2293 ;	genAssign
                           2294 ;	AOP_HL for _totalStepsC
                           2295 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   06D9 21 2A 01           2296 	ld	hl,#_totalStepsC
   06DC 7E                 2297 	ld	a,(hl)
   06DD F8 01              2298 	lda	hl,1(sp)
   06DF 77                 2299 	ld	(hl),a
                           2300 ;	square.c 391
                           2301 ;	genLabel
   06E0                    2302 00104$:
                           2303 ;	square.c 392
                           2304 ;	genPlus
                           2305 ;	genPlusIncr
                           2306 ; Removed redundent load
   06E0 0C                 2307 	inc	c
                           2308 ;	square.c 393
                           2309 ;	genMinus
                           2310 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
                           2311 ;	AOP_STK for _increaseOffStep_sloc0_1_0
   06E1 F8 01              2312 	lda	hl,1(sp)
   06E3 7E                 2313 	ld	a,(hl)
   06E4 C6 FF              2314 	add	a,#0xFF
   06E6 2B                 2315 	dec	hl
                           2316 ;	genCmpGt
                           2317 ;	AOP_STK for _increaseOffStep_sloc0_1_0
   06E7 77                 2318 	ld      (hl),a
                           2319 ; Removed redundent load
   06E8 91                 2320 	sub	a,c
   06E9 D2 EE 06           2321 	jp	nc,00106$
                           2322 ;	square.c 395
                           2323 ;	genAssign
   06EC 0E 00              2324 	ld	c,#0x00
                           2325 ;	genLabel
   06EE                    2326 00106$:
                           2327 ;	square.c 397
                           2328 ;	genIfx
   06EE AF                 2329 	xor	a,a
   06EF B0                 2330 	or	a,b
   06F0 C2 08 07           2331 	jp	nz,00107$
                           2332 ;	genCmpEq
                           2333 ;	AOP_HL for _seldrum
                           2334 ; genCmpEq: left 1, right 1, result 0
   06F3 21 3C 01           2335 	ld	hl,#_seldrum
   06F6 7E                 2336 	ld	a,(hl)
   06F7 FE 01              2337 	cp	a,#0x01
   06F9 CA 0F 07           2338 	jp	z,00108$
   06FC                    2339 00124$:
                           2340 ;	genCmpEq
                           2341 ;	AOP_HL for _seldrum
                           2342 ; genCmpEq: left 1, right 1, result 0
   06FC 21 3C 01           2343 	ld	hl,#_seldrum
   06FF 7E                 2344 	ld	a,(hl)
   0700 FE 02              2345 	cp	a,#0x02
   0702 CA 16 07           2346 	jp	z,00109$
   0705                    2347 00125$:
                           2348 ;	genGoto
   0705 C3 1A 07           2349 	jp	00110$
                           2350 ;	square.c 400
                           2351 ;	genLabel
   0708                    2352 00107$:
                           2353 ;	genAssign
                           2354 ;	AOP_HL for _offStepA
   0708 21 2C 01           2355 	ld	hl,#_offStepA
   070B 71                 2356 	ld	(hl),c
                           2357 ;	square.c 401
                           2358 ;	genGoto
   070C C3 1A 07           2359 	jp	00110$
                           2360 ;	square.c 403
                           2361 ;	genLabel
   070F                    2362 00108$:
                           2363 ;	genAssign
                           2364 ;	AOP_HL for _offStepB
   070F 21 2D 01           2365 	ld	hl,#_offStepB
   0712 71                 2366 	ld	(hl),c
                           2367 ;	square.c 404
                           2368 ;	genGoto
   0713 C3 1A 07           2369 	jp	00110$
                           2370 ;	square.c 406
                           2371 ;	genLabel
   0716                    2372 00109$:
                           2373 ;	genAssign
                           2374 ;	AOP_HL for _offStepC
   0716 21 2E 01           2375 	ld	hl,#_offStepC
   0719 71                 2376 	ld	(hl),c
                           2377 ;	square.c 408
                           2378 ;	genLabel
   071A                    2379 00110$:
                           2380 ;	square.c 409
                           2381 ;	genIpush
                           2382 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   071A C5                 2383 	push	bc
   071B 21 04 08           2384 	ld	hl,#0x0804
   071E E5                 2385 	push	hl
                           2386 ;	genCall
   071F CD 00 00           2387 	call	_set_sprite_tile
   0722 E8 02              2388 	lda	sp,2(sp)
   0724 E1                 2389 	pop	hl
   0725 4D                 2390 	ld	c,l
                           2391 ;	square.c 410
                           2392 ;	genPlus
                           2393 ;	Can't optimise plus by inc, falling back to the normal way
   0726 3E D0              2394 	ld	a,#<_dXlut
   0728 81                 2395 	add	a,c
   0729 4F                 2396 	ld	c,a
   072A 3E 00              2397 	ld	a,#>_dXlut
   072C CE 00              2398 	adc	a,#0x00
   072E 47                 2399 	ld	b,a
                           2400 ;	genPointerGet
   072F 0A                 2401 	ld	a,(bc)
                           2402 ;	genIpush
                           2403 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0730 4F                 2404 	ld	c,a
   0731 F5                 2405 	push	af
   0732 33                 2406 	inc	sp
                           2407 ;	genIpush
   0733 21 04 08           2408 	ld	hl,#0x0804
   0736 E5                 2409 	push	hl
                           2410 ;	genCall
   0737 CD 00 00           2411 	call	_move_sprite
   073A E8 03              2412 	lda	sp,3(sp)
                           2413 ;	square.c 411
                           2414 ;	genCall
                           2415 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   073C CD 00 00           2416 	call	_wait_vbl_done
                           2417 ;	square.c 412
                           2418 ;	genCall
                           2419 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   073F CD 50 06           2420 	call	_setupDrum
                           2421 ;	genLabel
   0742                    2422 00111$:
                           2423 ;	genEndFunction
   0742 E8 02              2424 	lda	sp,2(sp)
   0744 C9                 2425 	ret
   0745                    2426 ___increaseOffStep_end:
                           2427 ;	square.c 415
                           2428 ;	genLabel
                           2429 ;	genFunction
                           2430 ;	---------------------------------
                           2431 ; Function decreaseOffStep
                           2432 ; ---------------------------------
   0745                    2433 ___decreaseOffStep_start:
   0745                    2434 _decreaseOffStep:
                           2435 	
                           2436 ;	square.c 417
                           2437 ;	genAssign
   0745 0E 00              2438 	ld	c,#0x00
                           2439 ;	square.c 419
                           2440 ;	genCmpEq
                           2441 ;	AOP_HL for _seldrum
                           2442 ; genCmpEq: left 1, right 1, result 1
   0747 21 3C 01           2443 	ld	hl,#_seldrum
   074A 7E                 2444 	ld	a,(hl)
   074B B7                 2445 	or	a,a
   074C C2 53 07           2446 	jp	nz,00120$
   074F 3E 01              2447 	ld	a,#0x01
   0751 18 01              2448 	jr	00121$
   0753                    2449 00120$:
   0753 AF                 2450 	xor	a,a
   0754                    2451 00121$:
   0754 47                 2452 	ld	b,a
                           2453 ;	genIfx
   0755 AF                 2454 	xor	a,a
   0756 B0                 2455 	or	a,b
   0757 C2 6F 07           2456 	jp	nz,00101$
                           2457 ;	genCmpEq
                           2458 ;	AOP_HL for _seldrum
                           2459 ; genCmpEq: left 1, right 1, result 0
   075A 21 3C 01           2460 	ld	hl,#_seldrum
   075D 7E                 2461 	ld	a,(hl)
   075E FE 01              2462 	cp	a,#0x01
   0760 CA 76 07           2463 	jp	z,00102$
   0763                    2464 00122$:
                           2465 ;	genCmpEq
                           2466 ;	AOP_HL for _seldrum
                           2467 ; genCmpEq: left 1, right 1, result 0
   0763 21 3C 01           2468 	ld	hl,#_seldrum
   0766 7E                 2469 	ld	a,(hl)
   0767 FE 02              2470 	cp	a,#0x02
   0769 CA 7D 07           2471 	jp	z,00103$
   076C                    2472 00123$:
                           2473 ;	genGoto
   076C C3 81 07           2474 	jp	00104$
                           2475 ;	square.c 422
                           2476 ;	genLabel
   076F                    2477 00101$:
                           2478 ;	genAssign
                           2479 ;	AOP_HL for _offStepA
   076F 21 2C 01           2480 	ld	hl,#_offStepA
   0772 4E                 2481 	ld	c,(hl)
                           2482 ;	square.c 424
                           2483 ;	genGoto
   0773 C3 81 07           2484 	jp	00104$
                           2485 ;	square.c 426
                           2486 ;	genLabel
   0776                    2487 00102$:
                           2488 ;	genAssign
                           2489 ;	AOP_HL for _offStepB
   0776 21 2D 01           2490 	ld	hl,#_offStepB
   0779 4E                 2491 	ld	c,(hl)
                           2492 ;	square.c 428
                           2493 ;	genGoto
   077A C3 81 07           2494 	jp	00104$
                           2495 ;	square.c 430
                           2496 ;	genLabel
   077D                    2497 00103$:
                           2498 ;	genAssign
                           2499 ;	AOP_HL for _offStepC
   077D 21 2E 01           2500 	ld	hl,#_offStepC
   0780 4E                 2501 	ld	c,(hl)
                           2502 ;	square.c 433
                           2503 ;	genLabel
   0781                    2504 00104$:
                           2505 ;	square.c 435
                           2506 ;	genCmpEq
                           2507 ; genCmpEq: left 1, right 1, result 0
   0781 79                 2508 	ld	a,c
   0782 B7                 2509 	or	a,a
   0783 CA 87 07           2510 	jp	z,00106$
   0786                    2511 00124$:
                           2512 ;	square.c 437
                           2513 ;	genMinus
   0786 0D                 2514 	dec	c
                           2515 ;	genLabel
   0787                    2516 00106$:
                           2517 ;	square.c 439
                           2518 ;	genIfx
   0787 AF                 2519 	xor	a,a
   0788 B0                 2520 	or	a,b
   0789 C2 A1 07           2521 	jp	nz,00107$
                           2522 ;	genCmpEq
                           2523 ;	AOP_HL for _seldrum
                           2524 ; genCmpEq: left 1, right 1, result 0
   078C 21 3C 01           2525 	ld	hl,#_seldrum
   078F 7E                 2526 	ld	a,(hl)
   0790 FE 01              2527 	cp	a,#0x01
   0792 CA A8 07           2528 	jp	z,00108$
   0795                    2529 00125$:
                           2530 ;	genCmpEq
                           2531 ;	AOP_HL for _seldrum
                           2532 ; genCmpEq: left 1, right 1, result 0
   0795 21 3C 01           2533 	ld	hl,#_seldrum
   0798 7E                 2534 	ld	a,(hl)
   0799 FE 02              2535 	cp	a,#0x02
   079B CA AF 07           2536 	jp	z,00109$
   079E                    2537 00126$:
                           2538 ;	genGoto
   079E C3 B3 07           2539 	jp	00110$
                           2540 ;	square.c 442
                           2541 ;	genLabel
   07A1                    2542 00107$:
                           2543 ;	genAssign
                           2544 ;	AOP_HL for _offStepA
   07A1 21 2C 01           2545 	ld	hl,#_offStepA
   07A4 71                 2546 	ld	(hl),c
                           2547 ;	square.c 443
                           2548 ;	genGoto
   07A5 C3 B3 07           2549 	jp	00110$
                           2550 ;	square.c 445
                           2551 ;	genLabel
   07A8                    2552 00108$:
                           2553 ;	genAssign
                           2554 ;	AOP_HL for _offStepB
   07A8 21 2D 01           2555 	ld	hl,#_offStepB
   07AB 71                 2556 	ld	(hl),c
                           2557 ;	square.c 446
                           2558 ;	genGoto
   07AC C3 B3 07           2559 	jp	00110$
                           2560 ;	square.c 448
                           2561 ;	genLabel
   07AF                    2562 00109$:
                           2563 ;	genAssign
                           2564 ;	AOP_HL for _offStepC
   07AF 21 2E 01           2565 	ld	hl,#_offStepC
   07B2 71                 2566 	ld	(hl),c
                           2567 ;	square.c 450
                           2568 ;	genLabel
   07B3                    2569 00110$:
                           2570 ;	square.c 451
                           2571 ;	genIpush
                           2572 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   07B3 C5                 2573 	push	bc
   07B4 21 04 08           2574 	ld	hl,#0x0804
   07B7 E5                 2575 	push	hl
                           2576 ;	genCall
   07B8 CD 00 00           2577 	call	_set_sprite_tile
   07BB E8 02              2578 	lda	sp,2(sp)
   07BD E1                 2579 	pop	hl
   07BE 4D                 2580 	ld	c,l
                           2581 ;	square.c 452
                           2582 ;	genPlus
                           2583 ;	Can't optimise plus by inc, falling back to the normal way
   07BF 3E D0              2584 	ld	a,#<_dXlut
   07C1 81                 2585 	add	a,c
   07C2 4F                 2586 	ld	c,a
   07C3 3E 00              2587 	ld	a,#>_dXlut
   07C5 CE 00              2588 	adc	a,#0x00
   07C7 47                 2589 	ld	b,a
                           2590 ;	genPointerGet
   07C8 0A                 2591 	ld	a,(bc)
                           2592 ;	genIpush
                           2593 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07C9 4F                 2594 	ld	c,a
   07CA F5                 2595 	push	af
   07CB 33                 2596 	inc	sp
                           2597 ;	genIpush
   07CC 21 04 08           2598 	ld	hl,#0x0804
   07CF E5                 2599 	push	hl
                           2600 ;	genCall
   07D0 CD 00 00           2601 	call	_move_sprite
   07D3 E8 03              2602 	lda	sp,3(sp)
                           2603 ;	square.c 453
                           2604 ;	genCall
                           2605 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07D5 CD 00 00           2606 	call	_wait_vbl_done
                           2607 ;	square.c 454
                           2608 ;	genCall
                           2609 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07D8 CD 50 06           2610 	call	_setupDrum
                           2611 ;	genLabel
   07DB                    2612 00111$:
                           2613 ;	genEndFunction
                           2614 	
   07DB C9                 2615 	ret
   07DC                    2616 ___decreaseOffStep_end:
                           2617 ;	square.c 457
                           2618 ;	genLabel
                           2619 ;	genFunction
                           2620 ;	---------------------------------
                           2621 ; Function increaseSteps
                           2622 ; ---------------------------------
   07DC                    2623 ___increaseSteps_start:
   07DC                    2624 _increaseSteps:
   07DC E8 FD              2625 	lda	sp,-3(sp)
                           2626 ;	square.c 459
                           2627 ;	genAssign
   07DE 0E 01              2628 	ld	c,#0x01
                           2629 ;	square.c 460
                           2630 ;	genAssign
                           2631 ;	AOP_STK for _increaseSteps_currentPulses_1_1
   07E0 F8 02              2632 	lda	hl,2(sp)
   07E2 36 01              2633 	ld	(hl),#0x01
                           2634 ;	square.c 461
                           2635 ;	genCmpEq
                           2636 ;	AOP_HL for _seldrum
                           2637 ; genCmpEq: left 1, right 1, result 1
   07E4 21 3C 01           2638 	ld	hl,#_seldrum
   07E7 7E                 2639 	ld	a,(hl)
   07E8 B7                 2640 	or	a,a
   07E9 C2 F0 07           2641 	jp	nz,00120$
   07EC 3E 01              2642 	ld	a,#0x01
   07EE 18 01              2643 	jr	00121$
   07F0                    2644 00120$:
   07F0 AF                 2645 	xor	a,a
   07F1                    2646 00121$:
   07F1 47                 2647 	ld	b,a
                           2648 ;	genIfx
   07F2 AF                 2649 	xor	a,a
   07F3 B0                 2650 	or	a,b
   07F4 C2 0C 08           2651 	jp	nz,00101$
                           2652 ;	genCmpEq
                           2653 ;	AOP_HL for _seldrum
                           2654 ; genCmpEq: left 1, right 1, result 0
   07F7 21 3C 01           2655 	ld	hl,#_seldrum
   07FA 7E                 2656 	ld	a,(hl)
   07FB FE 01              2657 	cp	a,#0x01
   07FD CA 25 08           2658 	jp	z,00102$
   0800                    2659 00122$:
                           2660 ;	genCmpEq
                           2661 ;	AOP_HL for _seldrum
                           2662 ; genCmpEq: left 1, right 1, result 0
   0800 21 3C 01           2663 	ld	hl,#_seldrum
   0803 7E                 2664 	ld	a,(hl)
   0804 FE 02              2665 	cp	a,#0x02
   0806 CA 3E 08           2666 	jp	z,00103$
   0809                    2667 00123$:
                           2668 ;	genGoto
   0809 C3 54 08           2669 	jp	00104$
                           2670 ;	square.c 464
                           2671 ;	genLabel
   080C                    2672 00101$:
                           2673 ;	genAssign
                           2674 ;	AOP_HL for _totalStepsA
   080C 21 24 01           2675 	ld	hl,#_totalStepsA
   080F 4E                 2676 	ld	c,(hl)
                           2677 ;	square.c 465
                           2678 ;	genAssign
                           2679 ;	AOP_HL for _numberOfPulsesA
                           2680 ;	AOP_STK for _increaseSteps_currentPulses_1_1
   0810 21 23 01           2681 	ld	hl,#_numberOfPulsesA
   0813 7E                 2682 	ld	a,(hl)
   0814 F8 02              2683 	lda	hl,2(sp)
   0816 77                 2684 	ld	(hl),a
                           2685 ;	square.c 466
                           2686 ;	genIpush
                           2687 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0817 C5                 2688 	push	bc
   0818 21 00 00           2689 	ld	hl,#0x0000
   081B E5                 2690 	push	hl
                           2691 ;	genCall
   081C CD 00 00           2692 	call	_set_sprite_tile
   081F E8 02              2693 	lda	sp,2(sp)
   0821 C1                 2694 	pop	bc
                           2695 ;	square.c 467
                           2696 ;	genGoto
   0822 C3 54 08           2697 	jp	00104$
                           2698 ;	square.c 469
                           2699 ;	genLabel
   0825                    2700 00102$:
                           2701 ;	genAssign
                           2702 ;	AOP_HL for _totalStepsB
   0825 21 27 01           2703 	ld	hl,#_totalStepsB
   0828 4E                 2704 	ld	c,(hl)
                           2705 ;	square.c 470
                           2706 ;	genAssign
                           2707 ;	AOP_HL for _numberOfPulsesB
                           2708 ;	AOP_STK for _increaseSteps_currentPulses_1_1
   0829 21 26 01           2709 	ld	hl,#_numberOfPulsesB
   082C 7E                 2710 	ld	a,(hl)
   082D F8 02              2711 	lda	hl,2(sp)
   082F 77                 2712 	ld	(hl),a
                           2713 ;	square.c 471
                           2714 ;	genIpush
                           2715 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0830 C5                 2716 	push	bc
   0831 21 01 02           2717 	ld	hl,#0x0201
   0834 E5                 2718 	push	hl
                           2719 ;	genCall
   0835 CD 00 00           2720 	call	_set_sprite_tile
   0838 E8 02              2721 	lda	sp,2(sp)
   083A C1                 2722 	pop	bc
                           2723 ;	square.c 472
                           2724 ;	genGoto
   083B C3 54 08           2725 	jp	00104$
                           2726 ;	square.c 474
                           2727 ;	genLabel
   083E                    2728 00103$:
                           2729 ;	genAssign
                           2730 ;	AOP_HL for _totalStepsC
   083E 21 2A 01           2731 	ld	hl,#_totalStepsC
   0841 4E                 2732 	ld	c,(hl)
                           2733 ;	square.c 475
                           2734 ;	genAssign
                           2735 ;	AOP_HL for _numberOfPulsesC
                           2736 ;	AOP_STK for _increaseSteps_currentPulses_1_1
   0842 21 29 01           2737 	ld	hl,#_numberOfPulsesC
   0845 7E                 2738 	ld	a,(hl)
   0846 F8 02              2739 	lda	hl,2(sp)
   0848 77                 2740 	ld	(hl),a
                           2741 ;	square.c 476
                           2742 ;	genIpush
                           2743 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0849 C5                 2744 	push	bc
   084A 21 03 06           2745 	ld	hl,#0x0603
   084D E5                 2746 	push	hl
                           2747 ;	genCall
   084E CD 00 00           2748 	call	_set_sprite_tile
   0851 E8 02              2749 	lda	sp,2(sp)
   0853 C1                 2750 	pop	bc
                           2751 ;	square.c 478
                           2752 ;	genLabel
   0854                    2753 00104$:
                           2754 ;	square.c 479
                           2755 ;	genPlus
                           2756 ;	genPlusIncr
                           2757 ; Removed redundent load
   0854 0C                 2758 	inc	c
                           2759 ;	square.c 480
                           2760 ;	genCmpGt
   0855 3E 20              2761 	ld	a,#0x20
   0857 91                 2762 	sub	a,c
   0858 D2 5D 08           2763 	jp	nc,00106$
                           2764 ;	square.c 482
                           2765 ;	genAssign
   085B 0E 01              2766 	ld	c,#0x01
                           2767 ;	genLabel
   085D                    2768 00106$:
                           2769 ;	square.c 484
                           2770 ;	genIfx
   085D AF                 2771 	xor	a,a
   085E B0                 2772 	or	a,b
   085F C2 77 08           2773 	jp	nz,00107$
                           2774 ;	genCmpEq
                           2775 ;	AOP_HL for _seldrum
                           2776 ; genCmpEq: left 1, right 1, result 0
   0862 21 3C 01           2777 	ld	hl,#_seldrum
   0865 7E                 2778 	ld	a,(hl)
   0866 FE 01              2779 	cp	a,#0x01
   0868 CA 7E 08           2780 	jp	z,00108$
   086B                    2781 00124$:
                           2782 ;	genCmpEq
                           2783 ;	AOP_HL for _seldrum
                           2784 ; genCmpEq: left 1, right 1, result 0
   086B 21 3C 01           2785 	ld	hl,#_seldrum
   086E 7E                 2786 	ld	a,(hl)
   086F FE 02              2787 	cp	a,#0x02
   0871 CA 85 08           2788 	jp	z,00109$
   0874                    2789 00125$:
                           2790 ;	genGoto
   0874 C3 89 08           2791 	jp	00110$
                           2792 ;	square.c 487
                           2793 ;	genLabel
   0877                    2794 00107$:
                           2795 ;	genAssign
                           2796 ;	AOP_HL for _totalStepsA
   0877 21 24 01           2797 	ld	hl,#_totalStepsA
   087A 71                 2798 	ld	(hl),c
                           2799 ;	square.c 488
                           2800 ;	genGoto
   087B C3 89 08           2801 	jp	00110$
                           2802 ;	square.c 490
                           2803 ;	genLabel
   087E                    2804 00108$:
                           2805 ;	genAssign
                           2806 ;	AOP_HL for _totalStepsB
   087E 21 27 01           2807 	ld	hl,#_totalStepsB
   0881 71                 2808 	ld	(hl),c
                           2809 ;	square.c 491
                           2810 ;	genGoto
   0882 C3 89 08           2811 	jp	00110$
                           2812 ;	square.c 493
                           2813 ;	genLabel
   0885                    2814 00109$:
                           2815 ;	genAssign
                           2816 ;	AOP_HL for _totalStepsC
   0885 21 2A 01           2817 	ld	hl,#_totalStepsC
   0888 71                 2818 	ld	(hl),c
                           2819 ;	square.c 495
                           2820 ;	genLabel
   0889                    2821 00110$:
                           2822 ;	square.c 496
                           2823 ;	genMinus
   0889 0D                 2824 	dec	c
                           2825 ;	genPlus
                           2826 ;	Can't optimise plus by inc, falling back to the normal way
   088A 3E D0              2827 	ld	a,#<_dXlut
   088C 81                 2828 	add	a,c
   088D 4F                 2829 	ld	c,a
   088E 3E 00              2830 	ld	a,#>_dXlut
   0890 CE 00              2831 	adc	a,#0x00
   0892 47                 2832 	ld	b,a
                           2833 ;	genPointerGet
   0893 0A                 2834 	ld	a,(bc)
   0894 4F                 2835 	ld	c,a
                           2836 ;	genMinus
                           2837 ;	AOP_STK for _increaseSteps_currentPulses_1_1
   0895 F8 02              2838 	lda	hl,2(sp)
   0897 7E                 2839 	ld	a,(hl)
   0898 C6 FF              2840 	add	a,#0xFF
   089A 47                 2841 	ld	b,a
                           2842 ;	genPlus
                           2843 ;	AOP_STK for _increaseSteps_sloc0_1_0
                           2844 ;	Can't optimise plus by inc, falling back to the normal way
   089B 11 F0 00           2845 	ld	de,#_dYlut
   089E 68                 2846 	ld	l,b
   089F 26 00              2847 	ld	h,#0x00
   08A1 19                 2848 	add	hl,de
   08A2 7D                 2849 	ld	a,l
   08A3 54                 2850 	ld	d,h
   08A4 F8 00              2851 	lda	hl,0(sp)
                           2852 ;	genPointerGet
                           2853 ;	AOP_STK for _increaseSteps_sloc0_1_0
   08A6 22                 2854 	ld	(hl+),a
   08A7 72                 2855 	ld	(hl),d
   08A8 5F                 2856 	ld	e,a
   08A9 1A                 2857 	ld	a,(de)
   08AA 47                 2858 	ld	b,a
                           2859 ;	genIpush
                           2860 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08AB 79                 2861 	ld	a,c
   08AC F5                 2862 	push	af
   08AD 33                 2863 	inc	sp
                           2864 ;	genIpush
   08AE 78                 2865 	ld	a,b
   08AF F5                 2866 	push	af
   08B0 33                 2867 	inc	sp
                           2868 ;	genIpush
                           2869 ;	AOP_HL for _seldrum
   08B1 21 3C 01           2870 	ld	hl,#_seldrum
   08B4 7E                 2871 	ld	a,(hl)
   08B5 F5                 2872 	push	af
   08B6 33                 2873 	inc	sp
                           2874 ;	genCall
   08B7 CD 00 00           2875 	call	_move_sprite
   08BA E8 03              2876 	lda	sp,3(sp)
                           2877 ;	square.c 497
                           2878 ;	genCall
                           2879 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08BC CD 00 00           2880 	call	_wait_vbl_done
                           2881 ;	square.c 498
                           2882 ;	genCall
                           2883 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08BF CD 50 06           2884 	call	_setupDrum
                           2885 ;	genLabel
   08C2                    2886 00111$:
                           2887 ;	genEndFunction
   08C2 E8 03              2888 	lda	sp,3(sp)
   08C4 C9                 2889 	ret
   08C5                    2890 ___increaseSteps_end:
                           2891 ;	square.c 501
                           2892 ;	genLabel
                           2893 ;	genFunction
                           2894 ;	---------------------------------
                           2895 ; Function decreaseSteps
                           2896 ; ---------------------------------
   08C5                    2897 ___decreaseSteps_start:
   08C5                    2898 _decreaseSteps:
   08C5 E8 FD              2899 	lda	sp,-3(sp)
                           2900 ;	square.c 503
                           2901 ;	genAssign
   08C7 0E 01              2902 	ld	c,#0x01
                           2903 ;	square.c 504
                           2904 ;	genAssign
                           2905 ;	AOP_STK for _decreaseSteps_currentPulses_1_1
   08C9 F8 02              2906 	lda	hl,2(sp)
   08CB 36 01              2907 	ld	(hl),#0x01
                           2908 ;	square.c 505
                           2909 ;	genCmpEq
                           2910 ;	AOP_HL for _seldrum
                           2911 ; genCmpEq: left 1, right 1, result 1
   08CD 21 3C 01           2912 	ld	hl,#_seldrum
   08D0 7E                 2913 	ld	a,(hl)
   08D1 B7                 2914 	or	a,a
   08D2 C2 D9 08           2915 	jp	nz,00120$
   08D5 3E 01              2916 	ld	a,#0x01
   08D7 18 01              2917 	jr	00121$
   08D9                    2918 00120$:
   08D9 AF                 2919 	xor	a,a
   08DA                    2920 00121$:
   08DA 47                 2921 	ld	b,a
                           2922 ;	genIfx
   08DB AF                 2923 	xor	a,a
   08DC B0                 2924 	or	a,b
   08DD C2 F5 08           2925 	jp	nz,00101$
                           2926 ;	genCmpEq
                           2927 ;	AOP_HL for _seldrum
                           2928 ; genCmpEq: left 1, right 1, result 0
   08E0 21 3C 01           2929 	ld	hl,#_seldrum
   08E3 7E                 2930 	ld	a,(hl)
   08E4 FE 01              2931 	cp	a,#0x01
   08E6 CA 0E 09           2932 	jp	z,00102$
   08E9                    2933 00122$:
                           2934 ;	genCmpEq
                           2935 ;	AOP_HL for _seldrum
                           2936 ; genCmpEq: left 1, right 1, result 0
   08E9 21 3C 01           2937 	ld	hl,#_seldrum
   08EC 7E                 2938 	ld	a,(hl)
   08ED FE 02              2939 	cp	a,#0x02
   08EF CA 27 09           2940 	jp	z,00103$
   08F2                    2941 00123$:
                           2942 ;	genGoto
   08F2 C3 3D 09           2943 	jp	00104$
                           2944 ;	square.c 508
                           2945 ;	genLabel
   08F5                    2946 00101$:
                           2947 ;	genAssign
                           2948 ;	AOP_HL for _totalStepsA
   08F5 21 24 01           2949 	ld	hl,#_totalStepsA
   08F8 4E                 2950 	ld	c,(hl)
                           2951 ;	square.c 509
                           2952 ;	genAssign
                           2953 ;	AOP_HL for _numberOfPulsesA
                           2954 ;	AOP_STK for _decreaseSteps_currentPulses_1_1
   08F9 21 23 01           2955 	ld	hl,#_numberOfPulsesA
   08FC 7E                 2956 	ld	a,(hl)
   08FD F8 02              2957 	lda	hl,2(sp)
   08FF 77                 2958 	ld	(hl),a
                           2959 ;	square.c 510
                           2960 ;	genIpush
                           2961 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0900 C5                 2962 	push	bc
   0901 21 00 00           2963 	ld	hl,#0x0000
   0904 E5                 2964 	push	hl
                           2965 ;	genCall
   0905 CD 00 00           2966 	call	_set_sprite_tile
   0908 E8 02              2967 	lda	sp,2(sp)
   090A C1                 2968 	pop	bc
                           2969 ;	square.c 511
                           2970 ;	genGoto
   090B C3 3D 09           2971 	jp	00104$
                           2972 ;	square.c 513
                           2973 ;	genLabel
   090E                    2974 00102$:
                           2975 ;	genAssign
                           2976 ;	AOP_HL for _totalStepsB
   090E 21 27 01           2977 	ld	hl,#_totalStepsB
   0911 4E                 2978 	ld	c,(hl)
                           2979 ;	square.c 514
                           2980 ;	genAssign
                           2981 ;	AOP_HL for _numberOfPulsesB
                           2982 ;	AOP_STK for _decreaseSteps_currentPulses_1_1
   0912 21 26 01           2983 	ld	hl,#_numberOfPulsesB
   0915 7E                 2984 	ld	a,(hl)
   0916 F8 02              2985 	lda	hl,2(sp)
   0918 77                 2986 	ld	(hl),a
                           2987 ;	square.c 515
                           2988 ;	genIpush
                           2989 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0919 C5                 2990 	push	bc
   091A 21 01 02           2991 	ld	hl,#0x0201
   091D E5                 2992 	push	hl
                           2993 ;	genCall
   091E CD 00 00           2994 	call	_set_sprite_tile
   0921 E8 02              2995 	lda	sp,2(sp)
   0923 C1                 2996 	pop	bc
                           2997 ;	square.c 516
                           2998 ;	genGoto
   0924 C3 3D 09           2999 	jp	00104$
                           3000 ;	square.c 518
                           3001 ;	genLabel
   0927                    3002 00103$:
                           3003 ;	genAssign
                           3004 ;	AOP_HL for _totalStepsC
   0927 21 2A 01           3005 	ld	hl,#_totalStepsC
   092A 4E                 3006 	ld	c,(hl)
                           3007 ;	square.c 519
                           3008 ;	genAssign
                           3009 ;	AOP_HL for _numberOfPulsesC
                           3010 ;	AOP_STK for _decreaseSteps_currentPulses_1_1
   092B 21 29 01           3011 	ld	hl,#_numberOfPulsesC
   092E 7E                 3012 	ld	a,(hl)
   092F F8 02              3013 	lda	hl,2(sp)
   0931 77                 3014 	ld	(hl),a
                           3015 ;	square.c 520
                           3016 ;	genIpush
                           3017 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0932 C5                 3018 	push	bc
   0933 21 03 06           3019 	ld	hl,#0x0603
   0936 E5                 3020 	push	hl
                           3021 ;	genCall
   0937 CD 00 00           3022 	call	_set_sprite_tile
   093A E8 02              3023 	lda	sp,2(sp)
   093C C1                 3024 	pop	bc
                           3025 ;	square.c 522
                           3026 ;	genLabel
   093D                    3027 00104$:
                           3028 ;	square.c 523
                           3029 ;	genMinus
   093D 0D                 3030 	dec	c
                           3031 ;	square.c 524
                           3032 ;	genCmpLt
   093E 79                 3033 	ld	a,c
   093F FE 01              3034 	cp	#0x01
   0941 D2 46 09           3035 	jp	nc,00106$
                           3036 ;	square.c 526
                           3037 ;	genAssign
   0944 0E 20              3038 	ld	c,#0x20
                           3039 ;	genLabel
   0946                    3040 00106$:
                           3041 ;	square.c 528
                           3042 ;	genIfx
   0946 AF                 3043 	xor	a,a
   0947 B0                 3044 	or	a,b
   0948 C2 60 09           3045 	jp	nz,00107$
                           3046 ;	genCmpEq
                           3047 ;	AOP_HL for _seldrum
                           3048 ; genCmpEq: left 1, right 1, result 0
   094B 21 3C 01           3049 	ld	hl,#_seldrum
   094E 7E                 3050 	ld	a,(hl)
   094F FE 01              3051 	cp	a,#0x01
   0951 CA 67 09           3052 	jp	z,00108$
   0954                    3053 00124$:
                           3054 ;	genCmpEq
                           3055 ;	AOP_HL for _seldrum
                           3056 ; genCmpEq: left 1, right 1, result 0
   0954 21 3C 01           3057 	ld	hl,#_seldrum
   0957 7E                 3058 	ld	a,(hl)
   0958 FE 02              3059 	cp	a,#0x02
   095A CA 6E 09           3060 	jp	z,00109$
   095D                    3061 00125$:
                           3062 ;	genGoto
   095D C3 72 09           3063 	jp	00110$
                           3064 ;	square.c 531
                           3065 ;	genLabel
   0960                    3066 00107$:
                           3067 ;	genAssign
                           3068 ;	AOP_HL for _totalStepsA
   0960 21 24 01           3069 	ld	hl,#_totalStepsA
   0963 71                 3070 	ld	(hl),c
                           3071 ;	square.c 532
                           3072 ;	genGoto
   0964 C3 72 09           3073 	jp	00110$
                           3074 ;	square.c 534
                           3075 ;	genLabel
   0967                    3076 00108$:
                           3077 ;	genAssign
                           3078 ;	AOP_HL for _totalStepsB
   0967 21 27 01           3079 	ld	hl,#_totalStepsB
   096A 71                 3080 	ld	(hl),c
                           3081 ;	square.c 535
                           3082 ;	genGoto
   096B C3 72 09           3083 	jp	00110$
                           3084 ;	square.c 537
                           3085 ;	genLabel
   096E                    3086 00109$:
                           3087 ;	genAssign
                           3088 ;	AOP_HL for _totalStepsC
   096E 21 2A 01           3089 	ld	hl,#_totalStepsC
   0971 71                 3090 	ld	(hl),c
                           3091 ;	square.c 539
                           3092 ;	genLabel
   0972                    3093 00110$:
                           3094 ;	square.c 540
                           3095 ;	genMinus
   0972 0D                 3096 	dec	c
                           3097 ;	genPlus
                           3098 ;	Can't optimise plus by inc, falling back to the normal way
   0973 3E D0              3099 	ld	a,#<_dXlut
   0975 81                 3100 	add	a,c
   0976 4F                 3101 	ld	c,a
   0977 3E 00              3102 	ld	a,#>_dXlut
   0979 CE 00              3103 	adc	a,#0x00
   097B 47                 3104 	ld	b,a
                           3105 ;	genPointerGet
   097C 0A                 3106 	ld	a,(bc)
   097D 4F                 3107 	ld	c,a
                           3108 ;	genMinus
                           3109 ;	AOP_STK for _decreaseSteps_currentPulses_1_1
   097E F8 02              3110 	lda	hl,2(sp)
   0980 7E                 3111 	ld	a,(hl)
   0981 C6 FF              3112 	add	a,#0xFF
   0983 47                 3113 	ld	b,a
                           3114 ;	genPlus
                           3115 ;	AOP_STK for _decreaseSteps_sloc0_1_0
                           3116 ;	Can't optimise plus by inc, falling back to the normal way
   0984 11 F0 00           3117 	ld	de,#_dYlut
   0987 68                 3118 	ld	l,b
   0988 26 00              3119 	ld	h,#0x00
   098A 19                 3120 	add	hl,de
   098B 7D                 3121 	ld	a,l
   098C 54                 3122 	ld	d,h
   098D F8 00              3123 	lda	hl,0(sp)
                           3124 ;	genPointerGet
                           3125 ;	AOP_STK for _decreaseSteps_sloc0_1_0
   098F 22                 3126 	ld	(hl+),a
   0990 72                 3127 	ld	(hl),d
   0991 5F                 3128 	ld	e,a
   0992 1A                 3129 	ld	a,(de)
   0993 47                 3130 	ld	b,a
                           3131 ;	genIpush
                           3132 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0994 79                 3133 	ld	a,c
   0995 F5                 3134 	push	af
   0996 33                 3135 	inc	sp
                           3136 ;	genIpush
   0997 78                 3137 	ld	a,b
   0998 F5                 3138 	push	af
   0999 33                 3139 	inc	sp
                           3140 ;	genIpush
                           3141 ;	AOP_HL for _seldrum
   099A 21 3C 01           3142 	ld	hl,#_seldrum
   099D 7E                 3143 	ld	a,(hl)
   099E F5                 3144 	push	af
   099F 33                 3145 	inc	sp
                           3146 ;	genCall
   09A0 CD 00 00           3147 	call	_move_sprite
   09A3 E8 03              3148 	lda	sp,3(sp)
                           3149 ;	square.c 541
                           3150 ;	genCall
                           3151 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   09A5 CD 00 00           3152 	call	_wait_vbl_done
                           3153 ;	square.c 542
                           3154 ;	genCall
                           3155 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   09A8 CD 50 06           3156 	call	_setupDrum
                           3157 ;	genLabel
   09AB                    3158 00111$:
                           3159 ;	genEndFunction
   09AB E8 03              3160 	lda	sp,3(sp)
   09AD C9                 3161 	ret
   09AE                    3162 ___decreaseSteps_end:
                           3163 ;	square.c 545
                           3164 ;	genLabel
                           3165 ;	genFunction
                           3166 ;	---------------------------------
                           3167 ; Function increasePulses
                           3168 ; ---------------------------------
   09AE                    3169 ___increasePulses_start:
   09AE                    3170 _increasePulses:
   09AE E8 FC              3171 	lda	sp,-4(sp)
                           3172 ;	square.c 547
                           3173 ;	genAssign
                           3174 ;	AOP_STK for _increasePulses_currentSteps_1_1
   09B0 F8 03              3175 	lda	hl,3(sp)
   09B2 36 01              3176 	ld	(hl),#0x01
                           3177 ;	square.c 548
                           3178 ;	genAssign
                           3179 ;	AOP_STK for _increasePulses_currentPulses_1_1
   09B4 2B                 3180 	dec	hl
   09B5 36 01              3181 	ld	(hl),#0x01
                           3182 ;	square.c 549
                           3183 ;	genCmpEq
                           3184 ;	AOP_HL for _seldrum
                           3185 ; genCmpEq: left 1, right 1, result 1
   09B7 21 3C 01           3186 	ld	hl,#_seldrum
   09BA 7E                 3187 	ld	a,(hl)
   09BB B7                 3188 	or	a,a
   09BC C2 C3 09           3189 	jp	nz,00120$
   09BF 3E 01              3190 	ld	a,#0x01
   09C1 18 01              3191 	jr	00121$
   09C3                    3192 00120$:
   09C3 AF                 3193 	xor	a,a
   09C4                    3194 00121$:
   09C4 4F                 3195 	ld	c,a
                           3196 ;	genIfx
   09C5 AF                 3197 	xor	a,a
   09C6 B1                 3198 	or	a,c
   09C7 C2 DF 09           3199 	jp	nz,00101$
                           3200 ;	genCmpEq
                           3201 ;	AOP_HL for _seldrum
                           3202 ; genCmpEq: left 1, right 1, result 0
   09CA 21 3C 01           3203 	ld	hl,#_seldrum
   09CD 7E                 3204 	ld	a,(hl)
   09CE FE 01              3205 	cp	a,#0x01
   09D0 CA FC 09           3206 	jp	z,00102$
   09D3                    3207 00122$:
                           3208 ;	genCmpEq
                           3209 ;	AOP_HL for _seldrum
                           3210 ; genCmpEq: left 1, right 1, result 0
   09D3 21 3C 01           3211 	ld	hl,#_seldrum
   09D6 7E                 3212 	ld	a,(hl)
   09D7 FE 02              3213 	cp	a,#0x02
   09D9 CA 19 0A           3214 	jp	z,00103$
   09DC                    3215 00123$:
                           3216 ;	genGoto
   09DC C3 33 0A           3217 	jp	00104$
                           3218 ;	square.c 552
                           3219 ;	genLabel
   09DF                    3220 00101$:
                           3221 ;	genAssign
                           3222 ;	AOP_HL for _totalStepsA
                           3223 ;	AOP_STK for _increasePulses_currentSteps_1_1
   09DF 21 24 01           3224 	ld	hl,#_totalStepsA
   09E2 7E                 3225 	ld	a,(hl)
   09E3 F8 03              3226 	lda	hl,3(sp)
   09E5 77                 3227 	ld	(hl),a
                           3228 ;	square.c 553
                           3229 ;	genAssign
                           3230 ;	AOP_HL for _numberOfPulsesA
                           3231 ;	AOP_STK for _increasePulses_currentPulses_1_1
   09E6 21 23 01           3232 	ld	hl,#_numberOfPulsesA
   09E9 7E                 3233 	ld	a,(hl)
   09EA F8 02              3234 	lda	hl,2(sp)
   09EC 77                 3235 	ld	(hl),a
                           3236 ;	square.c 554
                           3237 ;	genIpush
                           3238 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   09ED C5                 3239 	push	bc
   09EE 21 00 00           3240 	ld	hl,#0x0000
   09F1 E5                 3241 	push	hl
                           3242 ;	genCall
   09F2 CD 00 00           3243 	call	_set_sprite_tile
   09F5 E8 02              3244 	lda	sp,2(sp)
   09F7 E1                 3245 	pop	hl
   09F8 4D                 3246 	ld	c,l
                           3247 ;	square.c 555
                           3248 ;	genGoto
   09F9 C3 33 0A           3249 	jp	00104$
                           3250 ;	square.c 557
                           3251 ;	genLabel
   09FC                    3252 00102$:
                           3253 ;	genAssign
                           3254 ;	AOP_HL for _totalStepsB
                           3255 ;	AOP_STK for _increasePulses_currentSteps_1_1
   09FC 21 27 01           3256 	ld	hl,#_totalStepsB
   09FF 7E                 3257 	ld	a,(hl)
   0A00 F8 03              3258 	lda	hl,3(sp)
   0A02 77                 3259 	ld	(hl),a
                           3260 ;	square.c 558
                           3261 ;	genAssign
                           3262 ;	AOP_HL for _numberOfPulsesB
                           3263 ;	AOP_STK for _increasePulses_currentPulses_1_1
   0A03 21 26 01           3264 	ld	hl,#_numberOfPulsesB
   0A06 7E                 3265 	ld	a,(hl)
   0A07 F8 02              3266 	lda	hl,2(sp)
   0A09 77                 3267 	ld	(hl),a
                           3268 ;	square.c 559
                           3269 ;	genIpush
                           3270 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A0A C5                 3271 	push	bc
   0A0B 21 01 02           3272 	ld	hl,#0x0201
   0A0E E5                 3273 	push	hl
                           3274 ;	genCall
   0A0F CD 00 00           3275 	call	_set_sprite_tile
   0A12 E8 02              3276 	lda	sp,2(sp)
   0A14 E1                 3277 	pop	hl
   0A15 4D                 3278 	ld	c,l
                           3279 ;	square.c 560
                           3280 ;	genGoto
   0A16 C3 33 0A           3281 	jp	00104$
                           3282 ;	square.c 562
                           3283 ;	genLabel
   0A19                    3284 00103$:
                           3285 ;	genAssign
                           3286 ;	AOP_HL for _totalStepsC
                           3287 ;	AOP_STK for _increasePulses_currentSteps_1_1
   0A19 21 2A 01           3288 	ld	hl,#_totalStepsC
   0A1C 7E                 3289 	ld	a,(hl)
   0A1D F8 03              3290 	lda	hl,3(sp)
   0A1F 77                 3291 	ld	(hl),a
                           3292 ;	square.c 563
                           3293 ;	genAssign
                           3294 ;	AOP_HL for _numberOfPulsesC
                           3295 ;	AOP_STK for _increasePulses_currentPulses_1_1
   0A20 21 29 01           3296 	ld	hl,#_numberOfPulsesC
   0A23 7E                 3297 	ld	a,(hl)
   0A24 F8 02              3298 	lda	hl,2(sp)
   0A26 77                 3299 	ld	(hl),a
                           3300 ;	square.c 564
                           3301 ;	genIpush
                           3302 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A27 C5                 3303 	push	bc
   0A28 21 03 06           3304 	ld	hl,#0x0603
   0A2B E5                 3305 	push	hl
                           3306 ;	genCall
   0A2C CD 00 00           3307 	call	_set_sprite_tile
   0A2F E8 02              3308 	lda	sp,2(sp)
   0A31 E1                 3309 	pop	hl
   0A32 4D                 3310 	ld	c,l
                           3311 ;	square.c 566
                           3312 ;	genLabel
   0A33                    3313 00104$:
                           3314 ;	square.c 567
                           3315 ;	genPlus
                           3316 ;	AOP_STK for _increasePulses_currentPulses_1_1
                           3317 ;	genPlusIncr
   0A33 F8 02              3318 	lda	hl,2(sp)
   0A35 34                 3319 	inc	(hl)
                           3320 ;	square.c 568
                           3321 ;	genCmpGt
                           3322 ;	AOP_STK for _increasePulses_currentPulses_1_1
   0A36 3E 20              3323 	ld	a,#0x20
   0A38 96                 3324 	sub	a,(hl)
   0A39 D2 3E 0A           3325 	jp	nc,00106$
                           3326 ;	square.c 570
                           3327 ;	genAssign
                           3328 ;	AOP_STK for _increasePulses_currentPulses_1_1
   0A3C 36 01              3329 	ld	(hl),#0x01
                           3330 ;	genLabel
   0A3E                    3331 00106$:
                           3332 ;	square.c 572
                           3333 ;	genIfx
   0A3E AF                 3334 	xor	a,a
   0A3F B1                 3335 	or	a,c
   0A40 C2 58 0A           3336 	jp	nz,00107$
                           3337 ;	genCmpEq
                           3338 ;	AOP_HL for _seldrum
                           3339 ; genCmpEq: left 1, right 1, result 0
   0A43 21 3C 01           3340 	ld	hl,#_seldrum
   0A46 7E                 3341 	ld	a,(hl)
   0A47 FE 01              3342 	cp	a,#0x01
   0A49 CA 62 0A           3343 	jp	z,00108$
   0A4C                    3344 00124$:
                           3345 ;	genCmpEq
                           3346 ;	AOP_HL for _seldrum
                           3347 ; genCmpEq: left 1, right 1, result 0
   0A4C 21 3C 01           3348 	ld	hl,#_seldrum
   0A4F 7E                 3349 	ld	a,(hl)
   0A50 FE 02              3350 	cp	a,#0x02
   0A52 CA 6C 0A           3351 	jp	z,00109$
   0A55                    3352 00125$:
                           3353 ;	genGoto
   0A55 C3 73 0A           3354 	jp	00110$
                           3355 ;	square.c 575
                           3356 ;	genLabel
   0A58                    3357 00107$:
                           3358 ;	genAssign
                           3359 ;	AOP_STK for _increasePulses_currentPulses_1_1
                           3360 ;	AOP_HL for _numberOfPulsesA
   0A58 F8 02              3361 	lda	hl,2(sp)
   0A5A 7E                 3362 	ld	a,(hl)
   0A5B 21 23 01           3363 	ld	hl,#_numberOfPulsesA
   0A5E 77                 3364 	ld	(hl),a
                           3365 ;	square.c 576
                           3366 ;	genGoto
   0A5F C3 73 0A           3367 	jp	00110$
                           3368 ;	square.c 578
                           3369 ;	genLabel
   0A62                    3370 00108$:
                           3371 ;	genAssign
                           3372 ;	AOP_STK for _increasePulses_currentPulses_1_1
                           3373 ;	AOP_HL for _numberOfPulsesB
   0A62 F8 02              3374 	lda	hl,2(sp)
   0A64 7E                 3375 	ld	a,(hl)
   0A65 21 26 01           3376 	ld	hl,#_numberOfPulsesB
   0A68 77                 3377 	ld	(hl),a
                           3378 ;	square.c 579
                           3379 ;	genGoto
   0A69 C3 73 0A           3380 	jp	00110$
                           3381 ;	square.c 581
                           3382 ;	genLabel
   0A6C                    3383 00109$:
                           3384 ;	genAssign
                           3385 ;	AOP_STK for _increasePulses_currentPulses_1_1
                           3386 ;	AOP_HL for _numberOfPulsesC
   0A6C F8 02              3387 	lda	hl,2(sp)
   0A6E 7E                 3388 	ld	a,(hl)
   0A6F 21 29 01           3389 	ld	hl,#_numberOfPulsesC
   0A72 77                 3390 	ld	(hl),a
                           3391 ;	square.c 583
                           3392 ;	genLabel
   0A73                    3393 00110$:
                           3394 ;	square.c 584
                           3395 ;	genMinus
                           3396 ;	AOP_STK for _increasePulses_currentSteps_1_1
   0A73 F8 03              3397 	lda	hl,3(sp)
   0A75 7E                 3398 	ld	a,(hl)
   0A76 C6 FF              3399 	add	a,#0xFF
   0A78 4F                 3400 	ld	c,a
                           3401 ;	genPlus
                           3402 ;	Can't optimise plus by inc, falling back to the normal way
   0A79 3E D0              3403 	ld	a,#<_dXlut
   0A7B 81                 3404 	add	a,c
   0A7C 4F                 3405 	ld	c,a
   0A7D 3E 00              3406 	ld	a,#>_dXlut
   0A7F CE 00              3407 	adc	a,#0x00
   0A81 47                 3408 	ld	b,a
                           3409 ;	genPointerGet
   0A82 0A                 3410 	ld	a,(bc)
   0A83 4F                 3411 	ld	c,a
                           3412 ;	genMinus
                           3413 ;	AOP_STK for _increasePulses_currentPulses_1_1
   0A84 2B                 3414 	dec	hl
   0A85 7E                 3415 	ld	a,(hl)
   0A86 C6 FF              3416 	add	a,#0xFF
   0A88 47                 3417 	ld	b,a
                           3418 ;	genPlus
                           3419 ;	AOP_STK for _increasePulses_sloc0_1_0
                           3420 ;	Can't optimise plus by inc, falling back to the normal way
   0A89 11 F0 00           3421 	ld	de,#_dYlut
   0A8C 68                 3422 	ld	l,b
   0A8D 26 00              3423 	ld	h,#0x00
   0A8F 19                 3424 	add	hl,de
   0A90 7D                 3425 	ld	a,l
   0A91 54                 3426 	ld	d,h
   0A92 F8 00              3427 	lda	hl,0(sp)
                           3428 ;	genPointerGet
                           3429 ;	AOP_STK for _increasePulses_sloc0_1_0
   0A94 22                 3430 	ld	(hl+),a
   0A95 72                 3431 	ld	(hl),d
   0A96 5F                 3432 	ld	e,a
   0A97 1A                 3433 	ld	a,(de)
   0A98 47                 3434 	ld	b,a
                           3435 ;	genIpush
                           3436 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A99 79                 3437 	ld	a,c
   0A9A F5                 3438 	push	af
   0A9B 33                 3439 	inc	sp
                           3440 ;	genIpush
   0A9C 78                 3441 	ld	a,b
   0A9D F5                 3442 	push	af
   0A9E 33                 3443 	inc	sp
                           3444 ;	genIpush
                           3445 ;	AOP_HL for _seldrum
   0A9F 21 3C 01           3446 	ld	hl,#_seldrum
   0AA2 7E                 3447 	ld	a,(hl)
   0AA3 F5                 3448 	push	af
   0AA4 33                 3449 	inc	sp
                           3450 ;	genCall
   0AA5 CD 00 00           3451 	call	_move_sprite
   0AA8 E8 03              3452 	lda	sp,3(sp)
                           3453 ;	square.c 585
                           3454 ;	genCall
                           3455 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AAA CD 00 00           3456 	call	_wait_vbl_done
                           3457 ;	square.c 586
                           3458 ;	genCall
                           3459 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AAD CD 50 06           3460 	call	_setupDrum
                           3461 ;	genLabel
   0AB0                    3462 00111$:
                           3463 ;	genEndFunction
   0AB0 E8 04              3464 	lda	sp,4(sp)
   0AB2 C9                 3465 	ret
   0AB3                    3466 ___increasePulses_end:
                           3467 ;	square.c 589
                           3468 ;	genLabel
                           3469 ;	genFunction
                           3470 ;	---------------------------------
                           3471 ; Function decreasePulses
                           3472 ; ---------------------------------
   0AB3                    3473 ___decreasePulses_start:
   0AB3                    3474 _decreasePulses:
   0AB3 E8 FC              3475 	lda	sp,-4(sp)
                           3476 ;	square.c 591
                           3477 ;	genAssign
                           3478 ;	AOP_STK for _decreasePulses_currentSteps_1_1
   0AB5 F8 03              3479 	lda	hl,3(sp)
   0AB7 36 01              3480 	ld	(hl),#0x01
                           3481 ;	square.c 592
                           3482 ;	genAssign
                           3483 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0AB9 2B                 3484 	dec	hl
   0ABA 36 01              3485 	ld	(hl),#0x01
                           3486 ;	square.c 593
                           3487 ;	genCmpEq
                           3488 ;	AOP_HL for _seldrum
                           3489 ; genCmpEq: left 1, right 1, result 1
   0ABC 21 3C 01           3490 	ld	hl,#_seldrum
   0ABF 7E                 3491 	ld	a,(hl)
   0AC0 B7                 3492 	or	a,a
   0AC1 C2 C8 0A           3493 	jp	nz,00120$
   0AC4 3E 01              3494 	ld	a,#0x01
   0AC6 18 01              3495 	jr	00121$
   0AC8                    3496 00120$:
   0AC8 AF                 3497 	xor	a,a
   0AC9                    3498 00121$:
   0AC9 4F                 3499 	ld	c,a
                           3500 ;	genIfx
   0ACA AF                 3501 	xor	a,a
   0ACB B1                 3502 	or	a,c
   0ACC C2 E4 0A           3503 	jp	nz,00101$
                           3504 ;	genCmpEq
                           3505 ;	AOP_HL for _seldrum
                           3506 ; genCmpEq: left 1, right 1, result 0
   0ACF 21 3C 01           3507 	ld	hl,#_seldrum
   0AD2 7E                 3508 	ld	a,(hl)
   0AD3 FE 01              3509 	cp	a,#0x01
   0AD5 CA 01 0B           3510 	jp	z,00102$
   0AD8                    3511 00122$:
                           3512 ;	genCmpEq
                           3513 ;	AOP_HL for _seldrum
                           3514 ; genCmpEq: left 1, right 1, result 0
   0AD8 21 3C 01           3515 	ld	hl,#_seldrum
   0ADB 7E                 3516 	ld	a,(hl)
   0ADC FE 02              3517 	cp	a,#0x02
   0ADE CA 1E 0B           3518 	jp	z,00103$
   0AE1                    3519 00123$:
                           3520 ;	genGoto
   0AE1 C3 38 0B           3521 	jp	00104$
                           3522 ;	square.c 596
                           3523 ;	genLabel
   0AE4                    3524 00101$:
                           3525 ;	genAssign
                           3526 ;	AOP_HL for _totalStepsA
                           3527 ;	AOP_STK for _decreasePulses_currentSteps_1_1
   0AE4 21 24 01           3528 	ld	hl,#_totalStepsA
   0AE7 7E                 3529 	ld	a,(hl)
   0AE8 F8 03              3530 	lda	hl,3(sp)
   0AEA 77                 3531 	ld	(hl),a
                           3532 ;	square.c 597
                           3533 ;	genAssign
                           3534 ;	AOP_HL for _numberOfPulsesA
                           3535 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0AEB 21 23 01           3536 	ld	hl,#_numberOfPulsesA
   0AEE 7E                 3537 	ld	a,(hl)
   0AEF F8 02              3538 	lda	hl,2(sp)
   0AF1 77                 3539 	ld	(hl),a
                           3540 ;	square.c 598
                           3541 ;	genIpush
                           3542 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0AF2 C5                 3543 	push	bc
   0AF3 21 00 00           3544 	ld	hl,#0x0000
   0AF6 E5                 3545 	push	hl
                           3546 ;	genCall
   0AF7 CD 00 00           3547 	call	_set_sprite_tile
   0AFA E8 02              3548 	lda	sp,2(sp)
   0AFC E1                 3549 	pop	hl
   0AFD 4D                 3550 	ld	c,l
                           3551 ;	square.c 599
                           3552 ;	genGoto
   0AFE C3 38 0B           3553 	jp	00104$
                           3554 ;	square.c 601
                           3555 ;	genLabel
   0B01                    3556 00102$:
                           3557 ;	genAssign
                           3558 ;	AOP_HL for _totalStepsB
                           3559 ;	AOP_STK for _decreasePulses_currentSteps_1_1
   0B01 21 27 01           3560 	ld	hl,#_totalStepsB
   0B04 7E                 3561 	ld	a,(hl)
   0B05 F8 03              3562 	lda	hl,3(sp)
   0B07 77                 3563 	ld	(hl),a
                           3564 ;	square.c 602
                           3565 ;	genAssign
                           3566 ;	AOP_HL for _numberOfPulsesB
                           3567 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0B08 21 26 01           3568 	ld	hl,#_numberOfPulsesB
   0B0B 7E                 3569 	ld	a,(hl)
   0B0C F8 02              3570 	lda	hl,2(sp)
   0B0E 77                 3571 	ld	(hl),a
                           3572 ;	square.c 603
                           3573 ;	genIpush
                           3574 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B0F C5                 3575 	push	bc
   0B10 21 01 02           3576 	ld	hl,#0x0201
   0B13 E5                 3577 	push	hl
                           3578 ;	genCall
   0B14 CD 00 00           3579 	call	_set_sprite_tile
   0B17 E8 02              3580 	lda	sp,2(sp)
   0B19 E1                 3581 	pop	hl
   0B1A 4D                 3582 	ld	c,l
                           3583 ;	square.c 604
                           3584 ;	genGoto
   0B1B C3 38 0B           3585 	jp	00104$
                           3586 ;	square.c 606
                           3587 ;	genLabel
   0B1E                    3588 00103$:
                           3589 ;	genAssign
                           3590 ;	AOP_HL for _totalStepsC
                           3591 ;	AOP_STK for _decreasePulses_currentSteps_1_1
   0B1E 21 2A 01           3592 	ld	hl,#_totalStepsC
   0B21 7E                 3593 	ld	a,(hl)
   0B22 F8 03              3594 	lda	hl,3(sp)
   0B24 77                 3595 	ld	(hl),a
                           3596 ;	square.c 607
                           3597 ;	genAssign
                           3598 ;	AOP_HL for _numberOfPulsesC
                           3599 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0B25 21 29 01           3600 	ld	hl,#_numberOfPulsesC
   0B28 7E                 3601 	ld	a,(hl)
   0B29 F8 02              3602 	lda	hl,2(sp)
   0B2B 77                 3603 	ld	(hl),a
                           3604 ;	square.c 608
                           3605 ;	genIpush
                           3606 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B2C C5                 3607 	push	bc
   0B2D 21 03 06           3608 	ld	hl,#0x0603
   0B30 E5                 3609 	push	hl
                           3610 ;	genCall
   0B31 CD 00 00           3611 	call	_set_sprite_tile
   0B34 E8 02              3612 	lda	sp,2(sp)
   0B36 E1                 3613 	pop	hl
   0B37 4D                 3614 	ld	c,l
                           3615 ;	square.c 610
                           3616 ;	genLabel
   0B38                    3617 00104$:
                           3618 ;	square.c 611
                           3619 ;	genMinus
                           3620 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0B38 F8 02              3621 	lda	hl,2(sp)
   0B3A 35                 3622 	dec	(hl)
                           3623 ;	square.c 612
                           3624 ;	genCmpLt
                           3625 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0B3B 7E                 3626 	ld	a,(hl)
   0B3C FE 01              3627 	cp	#0x01
   0B3E D2 43 0B           3628 	jp	nc,00106$
                           3629 ;	square.c 614
                           3630 ;	genAssign
                           3631 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0B41 36 20              3632 	ld	(hl),#0x20
                           3633 ;	genLabel
   0B43                    3634 00106$:
                           3635 ;	square.c 616
                           3636 ;	genIfx
   0B43 AF                 3637 	xor	a,a
   0B44 B1                 3638 	or	a,c
   0B45 C2 5D 0B           3639 	jp	nz,00107$
                           3640 ;	genCmpEq
                           3641 ;	AOP_HL for _seldrum
                           3642 ; genCmpEq: left 1, right 1, result 0
   0B48 21 3C 01           3643 	ld	hl,#_seldrum
   0B4B 7E                 3644 	ld	a,(hl)
   0B4C FE 01              3645 	cp	a,#0x01
   0B4E CA 67 0B           3646 	jp	z,00108$
   0B51                    3647 00124$:
                           3648 ;	genCmpEq
                           3649 ;	AOP_HL for _seldrum
                           3650 ; genCmpEq: left 1, right 1, result 0
   0B51 21 3C 01           3651 	ld	hl,#_seldrum
   0B54 7E                 3652 	ld	a,(hl)
   0B55 FE 02              3653 	cp	a,#0x02
   0B57 CA 71 0B           3654 	jp	z,00109$
   0B5A                    3655 00125$:
                           3656 ;	genGoto
   0B5A C3 78 0B           3657 	jp	00110$
                           3658 ;	square.c 619
                           3659 ;	genLabel
   0B5D                    3660 00107$:
                           3661 ;	genAssign
                           3662 ;	AOP_STK for _decreasePulses_currentPulses_1_1
                           3663 ;	AOP_HL for _numberOfPulsesA
   0B5D F8 02              3664 	lda	hl,2(sp)
   0B5F 7E                 3665 	ld	a,(hl)
   0B60 21 23 01           3666 	ld	hl,#_numberOfPulsesA
   0B63 77                 3667 	ld	(hl),a
                           3668 ;	square.c 620
                           3669 ;	genGoto
   0B64 C3 78 0B           3670 	jp	00110$
                           3671 ;	square.c 622
                           3672 ;	genLabel
   0B67                    3673 00108$:
                           3674 ;	genAssign
                           3675 ;	AOP_STK for _decreasePulses_currentPulses_1_1
                           3676 ;	AOP_HL for _numberOfPulsesB
   0B67 F8 02              3677 	lda	hl,2(sp)
   0B69 7E                 3678 	ld	a,(hl)
   0B6A 21 26 01           3679 	ld	hl,#_numberOfPulsesB
   0B6D 77                 3680 	ld	(hl),a
                           3681 ;	square.c 623
                           3682 ;	genGoto
   0B6E C3 78 0B           3683 	jp	00110$
                           3684 ;	square.c 625
                           3685 ;	genLabel
   0B71                    3686 00109$:
                           3687 ;	genAssign
                           3688 ;	AOP_STK for _decreasePulses_currentPulses_1_1
                           3689 ;	AOP_HL for _numberOfPulsesC
   0B71 F8 02              3690 	lda	hl,2(sp)
   0B73 7E                 3691 	ld	a,(hl)
   0B74 21 29 01           3692 	ld	hl,#_numberOfPulsesC
   0B77 77                 3693 	ld	(hl),a
                           3694 ;	square.c 627
                           3695 ;	genLabel
   0B78                    3696 00110$:
                           3697 ;	square.c 628
                           3698 ;	genMinus
                           3699 ;	AOP_STK for _decreasePulses_currentSteps_1_1
   0B78 F8 03              3700 	lda	hl,3(sp)
   0B7A 7E                 3701 	ld	a,(hl)
   0B7B C6 FF              3702 	add	a,#0xFF
   0B7D 4F                 3703 	ld	c,a
                           3704 ;	genPlus
                           3705 ;	Can't optimise plus by inc, falling back to the normal way
   0B7E 3E D0              3706 	ld	a,#<_dXlut
   0B80 81                 3707 	add	a,c
   0B81 4F                 3708 	ld	c,a
   0B82 3E 00              3709 	ld	a,#>_dXlut
   0B84 CE 00              3710 	adc	a,#0x00
   0B86 47                 3711 	ld	b,a
                           3712 ;	genPointerGet
   0B87 0A                 3713 	ld	a,(bc)
   0B88 4F                 3714 	ld	c,a
                           3715 ;	genMinus
                           3716 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0B89 2B                 3717 	dec	hl
   0B8A 7E                 3718 	ld	a,(hl)
   0B8B C6 FF              3719 	add	a,#0xFF
   0B8D 47                 3720 	ld	b,a
                           3721 ;	genPlus
                           3722 ;	AOP_STK for _decreasePulses_sloc0_1_0
                           3723 ;	Can't optimise plus by inc, falling back to the normal way
   0B8E 11 F0 00           3724 	ld	de,#_dYlut
   0B91 68                 3725 	ld	l,b
   0B92 26 00              3726 	ld	h,#0x00
   0B94 19                 3727 	add	hl,de
   0B95 7D                 3728 	ld	a,l
   0B96 54                 3729 	ld	d,h
   0B97 F8 00              3730 	lda	hl,0(sp)
                           3731 ;	genPointerGet
                           3732 ;	AOP_STK for _decreasePulses_sloc0_1_0
   0B99 22                 3733 	ld	(hl+),a
   0B9A 72                 3734 	ld	(hl),d
   0B9B 5F                 3735 	ld	e,a
   0B9C 1A                 3736 	ld	a,(de)
   0B9D 47                 3737 	ld	b,a
                           3738 ;	genIpush
                           3739 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B9E 79                 3740 	ld	a,c
   0B9F F5                 3741 	push	af
   0BA0 33                 3742 	inc	sp
                           3743 ;	genIpush
   0BA1 78                 3744 	ld	a,b
   0BA2 F5                 3745 	push	af
   0BA3 33                 3746 	inc	sp
                           3747 ;	genIpush
                           3748 ;	AOP_HL for _seldrum
   0BA4 21 3C 01           3749 	ld	hl,#_seldrum
   0BA7 7E                 3750 	ld	a,(hl)
   0BA8 F5                 3751 	push	af
   0BA9 33                 3752 	inc	sp
                           3753 ;	genCall
   0BAA CD 00 00           3754 	call	_move_sprite
   0BAD E8 03              3755 	lda	sp,3(sp)
                           3756 ;	square.c 629
                           3757 ;	genCall
                           3758 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0BAF CD 00 00           3759 	call	_wait_vbl_done
                           3760 ;	square.c 630
                           3761 ;	genCall
                           3762 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0BB2 CD 50 06           3763 	call	_setupDrum
                           3764 ;	genLabel
   0BB5                    3765 00111$:
                           3766 ;	genEndFunction
   0BB5 E8 04              3767 	lda	sp,4(sp)
   0BB7 C9                 3768 	ret
   0BB8                    3769 ___decreasePulses_end:
                           3770 ;	square.c 634
                           3771 ;	genLabel
                           3772 ;	genFunction
                           3773 ;	---------------------------------
                           3774 ; Function increaseSwing
                           3775 ; ---------------------------------
   0BB8                    3776 ___increaseSwing_start:
   0BB8                    3777 _increaseSwing:
                           3778 	
                           3779 ;	square.c 636
                           3780 ;	genAssign
   0BB8 0E 00              3781 	ld	c,#0x00
                           3782 ;	square.c 637
                           3783 ;	genCmpEq
                           3784 ;	AOP_HL for _seldrum
                           3785 ; genCmpEq: left 1, right 1, result 1
   0BBA 21 3C 01           3786 	ld	hl,#_seldrum
   0BBD 7E                 3787 	ld	a,(hl)
   0BBE B7                 3788 	or	a,a
   0BBF C2 C6 0B           3789 	jp	nz,00117$
   0BC2 3E 01              3790 	ld	a,#0x01
   0BC4 18 01              3791 	jr	00118$
   0BC6                    3792 00117$:
   0BC6 AF                 3793 	xor	a,a
   0BC7                    3794 00118$:
   0BC7 47                 3795 	ld	b,a
                           3796 ;	genIfx
   0BC8 AF                 3797 	xor	a,a
   0BC9 B0                 3798 	or	a,b
   0BCA C2 E2 0B           3799 	jp	nz,00101$
                           3800 ;	genCmpEq
                           3801 ;	AOP_HL for _seldrum
                           3802 ; genCmpEq: left 1, right 1, result 0
   0BCD 21 3C 01           3803 	ld	hl,#_seldrum
   0BD0 7E                 3804 	ld	a,(hl)
   0BD1 FE 01              3805 	cp	a,#0x01
   0BD3 CA E9 0B           3806 	jp	z,00102$
   0BD6                    3807 00119$:
                           3808 ;	genCmpEq
                           3809 ;	AOP_HL for _seldrum
                           3810 ; genCmpEq: left 1, right 1, result 0
   0BD6 21 3C 01           3811 	ld	hl,#_seldrum
   0BD9 7E                 3812 	ld	a,(hl)
   0BDA FE 02              3813 	cp	a,#0x02
   0BDC CA F0 0B           3814 	jp	z,00103$
   0BDF                    3815 00120$:
                           3816 ;	genGoto
   0BDF C3 F4 0B           3817 	jp	00104$
                           3818 ;	square.c 640
                           3819 ;	genLabel
   0BE2                    3820 00101$:
                           3821 ;	genAssign
                           3822 ;	AOP_HL for _delayA
   0BE2 21 1D 01           3823 	ld	hl,#_delayA
   0BE5 4E                 3824 	ld	c,(hl)
                           3825 ;	square.c 641
                           3826 ;	genGoto
   0BE6 C3 F4 0B           3827 	jp	00104$
                           3828 ;	square.c 643
                           3829 ;	genLabel
   0BE9                    3830 00102$:
                           3831 ;	genAssign
                           3832 ;	AOP_HL for _delayB
   0BE9 21 1E 01           3833 	ld	hl,#_delayB
   0BEC 4E                 3834 	ld	c,(hl)
                           3835 ;	square.c 644
                           3836 ;	genGoto
   0BED C3 F4 0B           3837 	jp	00104$
                           3838 ;	square.c 646
                           3839 ;	genLabel
   0BF0                    3840 00103$:
                           3841 ;	genAssign
                           3842 ;	AOP_HL for _delayC
   0BF0 21 1F 01           3843 	ld	hl,#_delayC
   0BF3 4E                 3844 	ld	c,(hl)
                           3845 ;	square.c 648
                           3846 ;	genLabel
   0BF4                    3847 00104$:
                           3848 ;	square.c 649
                           3849 ;	genPlus
                           3850 ;	genPlusIncr
                           3851 ; Removed redundent load
   0BF4 0C                 3852 	inc	c
                           3853 ;	square.c 650
                           3854 ;	genIfx
   0BF5 AF                 3855 	xor	a,a
   0BF6 B0                 3856 	or	a,b
   0BF7 C2 0F 0C           3857 	jp	nz,00105$
                           3858 ;	genCmpEq
                           3859 ;	AOP_HL for _seldrum
                           3860 ; genCmpEq: left 1, right 1, result 0
   0BFA 21 3C 01           3861 	ld	hl,#_seldrum
   0BFD 7E                 3862 	ld	a,(hl)
   0BFE FE 01              3863 	cp	a,#0x01
   0C00 CA 16 0C           3864 	jp	z,00106$
   0C03                    3865 00121$:
                           3866 ;	genCmpEq
                           3867 ;	AOP_HL for _seldrum
                           3868 ; genCmpEq: left 1, right 1, result 0
   0C03 21 3C 01           3869 	ld	hl,#_seldrum
   0C06 7E                 3870 	ld	a,(hl)
   0C07 FE 02              3871 	cp	a,#0x02
   0C09 CA 1D 0C           3872 	jp	z,00107$
   0C0C                    3873 00122$:
                           3874 ;	genGoto
   0C0C C3 21 0C           3875 	jp	00108$
                           3876 ;	square.c 653
                           3877 ;	genLabel
   0C0F                    3878 00105$:
                           3879 ;	genAssign
                           3880 ;	AOP_HL for _delayA
   0C0F 21 1D 01           3881 	ld	hl,#_delayA
   0C12 71                 3882 	ld	(hl),c
                           3883 ;	square.c 654
                           3884 ;	genGoto
   0C13 C3 21 0C           3885 	jp	00108$
                           3886 ;	square.c 656
                           3887 ;	genLabel
   0C16                    3888 00106$:
                           3889 ;	genAssign
                           3890 ;	AOP_HL for _delayB
   0C16 21 1E 01           3891 	ld	hl,#_delayB
   0C19 71                 3892 	ld	(hl),c
                           3893 ;	square.c 657
                           3894 ;	genGoto
   0C1A C3 21 0C           3895 	jp	00108$
                           3896 ;	square.c 659
                           3897 ;	genLabel
   0C1D                    3898 00107$:
                           3899 ;	genAssign
                           3900 ;	AOP_HL for _delayC
   0C1D 21 1F 01           3901 	ld	hl,#_delayC
   0C20 71                 3902 	ld	(hl),c
                           3903 ;	square.c 661
                           3904 ;	genLabel
   0C21                    3905 00108$:
                           3906 ;	square.c 662
                           3907 ;	genIpush
                           3908 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0C21 C5                 3909 	push	bc
   0C22 21 05 0A           3910 	ld	hl,#0x0A05
   0C25 E5                 3911 	push	hl
                           3912 ;	genCall
   0C26 CD 00 00           3913 	call	_set_sprite_tile
   0C29 E8 02              3914 	lda	sp,2(sp)
   0C2B E1                 3915 	pop	hl
   0C2C 4D                 3916 	ld	c,l
                           3917 ;	square.c 663
                           3918 ;	genPlus
                           3919 ;	genPlusIncr
                           3920 ;	Can't optimise plus by inc, falling back to the normal way
   0C2D 79                 3921 	ld	a,c
   0C2E C6 08              3922 	add	a,#0x08
   0C30 4F                 3923 	ld	c,a
                           3924 ;	genIpush
                           3925 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C31 3E 98              3926 	ld	a,#0x98
   0C33 F5                 3927 	push	af
   0C34 33                 3928 	inc	sp
                           3929 ;	genIpush
   0C35 79                 3930 	ld	a,c
   0C36 F5                 3931 	push	af
   0C37 33                 3932 	inc	sp
                           3933 ;	genIpush
   0C38 3E 05              3934 	ld	a,#0x05
   0C3A F5                 3935 	push	af
   0C3B 33                 3936 	inc	sp
                           3937 ;	genCall
   0C3C CD 00 00           3938 	call	_move_sprite
   0C3F E8 03              3939 	lda	sp,3(sp)
                           3940 ;	square.c 664
                           3941 ;	genCall
                           3942 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C41 CD 00 00           3943 	call	_wait_vbl_done
                           3944 ;	square.c 665
                           3945 ;	genCall
                           3946 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C44 CD 50 06           3947 	call	_setupDrum
                           3948 ;	genLabel
   0C47                    3949 00109$:
                           3950 ;	genEndFunction
                           3951 	
   0C47 C9                 3952 	ret
   0C48                    3953 ___increaseSwing_end:
                           3954 ;	square.c 668
                           3955 ;	genLabel
                           3956 ;	genFunction
                           3957 ;	---------------------------------
                           3958 ; Function decreaseSwing
                           3959 ; ---------------------------------
   0C48                    3960 ___decreaseSwing_start:
   0C48                    3961 _decreaseSwing:
                           3962 	
                           3963 ;	square.c 670
                           3964 ;	genAssign
   0C48 0E 00              3965 	ld	c,#0x00
                           3966 ;	square.c 671
                           3967 ;	genCmpEq
                           3968 ;	AOP_HL for _seldrum
                           3969 ; genCmpEq: left 1, right 1, result 1
   0C4A 21 3C 01           3970 	ld	hl,#_seldrum
   0C4D 7E                 3971 	ld	a,(hl)
   0C4E B7                 3972 	or	a,a
   0C4F C2 56 0C           3973 	jp	nz,00120$
   0C52 3E 01              3974 	ld	a,#0x01
   0C54 18 01              3975 	jr	00121$
   0C56                    3976 00120$:
   0C56 AF                 3977 	xor	a,a
   0C57                    3978 00121$:
   0C57 47                 3979 	ld	b,a
                           3980 ;	genIfx
   0C58 AF                 3981 	xor	a,a
   0C59 B0                 3982 	or	a,b
   0C5A C2 72 0C           3983 	jp	nz,00101$
                           3984 ;	genCmpEq
                           3985 ;	AOP_HL for _seldrum
                           3986 ; genCmpEq: left 1, right 1, result 0
   0C5D 21 3C 01           3987 	ld	hl,#_seldrum
   0C60 7E                 3988 	ld	a,(hl)
   0C61 FE 01              3989 	cp	a,#0x01
   0C63 CA 79 0C           3990 	jp	z,00102$
   0C66                    3991 00122$:
                           3992 ;	genCmpEq
                           3993 ;	AOP_HL for _seldrum
                           3994 ; genCmpEq: left 1, right 1, result 0
   0C66 21 3C 01           3995 	ld	hl,#_seldrum
   0C69 7E                 3996 	ld	a,(hl)
   0C6A FE 02              3997 	cp	a,#0x02
   0C6C CA 80 0C           3998 	jp	z,00103$
   0C6F                    3999 00123$:
                           4000 ;	genGoto
   0C6F C3 84 0C           4001 	jp	00104$
                           4002 ;	square.c 674
                           4003 ;	genLabel
   0C72                    4004 00101$:
                           4005 ;	genAssign
                           4006 ;	AOP_HL for _delayA
   0C72 21 1D 01           4007 	ld	hl,#_delayA
   0C75 4E                 4008 	ld	c,(hl)
                           4009 ;	square.c 675
                           4010 ;	genGoto
   0C76 C3 84 0C           4011 	jp	00104$
                           4012 ;	square.c 677
                           4013 ;	genLabel
   0C79                    4014 00102$:
                           4015 ;	genAssign
                           4016 ;	AOP_HL for _delayB
   0C79 21 1E 01           4017 	ld	hl,#_delayB
   0C7C 4E                 4018 	ld	c,(hl)
                           4019 ;	square.c 678
                           4020 ;	genGoto
   0C7D C3 84 0C           4021 	jp	00104$
                           4022 ;	square.c 680
                           4023 ;	genLabel
   0C80                    4024 00103$:
                           4025 ;	genAssign
                           4026 ;	AOP_HL for _delayC
   0C80 21 1F 01           4027 	ld	hl,#_delayC
   0C83 4E                 4028 	ld	c,(hl)
                           4029 ;	square.c 682
                           4030 ;	genLabel
   0C84                    4031 00104$:
                           4032 ;	square.c 683
                           4033 ;	genCmpEq
                           4034 ; genCmpEq: left 1, right 1, result 0
   0C84 79                 4035 	ld	a,c
   0C85 B7                 4036 	or	a,a
   0C86 CA 8A 0C           4037 	jp	z,00106$
   0C89                    4038 00124$:
                           4039 ;	square.c 685
                           4040 ;	genMinus
   0C89 0D                 4041 	dec	c
                           4042 ;	genLabel
   0C8A                    4043 00106$:
                           4044 ;	square.c 687
                           4045 ;	genIfx
   0C8A AF                 4046 	xor	a,a
   0C8B B0                 4047 	or	a,b
   0C8C C2 A4 0C           4048 	jp	nz,00107$
                           4049 ;	genCmpEq
                           4050 ;	AOP_HL for _seldrum
                           4051 ; genCmpEq: left 1, right 1, result 0
   0C8F 21 3C 01           4052 	ld	hl,#_seldrum
   0C92 7E                 4053 	ld	a,(hl)
   0C93 FE 01              4054 	cp	a,#0x01
   0C95 CA AB 0C           4055 	jp	z,00108$
   0C98                    4056 00125$:
                           4057 ;	genCmpEq
                           4058 ;	AOP_HL for _seldrum
                           4059 ; genCmpEq: left 1, right 1, result 0
   0C98 21 3C 01           4060 	ld	hl,#_seldrum
   0C9B 7E                 4061 	ld	a,(hl)
   0C9C FE 02              4062 	cp	a,#0x02
   0C9E CA B2 0C           4063 	jp	z,00109$
   0CA1                    4064 00126$:
                           4065 ;	genGoto
   0CA1 C3 B6 0C           4066 	jp	00110$
                           4067 ;	square.c 690
                           4068 ;	genLabel
   0CA4                    4069 00107$:
                           4070 ;	genAssign
                           4071 ;	AOP_HL for _delayA
   0CA4 21 1D 01           4072 	ld	hl,#_delayA
   0CA7 71                 4073 	ld	(hl),c
                           4074 ;	square.c 691
                           4075 ;	genGoto
   0CA8 C3 B6 0C           4076 	jp	00110$
                           4077 ;	square.c 693
                           4078 ;	genLabel
   0CAB                    4079 00108$:
                           4080 ;	genAssign
                           4081 ;	AOP_HL for _delayB
   0CAB 21 1E 01           4082 	ld	hl,#_delayB
   0CAE 71                 4083 	ld	(hl),c
                           4084 ;	square.c 694
                           4085 ;	genGoto
   0CAF C3 B6 0C           4086 	jp	00110$
                           4087 ;	square.c 696
                           4088 ;	genLabel
   0CB2                    4089 00109$:
                           4090 ;	genAssign
                           4091 ;	AOP_HL for _delayC
   0CB2 21 1F 01           4092 	ld	hl,#_delayC
   0CB5 71                 4093 	ld	(hl),c
                           4094 ;	square.c 698
                           4095 ;	genLabel
   0CB6                    4096 00110$:
                           4097 ;	square.c 699
                           4098 ;	genIpush
                           4099 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0CB6 C5                 4100 	push	bc
   0CB7 21 05 0A           4101 	ld	hl,#0x0A05
   0CBA E5                 4102 	push	hl
                           4103 ;	genCall
   0CBB CD 00 00           4104 	call	_set_sprite_tile
   0CBE E8 02              4105 	lda	sp,2(sp)
   0CC0 E1                 4106 	pop	hl
   0CC1 4D                 4107 	ld	c,l
                           4108 ;	square.c 700
                           4109 ;	genPlus
                           4110 ;	genPlusIncr
                           4111 ;	Can't optimise plus by inc, falling back to the normal way
   0CC2 79                 4112 	ld	a,c
   0CC3 C6 08              4113 	add	a,#0x08
   0CC5 4F                 4114 	ld	c,a
                           4115 ;	genIpush
                           4116 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CC6 3E 98              4117 	ld	a,#0x98
   0CC8 F5                 4118 	push	af
   0CC9 33                 4119 	inc	sp
                           4120 ;	genIpush
   0CCA 79                 4121 	ld	a,c
   0CCB F5                 4122 	push	af
   0CCC 33                 4123 	inc	sp
                           4124 ;	genIpush
   0CCD 3E 05              4125 	ld	a,#0x05
   0CCF F5                 4126 	push	af
   0CD0 33                 4127 	inc	sp
                           4128 ;	genCall
   0CD1 CD 00 00           4129 	call	_move_sprite
   0CD4 E8 03              4130 	lda	sp,3(sp)
                           4131 ;	square.c 701
                           4132 ;	genCall
                           4133 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CD6 CD 00 00           4134 	call	_wait_vbl_done
                           4135 ;	square.c 702
                           4136 ;	genCall
                           4137 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CD9 CD 50 06           4138 	call	_setupDrum
                           4139 ;	genLabel
   0CDC                    4140 00111$:
                           4141 ;	genEndFunction
                           4142 	
   0CDC C9                 4143 	ret
   0CDD                    4144 ___decreaseSwing_end:
                           4145 ;	square.c 705
                           4146 ;	genLabel
                           4147 ;	genFunction
                           4148 ;	---------------------------------
                           4149 ; Function tick
                           4150 ; ---------------------------------
   0CDD                    4151 ___tick_start:
   0CDD                    4152 _tick:
                           4153 	
                           4154 ;	square.c 708
                           4155 ;	genMinus
                           4156 ;	AOP_HL for _totalStepsA
   0CDD 21 24 01           4157 	ld	hl,#_totalStepsA
   0CE0 7E                 4158 	ld	a,(hl)
   0CE1 C6 FF              4159 	add	a,#0xFF
                           4160 ;	genCmpGt
                           4161 ;	AOP_HL for _clkA
   0CE3 4F                 4162 	ld	c,a
   0CE4 21 25 01           4163 	ld	hl,#_clkA
   0CE7 96                 4164 	sub	a,(hl)
   0CE8 D2 ED 0C           4165 	jp	nc,00102$
                           4166 ;	square.c 710
                           4167 ;	genAssign
                           4168 ;	AOP_HL for _clkA
   0CEB 36 00              4169 	ld	(hl),#0x00
                           4170 ;	genLabel
   0CED                    4171 00102$:
                           4172 ;	square.c 712
                           4173 ;	genMinus
                           4174 ;	AOP_HL for _totalStepsB
   0CED 21 27 01           4175 	ld	hl,#_totalStepsB
   0CF0 7E                 4176 	ld	a,(hl)
   0CF1 C6 FF              4177 	add	a,#0xFF
                           4178 ;	genCmpGt
                           4179 ;	AOP_HL for _clkB
   0CF3 4F                 4180 	ld	c,a
   0CF4 21 28 01           4181 	ld	hl,#_clkB
   0CF7 96                 4182 	sub	a,(hl)
   0CF8 D2 FD 0C           4183 	jp	nc,00104$
                           4184 ;	square.c 714
                           4185 ;	genAssign
                           4186 ;	AOP_HL for _clkB
   0CFB 36 00              4187 	ld	(hl),#0x00
                           4188 ;	genLabel
   0CFD                    4189 00104$:
                           4190 ;	square.c 716
                           4191 ;	genMinus
                           4192 ;	AOP_HL for _totalStepsC
   0CFD 21 2A 01           4193 	ld	hl,#_totalStepsC
   0D00 7E                 4194 	ld	a,(hl)
   0D01 C6 FF              4195 	add	a,#0xFF
                           4196 ;	genCmpGt
                           4197 ;	AOP_HL for _clkC
   0D03 4F                 4198 	ld	c,a
   0D04 21 2B 01           4199 	ld	hl,#_clkC
   0D07 96                 4200 	sub	a,(hl)
   0D08 D2 0D 0D           4201 	jp	nc,00106$
                           4202 ;	square.c 718
                           4203 ;	genAssign
                           4204 ;	AOP_HL for _clkC
   0D0B 36 00              4205 	ld	(hl),#0x00
                           4206 ;	genLabel
   0D0D                    4207 00106$:
                           4208 ;	square.c 721
                           4209 ;	genCmpEq
                           4210 ;	AOP_HL for _syncToDrum
                           4211 ; genCmpEq: left 1, right 1, result 0
   0D0D 21 21 01           4212 	ld	hl,#_syncToDrum
   0D10 7E                 4213 	ld	a,(hl)
   0D11 FE 01              4214 	cp	a,#0x01
   0D13 C2 77 0D           4215 	jp	nz,00114$
   0D16 18 03              4216 	jr	00144$
   0D18                    4217 00143$:
   0D18 C3 77 0D           4218 	jp	00114$
   0D1B                    4219 00144$:
                           4220 ;	square.c 723
                           4221 ;	genCmpEq
                           4222 ;	AOP_HL for _seldrum
                           4223 ; genCmpEq: left 1, right 1, result 0
   0D1B 21 3C 01           4224 	ld	hl,#_seldrum
   0D1E 7E                 4225 	ld	a,(hl)
   0D1F B7                 4226 	or	a,a
   0D20 CA 38 0D           4227 	jp	z,00107$
   0D23                    4228 00145$:
                           4229 ;	genCmpEq
                           4230 ;	AOP_HL for _seldrum
                           4231 ; genCmpEq: left 1, right 1, result 0
   0D23 21 3C 01           4232 	ld	hl,#_seldrum
   0D26 7E                 4233 	ld	a,(hl)
   0D27 FE 01              4234 	cp	a,#0x01
   0D29 CA 43 0D           4235 	jp	z,00108$
   0D2C                    4236 00146$:
                           4237 ;	genCmpEq
                           4238 ;	AOP_HL for _seldrum
                           4239 ; genCmpEq: left 1, right 1, result 0
   0D2C 21 3C 01           4240 	ld	hl,#_seldrum
   0D2F 7E                 4241 	ld	a,(hl)
   0D30 FE 02              4242 	cp	a,#0x02
   0D32 CA 4E 0D           4243 	jp	z,00109$
   0D35                    4244 00147$:
                           4245 ;	genGoto
   0D35 C3 56 0D           4246 	jp	00110$
                           4247 ;	square.c 726
                           4248 ;	genLabel
   0D38                    4249 00107$:
                           4250 ;	genAssign
                           4251 ;	AOP_HL for _clkA
                           4252 ;	AOP_HL for _clockToSync
   0D38 21 25 01           4253 	ld	hl,#_clkA
   0D3B 7E                 4254 	ld	a,(hl)
   0D3C 21 22 01           4255 	ld	hl,#_clockToSync
   0D3F 77                 4256 	ld	(hl),a
                           4257 ;	square.c 727
                           4258 ;	genGoto
   0D40 C3 56 0D           4259 	jp	00110$
                           4260 ;	square.c 729
                           4261 ;	genLabel
   0D43                    4262 00108$:
                           4263 ;	genAssign
                           4264 ;	AOP_HL for _clkB
                           4265 ;	AOP_HL for _clockToSync
   0D43 21 28 01           4266 	ld	hl,#_clkB
   0D46 7E                 4267 	ld	a,(hl)
   0D47 21 22 01           4268 	ld	hl,#_clockToSync
   0D4A 77                 4269 	ld	(hl),a
                           4270 ;	square.c 730
                           4271 ;	genGoto
   0D4B C3 56 0D           4272 	jp	00110$
                           4273 ;	square.c 732
                           4274 ;	genLabel
   0D4E                    4275 00109$:
                           4276 ;	genAssign
                           4277 ;	AOP_HL for _clkC
                           4278 ;	AOP_HL for _clockToSync
   0D4E 21 2B 01           4279 	ld	hl,#_clkC
   0D51 7E                 4280 	ld	a,(hl)
   0D52 21 22 01           4281 	ld	hl,#_clockToSync
   0D55 77                 4282 	ld	(hl),a
                           4283 ;	square.c 734
                           4284 ;	genLabel
   0D56                    4285 00110$:
                           4286 ;	square.c 736
                           4287 ;	genCmpEq
                           4288 ;	AOP_HL for _clockToSync
                           4289 ; genCmpEq: left 1, right 1, result 0
   0D56 21 22 01           4290 	ld	hl,#_clockToSync
   0D59 7E                 4291 	ld	a,(hl)
   0D5A B7                 4292 	or	a,a
   0D5B C2 77 0D           4293 	jp	nz,00114$
   0D5E 18 03              4294 	jr	00149$
   0D60                    4295 00148$:
   0D60 C3 77 0D           4296 	jp	00114$
   0D63                    4297 00149$:
                           4298 ;	square.c 738
                           4299 ;	genAssign
                           4300 ;	AOP_HL for _clkA
   0D63 21 25 01           4301 	ld	hl,#_clkA
   0D66 36 00              4302 	ld	(hl),#0x00
                           4303 ;	square.c 739
                           4304 ;	genAssign
                           4305 ;	AOP_HL for _clkB
   0D68 21 28 01           4306 	ld	hl,#_clkB
   0D6B 36 00              4307 	ld	(hl),#0x00
                           4308 ;	square.c 740
                           4309 ;	genAssign
                           4310 ;	AOP_HL for _clkC
   0D6D 21 2B 01           4311 	ld	hl,#_clkC
   0D70 36 00              4312 	ld	(hl),#0x00
                           4313 ;	square.c 741
                           4314 ;	genAssign
                           4315 ;	AOP_HL for _syncToDrum
   0D72 21 21 01           4316 	ld	hl,#_syncToDrum
   0D75 36 00              4317 	ld	(hl),#0x00
                           4318 ;	genLabel
   0D77                    4319 00114$:
                           4320 ;	square.c 746
                           4321 ;	genPlus
                           4322 ;	AOP_HL for _clkA
                           4323 ;	Can't optimise plus by inc, falling back to the normal way
   0D77 3E 70              4324 	ld	a,#<_drumA
   0D79 21 25 01           4325 	ld	hl,#_clkA
   0D7C 86                 4326 	add	a,(hl)
   0D7D 4F                 4327 	ld	c,a
   0D7E 3E 00              4328 	ld	a,#>_drumA
   0D80 CE 00              4329 	adc	a,#0x00
   0D82 47                 4330 	ld	b,a
                           4331 ;	genPointerGet
   0D83 0A                 4332 	ld	a,(bc)
                           4333 ;	genCmpEq
                           4334 ; genCmpEq: left 1, right 1, result 0
   0D84 4F                 4335 	ld	c,a
   0D85 FE 01              4336 	cp	a,#0x01
   0D87 C2 A6 0D           4337 	jp	nz,00118$
   0D8A 18 03              4338 	jr	00151$
   0D8C                    4339 00150$:
   0D8C C3 A6 0D           4340 	jp	00118$
   0D8F                    4341 00151$:
                           4342 ;	square.c 748
                           4343 ;	genCmpEq
                           4344 ;	AOP_HL for _xA
                           4345 ; genCmpEq: left 1, right 1, result 0
   0D8F 21 1A 01           4346 	ld	hl,#_xA
   0D92 7E                 4347 	ld	a,(hl)
   0D93 B7                 4348 	or	a,a
   0D94 CA A3 0D           4349 	jp	z,00116$
   0D97                    4350 00152$:
                           4351 ;	square.c 749
                           4352 ;	genCast
                           4353 ;	AOP_HL for _xA
   0D97 21 1A 01           4354 	ld	hl,#_xA
   0D9A 4E                 4355 	ld	c,(hl)
   0D9B 06 00              4356 	ld	b,#0x00
                           4357 ;	genIpush
                           4358 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D9D C5                 4359 	push	bc
                           4360 ;	genCall
   0D9E CD 00 00           4361 	call	_delay
   0DA1 E8 02              4362 	lda	sp,2(sp)
                           4363 ;	genLabel
   0DA3                    4364 00116$:
                           4365 ;	square.c 750
                           4366 ;	genCall
                           4367 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DA3 CD 44 00           4368 	call	_makeASound
                           4369 ;	genLabel
   0DA6                    4370 00118$:
                           4371 ;	square.c 752
                           4372 ;	genPlus
                           4373 ;	AOP_HL for _clkB
                           4374 ;	Can't optimise plus by inc, falling back to the normal way
   0DA6 3E 90              4375 	ld	a,#<_drumB
   0DA8 21 28 01           4376 	ld	hl,#_clkB
   0DAB 86                 4377 	add	a,(hl)
   0DAC 4F                 4378 	ld	c,a
   0DAD 3E 00              4379 	ld	a,#>_drumB
   0DAF CE 00              4380 	adc	a,#0x00
   0DB1 47                 4381 	ld	b,a
                           4382 ;	genPointerGet
   0DB2 0A                 4383 	ld	a,(bc)
                           4384 ;	genCmpEq
                           4385 ; genCmpEq: left 1, right 1, result 0
   0DB3 4F                 4386 	ld	c,a
   0DB4 FE 01              4387 	cp	a,#0x01
   0DB6 C2 D5 0D           4388 	jp	nz,00122$
   0DB9 18 03              4389 	jr	00154$
   0DBB                    4390 00153$:
   0DBB C3 D5 0D           4391 	jp	00122$
   0DBE                    4392 00154$:
                           4393 ;	square.c 754
                           4394 ;	genCmpEq
                           4395 ;	AOP_HL for _xB
                           4396 ; genCmpEq: left 1, right 1, result 0
   0DBE 21 1B 01           4397 	ld	hl,#_xB
   0DC1 7E                 4398 	ld	a,(hl)
   0DC2 B7                 4399 	or	a,a
   0DC3 CA D2 0D           4400 	jp	z,00120$
   0DC6                    4401 00155$:
                           4402 ;	square.c 755
                           4403 ;	genCast
                           4404 ;	AOP_HL for _xB
   0DC6 21 1B 01           4405 	ld	hl,#_xB
   0DC9 4E                 4406 	ld	c,(hl)
   0DCA 06 00              4407 	ld	b,#0x00
                           4408 ;	genIpush
                           4409 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DCC C5                 4410 	push	bc
                           4411 ;	genCall
   0DCD CD 00 00           4412 	call	_delay
   0DD0 E8 02              4413 	lda	sp,2(sp)
                           4414 ;	genLabel
   0DD2                    4415 00120$:
                           4416 ;	square.c 756
                           4417 ;	genCall
                           4418 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DD2 CD 7D 00           4419 	call	_makeBSound
                           4420 ;	genLabel
   0DD5                    4421 00122$:
                           4422 ;	square.c 758
                           4423 ;	genPlus
                           4424 ;	AOP_HL for _clkC
                           4425 ;	Can't optimise plus by inc, falling back to the normal way
   0DD5 3E B0              4426 	ld	a,#<_drumC
   0DD7 21 2B 01           4427 	ld	hl,#_clkC
   0DDA 86                 4428 	add	a,(hl)
   0DDB 4F                 4429 	ld	c,a
   0DDC 3E 00              4430 	ld	a,#>_drumC
   0DDE CE 00              4431 	adc	a,#0x00
   0DE0 47                 4432 	ld	b,a
                           4433 ;	genPointerGet
   0DE1 0A                 4434 	ld	a,(bc)
                           4435 ;	genCmpEq
                           4436 ; genCmpEq: left 1, right 1, result 0
   0DE2 4F                 4437 	ld	c,a
   0DE3 FE 01              4438 	cp	a,#0x01
   0DE5 C2 04 0E           4439 	jp	nz,00126$
   0DE8 18 03              4440 	jr	00157$
   0DEA                    4441 00156$:
   0DEA C3 04 0E           4442 	jp	00126$
   0DED                    4443 00157$:
                           4444 ;	square.c 760
                           4445 ;	genCmpEq
                           4446 ;	AOP_HL for _xC
                           4447 ; genCmpEq: left 1, right 1, result 0
   0DED 21 1C 01           4448 	ld	hl,#_xC
   0DF0 7E                 4449 	ld	a,(hl)
   0DF1 B7                 4450 	or	a,a
   0DF2 CA 01 0E           4451 	jp	z,00124$
   0DF5                    4452 00158$:
                           4453 ;	square.c 761
                           4454 ;	genCast
                           4455 ;	AOP_HL for _xC
   0DF5 21 1C 01           4456 	ld	hl,#_xC
   0DF8 4E                 4457 	ld	c,(hl)
   0DF9 06 00              4458 	ld	b,#0x00
                           4459 ;	genIpush
                           4460 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DFB C5                 4461 	push	bc
                           4462 ;	genCall
   0DFC CD 00 00           4463 	call	_delay
   0DFF E8 02              4464 	lda	sp,2(sp)
                           4465 ;	genLabel
   0E01                    4466 00124$:
                           4467 ;	square.c 762
                           4468 ;	genCall
                           4469 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E01 CD B0 00           4470 	call	_makeCSound
                           4471 ;	genLabel
   0E04                    4472 00126$:
                           4473 ;	square.c 765
                           4474 ;	genPlus
                           4475 ;	AOP_HL for _clkA
                           4476 ;	genPlusIncr
   0E04 21 25 01           4477 	ld	hl,#_clkA
   0E07 34                 4478 	inc	(hl)
                           4479 ;	square.c 766
                           4480 ;	genPlus
                           4481 ;	AOP_HL for _clkB
                           4482 ;	genPlusIncr
   0E08 21 28 01           4483 	ld	hl,#_clkB
   0E0B 34                 4484 	inc	(hl)
                           4485 ;	square.c 767
                           4486 ;	genPlus
                           4487 ;	AOP_HL for _clkC
                           4488 ;	genPlusIncr
   0E0C 21 2B 01           4489 	ld	hl,#_clkC
   0E0F 34                 4490 	inc	(hl)
                           4491 ;	genLabel
   0E10                    4492 00127$:
                           4493 ;	genEndFunction
                           4494 	
   0E10 C9                 4495 	ret
   0E11                    4496 ___tick_end:
                           4497 ;	square.c 772
                           4498 ;	genLabel
                           4499 ;	genFunction
                           4500 ;	---------------------------------
                           4501 ; Function sync
                           4502 ; ---------------------------------
   0E11                    4503 ___sync_start:
   0E11                    4504 _sync:
                           4505 	
                           4506 ;	square.c 774
                           4507 ;	genAssign
                           4508 ;	AOP_HL for _pop
                           4509 ;	AOP_HL for _bob
   0E11 21 37 01           4510 	ld	hl,#_pop
   0E14 7E                 4511 	ld	a,(hl)
   0E15 21 35 01           4512 	ld	hl,#_bob
   0E18 77                 4513 	ld	(hl),a
                           4514 ;	square.c 775
                           4515 ;	genAssign
   0E19 01 02 FF           4516 	ld	bc,#0xFF02
                           4517 ;	genAssign (pointer)
   0E1C 3E 80              4518 	ld	a,#0x80
   0E1E 02                 4519 	ld	(bc),a
                           4520 ;	square.c 776
                           4521 ;	genPointerGet
                           4522 ;	AOP_HL for _todd
   0E1F 11 01 FF           4523 	ld	de,#0xFF01
   0E22 1A                 4524 	ld	a,(de)
   0E23 21 36 01           4525 	ld	hl,#_todd
                           4526 ;	square.c 777
                           4527 ;	genCmpEq
                           4528 ;	AOP_HL for _todd
                           4529 ; genCmpEq: left 1, right 1, result 0
   0E26 77                 4530 	ld      (hl),a
                           4531 ; Removed redundent load
   0E27 B7                 4532 	or	a,a
   0E28 C2 38 0E           4533 	jp	nz,00102$
   0E2B 18 03              4534 	jr	00111$
   0E2D                    4535 00110$:
   0E2D C3 38 0E           4536 	jp	00102$
   0E30                    4537 00111$:
                           4538 ;	square.c 778
                           4539 ;	genAssign
                           4540 ;	AOP_HL for _pop
   0E30 21 37 01           4541 	ld	hl,#_pop
   0E33 36 00              4542 	ld	(hl),#0x00
                           4543 ;	genGoto
   0E35 C3 3D 0E           4544 	jp	00103$
                           4545 ;	genLabel
   0E38                    4546 00102$:
                           4547 ;	square.c 780
                           4548 ;	genAssign
                           4549 ;	AOP_HL for _pop
   0E38 21 37 01           4550 	ld	hl,#_pop
   0E3B 36 01              4551 	ld	(hl),#0x01
                           4552 ;	genLabel
   0E3D                    4553 00103$:
                           4554 ;	square.c 781
                           4555 ;	genCmpEq
                           4556 ;	AOP_HL for _bob
                           4557 ;	AOP_HL for _pop
                           4558 ; genCmpEq: left 1, right 1, result 0
   0E3D 21 37 01           4559 	ld	hl,#_pop
   0E40 7E                 4560 	ld	a,(hl)
   0E41 21 35 01           4561 	ld	hl,#_bob
   0E44 BE                 4562 	cp	(hl)
   0E45 20 03              4563 	jr	nz,00112$
   0E47 C3 4D 0E           4564 	jp	00106$
   0E4A                    4565 00112$:
                           4566 ;	square.c 783
                           4567 ;	genCall
                           4568 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E4A CD DD 0C           4569 	call	_tick
                           4570 ;	genLabel
   0E4D                    4571 00106$:
                           4572 ;	genEndFunction
                           4573 	
   0E4D C9                 4574 	ret
   0E4E                    4575 ___sync_end:
                           4576 ;	square.c 789
                           4577 ;	genLabel
                           4578 ;	genFunction
                           4579 ;	---------------------------------
                           4580 ; Function master
                           4581 ; ---------------------------------
   0E4E                    4582 ___master_start:
   0E4E                    4583 _master:
                           4584 	
                           4585 ;	square.c 791
                           4586 ;	genPlus
                           4587 ;	AOP_HL for _watch
                           4588 ;	genPlusIncr
   0E4E 21 34 01           4589 	ld	hl,#_watch
   0E51 34                 4590 	inc	(hl)
                           4591 ;	square.c 792
                           4592 ;	genCmpGt
                           4593 ;	AOP_HL for _watch
                           4594 ;	AOP_HL for _tempo
   0E52 21 33 01           4595 	ld	hl,#_tempo
   0E55 7E                 4596 	ld	a,(hl)
   0E56 21 34 01           4597 	ld	hl,#_watch
   0E59 96                 4598 	sub	a,(hl)
   0E5A D2 62 0E           4599 	jp	nc,00103$
                           4600 ;	square.c 794
                           4601 ;	genAssign
                           4602 ;	AOP_HL for _watch
   0E5D 36 00              4603 	ld	(hl),#0x00
                           4604 ;	square.c 795
                           4605 ;	genCall
                           4606 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E5F CD DD 0C           4607 	call	_tick
                           4608 ;	genLabel
   0E62                    4609 00103$:
                           4610 ;	genEndFunction
                           4611 	
   0E62 C9                 4612 	ret
   0E63                    4613 ___master_end:
                           4614 ;	square.c 799
                           4615 ;	genLabel
                           4616 ;	genFunction
                           4617 ;	---------------------------------
                           4618 ; Function player
                           4619 ; ---------------------------------
   0E63                    4620 ___player_start:
   0E63                    4621 _player:
                           4622 	
                           4623 ;	square.c 801
                           4624 ;	genCmpEq
                           4625 ;	AOP_HL for _modus
                           4626 ; genCmpEq: left 1, right 1, result 0
   0E63 21 38 01           4627 	ld	hl,#_modus
   0E66 7E                 4628 	ld	a,(hl)
   0E67 B7                 4629 	or	a,a
   0E68 C2 76 0E           4630 	jp	nz,00102$
   0E6B 18 03              4631 	jr	00108$
   0E6D                    4632 00107$:
   0E6D C3 76 0E           4633 	jp	00102$
   0E70                    4634 00108$:
                           4635 ;	square.c 803
                           4636 ;	genCall
                           4637 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E70 CD 4E 0E           4638 	call	_master
                           4639 ;	genGoto
   0E73 C3 79 0E           4640 	jp	00104$
                           4641 ;	genLabel
   0E76                    4642 00102$:
                           4643 ;	square.c 806
                           4644 ;	genCall
                           4645 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E76 CD 11 0E           4646 	call	_sync
                           4647 ;	genLabel
   0E79                    4648 00104$:
                           4649 ;	genEndFunction
                           4650 	
   0E79 C9                 4651 	ret
   0E7A                    4652 ___player_end:
                           4653 ;	square.c 810
                           4654 ;	genLabel
                           4655 ;	genFunction
                           4656 ;	---------------------------------
                           4657 ; Function tim
                           4658 ; ---------------------------------
   0E7A                    4659 ___tim_start:
   0E7A                    4660 _tim:
                           4661 	
                           4662 ;	square.c 812
                           4663 ;	genCall
                           4664 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E7A CD 63 0E           4665 	call	_player
                           4666 ;	genLabel
   0E7D                    4667 00101$:
                           4668 ;	genEndFunction
                           4669 	
   0E7D C9                 4670 	ret
   0E7E                    4671 ___tim_end:
                           4672 ;	square.c 816
                           4673 ;	genLabel
                           4674 ;	genFunction
                           4675 ;	---------------------------------
                           4676 ; Function main
                           4677 ; ---------------------------------
   0E7E                    4678 ___main_start:
   0E7E                    4679 _main:
   0E7E E8 FD              4680 	lda	sp,-3(sp)
                           4681 ;	square.c 818
                           4682 ;	genAssign
   0E80 01 24 FF           4683 	ld	bc,#0xFF24
                           4684 ;	genAssign (pointer)
   0E83 3E FF              4685 	ld	a,#0xFF
   0E85 02                 4686 	ld	(bc),a
                           4687 ;	square.c 819
                           4688 ;	genAssign
   0E86 01 25 FF           4689 	ld	bc,#0xFF25
                           4690 ;	genAssign (pointer)
   0E89 3E FF              4691 	ld	a,#0xFF
   0E8B 02                 4692 	ld	(bc),a
                           4693 ;	square.c 820
                           4694 ;	genAssign
   0E8C 01 26 FF           4695 	ld	bc,#0xFF26
                           4696 ;	genAssign (pointer)
   0E8F 3E 80              4697 	ld	a,#0x80
   0E91 02                 4698 	ld	(bc),a
                           4699 ;	square.c 821
                           4700 ;	genAssign
                           4701 ;	AOP_HL for _watch
   0E92 21 34 01           4702 	ld	hl,#_watch
   0E95 36 00              4703 	ld	(hl),#0x00
                           4704 ;	square.c 822
                           4705 ;	genAssign
                           4706 ;	AOP_HL for _clkA
   0E97 21 25 01           4707 	ld	hl,#_clkA
   0E9A 36 00              4708 	ld	(hl),#0x00
                           4709 ;	square.c 823
                           4710 ;	genAssign
                           4711 ;	AOP_HL for _pop
   0E9C 21 37 01           4712 	ld	hl,#_pop
   0E9F 36 00              4713 	ld	(hl),#0x00
                           4714 ;	square.c 824
                           4715 ;	genAssign
                           4716 ;	AOP_HL for _numberOfPulsesA
   0EA1 21 23 01           4717 	ld	hl,#_numberOfPulsesA
   0EA4 36 01              4718 	ld	(hl),#0x01
                           4719 ;	square.c 825
                           4720 ;	genAssign
                           4721 ;	AOP_HL for _totalStepsA
   0EA6 21 24 01           4722 	ld	hl,#_totalStepsA
   0EA9 36 10              4723 	ld	(hl),#0x10
                           4724 ;	square.c 826
                           4725 ;	genAssign
                           4726 ;	AOP_HL for _numberOfPulsesB
   0EAB 21 26 01           4727 	ld	hl,#_numberOfPulsesB
   0EAE 36 02              4728 	ld	(hl),#0x02
                           4729 ;	square.c 827
                           4730 ;	genAssign
                           4731 ;	AOP_HL for _totalStepsB
   0EB0 21 27 01           4732 	ld	hl,#_totalStepsB
   0EB3 36 10              4733 	ld	(hl),#0x10
                           4734 ;	square.c 828
                           4735 ;	genAssign
                           4736 ;	AOP_HL for _numberOfPulsesC
   0EB5 21 29 01           4737 	ld	hl,#_numberOfPulsesC
   0EB8 36 04              4738 	ld	(hl),#0x04
                           4739 ;	square.c 829
                           4740 ;	genAssign
                           4741 ;	AOP_HL for _totalStepsC
   0EBA 21 2A 01           4742 	ld	hl,#_totalStepsC
   0EBD 36 10              4743 	ld	(hl),#0x10
                           4744 ;	square.c 830
                           4745 ;	genAssign
                           4746 ;	AOP_HL for _offStepA
   0EBF 21 2C 01           4747 	ld	hl,#_offStepA
   0EC2 36 00              4748 	ld	(hl),#0x00
                           4749 ;	square.c 831
                           4750 ;	genAssign
                           4751 ;	AOP_HL for _offStepB
   0EC4 21 2D 01           4752 	ld	hl,#_offStepB
   0EC7 36 00              4753 	ld	(hl),#0x00
                           4754 ;	square.c 832
                           4755 ;	genAssign
                           4756 ;	AOP_HL for _offStepC
   0EC9 21 2E 01           4757 	ld	hl,#_offStepC
   0ECC 36 00              4758 	ld	(hl),#0x00
                           4759 ;	square.c 833
                           4760 ;	genAssign
                           4761 ;	AOP_HL for _randA
   0ECE 21 13 01           4762 	ld	hl,#_randA
   0ED1 36 00              4763 	ld	(hl),#0x00
                           4764 ;	square.c 834
                           4765 ;	genAssign
                           4766 ;	AOP_HL for _randB
   0ED3 21 14 01           4767 	ld	hl,#_randB
   0ED6 36 00              4768 	ld	(hl),#0x00
                           4769 ;	square.c 835
                           4770 ;	genAssign
                           4771 ;	AOP_HL for _randC
   0ED8 21 15 01           4772 	ld	hl,#_randC
   0EDB 36 00              4773 	ld	(hl),#0x00
                           4774 ;	square.c 836
                           4775 ;	genAssign
                           4776 ;	AOP_HL for _xA
   0EDD 21 1A 01           4777 	ld	hl,#_xA
   0EE0 36 00              4778 	ld	(hl),#0x00
                           4779 ;	square.c 837
                           4780 ;	genAssign
                           4781 ;	AOP_HL for _xB
   0EE2 21 1B 01           4782 	ld	hl,#_xB
   0EE5 36 00              4783 	ld	(hl),#0x00
                           4784 ;	square.c 838
                           4785 ;	genAssign
                           4786 ;	AOP_HL for _xC
   0EE7 21 1C 01           4787 	ld	hl,#_xC
   0EEA 36 00              4788 	ld	(hl),#0x00
                           4789 ;	square.c 839
                           4790 ;	genAssign
                           4791 ;	AOP_HL for _delayA
   0EEC 21 1D 01           4792 	ld	hl,#_delayA
   0EEF 36 01              4793 	ld	(hl),#0x01
                           4794 ;	square.c 840
                           4795 ;	genAssign
                           4796 ;	AOP_HL for _delayB
   0EF1 21 1E 01           4797 	ld	hl,#_delayB
   0EF4 36 01              4798 	ld	(hl),#0x01
                           4799 ;	square.c 841
                           4800 ;	genAssign
                           4801 ;	AOP_HL for _delayC
   0EF6 21 1F 01           4802 	ld	hl,#_delayC
   0EF9 36 01              4803 	ld	(hl),#0x01
                           4804 ;	square.c 842
                           4805 ;	genAssign
                           4806 ;	AOP_HL for _modus
   0EFB 21 38 01           4807 	ld	hl,#_modus
   0EFE 36 00              4808 	ld	(hl),#0x00
                           4809 ;	square.c 843
                           4810 ;	genAssign
                           4811 ;	AOP_HL for _samp_freq
   0F00 21 32 01           4812 	ld	hl,#_samp_freq
   0F03 36 A4              4813 	ld	(hl),#0xA4
                           4814 ;	square.c 844
                           4815 ;	genAssign
                           4816 ;	AOP_HL for _tempo
   0F05 21 33 01           4817 	ld	hl,#_tempo
   0F08 36 14              4818 	ld	(hl),#0x14
                           4819 ;	square.c 845
                           4820 ;	genAssign
                           4821 ;	AOP_HL for _seldrum
   0F0A 21 3C 01           4822 	ld	hl,#_seldrum
   0F0D 36 00              4823 	ld	(hl),#0x00
                           4824 ;	square.c 846
                           4825 ;	genAssign
                           4826 ;	AOP_HL for _syncToDrum
   0F0F 21 21 01           4827 	ld	hl,#_syncToDrum
   0F12 36 00              4828 	ld	(hl),#0x00
                           4829 ;	square.c 847
                           4830 ;	genCall
                           4831 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F14 CD E3 00           4832 	call	_fillDrumA
                           4833 ;	square.c 848
                           4834 ;	genCall
                           4835 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F17 CD B2 02           4836 	call	_fillDrumB
                           4837 ;	square.c 849
                           4838 ;	genCall
                           4839 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F1A CD 81 04           4840 	call	_fillDrumC
                           4841 ;	square.c 851
                           4842 ;	genAssign
   0F1D 01 40 FF           4843 	ld	bc,#0xFF40
                           4844 ;	genAssign
                           4845 ;	AOP_STK for _main_sloc0_1_0
   0F20 F8 01              4846 	lda	hl,1(sp)
   0F22 36 40              4847 	ld	(hl),#0x40
   0F24 23                 4848 	inc	hl
   0F25 36 FF              4849 	ld	(hl),#0xFF
                           4850 ;	genPointerGet
                           4851 ;	AOP_STK for _main_sloc0_1_0
                           4852 ;	AOP_STK for _main_sloc1_1_0
   0F27 2B                 4853 	dec	hl
   0F28 5E                 4854 	ld	e,(hl)
   0F29 23                 4855 	inc	hl
   0F2A 56                 4856 	ld	d,(hl)
   0F2B 1A                 4857 	ld	a,(de)
   0F2C 2B                 4858 	dec	hl
   0F2D 2B                 4859 	dec	hl
                           4860 ;	genAnd
                           4861 ;	AOP_STK for _main_sloc1_1_0
   0F2E 77                 4862 	ld      (hl),a
                           4863 ; Removed redundent load
   0F2F E6 FB              4864 	and	a,#0xFB
                           4865 ;	genAssign (pointer)
   0F31 02                 4866 	ld	(bc),a
                           4867 ;	square.c 852
                           4868 ;	genIpush
                           4869 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F32 21 00 00           4870 	ld	hl,#_squareA
   0F35 E5                 4871 	push	hl
                           4872 ;	genIpush
   0F36 21 00 02           4873 	ld	hl,#0x0200
   0F39 E5                 4874 	push	hl
                           4875 ;	genCall
   0F3A CD 00 00           4876 	call	_set_sprite_data
   0F3D E8 04              4877 	lda	sp,4(sp)
                           4878 ;	square.c 853
                           4879 ;	genIpush
                           4880 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F3F 21 00 00           4881 	ld	hl,#0x0000
   0F42 E5                 4882 	push	hl
                           4883 ;	genCall
   0F43 CD 00 00           4884 	call	_set_sprite_tile
   0F46 E8 02              4885 	lda	sp,2(sp)
                           4886 ;	square.c 854
                           4887 ;	genPlus
                           4888 ;	AOP_HL for _totalStepsA
                           4889 ;	Can't optimise plus by inc, falling back to the normal way
   0F48 3E D0              4890 	ld	a,#<_dXlut
   0F4A 21 24 01           4891 	ld	hl,#_totalStepsA
   0F4D 86                 4892 	add	a,(hl)
   0F4E 4F                 4893 	ld	c,a
   0F4F 3E 00              4894 	ld	a,#>_dXlut
   0F51 CE 00              4895 	adc	a,#0x00
   0F53 47                 4896 	ld	b,a
                           4897 ;	genPointerGet
   0F54 0A                 4898 	ld	a,(bc)
   0F55 4F                 4899 	ld	c,a
                           4900 ;	genPlus
                           4901 ;	AOP_HL for _numberOfPulsesA
                           4902 ;	AOP_STK for _main_sloc0_1_0
                           4903 ;	Can't optimise plus by inc, falling back to the normal way
   0F56 11 F0 00           4904 	ld	de,#_dYlut
   0F59 21 23 01           4905 	ld	hl,#_numberOfPulsesA
   0F5C 6E                 4906 	ld	l,(hl)
   0F5D 26 00              4907 	ld	h,#0x00
   0F5F 19                 4908 	add	hl,de
   0F60 7D                 4909 	ld	a,l
   0F61 54                 4910 	ld	d,h
   0F62 F8 01              4911 	lda	hl,1(sp)
                           4912 ;	genPointerGet
                           4913 ;	AOP_STK for _main_sloc0_1_0
   0F64 22                 4914 	ld	(hl+),a
   0F65 72                 4915 	ld	(hl),d
   0F66 5F                 4916 	ld	e,a
   0F67 1A                 4917 	ld	a,(de)
   0F68 47                 4918 	ld	b,a
                           4919 ;	genIpush
                           4920 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F69 79                 4921 	ld	a,c
   0F6A F5                 4922 	push	af
   0F6B 33                 4923 	inc	sp
                           4924 ;	genIpush
   0F6C 78                 4925 	ld	a,b
   0F6D F5                 4926 	push	af
   0F6E 33                 4927 	inc	sp
                           4928 ;	genIpush
   0F6F 3E 00              4929 	ld	a,#0x00
   0F71 F5                 4930 	push	af
   0F72 33                 4931 	inc	sp
                           4932 ;	genCall
   0F73 CD 00 00           4933 	call	_move_sprite
   0F76 E8 03              4934 	lda	sp,3(sp)
                           4935 ;	square.c 856
                           4936 ;	genIpush
                           4937 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F78 21 10 00           4938 	ld	hl,#_squareB
   0F7B E5                 4939 	push	hl
                           4940 ;	genIpush
   0F7C 21 02 04           4941 	ld	hl,#0x0402
   0F7F E5                 4942 	push	hl
                           4943 ;	genCall
   0F80 CD 00 00           4944 	call	_set_sprite_data
   0F83 E8 04              4945 	lda	sp,4(sp)
                           4946 ;	square.c 857
                           4947 ;	genIpush
                           4948 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F85 21 01 02           4949 	ld	hl,#0x0201
   0F88 E5                 4950 	push	hl
                           4951 ;	genCall
   0F89 CD 00 00           4952 	call	_set_sprite_tile
   0F8C E8 02              4953 	lda	sp,2(sp)
                           4954 ;	square.c 858
                           4955 ;	genPlus
                           4956 ;	AOP_HL for _totalStepsB
                           4957 ;	Can't optimise plus by inc, falling back to the normal way
   0F8E 3E D0              4958 	ld	a,#<_dXlut
   0F90 21 27 01           4959 	ld	hl,#_totalStepsB
   0F93 86                 4960 	add	a,(hl)
   0F94 4F                 4961 	ld	c,a
   0F95 3E 00              4962 	ld	a,#>_dXlut
   0F97 CE 00              4963 	adc	a,#0x00
   0F99 47                 4964 	ld	b,a
                           4965 ;	genPointerGet
   0F9A 0A                 4966 	ld	a,(bc)
   0F9B 4F                 4967 	ld	c,a
                           4968 ;	genPlus
                           4969 ;	AOP_HL for _numberOfPulsesB
                           4970 ;	AOP_STK for _main_sloc0_1_0
                           4971 ;	Can't optimise plus by inc, falling back to the normal way
   0F9C 11 F0 00           4972 	ld	de,#_dYlut
   0F9F 21 26 01           4973 	ld	hl,#_numberOfPulsesB
   0FA2 6E                 4974 	ld	l,(hl)
   0FA3 26 00              4975 	ld	h,#0x00
   0FA5 19                 4976 	add	hl,de
   0FA6 7D                 4977 	ld	a,l
   0FA7 54                 4978 	ld	d,h
   0FA8 F8 01              4979 	lda	hl,1(sp)
                           4980 ;	genPointerGet
                           4981 ;	AOP_STK for _main_sloc0_1_0
   0FAA 22                 4982 	ld	(hl+),a
   0FAB 72                 4983 	ld	(hl),d
   0FAC 5F                 4984 	ld	e,a
   0FAD 1A                 4985 	ld	a,(de)
   0FAE 47                 4986 	ld	b,a
                           4987 ;	genIpush
                           4988 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FAF 79                 4989 	ld	a,c
   0FB0 F5                 4990 	push	af
   0FB1 33                 4991 	inc	sp
                           4992 ;	genIpush
   0FB2 78                 4993 	ld	a,b
   0FB3 F5                 4994 	push	af
   0FB4 33                 4995 	inc	sp
                           4996 ;	genIpush
   0FB5 3E 01              4997 	ld	a,#0x01
   0FB7 F5                 4998 	push	af
   0FB8 33                 4999 	inc	sp
                           5000 ;	genCall
   0FB9 CD 00 00           5001 	call	_move_sprite
   0FBC E8 03              5002 	lda	sp,3(sp)
                           5003 ;	square.c 860
                           5004 ;	genIpush
                           5005 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FBE 21 20 00           5006 	ld	hl,#_squareC
   0FC1 E5                 5007 	push	hl
                           5008 ;	genIpush
   0FC2 21 04 06           5009 	ld	hl,#0x0604
   0FC5 E5                 5010 	push	hl
                           5011 ;	genCall
   0FC6 CD 00 00           5012 	call	_set_sprite_data
   0FC9 E8 04              5013 	lda	sp,4(sp)
                           5014 ;	square.c 861
                           5015 ;	genIpush
                           5016 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FCB 21 02 04           5017 	ld	hl,#0x0402
   0FCE E5                 5018 	push	hl
                           5019 ;	genCall
   0FCF CD 00 00           5020 	call	_set_sprite_tile
   0FD2 E8 02              5021 	lda	sp,2(sp)
                           5022 ;	square.c 862
                           5023 ;	genPlus
                           5024 ;	AOP_HL for _totalStepsC
                           5025 ;	Can't optimise plus by inc, falling back to the normal way
   0FD4 3E D0              5026 	ld	a,#<_dXlut
   0FD6 21 2A 01           5027 	ld	hl,#_totalStepsC
   0FD9 86                 5028 	add	a,(hl)
   0FDA 4F                 5029 	ld	c,a
   0FDB 3E 00              5030 	ld	a,#>_dXlut
   0FDD CE 00              5031 	adc	a,#0x00
   0FDF 47                 5032 	ld	b,a
                           5033 ;	genPointerGet
   0FE0 0A                 5034 	ld	a,(bc)
   0FE1 4F                 5035 	ld	c,a
                           5036 ;	genPlus
                           5037 ;	AOP_HL for _numberOfPulsesC
                           5038 ;	AOP_STK for _main_sloc0_1_0
                           5039 ;	Can't optimise plus by inc, falling back to the normal way
   0FE2 11 F0 00           5040 	ld	de,#_dYlut
   0FE5 21 29 01           5041 	ld	hl,#_numberOfPulsesC
   0FE8 6E                 5042 	ld	l,(hl)
   0FE9 26 00              5043 	ld	h,#0x00
   0FEB 19                 5044 	add	hl,de
   0FEC 7D                 5045 	ld	a,l
   0FED 54                 5046 	ld	d,h
   0FEE F8 01              5047 	lda	hl,1(sp)
                           5048 ;	genPointerGet
                           5049 ;	AOP_STK for _main_sloc0_1_0
   0FF0 22                 5050 	ld	(hl+),a
   0FF1 72                 5051 	ld	(hl),d
   0FF2 5F                 5052 	ld	e,a
   0FF3 1A                 5053 	ld	a,(de)
   0FF4 47                 5054 	ld	b,a
                           5055 ;	genIpush
                           5056 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FF5 79                 5057 	ld	a,c
   0FF6 F5                 5058 	push	af
   0FF7 33                 5059 	inc	sp
                           5060 ;	genIpush
   0FF8 78                 5061 	ld	a,b
   0FF9 F5                 5062 	push	af
   0FFA 33                 5063 	inc	sp
                           5064 ;	genIpush
   0FFB 3E 02              5065 	ld	a,#0x02
   0FFD F5                 5066 	push	af
   0FFE 33                 5067 	inc	sp
                           5068 ;	genCall
   0FFF CD 00 00           5069 	call	_move_sprite
   1002 E8 03              5070 	lda	sp,3(sp)
                           5071 ;	square.c 864
                           5072 ;	genIpush
                           5073 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1004 21 30 00           5074 	ld	hl,#_midiC
   1007 E5                 5075 	push	hl
                           5076 ;	genIpush
   1008 21 06 08           5077 	ld	hl,#0x0806
   100B E5                 5078 	push	hl
                           5079 ;	genCall
   100C CD 00 00           5080 	call	_set_sprite_data
   100F E8 04              5081 	lda	sp,4(sp)
                           5082 ;	square.c 865
                           5083 ;	genIpush
                           5084 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1011 21 03 06           5085 	ld	hl,#0x0603
   1014 E5                 5086 	push	hl
                           5087 ;	genCall
   1015 CD 00 00           5088 	call	_set_sprite_tile
   1018 E8 02              5089 	lda	sp,2(sp)
                           5090 ;	square.c 866
                           5091 ;	genIpush
                           5092 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   101A 21 00 00           5093 	ld	hl,#0x0000
   101D E5                 5094 	push	hl
                           5095 ;	genIpush
   101E 3E 03              5096 	ld	a,#0x03
   1020 F5                 5097 	push	af
   1021 33                 5098 	inc	sp
                           5099 ;	genCall
   1022 CD 00 00           5100 	call	_move_sprite
   1025 E8 03              5101 	lda	sp,3(sp)
                           5102 ;	square.c 868
                           5103 ;	genIpush
                           5104 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1027 21 40 00           5105 	ld	hl,#_offsetC
   102A E5                 5106 	push	hl
                           5107 ;	genIpush
   102B 21 08 0A           5108 	ld	hl,#0x0A08
   102E E5                 5109 	push	hl
                           5110 ;	genCall
   102F CD 00 00           5111 	call	_set_sprite_data
   1032 E8 04              5112 	lda	sp,4(sp)
                           5113 ;	square.c 869
                           5114 ;	genIpush
                           5115 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1034 21 04 08           5116 	ld	hl,#0x0804
   1037 E5                 5117 	push	hl
                           5118 ;	genCall
   1038 CD 00 00           5119 	call	_set_sprite_tile
   103B E8 02              5120 	lda	sp,2(sp)
                           5121 ;	square.c 870
                           5122 ;	genPlus
                           5123 ;	AOP_HL for _offStepA
                           5124 ;	Can't optimise plus by inc, falling back to the normal way
   103D 3E D0              5125 	ld	a,#<_dXlut
   103F 21 2C 01           5126 	ld	hl,#_offStepA
   1042 86                 5127 	add	a,(hl)
   1043 4F                 5128 	ld	c,a
   1044 3E 00              5129 	ld	a,#>_dXlut
   1046 CE 00              5130 	adc	a,#0x00
   1048 47                 5131 	ld	b,a
                           5132 ;	genPointerGet
   1049 0A                 5133 	ld	a,(bc)
                           5134 ;	genIpush
                           5135 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   104A 4F                 5136 	ld	c,a
   104B F5                 5137 	push	af
   104C 33                 5138 	inc	sp
                           5139 ;	genIpush
   104D 21 04 08           5140 	ld	hl,#0x0804
   1050 E5                 5141 	push	hl
                           5142 ;	genCall
   1051 CD 00 00           5143 	call	_move_sprite
   1054 E8 03              5144 	lda	sp,3(sp)
                           5145 ;	square.c 872
                           5146 ;	genIpush
                           5147 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1056 21 50 00           5148 	ld	hl,#_swingC
   1059 E5                 5149 	push	hl
                           5150 ;	genIpush
   105A 21 0A 0C           5151 	ld	hl,#0x0C0A
   105D E5                 5152 	push	hl
                           5153 ;	genCall
   105E CD 00 00           5154 	call	_set_sprite_data
   1061 E8 04              5155 	lda	sp,4(sp)
                           5156 ;	square.c 873
                           5157 ;	genIpush
                           5158 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1063 21 05 0A           5159 	ld	hl,#0x0A05
   1066 E5                 5160 	push	hl
                           5161 ;	genCall
   1067 CD 00 00           5162 	call	_set_sprite_tile
   106A E8 02              5163 	lda	sp,2(sp)
                           5164 ;	square.c 874
                           5165 ;	genPlus
                           5166 ;	AOP_HL for _delayA
                           5167 ;	genPlusIncr
                           5168 ;	Can't optimise plus by inc, falling back to the normal way
   106C 21 1D 01           5169 	ld	hl,#_delayA
   106F 7E                 5170 	ld	a,(hl)
   1070 C6 08              5171 	add	a,#0x08
   1072 4F                 5172 	ld	c,a
                           5173 ;	genIpush
                           5174 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1073 3E 98              5175 	ld	a,#0x98
   1075 F5                 5176 	push	af
   1076 33                 5177 	inc	sp
                           5178 ;	genIpush
   1077 79                 5179 	ld	a,c
   1078 F5                 5180 	push	af
   1079 33                 5181 	inc	sp
                           5182 ;	genIpush
   107A 3E 05              5183 	ld	a,#0x05
   107C F5                 5184 	push	af
   107D 33                 5185 	inc	sp
                           5186 ;	genCall
   107E CD 00 00           5187 	call	_move_sprite
   1081 E8 03              5188 	lda	sp,3(sp)
                           5189 ;	square.c 877
                           5190 ;	genIpush
                           5191 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1083 21 60 00           5192 	ld	hl,#_saveC
   1086 E5                 5193 	push	hl
                           5194 ;	genIpush
   1087 21 0C 0E           5195 	ld	hl,#0x0E0C
   108A E5                 5196 	push	hl
                           5197 ;	genCall
   108B CD 00 00           5198 	call	_set_sprite_data
   108E E8 04              5199 	lda	sp,4(sp)
                           5200 ;	square.c 878
                           5201 ;	genIpush
                           5202 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1090 21 06 0C           5203 	ld	hl,#0x0C06
   1093 E5                 5204 	push	hl
                           5205 ;	genCall
   1094 CD 00 00           5206 	call	_set_sprite_tile
   1097 E8 02              5207 	lda	sp,2(sp)
                           5208 ;	square.c 879
                           5209 ;	genIpush
                           5210 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1099 21 A0 90           5211 	ld	hl,#0x90A0
   109C E5                 5212 	push	hl
                           5213 ;	genIpush
   109D 3E 06              5214 	ld	a,#0x06
   109F F5                 5215 	push	af
   10A0 33                 5216 	inc	sp
                           5217 ;	genCall
   10A1 CD 00 00           5218 	call	_move_sprite
   10A4 E8 03              5219 	lda	sp,3(sp)
                           5220 ;	square.c 881
                           5221 ;	genIpush
                           5222 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10A6 21 07 00           5223 	ld	hl,#0x0007
   10A9 E5                 5224 	push	hl
                           5225 ;	genCall
   10AA CD 00 00           5226 	call	_set_sprite_tile
   10AD E8 02              5227 	lda	sp,2(sp)
                           5228 ;	square.c 882
                           5229 ;	genIpush
                           5230 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10AF 21 08 10           5231 	ld	hl,#0x1008
   10B2 E5                 5232 	push	hl
                           5233 ;	genIpush
   10B3 3E 07              5234 	ld	a,#0x07
   10B5 F5                 5235 	push	af
   10B6 33                 5236 	inc	sp
                           5237 ;	genCall
   10B7 CD 00 00           5238 	call	_move_sprite
   10BA E8 03              5239 	lda	sp,3(sp)
                           5240 ;	square.c 884
                           5241 ;	genCall
                           5242 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10BC CD 00 00           5243 	call	_disable_interrupts
                           5244 ;	square.c 885
                           5245 ;	genIpush
                           5246 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10BF 21 7A 0E           5247 	ld	hl,#_tim
   10C2 E5                 5248 	push	hl
                           5249 ;	genCall
   10C3 CD 00 00           5250 	call	_add_TIM
   10C6 E8 02              5251 	lda	sp,2(sp)
                           5252 ;	square.c 886
                           5253 ;	genCall
                           5254 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10C8 CD 00 00           5255 	call	_enable_interrupts
                           5256 ;	square.c 887
                           5257 ;	genAssign
   10CB 01 06 FF           5258 	ld	bc,#0xFF06
                           5259 ;	genAssign (pointer)
                           5260 ;	AOP_HL for _samp_freq
   10CE 21 32 01           5261 	ld	hl,#_samp_freq
   10D1 7E                 5262 	ld	a,(hl)
   10D2 02                 5263 	ld	(bc),a
                           5264 ;	square.c 892
                           5265 ;	genAssign
   10D3 01 07 FF           5266 	ld	bc,#0xFF07
                           5267 ;	genAssign (pointer)
   10D6 3E 07              5268 	ld	a,#0x07
   10D8 02                 5269 	ld	(bc),a
                           5270 ;	square.c 894
                           5271 ;	genIpush
                           5272 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10D9 3E 05              5273 	ld	a,#0x05
   10DB F5                 5274 	push	af
   10DC 33                 5275 	inc	sp
                           5276 ;	genCall
   10DD CD 00 00           5277 	call	_set_interrupts
   10E0 E8 01              5278 	lda	sp,1(sp)
                           5279 ;	square.c 896
                           5280 ;	genAssign
   10E2 01 40 FF           5281 	ld	bc,#0xFF40
                           5282 ;	genAssign
                           5283 ;	AOP_STK for _main_sloc0_1_0
   10E5 F8 01              5284 	lda	hl,1(sp)
   10E7 36 40              5285 	ld	(hl),#0x40
   10E9 23                 5286 	inc	hl
   10EA 36 FF              5287 	ld	(hl),#0xFF
                           5288 ;	genPointerGet
                           5289 ;	AOP_STK for _main_sloc0_1_0
                           5290 ;	AOP_STK for _main_sloc1_1_0
   10EC 2B                 5291 	dec	hl
   10ED 5E                 5292 	ld	e,(hl)
   10EE 23                 5293 	inc	hl
   10EF 56                 5294 	ld	d,(hl)
   10F0 1A                 5295 	ld	a,(de)
   10F1 2B                 5296 	dec	hl
   10F2 2B                 5297 	dec	hl
                           5298 ;	genOr
                           5299 ;	AOP_STK for _main_sloc1_1_0
   10F3 77                 5300 	ld      (hl),a
                           5301 ; Removed redundent load
   10F4 F6 80              5302 	or	a,#0x80
                           5303 ;	genAssign (pointer)
   10F6 02                 5304 	ld	(bc),a
                           5305 ;	square.c 897
                           5306 ;	genAssign
   10F7 01 40 FF           5307 	ld	bc,#0xFF40
                           5308 ;	genAssign
                           5309 ;	AOP_STK for _main_sloc0_1_0
   10FA 23                 5310 	inc	hl
   10FB 36 40              5311 	ld	(hl),#0x40
   10FD 23                 5312 	inc	hl
   10FE 36 FF              5313 	ld	(hl),#0xFF
                           5314 ;	genPointerGet
                           5315 ;	AOP_STK for _main_sloc0_1_0
                           5316 ;	AOP_STK for _main_sloc1_1_0
   1100 2B                 5317 	dec	hl
   1101 5E                 5318 	ld	e,(hl)
   1102 23                 5319 	inc	hl
   1103 56                 5320 	ld	d,(hl)
   1104 1A                 5321 	ld	a,(de)
   1105 2B                 5322 	dec	hl
   1106 2B                 5323 	dec	hl
                           5324 ;	genOr
                           5325 ;	AOP_STK for _main_sloc1_1_0
   1107 77                 5326 	ld      (hl),a
                           5327 ; Removed redundent load
   1108 F6 02              5328 	or	a,#0x02
                           5329 ;	genAssign (pointer)
   110A 02                 5330 	ld	(bc),a
                           5331 ;	square.c 901
                           5332 ;	genLabel
   110B                    5333 00148$:
                           5334 ;	square.c 903
                           5335 ;	genCall
                           5336 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   110B CD 00 00           5337 	call	_joypad
   110E 4B                 5338 	ld	c,e
                           5339 ;	genCmpEq
                           5340 ; genCmpEq: left 1, right 1, result 0
   110F 79                 5341 	ld	a,c
   1110 B7                 5342 	or	a,a
   1111 CA 1B 11           5343 	jp	z,00102$
   1114                    5344 00176$:
                           5345 ;	square.c 904
                           5346 ;	genPlus
                           5347 ;	AOP_HL for _pad
                           5348 ;	genPlusIncr
   1114 21 3B 01           5349 	ld	hl,#_pad
   1117 34                 5350 	inc	(hl)
                           5351 ;	genGoto
   1118 C3 20 11           5352 	jp	00103$
                           5353 ;	genLabel
   111B                    5354 00102$:
                           5355 ;	square.c 907
                           5356 ;	genAssign
                           5357 ;	AOP_HL for _pad
   111B 21 3B 01           5358 	ld	hl,#_pad
   111E 36 00              5359 	ld	(hl),#0x00
                           5360 ;	genLabel
   1120                    5361 00103$:
                           5362 ;	square.c 910
                           5363 ;	genCall
                           5364 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1120 CD 00 00           5365 	call	_joypad
   1123 4B                 5366 	ld	c,e
                           5367 ;	genCmpEq
                           5368 ;	AOP_HL for _joy
                           5369 ; genCmpEq: left 1, right 1, result 0
   1124 21 3A 01           5370 	ld	hl,#_joy
   1127 7E                 5371 	ld	a,(hl)
   1128 B9                 5372 	cp	c
   1129 20 02              5373 	jr	nz,00177$
   112B 18 03              5374 	jr	00178$
   112D                    5375 00177$:
   112D C3 39 11           5376 	jp	00104$
   1130                    5377 00178$:
                           5378 ;	genCmpGt
                           5379 ;	AOP_HL for _pad
   1130 3E 0A              5380 	ld	a,#0x0A
   1132 21 3B 01           5381 	ld	hl,#_pad
   1135 96                 5382 	sub	a,(hl)
   1136 D2 43 11           5383 	jp	nc,00105$
                           5384 ;	genLabel
   1139                    5385 00104$:
                           5386 ;	square.c 911
                           5387 ;	genCall
                           5388 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1139 CD 00 00           5389 	call	_joypad
                           5390 ;	AOP_HL for _padext
   113C 21 39 01           5391 	ld	hl,#_padext
   113F 73                 5392 	ld	(hl),e
                           5393 ;	genGoto
   1140 C3 48 11           5394 	jp	00106$
                           5395 ;	genLabel
   1143                    5396 00105$:
                           5397 ;	square.c 914
                           5398 ;	genAssign
                           5399 ;	AOP_HL for _padext
   1143 21 39 01           5400 	ld	hl,#_padext
   1146 36 00              5401 	ld	(hl),#0x00
                           5402 ;	genLabel
   1148                    5403 00106$:
                           5404 ;	square.c 918
                           5405 ;	genCall
                           5406 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1148 CD 00 00           5407 	call	_joypad
   114B 4B                 5408 	ld	c,e
                           5409 ;	genCmpEq
                           5410 ;	AOP_HL for _joy
                           5411 ; genCmpEq: left 1, right 1, result 0
   114C 21 3A 01           5412 	ld	hl,#_joy
   114F 7E                 5413 	ld	a,(hl)
   1150 B9                 5414 	cp	c
   1151 20 03              5415 	jr	nz,00179$
   1153 C3 5B 11           5416 	jp	00109$
   1156                    5417 00179$:
                           5418 ;	square.c 920
                           5419 ;	genAssign
                           5420 ;	AOP_HL for _pad
   1156 21 3B 01           5421 	ld	hl,#_pad
   1159 36 00              5422 	ld	(hl),#0x00
                           5423 ;	genLabel
   115B                    5424 00109$:
                           5425 ;	square.c 923
                           5426 ;	genCall
                           5427 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   115B CD 00 00           5428 	call	_joypad
                           5429 ;	AOP_HL for _joy
   115E 21 3A 01           5430 	ld	hl,#_joy
   1161 73                 5431 	ld	(hl),e
                           5432 ;	square.c 926
                           5433 ;	genCall
                           5434 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1162 CD 00 00           5435 	call	_joypad
   1165 4B                 5436 	ld	c,e
                           5437 ;	genCmpEq
                           5438 ; genCmpEq: left 1, right 1, result 0
   1166 79                 5439 	ld	a,c
   1167 FE 40              5440 	cp	a,#0x40
   1169 C2 4D 12           5441 	jp	nz,00117$
   116C 18 03              5442 	jr	00181$
   116E                    5443 00180$:
   116E C3 4D 12           5444 	jp	00117$
   1171                    5445 00181$:
                           5446 ;	square.c 928
                           5447 ;	genPlus
                           5448 ;	AOP_HL for _seldrum
                           5449 ;	genPlusIncr
   1171 21 3C 01           5450 	ld	hl,#_seldrum
   1174 34                 5451 	inc	(hl)
                           5452 ;	square.c 929
                           5453 ;	genCmpEq
                           5454 ;	AOP_HL for _seldrum
                           5455 ; genCmpEq: left 1, right 1, result 0
   1175 7E                 5456 	ld	a,(hl)
   1176 FE 03              5457 	cp	a,#0x03
   1178 C2 85 11           5458 	jp	nz,00111$
   117B 18 03              5459 	jr	00183$
   117D                    5460 00182$:
   117D C3 85 11           5461 	jp	00111$
   1180                    5462 00183$:
                           5463 ;	square.c 931
                           5464 ;	genAssign
                           5465 ;	AOP_HL for _seldrum
   1180 21 3C 01           5466 	ld	hl,#_seldrum
   1183 36 00              5467 	ld	(hl),#0x00
                           5468 ;	genLabel
   1185                    5469 00111$:
                           5470 ;	square.c 933
                           5471 ;	genCall
                           5472 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1185 CD 00 00           5473 	call	_waitpadup
                           5474 ;	square.c 934
                           5475 ;	genAssign
                           5476 ;	AOP_HL for _cDelay
   1188 21 2F 01           5477 	ld	hl,#_cDelay
   118B 36 00              5478 	ld	(hl),#0x00
                           5479 ;	square.c 935
                           5480 ;	genAssign
                           5481 ;	AOP_HL for _cOffStep
   118D 21 30 01           5482 	ld	hl,#_cOffStep
   1190 36 00              5483 	ld	(hl),#0x00
                           5484 ;	square.c 936
                           5485 ;	genCmpEq
                           5486 ;	AOP_HL for _seldrum
                           5487 ; genCmpEq: left 1, right 1, result 0
   1192 21 3C 01           5488 	ld	hl,#_seldrum
   1195 7E                 5489 	ld	a,(hl)
   1196 B7                 5490 	or	a,a
   1197 CA AF 11           5491 	jp	z,00112$
   119A                    5492 00184$:
                           5493 ;	genCmpEq
                           5494 ;	AOP_HL for _seldrum
                           5495 ; genCmpEq: left 1, right 1, result 0
   119A 21 3C 01           5496 	ld	hl,#_seldrum
   119D 7E                 5497 	ld	a,(hl)
   119E FE 01              5498 	cp	a,#0x01
   11A0 CA C2 11           5499 	jp	z,00113$
   11A3                    5500 00185$:
                           5501 ;	genCmpEq
                           5502 ;	AOP_HL for _seldrum
                           5503 ; genCmpEq: left 1, right 1, result 0
   11A3 21 3C 01           5504 	ld	hl,#_seldrum
   11A6 7E                 5505 	ld	a,(hl)
   11A7 FE 02              5506 	cp	a,#0x02
   11A9 CA D5 11           5507 	jp	z,00114$
   11AC                    5508 00186$:
                           5509 ;	genGoto
   11AC C3 E5 11           5510 	jp	00115$
                           5511 ;	square.c 939
                           5512 ;	genLabel
   11AF                    5513 00112$:
                           5514 ;	genAssign
                           5515 ;	AOP_HL for _delayA
                           5516 ;	AOP_HL for _cDelay
   11AF 21 1D 01           5517 	ld	hl,#_delayA
   11B2 7E                 5518 	ld	a,(hl)
   11B3 21 2F 01           5519 	ld	hl,#_cDelay
   11B6 77                 5520 	ld	(hl),a
                           5521 ;	square.c 940
                           5522 ;	genAssign
                           5523 ;	AOP_HL for _offStepA
                           5524 ;	AOP_HL for _cOffStep
   11B7 21 2C 01           5525 	ld	hl,#_offStepA
   11BA 7E                 5526 	ld	a,(hl)
   11BB 21 30 01           5527 	ld	hl,#_cOffStep
   11BE 77                 5528 	ld	(hl),a
                           5529 ;	square.c 941
                           5530 ;	genGoto
   11BF C3 E5 11           5531 	jp	00115$
                           5532 ;	square.c 943
                           5533 ;	genLabel
   11C2                    5534 00113$:
                           5535 ;	genAssign
                           5536 ;	AOP_HL for _delayB
                           5537 ;	AOP_HL for _cDelay
   11C2 21 1E 01           5538 	ld	hl,#_delayB
   11C5 7E                 5539 	ld	a,(hl)
   11C6 21 2F 01           5540 	ld	hl,#_cDelay
   11C9 77                 5541 	ld	(hl),a
                           5542 ;	square.c 944
                           5543 ;	genAssign
                           5544 ;	AOP_HL for _offStepB
                           5545 ;	AOP_HL for _cOffStep
   11CA 21 2D 01           5546 	ld	hl,#_offStepB
   11CD 7E                 5547 	ld	a,(hl)
   11CE 21 30 01           5548 	ld	hl,#_cOffStep
   11D1 77                 5549 	ld	(hl),a
                           5550 ;	square.c 945
                           5551 ;	genGoto
   11D2 C3 E5 11           5552 	jp	00115$
                           5553 ;	square.c 947
                           5554 ;	genLabel
   11D5                    5555 00114$:
                           5556 ;	genAssign
                           5557 ;	AOP_HL for _delayC
                           5558 ;	AOP_HL for _cDelay
   11D5 21 1F 01           5559 	ld	hl,#_delayC
   11D8 7E                 5560 	ld	a,(hl)
   11D9 21 2F 01           5561 	ld	hl,#_cDelay
   11DC 77                 5562 	ld	(hl),a
                           5563 ;	square.c 948
                           5564 ;	genAssign
                           5565 ;	AOP_HL for _offStepC
                           5566 ;	AOP_HL for _cOffStep
   11DD 21 2E 01           5567 	ld	hl,#_offStepC
   11E0 7E                 5568 	ld	a,(hl)
   11E1 21 30 01           5569 	ld	hl,#_cOffStep
   11E4 77                 5570 	ld	(hl),a
                           5571 ;	square.c 950
                           5572 ;	genLabel
   11E5                    5573 00115$:
                           5574 ;	square.c 951
                           5575 ;	genCast
                           5576 ;	AOP_HL for _seldrum
   11E5 21 3C 01           5577 	ld	hl,#_seldrum
   11E8 4E                 5578 	ld	c,(hl)
   11E9 06 00              5579 	ld	b,#0x00
                           5580 ;	genLeftShift
   11EB CB 21              5581 	sla	c
   11ED CB 10              5582 	rl	b
                           5583 ;	genCast
                           5584 ; Removed redundent load
                           5585 ;	genIpush
                           5586 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11EF 79                 5587 	ld	a,c
   11F0 F5                 5588 	push	af
   11F1 33                 5589 	inc	sp
                           5590 ;	genIpush
   11F2 3E 07              5591 	ld	a,#0x07
   11F4 F5                 5592 	push	af
   11F5 33                 5593 	inc	sp
                           5594 ;	genCall
   11F6 CD 00 00           5595 	call	_set_sprite_tile
   11F9 E8 02              5596 	lda	sp,2(sp)
                           5597 ;	square.c 952
                           5598 ;	genIpush
                           5599 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11FB 21 08 10           5600 	ld	hl,#0x1008
   11FE E5                 5601 	push	hl
                           5602 ;	genIpush
   11FF 3E 07              5603 	ld	a,#0x07
   1201 F5                 5604 	push	af
   1202 33                 5605 	inc	sp
                           5606 ;	genCall
   1203 CD 00 00           5607 	call	_move_sprite
   1206 E8 03              5608 	lda	sp,3(sp)
                           5609 ;	square.c 953
                           5610 ;	genIpush
                           5611 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1208 21 05 0A           5612 	ld	hl,#0x0A05
   120B E5                 5613 	push	hl
                           5614 ;	genCall
   120C CD 00 00           5615 	call	_set_sprite_tile
   120F E8 02              5616 	lda	sp,2(sp)
                           5617 ;	square.c 954
                           5618 ;	genPlus
                           5619 ;	AOP_HL for _cDelay
                           5620 ;	genPlusIncr
                           5621 ;	Can't optimise plus by inc, falling back to the normal way
   1211 21 2F 01           5622 	ld	hl,#_cDelay
   1214 7E                 5623 	ld	a,(hl)
   1215 C6 08              5624 	add	a,#0x08
   1217 4F                 5625 	ld	c,a
                           5626 ;	genIpush
                           5627 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1218 3E 98              5628 	ld	a,#0x98
   121A F5                 5629 	push	af
   121B 33                 5630 	inc	sp
                           5631 ;	genIpush
   121C 79                 5632 	ld	a,c
   121D F5                 5633 	push	af
   121E 33                 5634 	inc	sp
                           5635 ;	genIpush
   121F 3E 05              5636 	ld	a,#0x05
   1221 F5                 5637 	push	af
   1222 33                 5638 	inc	sp
                           5639 ;	genCall
   1223 CD 00 00           5640 	call	_move_sprite
   1226 E8 03              5641 	lda	sp,3(sp)
                           5642 ;	square.c 955
                           5643 ;	genIpush
                           5644 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1228 21 04 08           5645 	ld	hl,#0x0804
   122B E5                 5646 	push	hl
                           5647 ;	genCall
   122C CD 00 00           5648 	call	_set_sprite_tile
   122F E8 02              5649 	lda	sp,2(sp)
                           5650 ;	square.c 956
                           5651 ;	genPlus
                           5652 ;	AOP_HL for _cOffStep
                           5653 ;	Can't optimise plus by inc, falling back to the normal way
   1231 3E D0              5654 	ld	a,#<_dXlut
   1233 21 30 01           5655 	ld	hl,#_cOffStep
   1236 86                 5656 	add	a,(hl)
   1237 4F                 5657 	ld	c,a
   1238 3E 00              5658 	ld	a,#>_dXlut
   123A CE 00              5659 	adc	a,#0x00
   123C 47                 5660 	ld	b,a
                           5661 ;	genPointerGet
   123D 0A                 5662 	ld	a,(bc)
                           5663 ;	genIpush
                           5664 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   123E 4F                 5665 	ld	c,a
   123F F5                 5666 	push	af
   1240 33                 5667 	inc	sp
                           5668 ;	genIpush
   1241 21 04 08           5669 	ld	hl,#0x0804
   1244 E5                 5670 	push	hl
                           5671 ;	genCall
   1245 CD 00 00           5672 	call	_move_sprite
   1248 E8 03              5673 	lda	sp,3(sp)
                           5674 ;	square.c 957
                           5675 ;	genCall
                           5676 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   124A CD 00 00           5677 	call	_wait_vbl_done
                           5678 ;	genLabel
   124D                    5679 00117$:
                           5680 ;	square.c 962
                           5681 ;	genCall
                           5682 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   124D CD 00 00           5683 	call	_joypad
   1250 4B                 5684 	ld	c,e
                           5685 ;	genCmpEq
                           5686 ; genCmpEq: left 1, right 1, result 0
   1251 79                 5687 	ld	a,c
   1252 FE 80              5688 	cp	a,#0x80
   1254 C2 C6 12           5689 	jp	nz,00122$
   1257 18 03              5690 	jr	00190$
   1259                    5691 00189$:
   1259 C3 C6 12           5692 	jp	00122$
   125C                    5693 00190$:
                           5694 ;	square.c 964
                           5695 ;	genCmpEq
                           5696 ;	AOP_HL for _modus
                           5697 ; genCmpEq: left 1, right 1, result 0
   125C 21 38 01           5698 	ld	hl,#_modus
   125F 7E                 5699 	ld	a,(hl)
   1260 B7                 5700 	or	a,a
   1261 C2 96 12           5701 	jp	nz,00119$
   1264 18 03              5702 	jr	00192$
   1266                    5703 00191$:
   1266 C3 96 12           5704 	jp	00119$
   1269                    5705 00192$:
                           5706 ;	square.c 966
                           5707 ;	genAssign
                           5708 ;	AOP_HL for _clkA
   1269 21 25 01           5709 	ld	hl,#_clkA
   126C 36 00              5710 	ld	(hl),#0x00
                           5711 ;	square.c 967
                           5712 ;	genAssign
                           5713 ;	AOP_HL for _clkB
   126E 21 28 01           5714 	ld	hl,#_clkB
   1271 36 00              5715 	ld	(hl),#0x00
                           5716 ;	square.c 968
                           5717 ;	genAssign
                           5718 ;	AOP_HL for _clkC
   1273 21 2B 01           5719 	ld	hl,#_clkC
   1276 36 00              5720 	ld	(hl),#0x00
                           5721 ;	square.c 969
                           5722 ;	genAssign
                           5723 ;	AOP_HL for _modus
   1278 21 38 01           5724 	ld	hl,#_modus
   127B 36 01              5725 	ld	(hl),#0x01
                           5726 ;	square.c 970
                           5727 ;	genIpush
                           5728 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   127D 21 03 06           5729 	ld	hl,#0x0603
   1280 E5                 5730 	push	hl
                           5731 ;	genCall
   1281 CD 00 00           5732 	call	_set_sprite_tile
   1284 E8 02              5733 	lda	sp,2(sp)
                           5734 ;	square.c 971
                           5735 ;	genIpush
                           5736 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1286 21 A0 10           5737 	ld	hl,#0x10A0
   1289 E5                 5738 	push	hl
                           5739 ;	genIpush
   128A 3E 03              5740 	ld	a,#0x03
   128C F5                 5741 	push	af
   128D 33                 5742 	inc	sp
                           5743 ;	genCall
   128E CD 00 00           5744 	call	_move_sprite
   1291 E8 03              5745 	lda	sp,3(sp)
                           5746 ;	genGoto
   1293 C3 C0 12           5747 	jp	00120$
                           5748 ;	genLabel
   1296                    5749 00119$:
                           5750 ;	square.c 975
                           5751 ;	genAssign
                           5752 ;	AOP_HL for _clkA
   1296 21 25 01           5753 	ld	hl,#_clkA
   1299 36 00              5754 	ld	(hl),#0x00
                           5755 ;	square.c 976
                           5756 ;	genAssign
                           5757 ;	AOP_HL for _clkB
   129B 21 28 01           5758 	ld	hl,#_clkB
   129E 36 00              5759 	ld	(hl),#0x00
                           5760 ;	square.c 977
                           5761 ;	genAssign
                           5762 ;	AOP_HL for _clkC
   12A0 21 2B 01           5763 	ld	hl,#_clkC
   12A3 36 00              5764 	ld	(hl),#0x00
                           5765 ;	square.c 978
                           5766 ;	genAssign
                           5767 ;	AOP_HL for _modus
   12A5 21 38 01           5768 	ld	hl,#_modus
   12A8 36 00              5769 	ld	(hl),#0x00
                           5770 ;	square.c 979
                           5771 ;	genIpush
                           5772 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12AA 21 03 06           5773 	ld	hl,#0x0603
   12AD E5                 5774 	push	hl
                           5775 ;	genCall
   12AE CD 00 00           5776 	call	_set_sprite_tile
   12B1 E8 02              5777 	lda	sp,2(sp)
                           5778 ;	square.c 980
                           5779 ;	genIpush
                           5780 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12B3 21 00 00           5781 	ld	hl,#0x0000
   12B6 E5                 5782 	push	hl
                           5783 ;	genIpush
   12B7 3E 03              5784 	ld	a,#0x03
   12B9 F5                 5785 	push	af
   12BA 33                 5786 	inc	sp
                           5787 ;	genCall
   12BB CD 00 00           5788 	call	_move_sprite
   12BE E8 03              5789 	lda	sp,3(sp)
                           5790 ;	genLabel
   12C0                    5791 00120$:
                           5792 ;	square.c 984
                           5793 ;	genCall
                           5794 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12C0 CD 00 00           5795 	call	_wait_vbl_done
                           5796 ;	square.c 985
                           5797 ;	genCall
                           5798 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12C3 CD 00 00           5799 	call	_waitpadup
                           5800 ;	genLabel
   12C6                    5801 00122$:
                           5802 ;	square.c 988
                           5803 ;	genCall
                           5804 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12C6 CD 00 00           5805 	call	_joypad
   12C9 4B                 5806 	ld	c,e
                           5807 ;	genCmpEq
                           5808 ; genCmpEq: left 1, right 1, result 0
   12CA 79                 5809 	ld	a,c
   12CB FE 08              5810 	cp	a,#0x08
   12CD C2 E5 12           5811 	jp	nz,00124$
   12D0 18 03              5812 	jr	00194$
   12D2                    5813 00193$:
   12D2 C3 E5 12           5814 	jp	00124$
   12D5                    5815 00194$:
                           5816 ;	genCmpEq
                           5817 ;	AOP_HL for _tempo
                           5818 ; genCmpEq: left 1, right 1, result 0
   12D5 21 33 01           5819 	ld	hl,#_tempo
   12D8 7E                 5820 	ld	a,(hl)
   12D9 FE 01              5821 	cp	a,#0x01
   12DB CA E5 12           5822 	jp	z,00124$
   12DE                    5823 00195$:
                           5824 ;	square.c 990
                           5825 ;	genMinus
                           5826 ;	AOP_HL for _tempo
   12DE 21 33 01           5827 	ld	hl,#_tempo
   12E1 35                 5828 	dec	(hl)
                           5829 ;	square.c 992
                           5830 ;	genCall
                           5831 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12E2 CD 00 00           5832 	call	_waitpadup
                           5833 ;	genLabel
   12E5                    5834 00124$:
                           5835 ;	square.c 997
                           5836 ;	genCall
                           5837 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12E5 CD 00 00           5838 	call	_joypad
   12E8 4B                 5839 	ld	c,e
                           5840 ;	genCmpEq
                           5841 ; genCmpEq: left 1, right 1, result 0
   12E9 79                 5842 	ld	a,c
   12EA FE 04              5843 	cp	a,#0x04
   12EC C2 04 13           5844 	jp	nz,00127$
   12EF 18 03              5845 	jr	00197$
   12F1                    5846 00196$:
   12F1 C3 04 13           5847 	jp	00127$
   12F4                    5848 00197$:
                           5849 ;	genCmpEq
                           5850 ;	AOP_HL for _tempo
                           5851 ; genCmpEq: left 1, right 1, result 0
   12F4 21 33 01           5852 	ld	hl,#_tempo
   12F7 7E                 5853 	ld	a,(hl)
   12F8 FE 28              5854 	cp	a,#0x28
   12FA CA 04 13           5855 	jp	z,00127$
   12FD                    5856 00198$:
                           5857 ;	square.c 999
                           5858 ;	genPlus
                           5859 ;	AOP_HL for _tempo
                           5860 ;	genPlusIncr
   12FD 21 33 01           5861 	ld	hl,#_tempo
   1300 34                 5862 	inc	(hl)
                           5863 ;	square.c 1001
                           5864 ;	genCall
                           5865 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1301 CD 00 00           5866 	call	_waitpadup
                           5867 ;	genLabel
   1304                    5868 00127$:
                           5869 ;	square.c 1005
                           5870 ;	genCmpEq
                           5871 ;	AOP_HL for _padext
                           5872 ; genCmpEq: left 1, right 1, result 0
   1304 21 39 01           5873 	ld	hl,#_padext
   1307 7E                 5874 	ld	a,(hl)
   1308 FE 21              5875 	cp	a,#0x21
   130A C2 1E 13           5876 	jp	nz,00130$
   130D 18 03              5877 	jr	00200$
   130F                    5878 00199$:
   130F C3 1E 13           5879 	jp	00130$
   1312                    5880 00200$:
                           5881 ;	square.c 1007
                           5882 ;	genCall
                           5883 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1312 CD DC 07           5884 	call	_increaseSteps
                           5885 ;	square.c 1008
                           5886 ;	genIpush
                           5887 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1315 3E 05              5888 	ld	a,#0x05
   1317 F5                 5889 	push	af
   1318 33                 5890 	inc	sp
                           5891 ;	genCall
   1319 CD 00 00           5892 	call	_performantdelay
   131C E8 01              5893 	lda	sp,1(sp)
                           5894 ;	genLabel
   131E                    5895 00130$:
                           5896 ;	square.c 1011
                           5897 ;	genCmpEq
                           5898 ;	AOP_HL for _padext
                           5899 ; genCmpEq: left 1, right 1, result 0
   131E 21 39 01           5900 	ld	hl,#_padext
   1321 7E                 5901 	ld	a,(hl)
   1322 FE 22              5902 	cp	a,#0x22
   1324 C2 38 13           5903 	jp	nz,00132$
   1327 18 03              5904 	jr	00202$
   1329                    5905 00201$:
   1329 C3 38 13           5906 	jp	00132$
   132C                    5907 00202$:
                           5908 ;	square.c 1013
                           5909 ;	genCall
                           5910 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   132C CD C5 08           5911 	call	_decreaseSteps
                           5912 ;	square.c 1014
                           5913 ;	genIpush
                           5914 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   132F 3E 05              5915 	ld	a,#0x05
   1331 F5                 5916 	push	af
   1332 33                 5917 	inc	sp
                           5918 ;	genCall
   1333 CD 00 00           5919 	call	_performantdelay
   1336 E8 01              5920 	lda	sp,1(sp)
                           5921 ;	genLabel
   1338                    5922 00132$:
                           5923 ;	square.c 1017
                           5924 ;	genCmpEq
                           5925 ;	AOP_HL for _padext
                           5926 ; genCmpEq: left 1, right 1, result 0
   1338 21 39 01           5927 	ld	hl,#_padext
   133B 7E                 5928 	ld	a,(hl)
   133C FE 24              5929 	cp	a,#0x24
   133E C2 52 13           5930 	jp	nz,00134$
   1341 18 03              5931 	jr	00204$
   1343                    5932 00203$:
   1343 C3 52 13           5933 	jp	00134$
   1346                    5934 00204$:
                           5935 ;	square.c 1019
                           5936 ;	genCall
                           5937 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1346 CD AE 09           5938 	call	_increasePulses
                           5939 ;	square.c 1020
                           5940 ;	genIpush
                           5941 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1349 3E 05              5942 	ld	a,#0x05
   134B F5                 5943 	push	af
   134C 33                 5944 	inc	sp
                           5945 ;	genCall
   134D CD 00 00           5946 	call	_performantdelay
   1350 E8 01              5947 	lda	sp,1(sp)
                           5948 ;	genLabel
   1352                    5949 00134$:
                           5950 ;	square.c 1023
                           5951 ;	genCmpEq
                           5952 ;	AOP_HL for _padext
                           5953 ; genCmpEq: left 1, right 1, result 0
   1352 21 39 01           5954 	ld	hl,#_padext
   1355 7E                 5955 	ld	a,(hl)
   1356 FE 28              5956 	cp	a,#0x28
   1358 C2 6C 13           5957 	jp	nz,00136$
   135B 18 03              5958 	jr	00206$
   135D                    5959 00205$:
   135D C3 6C 13           5960 	jp	00136$
   1360                    5961 00206$:
                           5962 ;	square.c 1025
                           5963 ;	genCall
                           5964 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1360 CD B3 0A           5965 	call	_decreasePulses
                           5966 ;	square.c 1026
                           5967 ;	genIpush
                           5968 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1363 3E 05              5969 	ld	a,#0x05
   1365 F5                 5970 	push	af
   1366 33                 5971 	inc	sp
                           5972 ;	genCall
   1367 CD 00 00           5973 	call	_performantdelay
   136A E8 01              5974 	lda	sp,1(sp)
                           5975 ;	genLabel
   136C                    5976 00136$:
                           5977 ;	square.c 1029
                           5978 ;	genCmpEq
                           5979 ;	AOP_HL for _padext
                           5980 ; genCmpEq: left 1, right 1, result 0
   136C 21 39 01           5981 	ld	hl,#_padext
   136F 7E                 5982 	ld	a,(hl)
   1370 FE 14              5983 	cp	a,#0x14
   1372 C2 86 13           5984 	jp	nz,00138$
   1375 18 03              5985 	jr	00208$
   1377                    5986 00207$:
   1377 C3 86 13           5987 	jp	00138$
   137A                    5988 00208$:
                           5989 ;	square.c 1031
                           5990 ;	genCall
                           5991 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   137A CD 89 06           5992 	call	_increaseOffStep
                           5993 ;	square.c 1032
                           5994 ;	genIpush
                           5995 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   137D 3E 05              5996 	ld	a,#0x05
   137F F5                 5997 	push	af
   1380 33                 5998 	inc	sp
                           5999 ;	genCall
   1381 CD 00 00           6000 	call	_performantdelay
   1384 E8 01              6001 	lda	sp,1(sp)
                           6002 ;	genLabel
   1386                    6003 00138$:
                           6004 ;	square.c 1035
                           6005 ;	genCmpEq
                           6006 ;	AOP_HL for _padext
                           6007 ; genCmpEq: left 1, right 1, result 0
   1386 21 39 01           6008 	ld	hl,#_padext
   1389 7E                 6009 	ld	a,(hl)
   138A FE 18              6010 	cp	a,#0x18
   138C C2 A0 13           6011 	jp	nz,00140$
   138F 18 03              6012 	jr	00210$
   1391                    6013 00209$:
   1391 C3 A0 13           6014 	jp	00140$
   1394                    6015 00210$:
                           6016 ;	square.c 1037
                           6017 ;	genCall
                           6018 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1394 CD 45 07           6019 	call	_decreaseOffStep
                           6020 ;	square.c 1038
                           6021 ;	genIpush
                           6022 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1397 3E 05              6023 	ld	a,#0x05
   1399 F5                 6024 	push	af
   139A 33                 6025 	inc	sp
                           6026 ;	genCall
   139B CD 00 00           6027 	call	_performantdelay
   139E E8 01              6028 	lda	sp,1(sp)
                           6029 ;	genLabel
   13A0                    6030 00140$:
                           6031 ;	square.c 1041
                           6032 ;	genCmpEq
                           6033 ;	AOP_HL for _padext
                           6034 ; genCmpEq: left 1, right 1, result 0
   13A0 21 39 01           6035 	ld	hl,#_padext
   13A3 7E                 6036 	ld	a,(hl)
   13A4 FE 11              6037 	cp	a,#0x11
   13A6 C2 BA 13           6038 	jp	nz,00142$
   13A9 18 03              6039 	jr	00212$
   13AB                    6040 00211$:
   13AB C3 BA 13           6041 	jp	00142$
   13AE                    6042 00212$:
                           6043 ;	square.c 1043
                           6044 ;	genCall
                           6045 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13AE CD B8 0B           6046 	call	_increaseSwing
                           6047 ;	square.c 1044
                           6048 ;	genIpush
                           6049 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13B1 3E 05              6050 	ld	a,#0x05
   13B3 F5                 6051 	push	af
   13B4 33                 6052 	inc	sp
                           6053 ;	genCall
   13B5 CD 00 00           6054 	call	_performantdelay
   13B8 E8 01              6055 	lda	sp,1(sp)
                           6056 ;	genLabel
   13BA                    6057 00142$:
                           6058 ;	square.c 1047
                           6059 ;	genCmpEq
                           6060 ;	AOP_HL for _padext
                           6061 ; genCmpEq: left 1, right 1, result 0
   13BA 21 39 01           6062 	ld	hl,#_padext
   13BD 7E                 6063 	ld	a,(hl)
   13BE FE 12              6064 	cp	a,#0x12
   13C0 C2 D4 13           6065 	jp	nz,00144$
   13C3 18 03              6066 	jr	00214$
   13C5                    6067 00213$:
   13C5 C3 D4 13           6068 	jp	00144$
   13C8                    6069 00214$:
                           6070 ;	square.c 1049
                           6071 ;	genCall
                           6072 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13C8 CD 48 0C           6073 	call	_decreaseSwing
                           6074 ;	square.c 1050
                           6075 ;	genIpush
                           6076 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13CB 3E 05              6077 	ld	a,#0x05
   13CD F5                 6078 	push	af
   13CE 33                 6079 	inc	sp
                           6080 ;	genCall
   13CF CD 00 00           6081 	call	_performantdelay
   13D2 E8 01              6082 	lda	sp,1(sp)
                           6083 ;	genLabel
   13D4                    6084 00144$:
                           6085 ;	square.c 1053
                           6086 ;	genCmpEq
                           6087 ;	AOP_HL for _padext
                           6088 ; genCmpEq: left 1, right 1, result 0
   13D4 21 39 01           6089 	ld	hl,#_padext
   13D7 7E                 6090 	ld	a,(hl)
   13D8 FE 30              6091 	cp	a,#0x30
   13DA C2 0B 11           6092 	jp	nz,00148$
   13DD 18 03              6093 	jr	00216$
   13DF                    6094 00215$:
   13DF C3 0B 11           6095 	jp	00148$
   13E2                    6096 00216$:
                           6097 ;	square.c 1055
                           6098 ;	genAssign
                           6099 ;	AOP_HL for _syncToDrum
   13E2 21 21 01           6100 	ld	hl,#_syncToDrum
   13E5 36 01              6101 	ld	(hl),#0x01
                           6102 ;	square.c 1057
                           6103 ;	genCall
                           6104 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13E7 CD 00 00           6105 	call	_waitpadup
                           6106 ;	genGoto
   13EA C3 0B 11           6107 	jp	00148$
                           6108 ;	genLabel
   13ED                    6109 00150$:
                           6110 ;	genEndFunction
   13ED E8 03              6111 	lda	sp,3(sp)
   13EF C9                 6112 	ret
   13F0                    6113 ___main_end:
                           6114 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 ___decreaseOffStep_end             07DC R
  0 ___decreaseOffStep_start           0745 R
  0 ___decreasePulses_end              0BB8 R
  0 ___decreasePulses_start            0AB3 R
  0 ___decreaseSteps_end               09AE R
  0 ___decreaseSteps_start             08C5 R
  0 ___decreaseSwing_end               0CDD R
  0 ___decreaseSwing_start             0C48 R
  0 ___fillDrumA_end                   02B2 R
  0 ___fillDrumA_start                 00E3 R
  0 ___fillDrumB_end                   0481 R
  0 ___fillDrumB_start                 02B2 R
  0 ___fillDrumC_end                   0650 R
  0 ___fillDrumC_start                 0481 R
  0 ___increaseOffStep_end             0745 R
  0 ___increaseOffStep_start           0689 R
  0 ___increasePulses_end              0AB3 R
  0 ___increasePulses_start            09AE R
  0 ___increaseSteps_end               08C5 R
  0 ___increaseSteps_start             07DC R
  0 ___increaseSwing_end               0C48 R
  0 ___increaseSwing_start             0BB8 R
  0 ___main_end                        13F0 R
  0 ___main_start                      0E7E R
  0 ___makeASound_end                  007D R
  0 ___makeASound_start                0044 R
  0 ___makeBSound_end                  00B0 R
  0 ___makeBSound_start                007D R
  0 ___makeCSound_end                  00E3 R
  0 ___makeCSound_start                00B0 R
  0 ___master_end                      0E63 R
  0 ___master_start                    0E4E R
  0 ___performantdelay_end             0014 R
  0 ___performantdelay_start           0000 R
  0 ___player_end                      0E7A R
  0 ___player_start                    0E63 R
  0 ___rand_end                        0044 R
  0 ___rand_start                      0014 R
  0 ___setupDrum_end                   0689 R
  0 ___setupDrum_start                 0650 R
  0 ___sync_end                        0E4E R
  0 ___sync_start                      0E11 R
  0 ___tick_end                        0E11 R
  0 ___tick_start                      0CDD R
  0 ___tim_end                         0E7E R
  0 ___tim_start                       0E7A R
    __initrleblock                     **** GX
    __moduchar_rrx_s                   **** GX
    __muluint_rrx_s                    **** GX
    _add_TIM                           **** GX
  1 _bob                               0135 GR
  1 _bucket                            0110 GR
  1 _cDelay                            012F GR
  1 _cOffStep                          0130 GR
  1 _clkA                              0125 GR
  1 _clkB                              0128 GR
  1 _clkC                              012B GR
    _clock                             **** GX
  1 _clockToSync                       0122 GR
  1 _current_rand                      0131 R
  1 _dXlut                             00D0 GR
  1 _dYlut                             00F0 GR
  0 _decreaseOffStep                   0745 GR
  0 _decreasePulses                    0AB3 GR
  0 _decreaseSteps                     08C5 GR
  0 _decreaseSwing                     0C48 GR
    _delay                             **** GX
  1 _delayA                            011D GR
  1 _delayB                            011E GR
  1 _delayC                            011F GR
    _disable_interrupts                **** GX
  1 _drumA                             0070 GR
  1 _drumB                             0090 GR
  1 _drumC                             00B0 GR
    _enable_interrupts                 **** GX
  1 _f                                 0118 GR
  0 _fillDrumA                         00E3 GR
  0 _fillDrumB                         02B2 GR
  0 _fillDrumC                         0481 GR
  1 _first                             0116 GR
  1 _g                                 0120 GR
  1 _i                                 0111 GR
  0 _increaseOffStep                   0689 GR
  0 _increasePulses                    09AE GR
  0 _increaseSteps                     07DC GR
  0 _increaseSwing                     0BB8 GR
  1 _joy                               013A GR
    _joypad                            **** GX
  1 _last                              0117 GR
  0 _main                              0E7E GR
  0 _makeASound                        0044 GR
  0 _makeBSound                        007D GR
  0 _makeCSound                        00B0 GR
  0 _master                            0E4E GR
  1 _midiC                             0030 GR
  1 _modus                             0138 GR
    _move_sprite                       **** GX
  1 _numberOfPulsesA                   0123 GR
  1 _numberOfPulsesB                   0126 GR
  1 _numberOfPulsesC                   0129 GR
  1 _offStepA                          012C GR
  1 _offStepB                          012D GR
  1 _offStepC                          012E GR
  1 _offsetC                           0040 GR
  1 _pad                               013B GR
  1 _padext                            0139 GR
  0 _performantdelay                   0000 GR
  0 _player                            0E63 GR
  1 _pop                               0137 GR
  0 _rand                              0014 GR
  1 _randA                             0113 GR
  1 _randB                             0114 GR
  1 _randC                             0115 GR
  1 _samp_freq                         0132 GR
  1 _saveC                             0060 GR
  1 _seldrum                           013C GR
    _set_interrupts                    **** GX
    _set_sprite_data                   **** GX
    _set_sprite_tile                   **** GX
  0 _setupDrum                         0650 GR
  1 _squareA                           0000 GR
  1 _squareB                           0010 GR
  1 _squareC                           0020 GR
  1 _swingC                            0050 GR
  0 _sync                              0E11 GR
  1 _syncToDrum                        0121 GR
  1 _tempo                             0133 GR
  0 _tick                              0CDD GR
  0 _tim                               0E7A GR
  1 _todd                              0136 GR
  1 _totalStepsA                       0124 GR
  1 _totalStepsB                       0127 GR
  1 _totalStepsC                       012A GR
    _wait_vbl_done                     **** GX
    _waitpadup                         **** GX
  1 _watch                             0134 GR
  1 _x                                 0119 GR
  1 _xA                                011A GR
  1 _xB                                011B GR
  1 _xC                                011C GR
  1 _y                                 0112 GR

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size 13F0   flags 0
   1 _DATA                              size  13D   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size   FC   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
