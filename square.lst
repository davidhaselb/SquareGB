                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Mon Mar 30 21:39:44 2020
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc679540
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _savePattern
                             13 	.globl _loadPattern
                             14 	.globl _tim
                             15 	.globl _player
                             16 	.globl _master
                             17 	.globl _sync
                             18 	.globl _tick
                             19 	.globl _decreaseSwing
                             20 	.globl _increaseSwing
                             21 	.globl _decreasePulses
                             22 	.globl _increasePulses
                             23 	.globl _decreaseSteps
                             24 	.globl _increaseSteps
                             25 	.globl _decreaseOffStep
                             26 	.globl _increaseOffStep
                             27 	.globl _setupDrum
                             28 	.globl _fillDrumC
                             29 	.globl _fillDrumB
                             30 	.globl _fillDrumA
                             31 	.globl _makeCSound
                             32 	.globl _makeBSound
                             33 	.globl _makeASound
                             34 	.globl _rand
                             35 	.globl _performantdelay
                             36 	.globl _seldrum
                             37 	.globl _pad
                             38 	.globl _joy
                             39 	.globl _padext
                             40 	.globl _modus
                             41 	.globl _pop
                             42 	.globl _todd
                             43 	.globl _bob
                             44 	.globl _watch
                             45 	.globl _tempo
                             46 	.globl _samp_freq
                             47 	.globl _currentSaveSlot
                             48 	.globl _cOffStep
                             49 	.globl _cDelay
                             50 	.globl _offStepC
                             51 	.globl _offStepB
                             52 	.globl _offStepA
                             53 	.globl _clkC
                             54 	.globl _totalStepsC
                             55 	.globl _numberOfPulsesC
                             56 	.globl _clkB
                             57 	.globl _totalStepsB
                             58 	.globl _numberOfPulsesB
                             59 	.globl _clkA
                             60 	.globl _totalStepsA
                             61 	.globl _numberOfPulsesA
                             62 	.globl _clockToSync
                             63 	.globl _syncToDrum
                             64 	.globl _g
                             65 	.globl _delayC
                             66 	.globl _delayB
                             67 	.globl _delayA
                             68 	.globl _xC
                             69 	.globl _xB
                             70 	.globl _xA
                             71 	.globl _x
                             72 	.globl _f
                             73 	.globl _last
                             74 	.globl _first
                             75 	.globl _randC
                             76 	.globl _randB
                             77 	.globl _randA
                             78 	.globl _y
                             79 	.globl _i
                             80 	.globl _bucket
                             81 	.globl _savelut
                             82 	.globl _dYlut
                             83 	.globl _dXlut
                             84 	.globl _patternD
                             85 	.globl _patternC
                             86 	.globl _patternB
                             87 	.globl _patternA
                             88 	.globl _drumC
                             89 	.globl _drumB
                             90 	.globl _drumA
                             91 	.globl _saveC
                             92 	.globl _swingC
                             93 	.globl _offsetC
                             94 	.globl _midiC
                             95 	.globl _squareC
                             96 	.globl _squareB
                             97 	.globl _squareA
                             98 ;--------------------------------------------------------
                             99 ; special function registers
                            100 ;--------------------------------------------------------
                            101 ;--------------------------------------------------------
                            102 ; special function bits 
                            103 ;--------------------------------------------------------
                            104 ;--------------------------------------------------------
                            105 ; internal ram data
                            106 ;--------------------------------------------------------
                            107 	.area _DATA
   0000                     108 _squareA::
   0000                     109 	.ds 16
   0010                     110 _squareB::
   0010                     111 	.ds 16
   0020                     112 _squareC::
   0020                     113 	.ds 16
   0030                     114 _midiC::
   0030                     115 	.ds 16
   0040                     116 _offsetC::
   0040                     117 	.ds 16
   0050                     118 _swingC::
   0050                     119 	.ds 16
   0060                     120 _saveC::
   0060                     121 	.ds 16
   0070                     122 _drumA::
   0070                     123 	.ds 32
   0090                     124 _drumB::
   0090                     125 	.ds 32
   00B0                     126 _drumC::
   00B0                     127 	.ds 32
   00D0                     128 _patternA::
   00D0                     129 	.ds 18
   00E2                     130 _patternB::
   00E2                     131 	.ds 18
   00F4                     132 _patternC::
   00F4                     133 	.ds 18
   0106                     134 _patternD::
   0106                     135 	.ds 18
   0118                     136 _dXlut::
   0118                     137 	.ds 32
   0138                     138 _dYlut::
   0138                     139 	.ds 32
   0158                     140 _savelut::
   0158                     141 	.ds 4
   015C                     142 _bucket::
   015C                     143 	.ds 1
   015D                     144 _i::
   015D                     145 	.ds 1
   015E                     146 _y::
   015E                     147 	.ds 1
   015F                     148 _randA::
   015F                     149 	.ds 1
   0160                     150 _randB::
   0160                     151 	.ds 1
   0161                     152 _randC::
   0161                     153 	.ds 1
   0162                     154 _first::
   0162                     155 	.ds 1
   0163                     156 _last::
   0163                     157 	.ds 1
   0164                     158 _f::
   0164                     159 	.ds 1
   0165                     160 _x::
   0165                     161 	.ds 1
   0166                     162 _xA::
   0166                     163 	.ds 1
   0167                     164 _xB::
   0167                     165 	.ds 1
   0168                     166 _xC::
   0168                     167 	.ds 1
   0169                     168 _delayA::
   0169                     169 	.ds 1
   016A                     170 _delayB::
   016A                     171 	.ds 1
   016B                     172 _delayC::
   016B                     173 	.ds 1
   016C                     174 _g::
   016C                     175 	.ds 1
   016D                     176 _syncToDrum::
   016D                     177 	.ds 1
   016E                     178 _clockToSync::
   016E                     179 	.ds 1
   016F                     180 _numberOfPulsesA::
   016F                     181 	.ds 1
   0170                     182 _totalStepsA::
   0170                     183 	.ds 1
   0171                     184 _clkA::
   0171                     185 	.ds 1
   0172                     186 _numberOfPulsesB::
   0172                     187 	.ds 1
   0173                     188 _totalStepsB::
   0173                     189 	.ds 1
   0174                     190 _clkB::
   0174                     191 	.ds 1
   0175                     192 _numberOfPulsesC::
   0175                     193 	.ds 1
   0176                     194 _totalStepsC::
   0176                     195 	.ds 1
   0177                     196 _clkC::
   0177                     197 	.ds 1
   0178                     198 _offStepA::
   0178                     199 	.ds 1
   0179                     200 _offStepB::
   0179                     201 	.ds 1
   017A                     202 _offStepC::
   017A                     203 	.ds 1
   017B                     204 _cDelay::
   017B                     205 	.ds 1
   017C                     206 _cOffStep::
   017C                     207 	.ds 1
   017D                     208 _currentSaveSlot::
   017D                     209 	.ds 1
   017E                     210 _current_rand:
   017E                     211 	.ds 1
   017F                     212 _samp_freq::
   017F                     213 	.ds 1
   0180                     214 _tempo::
   0180                     215 	.ds 1
   0181                     216 _watch::
   0181                     217 	.ds 1
   0182                     218 _bob::
   0182                     219 	.ds 1
   0183                     220 _todd::
   0183                     221 	.ds 1
   0184                     222 _pop::
   0184                     223 	.ds 1
   0185                     224 _modus::
   0185                     225 	.ds 1
   0186                     226 _padext::
   0186                     227 	.ds 1
   0187                     228 _joy::
   0187                     229 	.ds 1
   0188                     230 _pad::
   0188                     231 	.ds 1
   0189                     232 _seldrum::
   0189                     233 	.ds 1
                            234 ;--------------------------------------------------------
                            235 ; overlayable items in internal ram 
                            236 ;--------------------------------------------------------
                            237 	.area _OVERLAY
                            238 ;--------------------------------------------------------
                            239 ; indirectly addressable internal ram data
                            240 ;--------------------------------------------------------
                            241 	.area _ISEG
                            242 ;--------------------------------------------------------
                            243 ; bit data
                            244 ;--------------------------------------------------------
                            245 	.area _BSEG
                            246 ;--------------------------------------------------------
                            247 ; external ram data
                            248 ;--------------------------------------------------------
                            249 	.area _XSEG
                            250 ;--------------------------------------------------------
                            251 ; global & static initialisations
                            252 ;--------------------------------------------------------
                            253 	.area _GSINIT
                            254 	.area _GSFINAL
                            255 	.area _GSINIT
                            256 ;	square.c 61
                            257 ;	square.c 1273
                            258 ;	genArrayInit
                            259 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 00 00            260 	ld	hl,#_squareA
   0003 CD 00 00            261 	call	__initrleblock
   0006 02                  262 	.db	2
   0007 FF FF               263 	.db	0xFF, 0xFF
   0009 F4 81               264 	.db	-12,0x81
   000B 02                  265 	.db	2
   000C FF FF               266 	.db	0xFF, 0xFF
   000E 00                  267 	.db	0
                            268 ;	square.c 66
                            269 ;	square.c 1273
                            270 ;	genArrayInit
                            271 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   000F 21 10 00            272 	ld	hl,#_squareB
   0012 CD 00 00            273 	call	__initrleblock
   0015 04                  274 	.db	4
   0016 00 00 7E 7E         275 	.db	0x00, 0x00, 0x7E, 0x7E
   001A F8 42               276 	.db	-8,0x42
   001C 04                  277 	.db	4
   001D 7E 7E 00 00         278 	.db	0x7E, 0x7E, 0x00, 0x00
   0021 00                  279 	.db	0
                            280 ;	square.c 72
                            281 ;	square.c 1273
                            282 ;	genArrayInit
                            283 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0022 21 20 00            284 	ld	hl,#_squareC
   0025 CD 00 00            285 	call	__initrleblock
   0028 04                  286 	.db	4
   0029 00 00 00 00         287 	.db	0x00, 0x00, 0x00, 0x00
   002D F8 3C               288 	.db	-8,0x3C
   002F 04                  289 	.db	4
   0030 00 00 00 00         290 	.db	0x00, 0x00, 0x00, 0x00
   0034 00                  291 	.db	0
                            292 ;	square.c 77
                            293 ;	square.c 1273
                            294 ;	genArrayInit
                            295 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0035 21 30 00            296 	ld	hl,#_midiC
   0038 CD 00 00            297 	call	__initrleblock
   003B 0A                  298 	.db	10
   003C C3 C3 E7 E7 FF FF   299 	.db	0xC3, 0xC3, 0xE7, 0xE7, 0xFF, 0xFF, 0xFF, 0xFF
        FF FF
   0044 DB DB               300 	.db	0xDB, 0xDB
   0046 FA C3               301 	.db	-6,0xC3
   0048 00                  302 	.db	0
                            303 ;	square.c 82
                            304 ;	square.c 1273
                            305 ;	genArrayInit
                            306 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0049 21 40 00            307 	ld	hl,#_offsetC
   004C CD 00 00            308 	call	__initrleblock
   004F 10                  309 	.db	16
   0050 3C 3C 7E 7E E7 E7   310 	.db	0x3C, 0x3C, 0x7E, 0x7E, 0xE7, 0xE7, 0xC3, 0xC3
        C3 C3
   0058 C3 C3 E7 E7 7E 7E   311 	.db	0xC3, 0xC3, 0xE7, 0xE7, 0x7E, 0x7E, 0x3C, 0x3C
        3C 3C
   0060 00                  312 	.db	0
                            313 ;	square.c 88
                            314 ;	square.c 1273
                            315 ;	genArrayInit
                            316 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0061 21 50 00            317 	ld	hl,#_swingC
   0064 CD 00 00            318 	call	__initrleblock
   0067 10                  319 	.db	16
   0068 00 00 00 00 18 18   320 	.db	0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x3C, 0x3C
        3C 3C
   0070 3C 3C 18 18 00 00   321 	.db	0x3C, 0x3C, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00
        00 00
   0078 00                  322 	.db	0
                            323 ;	square.c 93
                            324 ;	square.c 1273
                            325 ;	genArrayInit
                            326 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0079 21 60 00            327 	ld	hl,#_saveC
   007C CD 00 00            328 	call	__initrleblock
   007F 10                  329 	.db	16
   0080 10 10 18 18 1C 1C   330 	.db	0x10, 0x10, 0x18, 0x18, 0x1C, 0x1C, 0x1E, 0x1E
        1E 1E
   0088 1E 1E 1C 1C 18 18   331 	.db	0x1E, 0x1E, 0x1C, 0x1C, 0x18, 0x18, 0x10, 0x10
        10 10
   0090 00                  332 	.db	0
                            333 ;	square.c 99
                            334 ;	square.c 1273
                            335 ;	genArrayInit
                            336 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0091 21 70 00            337 	ld	hl,#_drumA
   0094 CD 00 00            338 	call	__initrleblock
   0097 E0 00               339 	.db	-32,0x00
   0099 00                  340 	.db	0
                            341 ;	square.c 100
                            342 ;	square.c 1273
                            343 ;	genArrayInit
                            344 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   009A 21 90 00            345 	ld	hl,#_drumB
   009D CD 00 00            346 	call	__initrleblock
   00A0 E0 00               347 	.db	-32,0x00
   00A2 00                  348 	.db	0
                            349 ;	square.c 101
                            350 ;	square.c 1273
                            351 ;	genArrayInit
                            352 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00A3 21 B0 00            353 	ld	hl,#_drumC
   00A6 CD 00 00            354 	call	__initrleblock
   00A9 E0 00               355 	.db	-32,0x00
   00AB 00                  356 	.db	0
                            357 ;	square.c 103
                            358 ;	square.c 1273
                            359 ;	genArrayInit
                            360 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00AC 21 D0 00            361 	ld	hl,#_patternA
   00AF CD 00 00            362 	call	__initrleblock
   00B2 06                  363 	.db	6
   00B3 01 10 02 10 04 10   364 	.db	0x01, 0x10, 0x02, 0x10, 0x04, 0x10
   00B9 F7 00               365 	.db	-9,0x00
   00BB 03                  366 	.db	3
   00BC 01 01 01            367 	.db	0x01, 0x01, 0x01
   00BF 00                  368 	.db	0
                            369 ;	square.c 104
                            370 ;	square.c 1273
                            371 ;	genArrayInit
                            372 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00C0 21 E2 00            373 	ld	hl,#_patternB
   00C3 CD 00 00            374 	call	__initrleblock
   00C6 06                  375 	.db	6
   00C7 01 10 02 10 04 10   376 	.db	0x01, 0x10, 0x02, 0x10, 0x04, 0x10
   00CD F7 00               377 	.db	-9,0x00
   00CF 03                  378 	.db	3
   00D0 01 01 01            379 	.db	0x01, 0x01, 0x01
   00D3 00                  380 	.db	0
                            381 ;	square.c 105
                            382 ;	square.c 1273
                            383 ;	genArrayInit
                            384 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00D4 21 F4 00            385 	ld	hl,#_patternC
   00D7 CD 00 00            386 	call	__initrleblock
   00DA 06                  387 	.db	6
   00DB 01 10 02 10 04 10   388 	.db	0x01, 0x10, 0x02, 0x10, 0x04, 0x10
   00E1 F7 00               389 	.db	-9,0x00
   00E3 03                  390 	.db	3
   00E4 01 01 01            391 	.db	0x01, 0x01, 0x01
   00E7 00                  392 	.db	0
                            393 ;	square.c 106
                            394 ;	square.c 1273
                            395 ;	genArrayInit
                            396 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00E8 21 06 01            397 	ld	hl,#_patternD
   00EB CD 00 00            398 	call	__initrleblock
   00EE 06                  399 	.db	6
   00EF 01 10 02 10 04 10   400 	.db	0x01, 0x10, 0x02, 0x10, 0x04, 0x10
   00F5 F7 00               401 	.db	-9,0x00
   00F7 03                  402 	.db	3
   00F8 01 01 01            403 	.db	0x01, 0x01, 0x01
   00FB 00                  404 	.db	0
                            405 ;	square.c 111
                            406 ;	square.c 1273
                            407 ;	genArrayInit
                            408 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00FC 21 18 01            409 	ld	hl,#_dXlut
   00FF CD 00 00            410 	call	__initrleblock
   0102 20                  411 	.db	32
   0103 90 8C 88 84 80 7C   412 	.db	0x90, 0x8C, 0x88, 0x84, 0x80, 0x7C, 0x78, 0x74
        78 74
   010B 70 6C 68 64 60 5C   413 	.db	0x70, 0x6C, 0x68, 0x64, 0x60, 0x5C, 0x58, 0x54
        58 54
   0113 50 4C 48 44 40 3C   414 	.db	0x50, 0x4C, 0x48, 0x44, 0x40, 0x3C, 0x38, 0x34
        38 34
   011B 30 2C 28 24 20 1C   415 	.db	0x30, 0x2C, 0x28, 0x24, 0x20, 0x1C, 0x18, 0x14
        18 14
   0123 00                  416 	.db	0
                            417 ;	square.c 112
                            418 ;	square.c 1273
                            419 ;	genArrayInit
                            420 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0124 21 38 01            421 	ld	hl,#_dYlut
   0127 CD 00 00            422 	call	__initrleblock
   012A 20                  423 	.db	32
   012B 10 14 18 1C 20 24   424 	.db	0x10, 0x14, 0x18, 0x1C, 0x20, 0x24, 0x28, 0x2C
        28 2C
   0133 30 34 38 3C 40 44   425 	.db	0x30, 0x34, 0x38, 0x3C, 0x40, 0x44, 0x48, 0x4C
        48 4C
   013B 50 54 58 5C 60 64   426 	.db	0x50, 0x54, 0x58, 0x5C, 0x60, 0x64, 0x68, 0x6C
        68 6C
   0143 70 74 78 7C 80 84   427 	.db	0x70, 0x74, 0x78, 0x7C, 0x80, 0x84, 0x88, 0x8C
        88 8C
   014B 00                  428 	.db	0
                            429 ;	square.c 113
                            430 ;	square.c 1273
                            431 ;	genArrayInit
                            432 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   014C 21 58 01            433 	ld	hl,#_savelut
   014F CD 00 00            434 	call	__initrleblock
   0152 04                  435 	.db	4
   0153 90 80 70 60         436 	.db	0x90, 0x80, 0x70, 0x60
   0157 00                  437 	.db	0
                            438 ;--------------------------------------------------------
                            439 ; Home
                            440 ;--------------------------------------------------------
                            441 	.area _HOME
                            442 	.area _CODE
                            443 ;--------------------------------------------------------
                            444 ; code
                            445 ;--------------------------------------------------------
                            446 	.area _CODE
                            447 ;	square.c 119
                            448 ;	genLabel
                            449 ;	genFunction
                            450 ;	---------------------------------
                            451 ; Function performantdelay
                            452 ; ---------------------------------
   0000                     453 ___performantdelay_start:
   0000                     454 _performantdelay:
                            455 	
                            456 ;	square.c 121
                            457 ;	genAssign
   0000 0E 00               458 	ld	c,#0x00
                            459 ;	genLabel
   0002                     460 00101$:
                            461 ;	genCmpLt
                            462 ;	AOP_STK for 
   0002 79                  463 	ld	a,c
   0003 F8 02               464 	lda	hl,2(sp)
   0005 96                  465 	sub	a,(hl)
   0006 D2 13 00            466 	jp	nc,00105$
                            467 ;	square.c 122
                            468 ;	genCall
                            469 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0009 C5                  470 	push	bc
   000A CD 00 00            471 	call	_wait_vbl_done
   000D E1                  472 	pop	hl
   000E 4D                  473 	ld	c,l
                            474 ;	square.c 121
                            475 ;	genPlus
                            476 ;	genPlusIncr
                            477 ; Removed redundent load
   000F 0C                  478 	inc	c
                            479 ;	genGoto
   0010 C3 02 00            480 	jp	00101$
                            481 ;	genLabel
   0013                     482 00105$:
                            483 ;	genEndFunction
                            484 	
   0013 C9                  485 	ret
   0014                     486 ___performantdelay_end:
                            487 ;	square.c 126
                            488 ;	genLabel
                            489 ;	genFunction
                            490 ;	---------------------------------
                            491 ; Function rand
                            492 ; ---------------------------------
   0014                     493 ___rand_start:
   0014                     494 _rand:
   0014 E8 FE               495 	lda	sp,-2(sp)
                            496 ;	square.c 129
                            497 ;	genCall
                            498 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0016 CD 00 00            499 	call	_clock
   0019 42                  500 	ld	b,d
   001A 4B                  501 	ld	c,e
                            502 ;	genCast
                            503 ;	AOP_HL for _current_rand
                            504 ;	AOP_STK for _rand_sloc0_1_0
   001B 21 7E 01            505 	ld	hl,#_current_rand
   001E 7E                  506 	ld	a,(hl)
   001F F8 00               507 	lda	hl,0(sp)
   0021 22                  508 	ld	(hl+),a
   0022 36 00               509 	ld	(hl),#0x00
                            510 ;	genIpush
                            511 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0024 C5                  512 	push	bc
                            513 ;	genIpush
                            514 ;	AOP_STK for _rand_sloc0_1_0
   0025 2B                  515 	dec	hl
   0026 2A                  516 	ld	a,(hl+)
   0027 66                  517 	ld	h,(hl)
   0028 6F                  518 	ld	l,a
   0029 E5                  519 	push	hl
                            520 ;	genCall
   002A CD 00 00            521 	call	__muluint_rrx_s
   002D 42                  522 	ld	b,d
   002E 4B                  523 	ld	c,e
   002F E8 04               524 	lda	sp,4(sp)
                            525 ;	genPlus
                            526 ;	genPlusIncr
                            527 ;	Can't optimise plus by inc, falling back to the normal way
   0031 79                  528 	ld	a,c
   0032 C6 7B               529 	add	a,#0x7B
   0034 4F                  530 	ld	c,a
   0035 78                  531 	ld	a,b
   0036 CE 00               532 	adc	a,#0x00
                            533 ;	genAnd
   0038 47                  534 	ld	b,a
   0039 E6 07               535 	and	a,#0x07
   003B 47                  536 	ld	b,a
                            537 ;	genCast
                            538 ;	AOP_HL for _current_rand
   003C 21 7E 01            539 	ld	hl,#_current_rand
   003F 71                  540 	ld	(hl),c
                            541 ;	square.c 130
                            542 ;	genRet
                            543 ;	AOP_HL for _current_rand
   0040 5E                  544 	ld	e,(hl)
                            545 ;	genLabel
   0041                     546 00101$:
                            547 ;	genEndFunction
   0041 E8 02               548 	lda	sp,2(sp)
   0043 C9                  549 	ret
   0044                     550 ___rand_end:
                            551 ;	square.c 133
                            552 ;	genLabel
                            553 ;	genFunction
                            554 ;	---------------------------------
                            555 ; Function makeASound
                            556 ; ---------------------------------
   0044                     557 ___makeASound_start:
   0044                     558 _makeASound:
   0044 E8 FD               559 	lda	sp,-3(sp)
                            560 ;	square.c 135
                            561 ;	genAssign
   0046 01 10 FF            562 	ld	bc,#0xFF10
                            563 ;	genAssign (pointer)
   0049 3E 29               564 	ld	a,#0x29
   004B 02                  565 	ld	(bc),a
                            566 ;	square.c 136
                            567 ;	genAssign
   004C 01 11 FF            568 	ld	bc,#0xFF11
                            569 ;	genAssign (pointer)
   004F 3E 4F               570 	ld	a,#0x4F
   0051 02                  571 	ld	(bc),a
                            572 ;	square.c 137
                            573 ;	genAssign
   0052 01 12 FF            574 	ld	bc,#0xFF12
                            575 ;	genAssign (pointer)
   0055 3E F1               576 	ld	a,#0xF1
   0057 02                  577 	ld	(bc),a
                            578 ;	square.c 138
                            579 ;	genAssign
   0058 01 13 FF            580 	ld	bc,#0xFF13
                            581 ;	genAssign (pointer)
   005B 3E 6F               582 	ld	a,#0x6F
   005D 02                  583 	ld	(bc),a
                            584 ;	square.c 139
                            585 ;	genAssign
   005E 01 14 FF            586 	ld	bc,#0xFF14
                            587 ;	genAssign (pointer)
   0061 3E C4               588 	ld	a,#0xC4
   0063 02                  589 	ld	(bc),a
                            590 ;	square.c 140
                            591 ;	genAssign
   0064 01 25 FF            592 	ld	bc,#0xFF25
                            593 ;	genAssign
                            594 ;	AOP_STK for _makeASound_sloc0_1_0
   0067 F8 01               595 	lda	hl,1(sp)
   0069 36 25               596 	ld	(hl),#0x25
   006B 23                  597 	inc	hl
   006C 36 FF               598 	ld	(hl),#0xFF
                            599 ;	genPointerGet
                            600 ;	AOP_STK for _makeASound_sloc0_1_0
                            601 ;	AOP_STK for _makeASound_sloc1_1_0
   006E 2B                  602 	dec	hl
   006F 5E                  603 	ld	e,(hl)
   0070 23                  604 	inc	hl
   0071 56                  605 	ld	d,(hl)
   0072 1A                  606 	ld	a,(de)
   0073 2B                  607 	dec	hl
   0074 2B                  608 	dec	hl
                            609 ;	genOr
                            610 ;	AOP_STK for _makeASound_sloc1_1_0
   0075 77                  611 	ld      (hl),a
   0076 7F                  612 	ld      a,a
   0077 F6 FF               613 	or	a,#0xFF
                            614 ;	genAssign (pointer)
   0079 02                  615 	ld	(bc),a
                            616 ;	genLabel
   007A                     617 00101$:
                            618 ;	genEndFunction
   007A E8 03               619 	lda	sp,3(sp)
   007C C9                  620 	ret
   007D                     621 ___makeASound_end:
                            622 ;	square.c 143
                            623 ;	genLabel
                            624 ;	genFunction
                            625 ;	---------------------------------
                            626 ; Function makeBSound
                            627 ; ---------------------------------
   007D                     628 ___makeBSound_start:
   007D                     629 _makeBSound:
   007D E8 FD               630 	lda	sp,-3(sp)
                            631 ;	square.c 145
                            632 ;	genAssign
   007F 01 16 FF            633 	ld	bc,#0xFF16
                            634 ;	genAssign (pointer)
   0082 3E 4A               635 	ld	a,#0x4A
   0084 02                  636 	ld	(bc),a
                            637 ;	square.c 146
                            638 ;	genAssign
   0085 01 17 FF            639 	ld	bc,#0xFF17
                            640 ;	genAssign (pointer)
   0088 3E 15               641 	ld	a,#0x15
   008A 02                  642 	ld	(bc),a
                            643 ;	square.c 147
                            644 ;	genAssign
   008B 01 18 FF            645 	ld	bc,#0xFF18
                            646 ;	genAssign (pointer)
   008E 3E 27               647 	ld	a,#0x27
   0090 02                  648 	ld	(bc),a
                            649 ;	square.c 148
                            650 ;	genAssign
   0091 01 19 FF            651 	ld	bc,#0xFF19
                            652 ;	genAssign (pointer)
   0094 3E C7               653 	ld	a,#0xC7
   0096 02                  654 	ld	(bc),a
                            655 ;	square.c 149
                            656 ;	genAssign
   0097 01 25 FF            657 	ld	bc,#0xFF25
                            658 ;	genAssign
                            659 ;	AOP_STK for _makeBSound_sloc0_1_0
   009A F8 01               660 	lda	hl,1(sp)
   009C 36 25               661 	ld	(hl),#0x25
   009E 23                  662 	inc	hl
   009F 36 FF               663 	ld	(hl),#0xFF
                            664 ;	genPointerGet
                            665 ;	AOP_STK for _makeBSound_sloc0_1_0
                            666 ;	AOP_STK for _makeBSound_sloc1_1_0
   00A1 2B                  667 	dec	hl
   00A2 5E                  668 	ld	e,(hl)
   00A3 23                  669 	inc	hl
   00A4 56                  670 	ld	d,(hl)
   00A5 1A                  671 	ld	a,(de)
   00A6 2B                  672 	dec	hl
   00A7 2B                  673 	dec	hl
                            674 ;	genOr
                            675 ;	AOP_STK for _makeBSound_sloc1_1_0
   00A8 77                  676 	ld      (hl),a
   00A9 7F                  677 	ld      a,a
   00AA F6 FF               678 	or	a,#0xFF
                            679 ;	genAssign (pointer)
   00AC 02                  680 	ld	(bc),a
                            681 ;	genLabel
   00AD                     682 00101$:
                            683 ;	genEndFunction
   00AD E8 03               684 	lda	sp,3(sp)
   00AF C9                  685 	ret
   00B0                     686 ___makeBSound_end:
                            687 ;	square.c 152
                            688 ;	genLabel
                            689 ;	genFunction
                            690 ;	---------------------------------
                            691 ; Function makeCSound
                            692 ; ---------------------------------
   00B0                     693 ___makeCSound_start:
   00B0                     694 _makeCSound:
   00B0 E8 FD               695 	lda	sp,-3(sp)
                            696 ;	square.c 154
                            697 ;	genAssign
   00B2 01 20 FF            698 	ld	bc,#0xFF20
                            699 ;	genAssign (pointer)
   00B5 3E 10               700 	ld	a,#0x10
   00B7 02                  701 	ld	(bc),a
                            702 ;	square.c 155
                            703 ;	genAssign
   00B8 01 21 FF            704 	ld	bc,#0xFF21
                            705 ;	genAssign (pointer)
   00BB 3E 24               706 	ld	a,#0x24
   00BD 02                  707 	ld	(bc),a
                            708 ;	square.c 156
                            709 ;	genAssign
   00BE 01 22 FF            710 	ld	bc,#0xFF22
                            711 ;	genAssign (pointer)
   00C1 3E 31               712 	ld	a,#0x31
   00C3 02                  713 	ld	(bc),a
                            714 ;	square.c 157
                            715 ;	genAssign
   00C4 01 23 FF            716 	ld	bc,#0xFF23
                            717 ;	genAssign (pointer)
   00C7 3E C0               718 	ld	a,#0xC0
   00C9 02                  719 	ld	(bc),a
                            720 ;	square.c 158
                            721 ;	genAssign
   00CA 01 25 FF            722 	ld	bc,#0xFF25
                            723 ;	genAssign
                            724 ;	AOP_STK for _makeCSound_sloc0_1_0
   00CD F8 01               725 	lda	hl,1(sp)
   00CF 36 25               726 	ld	(hl),#0x25
   00D1 23                  727 	inc	hl
   00D2 36 FF               728 	ld	(hl),#0xFF
                            729 ;	genPointerGet
                            730 ;	AOP_STK for _makeCSound_sloc0_1_0
                            731 ;	AOP_STK for _makeCSound_sloc1_1_0
   00D4 2B                  732 	dec	hl
   00D5 5E                  733 	ld	e,(hl)
   00D6 23                  734 	inc	hl
   00D7 56                  735 	ld	d,(hl)
   00D8 1A                  736 	ld	a,(de)
   00D9 2B                  737 	dec	hl
   00DA 2B                  738 	dec	hl
                            739 ;	genOr
                            740 ;	AOP_STK for _makeCSound_sloc1_1_0
   00DB 77                  741 	ld      (hl),a
   00DC 7F                  742 	ld      a,a
   00DD F6 FF               743 	or	a,#0xFF
                            744 ;	genAssign (pointer)
   00DF 02                  745 	ld	(bc),a
                            746 ;	genLabel
   00E0                     747 00101$:
                            748 ;	genEndFunction
   00E0 E8 03               749 	lda	sp,3(sp)
   00E2 C9                  750 	ret
   00E3                     751 ___makeCSound_end:
                            752 ;	square.c 163
                            753 ;	genLabel
                            754 ;	genFunction
                            755 ;	---------------------------------
                            756 ; Function fillDrumA
                            757 ; ---------------------------------
   00E3                     758 ___fillDrumA_start:
   00E3                     759 _fillDrumA:
   00E3 E8 FA               760 	lda	sp,-6(sp)
                            761 ;	square.c 164
                            762 ;	genAssign
                            763 ;	AOP_HL for _bucket
   00E5 21 5C 01            764 	ld	hl,#_bucket
   00E8 36 00               765 	ld	(hl),#0x00
                            766 ;	square.c 165
                            767 ;	genAssign
                            768 ;	AOP_HL for _i
   00EA 21 5D 01            769 	ld	hl,#_i
   00ED 36 00               770 	ld	(hl),#0x00
                            771 ;	genLabel
   00EF                     772 00118$:
                            773 ;	genCmpLt
                            774 ;	AOP_HL for _i
                            775 ;	AOP_HL for _totalStepsA
   00EF 21 5D 01            776 	ld	hl,#_i
   00F2 7E                  777 	ld	a,(hl)
   00F3 21 70 01            778 	ld	hl,#_totalStepsA
   00F6 96                  779 	sub	a,(hl)
   00F7 D2 50 01            780 	jp	nc,00121$
                            781 ;	square.c 167
                            782 ;	genPlus
                            783 ;	AOP_HL for _bucket
                            784 ;	AOP_HL for _numberOfPulsesA
                            785 ;	Can't optimise plus by inc, falling back to the normal way
   00FA 21 5C 01            786 	ld	hl,#_bucket
   00FD 7E                  787 	ld	a,(hl)
   00FE 21 6F 01            788 	ld	hl,#_numberOfPulsesA
   0101 86                  789 	add	a,(hl)
   0102 21 5C 01            790 	ld	hl,#_bucket
   0105 77                  791 	ld	(hl),a
                            792 ;	square.c 168
                            793 ;	genMinus
                            794 ;	AOP_HL for _totalStepsA
   0106 21 70 01            795 	ld	hl,#_totalStepsA
   0109 7E                  796 	ld	a,(hl)
   010A C6 FF               797 	add	a,#0xFF
                            798 ;	genCmpGt
                            799 ;	AOP_HL for _bucket
   010C 4F                  800 	ld	c,a
   010D 21 5C 01            801 	ld	hl,#_bucket
   0110 96                  802 	sub	a,(hl)
   0111 D2 2F 01            803 	jp	nc,00104$
                            804 ;	square.c 170
                            805 ;	genMinus
                            806 ;	AOP_HL for _bucket
                            807 ;	AOP_HL for _totalStepsA
   0114 7E                  808 	ld	a,(hl)
   0115 21 70 01            809 	ld	hl,#_totalStepsA
   0118 96                  810 	sub	a,(hl)
   0119 21 5C 01            811 	ld	hl,#_bucket
   011C 77                  812 	ld	(hl),a
                            813 ;	square.c 171
                            814 ;	genPlus
                            815 ;	AOP_HL for _i
                            816 ;	Can't optimise plus by inc, falling back to the normal way
   011D 3E 70               817 	ld	a,#<_drumA
   011F 21 5D 01            818 	ld	hl,#_i
   0122 86                  819 	add	a,(hl)
   0123 4F                  820 	ld	c,a
   0124 3E 00               821 	ld	a,#>_drumA
   0126 CE 00               822 	adc	a,#0x00
   0128 47                  823 	ld	b,a
                            824 ;	genAssign (pointer)
   0129 3E 01               825 	ld	a,#0x01
   012B 02                  826 	ld	(bc),a
                            827 ;	genGoto
   012C C3 49 01            828 	jp	00120$
                            829 ;	genLabel
   012F                     830 00104$:
                            831 ;	square.c 173
                            832 ;	genCmpLt
                            833 ;	AOP_HL for _bucket
                            834 ;	AOP_HL for _totalStepsA
   012F 21 5C 01            835 	ld	hl,#_bucket
   0132 7E                  836 	ld	a,(hl)
   0133 21 70 01            837 	ld	hl,#_totalStepsA
   0136 96                  838 	sub	a,(hl)
   0137 D2 49 01            839 	jp	nc,00120$
                            840 ;	square.c 175
                            841 ;	genPlus
                            842 ;	AOP_HL for _i
                            843 ;	Can't optimise plus by inc, falling back to the normal way
   013A 3E 70               844 	ld	a,#<_drumA
   013C 21 5D 01            845 	ld	hl,#_i
   013F 86                  846 	add	a,(hl)
   0140 4F                  847 	ld	c,a
   0141 3E 00               848 	ld	a,#>_drumA
   0143 CE 00               849 	adc	a,#0x00
   0145 47                  850 	ld	b,a
                            851 ;	genAssign (pointer)
   0146 3E 00               852 	ld	a,#0x00
   0148 02                  853 	ld	(bc),a
                            854 ;	genLabel
   0149                     855 00120$:
                            856 ;	square.c 165
                            857 ;	genPlus
                            858 ;	AOP_HL for _i
                            859 ;	genPlusIncr
   0149 21 5D 01            860 	ld	hl,#_i
   014C 34                  861 	inc	(hl)
                            862 ;	genGoto
   014D C3 EF 00            863 	jp	00118$
                            864 ;	genLabel
   0150                     865 00121$:
                            866 ;	square.c 178
                            867 ;	genPointerGet
                            868 ;	AOP_HL for _first
   0150 11 70 00            869 	ld	de,#_drumA
   0153 1A                  870 	ld	a,(de)
   0154 21 62 01            871 	ld	hl,#_first
   0157 77                  872 	ld	(hl),a
                            873 ;	square.c 179
                            874 ;	genIpush
                            875 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0158 3E 01               876 	ld	a,#0x01
   015A F5                  877 	push	af
   015B 33                  878 	inc	sp
                            879 ;	genCall
   015C CD 00 00            880 	call	_performantdelay
   015F E8 01               881 	lda	sp,1(sp)
                            882 ;	square.c 181
                            883 ;	genCmpGt
                            884 ;	AOP_HL for _numberOfPulsesA
                            885 ;	AOP_STK for _fillDrumA_sloc3_1_0
   0161 3E 00               886 	ld	a,#0x00
   0163 21 6F 01            887 	ld	hl,#_numberOfPulsesA
   0166 96                  888 	sub	a,(hl)
   0167 3E 00               889 	ld	a,#0x00
   0169 17                  890 	rla
   016A F8 00               891 	lda	hl,0(sp)
   016C 77                  892 	ld	(hl),a
                            893 ;	genIfx
                            894 ;	AOP_STK for _fillDrumA_sloc3_1_0
   016D AF                  895 	xor	a,a
   016E B6                  896 	or	a,(hl)
   016F CA FF 01            897 	jp	z,00113$
                            898 ;	genCmpEq
                            899 ;	AOP_HL for _first
                            900 ; genCmpEq: left 1, right 1, result 0
   0172 21 62 01            901 	ld	hl,#_first
   0175 7E                  902 	ld	a,(hl)
   0176 FE 01               903 	cp	a,#0x01
   0178 CA FF 01            904 	jp	z,00113$
   017B                     905 00153$:
                            906 ;	square.c 183
                            907 ;	genAssign
                            908 ;	AOP_HL for _f
   017B 21 64 01            909 	ld	hl,#_f
   017E 36 00               910 	ld	(hl),#0x00
                            911 ;	genLabel
   0180                     912 00108$:
                            913 ;	genCmpLt
                            914 ;	AOP_HL for _f
                            915 ;	AOP_HL for _totalStepsA
   0180 21 64 01            916 	ld	hl,#_f
   0183 7E                  917 	ld	a,(hl)
   0184 21 70 01            918 	ld	hl,#_totalStepsA
   0187 96                  919 	sub	a,(hl)
   0188 D2 FF 01            920 	jp	nc,00113$
                            921 ;	square.c 184
                            922 ;	genAssign
                            923 ;	AOP_HL for _x
   018B 21 65 01            924 	ld	hl,#_x
   018E 36 00               925 	ld	(hl),#0x00
                            926 ;	genLabel
   0190                     927 00122$:
                            928 ;	genCmpLt
                            929 ;	AOP_HL for _x
                            930 ;	AOP_HL for _totalStepsA
   0190 21 65 01            931 	ld	hl,#_x
   0193 7E                  932 	ld	a,(hl)
   0194 21 70 01            933 	ld	hl,#_totalStepsA
   0197 96                  934 	sub	a,(hl)
   0198 3E 00               935 	ld	a,#0x00
   019A 17                  936 	rla
   019B 47                  937 	ld	b,a
                            938 ;	genIfx
   019C AF                  939 	xor	a,a
   019D B0                  940 	or	a,b
   019E CA D9 01            941 	jp	z,00125$
                            942 ;	square.c 185
                            943 ;	genPlus
                            944 ;	AOP_HL for _x
                            945 ;	AOP_STK for _fillDrumA_sloc0_1_0
                            946 ;	Can't optimise plus by inc, falling back to the normal way
   01A1 11 70 00            947 	ld	de,#_drumA
   01A4 21 65 01            948 	ld	hl,#_x
   01A7 6E                  949 	ld	l,(hl)
   01A8 26 00               950 	ld	h,#0x00
   01AA 19                  951 	add	hl,de
   01AB 7D                  952 	ld	a,l
   01AC 54                  953 	ld	d,h
   01AD F8 04               954 	lda	hl,4(sp)
   01AF 22                  955 	ld	(hl+),a
   01B0 72                  956 	ld	(hl),d
                            957 ;	genPlus
                            958 ;	AOP_HL for _x
                            959 ;	AOP_STK for _fillDrumA_sloc1_1_0
                            960 ;	genPlusIncr
                            961 ;	Can't optimise plus by inc, falling back to the normal way
   01B1 21 65 01            962 	ld	hl,#_x
   01B4 7E                  963 	ld	a,(hl)
   01B5 C6 01               964 	add	a,#0x01
   01B7 F8 03               965 	lda	hl,3(sp)
   01B9 77                  966 	ld	(hl),a
                            967 ;	genPlus
                            968 ;	AOP_STK for _fillDrumA_sloc1_1_0
                            969 ;	AOP_STK for _fillDrumA_sloc2_1_0
                            970 ;	Can't optimise plus by inc, falling back to the normal way
   01BA 11 70 00            971 	ld	de,#_drumA
   01BD 6E                  972 	ld	l,(hl)
   01BE 26 00               973 	ld	h,#0x00
   01C0 19                  974 	add	hl,de
   01C1 7D                  975 	ld	a,l
   01C2 54                  976 	ld	d,h
   01C3 F8 01               977 	lda	hl,1(sp)
                            978 ;	genPointerGet
                            979 ;	AOP_STK for _fillDrumA_sloc2_1_0
   01C5 22                  980 	ld	(hl+),a
   01C6 72                  981 	ld	(hl),d
   01C7 5F                  982 	ld	e,a
   01C8 1A                  983 	ld	a,(de)
                            984 ;	genAssign (pointer)
                            985 ;	AOP_STK for _fillDrumA_sloc0_1_0
   01C9 23                  986 	inc	hl
   01CA 23                  987 	inc	hl
   01CB 5E                  988 	ld	e,(hl)
   01CC 23                  989 	inc	hl
   01CD 56                  990 	ld	d,(hl)
   01CE 12                  991 	ld	(de),a
                            992 ;	square.c 184
                            993 ;	genAssign
                            994 ;	AOP_STK for _fillDrumA_sloc1_1_0
   01CF 2B                  995 	dec	hl
   01D0 2B                  996 	dec	hl
   01D1 4E                  997 	ld	c,(hl)
                            998 ;	genAssign
                            999 ;	AOP_HL for _x
   01D2 21 65 01           1000 	ld	hl,#_x
   01D5 71                 1001 	ld	(hl),c
                           1002 ;	genGoto
   01D6 C3 90 01           1003 	jp	00122$
                           1004 ;	genLabel
   01D9                    1005 00125$:
                           1006 ;	square.c 187
                           1007 ;	genMinus
                           1008 ;	AOP_HL for _totalStepsA
   01D9 21 70 01           1009 	ld	hl,#_totalStepsA
   01DC 7E                 1010 	ld	a,(hl)
   01DD C6 FF              1011 	add	a,#0xFF
   01DF 4F                 1012 	ld	c,a
                           1013 ;	genPlus
                           1014 ;	Can't optimise plus by inc, falling back to the normal way
   01E0 3E 70              1015 	ld	a,#<_drumA
   01E2 81                 1016 	add	a,c
   01E3 4F                 1017 	ld	c,a
   01E4 3E 00              1018 	ld	a,#>_drumA
   01E6 CE 00              1019 	adc	a,#0x00
   01E8 47                 1020 	ld	b,a
                           1021 ;	genAssign (pointer)
                           1022 ;	AOP_HL for _first
   01E9 21 62 01           1023 	ld	hl,#_first
   01EC 7E                 1024 	ld	a,(hl)
   01ED 02                 1025 	ld	(bc),a
                           1026 ;	square.c 188
                           1027 ;	genPointerGet
   01EE 11 70 00           1028 	ld	de,#_drumA
   01F1 1A                 1029 	ld	a,(de)
                           1030 ;	genCmpEq
                           1031 ; genCmpEq: left 1, right 1, result 0
   01F2 4F                 1032 	ld	c,a
   01F3 FE 01              1033 	cp	a,#0x01
   01F5 CA FF 01           1034 	jp	z,00113$
   01F8                    1035 00154$:
                           1036 ;	square.c 183
                           1037 ;	genPlus
                           1038 ;	AOP_HL for _f
                           1039 ;	genPlusIncr
   01F8 21 64 01           1040 	ld	hl,#_f
   01FB 34                 1041 	inc	(hl)
                           1042 ;	genGoto
   01FC C3 80 01           1043 	jp	00108$
                           1044 ;	genLabel
   01FF                    1045 00113$:
                           1046 ;	square.c 196
                           1047 ;	genMinus
                           1048 ;	AOP_HL for _totalStepsA
   01FF 21 70 01           1049 	ld	hl,#_totalStepsA
   0202 7E                 1050 	ld	a,(hl)
   0203 C6 FF              1051 	add	a,#0xFF
   0205 4F                 1052 	ld	c,a
                           1053 ;	genPlus
                           1054 ;	Can't optimise plus by inc, falling back to the normal way
   0206 3E 70              1055 	ld	a,#<_drumA
   0208 81                 1056 	add	a,c
   0209 4F                 1057 	ld	c,a
   020A 3E 00              1058 	ld	a,#>_drumA
   020C CE 00              1059 	adc	a,#0x00
   020E 47                 1060 	ld	b,a
                           1061 ;	genPointerGet
                           1062 ;	AOP_HL for _last
   020F 0A                 1063 	ld	a,(bc)
   0210 21 63 01           1064 	ld	hl,#_last
   0213 77                 1065 	ld	(hl),a
                           1066 ;	square.c 197
                           1067 ;	genIfx
                           1068 ;	AOP_STK for _fillDrumA_sloc3_1_0
   0214 AF                 1069 	xor	a,a
   0215 F8 00              1070 	lda	hl,0(sp)
   0217 B6                 1071 	or	a,(hl)
   0218 CA 8F 02           1072 	jp	z,00116$
                           1073 ;	genCmpEq
                           1074 ;	AOP_HL for _offStepA
                           1075 ; genCmpEq: left 1, right 1, result 0
   021B 21 78 01           1076 	ld	hl,#_offStepA
   021E 7E                 1077 	ld	a,(hl)
   021F B7                 1078 	or	a,a
   0220 CA 8F 02           1079 	jp	z,00116$
   0223                    1080 00155$:
                           1081 ;	square.c 199
                           1082 ;	genAssign
                           1083 ;	AOP_HL for _f
   0223 21 64 01           1084 	ld	hl,#_f
   0226 36 00              1085 	ld	(hl),#0x00
                           1086 ;	genLabel
   0228                    1087 00130$:
                           1088 ;	genCmpLt
                           1089 ;	AOP_HL for _f
                           1090 ;	AOP_HL for _offStepA
   0228 21 64 01           1091 	ld	hl,#_f
   022B 7E                 1092 	ld	a,(hl)
   022C 21 78 01           1093 	ld	hl,#_offStepA
   022F 96                 1094 	sub	a,(hl)
   0230 D2 8F 02           1095 	jp	nc,00116$
                           1096 ;	square.c 200
                           1097 ;	genAssign
                           1098 ;	AOP_HL for _totalStepsA
                           1099 ;	AOP_HL for _x
   0233 21 70 01           1100 	ld	hl,#_totalStepsA
   0236 7E                 1101 	ld	a,(hl)
   0237 21 65 01           1102 	ld	hl,#_x
   023A 77                 1103 	ld	(hl),a
                           1104 ;	genLabel
   023B                    1105 00126$:
                           1106 ;	genCmpGt
                           1107 ;	AOP_HL for _x
                           1108 ;	AOP_STK for _fillDrumA_sloc3_1_0
   023B 3E 00              1109 	ld	a,#0x00
   023D 21 65 01           1110 	ld	hl,#_x
   0240 96                 1111 	sub	a,(hl)
   0241 3E 00              1112 	ld	a,#0x00
   0243 17                 1113 	rla
   0244 F8 00              1114 	lda	hl,0(sp)
   0246 77                 1115 	ld	(hl),a
                           1116 ;	genIfx
                           1117 ;	AOP_STK for _fillDrumA_sloc3_1_0
   0247 AF                 1118 	xor	a,a
   0248 B6                 1119 	or	a,(hl)
   0249 CA 80 02           1120 	jp	z,00129$
                           1121 ;	square.c 201
                           1122 ;	genPlus
                           1123 ;	AOP_HL for _x
                           1124 ;	AOP_STK for _fillDrumA_sloc2_1_0
                           1125 ;	Can't optimise plus by inc, falling back to the normal way
   024C 11 70 00           1126 	ld	de,#_drumA
   024F 21 65 01           1127 	ld	hl,#_x
   0252 6E                 1128 	ld	l,(hl)
   0253 26 00              1129 	ld	h,#0x00
   0255 19                 1130 	add	hl,de
   0256 7D                 1131 	ld	a,l
   0257 54                 1132 	ld	d,h
   0258 F8 01              1133 	lda	hl,1(sp)
   025A 22                 1134 	ld	(hl+),a
   025B 72                 1135 	ld	(hl),d
                           1136 ;	genMinus
                           1137 ;	AOP_HL for _x
   025C 21 65 01           1138 	ld	hl,#_x
   025F 7E                 1139 	ld	a,(hl)
   0260 C6 FF              1140 	add	a,#0xFF
   0262 47                 1141 	ld	b,a
                           1142 ;	genPlus
                           1143 ;	AOP_STK for _fillDrumA_sloc0_1_0
                           1144 ;	Can't optimise plus by inc, falling back to the normal way
   0263 11 70 00           1145 	ld	de,#_drumA
   0266 68                 1146 	ld	l,b
   0267 26 00              1147 	ld	h,#0x00
   0269 19                 1148 	add	hl,de
   026A 7D                 1149 	ld	a,l
   026B 54                 1150 	ld	d,h
   026C F8 04              1151 	lda	hl,4(sp)
                           1152 ;	genPointerGet
                           1153 ;	AOP_STK for _fillDrumA_sloc0_1_0
   026E 22                 1154 	ld	(hl+),a
   026F 72                 1155 	ld	(hl),d
   0270 5F                 1156 	ld	e,a
   0271 1A                 1157 	ld	a,(de)
                           1158 ;	genAssign (pointer)
                           1159 ;	AOP_STK for _fillDrumA_sloc2_1_0
   0272 F8 01              1160 	lda	hl,1(sp)
   0274 5E                 1161 	ld	e,(hl)
   0275 23                 1162 	inc	hl
   0276 56                 1163 	ld	d,(hl)
   0277 12                 1164 	ld	(de),a
                           1165 ;	square.c 200
                           1166 ;	genAssign
   0278 48                 1167 	ld	c,b
                           1168 ;	genAssign
                           1169 ;	AOP_HL for _x
   0279 21 65 01           1170 	ld	hl,#_x
   027C 71                 1171 	ld	(hl),c
                           1172 ;	genGoto
   027D C3 3B 02           1173 	jp	00126$
                           1174 ;	genLabel
   0280                    1175 00129$:
                           1176 ;	square.c 203
                           1177 ;	genAssign (pointer)
                           1178 ;	AOP_HL for _last
   0280 11 70 00           1179 	ld	de,#_drumA
   0283 21 63 01           1180 	ld	hl,#_last
   0286 7E                 1181 	ld	a,(hl)
   0287 12                 1182 	ld	(de),a
                           1183 ;	square.c 199
                           1184 ;	genPlus
                           1185 ;	AOP_HL for _f
                           1186 ;	genPlusIncr
   0288 21 64 01           1187 	ld	hl,#_f
   028B 34                 1188 	inc	(hl)
                           1189 ;	genGoto
   028C C3 28 02           1190 	jp	00130$
                           1191 ;	genLabel
   028F                    1192 00116$:
                           1193 ;	square.c 206
                           1194 ;	genCall
                           1195 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   028F CD 14 00           1196 	call	_rand
                           1197 ;	AOP_HL for _randA
   0292 21 5F 01           1198 	ld	hl,#_randA
   0295 73                 1199 	ld	(hl),e
                           1200 ;	square.c 207
                           1201 ;	genIpush
                           1202 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0296 3E 1E              1203 	ld	a,#0x1E
   0298 F5                 1204 	push	af
   0299 33                 1205 	inc	sp
                           1206 ;	genIpush
                           1207 ;	AOP_HL for _randA
   029A 21 5F 01           1208 	ld	hl,#_randA
   029D 7E                 1209 	ld	a,(hl)
   029E F5                 1210 	push	af
   029F 33                 1211 	inc	sp
                           1212 ;	genCall
   02A0 CD 00 00           1213 	call	__moduchar_rrx_s
   02A3 4B                 1214 	ld	c,e
   02A4 E8 02              1215 	lda	sp,2(sp)
                           1216 ;	genPlus
                           1217 ;	AOP_HL for _delayA
                           1218 ;	AOP_HL for _xA
                           1219 ;	Can't optimise plus by inc, falling back to the normal way
   02A6 21 69 01           1220 	ld	hl,#_delayA
   02A9 7E                 1221 	ld	a,(hl)
   02AA 81                 1222 	add	a,c
   02AB 21 66 01           1223 	ld	hl,#_xA
   02AE 77                 1224 	ld	(hl),a
                           1225 ;	genLabel
   02AF                    1226 00134$:
                           1227 ;	genEndFunction
   02AF E8 06              1228 	lda	sp,6(sp)
   02B1 C9                 1229 	ret
   02B2                    1230 ___fillDrumA_end:
                           1231 ;	square.c 211
                           1232 ;	genLabel
                           1233 ;	genFunction
                           1234 ;	---------------------------------
                           1235 ; Function fillDrumB
                           1236 ; ---------------------------------
   02B2                    1237 ___fillDrumB_start:
   02B2                    1238 _fillDrumB:
   02B2 E8 FA              1239 	lda	sp,-6(sp)
                           1240 ;	square.c 212
                           1241 ;	genAssign
                           1242 ;	AOP_HL for _bucket
   02B4 21 5C 01           1243 	ld	hl,#_bucket
   02B7 36 00              1244 	ld	(hl),#0x00
                           1245 ;	square.c 213
                           1246 ;	genAssign
                           1247 ;	AOP_HL for _i
   02B9 21 5D 01           1248 	ld	hl,#_i
   02BC 36 00              1249 	ld	(hl),#0x00
                           1250 ;	genLabel
   02BE                    1251 00118$:
                           1252 ;	genCmpLt
                           1253 ;	AOP_HL for _i
                           1254 ;	AOP_HL for _totalStepsB
   02BE 21 5D 01           1255 	ld	hl,#_i
   02C1 7E                 1256 	ld	a,(hl)
   02C2 21 73 01           1257 	ld	hl,#_totalStepsB
   02C5 96                 1258 	sub	a,(hl)
   02C6 D2 1F 03           1259 	jp	nc,00121$
                           1260 ;	square.c 215
                           1261 ;	genPlus
                           1262 ;	AOP_HL for _bucket
                           1263 ;	AOP_HL for _numberOfPulsesB
                           1264 ;	Can't optimise plus by inc, falling back to the normal way
   02C9 21 5C 01           1265 	ld	hl,#_bucket
   02CC 7E                 1266 	ld	a,(hl)
   02CD 21 72 01           1267 	ld	hl,#_numberOfPulsesB
   02D0 86                 1268 	add	a,(hl)
   02D1 21 5C 01           1269 	ld	hl,#_bucket
   02D4 77                 1270 	ld	(hl),a
                           1271 ;	square.c 216
                           1272 ;	genMinus
                           1273 ;	AOP_HL for _totalStepsB
   02D5 21 73 01           1274 	ld	hl,#_totalStepsB
   02D8 7E                 1275 	ld	a,(hl)
   02D9 C6 FF              1276 	add	a,#0xFF
                           1277 ;	genCmpGt
                           1278 ;	AOP_HL for _bucket
   02DB 4F                 1279 	ld	c,a
   02DC 21 5C 01           1280 	ld	hl,#_bucket
   02DF 96                 1281 	sub	a,(hl)
   02E0 D2 FE 02           1282 	jp	nc,00104$
                           1283 ;	square.c 218
                           1284 ;	genMinus
                           1285 ;	AOP_HL for _bucket
                           1286 ;	AOP_HL for _totalStepsB
   02E3 7E                 1287 	ld	a,(hl)
   02E4 21 73 01           1288 	ld	hl,#_totalStepsB
   02E7 96                 1289 	sub	a,(hl)
   02E8 21 5C 01           1290 	ld	hl,#_bucket
   02EB 77                 1291 	ld	(hl),a
                           1292 ;	square.c 219
                           1293 ;	genPlus
                           1294 ;	AOP_HL for _i
                           1295 ;	Can't optimise plus by inc, falling back to the normal way
   02EC 3E 90              1296 	ld	a,#<_drumB
   02EE 21 5D 01           1297 	ld	hl,#_i
   02F1 86                 1298 	add	a,(hl)
   02F2 4F                 1299 	ld	c,a
   02F3 3E 00              1300 	ld	a,#>_drumB
   02F5 CE 00              1301 	adc	a,#0x00
   02F7 47                 1302 	ld	b,a
                           1303 ;	genAssign (pointer)
   02F8 3E 01              1304 	ld	a,#0x01
   02FA 02                 1305 	ld	(bc),a
                           1306 ;	genGoto
   02FB C3 18 03           1307 	jp	00120$
                           1308 ;	genLabel
   02FE                    1309 00104$:
                           1310 ;	square.c 221
                           1311 ;	genCmpLt
                           1312 ;	AOP_HL for _bucket
                           1313 ;	AOP_HL for _totalStepsB
   02FE 21 5C 01           1314 	ld	hl,#_bucket
   0301 7E                 1315 	ld	a,(hl)
   0302 21 73 01           1316 	ld	hl,#_totalStepsB
   0305 96                 1317 	sub	a,(hl)
   0306 D2 18 03           1318 	jp	nc,00120$
                           1319 ;	square.c 223
                           1320 ;	genPlus
                           1321 ;	AOP_HL for _i
                           1322 ;	Can't optimise plus by inc, falling back to the normal way
   0309 3E 90              1323 	ld	a,#<_drumB
   030B 21 5D 01           1324 	ld	hl,#_i
   030E 86                 1325 	add	a,(hl)
   030F 4F                 1326 	ld	c,a
   0310 3E 00              1327 	ld	a,#>_drumB
   0312 CE 00              1328 	adc	a,#0x00
   0314 47                 1329 	ld	b,a
                           1330 ;	genAssign (pointer)
   0315 3E 00              1331 	ld	a,#0x00
   0317 02                 1332 	ld	(bc),a
                           1333 ;	genLabel
   0318                    1334 00120$:
                           1335 ;	square.c 213
                           1336 ;	genPlus
                           1337 ;	AOP_HL for _i
                           1338 ;	genPlusIncr
   0318 21 5D 01           1339 	ld	hl,#_i
   031B 34                 1340 	inc	(hl)
                           1341 ;	genGoto
   031C C3 BE 02           1342 	jp	00118$
                           1343 ;	genLabel
   031F                    1344 00121$:
                           1345 ;	square.c 226
                           1346 ;	genPointerGet
                           1347 ;	AOP_HL for _first
   031F 11 90 00           1348 	ld	de,#_drumB
   0322 1A                 1349 	ld	a,(de)
   0323 21 62 01           1350 	ld	hl,#_first
   0326 77                 1351 	ld	(hl),a
                           1352 ;	square.c 227
                           1353 ;	genIpush
                           1354 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0327 3E 01              1355 	ld	a,#0x01
   0329 F5                 1356 	push	af
   032A 33                 1357 	inc	sp
                           1358 ;	genCall
   032B CD 00 00           1359 	call	_performantdelay
   032E E8 01              1360 	lda	sp,1(sp)
                           1361 ;	square.c 229
                           1362 ;	genCmpGt
                           1363 ;	AOP_HL for _numberOfPulsesB
                           1364 ;	AOP_STK for _fillDrumB_sloc3_1_0
   0330 3E 00              1365 	ld	a,#0x00
   0332 21 72 01           1366 	ld	hl,#_numberOfPulsesB
   0335 96                 1367 	sub	a,(hl)
   0336 3E 00              1368 	ld	a,#0x00
   0338 17                 1369 	rla
   0339 F8 00              1370 	lda	hl,0(sp)
   033B 77                 1371 	ld	(hl),a
                           1372 ;	genIfx
                           1373 ;	AOP_STK for _fillDrumB_sloc3_1_0
   033C AF                 1374 	xor	a,a
   033D B6                 1375 	or	a,(hl)
   033E CA CE 03           1376 	jp	z,00113$
                           1377 ;	genCmpEq
                           1378 ;	AOP_HL for _first
                           1379 ; genCmpEq: left 1, right 1, result 0
   0341 21 62 01           1380 	ld	hl,#_first
   0344 7E                 1381 	ld	a,(hl)
   0345 FE 01              1382 	cp	a,#0x01
   0347 CA CE 03           1383 	jp	z,00113$
   034A                    1384 00153$:
                           1385 ;	square.c 231
                           1386 ;	genAssign
                           1387 ;	AOP_HL for _f
   034A 21 64 01           1388 	ld	hl,#_f
   034D 36 00              1389 	ld	(hl),#0x00
                           1390 ;	genLabel
   034F                    1391 00108$:
                           1392 ;	genCmpLt
                           1393 ;	AOP_HL for _f
                           1394 ;	AOP_HL for _totalStepsB
   034F 21 64 01           1395 	ld	hl,#_f
   0352 7E                 1396 	ld	a,(hl)
   0353 21 73 01           1397 	ld	hl,#_totalStepsB
   0356 96                 1398 	sub	a,(hl)
   0357 D2 CE 03           1399 	jp	nc,00113$
                           1400 ;	square.c 232
                           1401 ;	genAssign
                           1402 ;	AOP_HL for _x
   035A 21 65 01           1403 	ld	hl,#_x
   035D 36 00              1404 	ld	(hl),#0x00
                           1405 ;	genLabel
   035F                    1406 00122$:
                           1407 ;	genCmpLt
                           1408 ;	AOP_HL for _x
                           1409 ;	AOP_HL for _totalStepsB
   035F 21 65 01           1410 	ld	hl,#_x
   0362 7E                 1411 	ld	a,(hl)
   0363 21 73 01           1412 	ld	hl,#_totalStepsB
   0366 96                 1413 	sub	a,(hl)
   0367 3E 00              1414 	ld	a,#0x00
   0369 17                 1415 	rla
   036A 47                 1416 	ld	b,a
                           1417 ;	genIfx
   036B AF                 1418 	xor	a,a
   036C B0                 1419 	or	a,b
   036D CA A8 03           1420 	jp	z,00125$
                           1421 ;	square.c 233
                           1422 ;	genPlus
                           1423 ;	AOP_HL for _x
                           1424 ;	AOP_STK for _fillDrumB_sloc0_1_0
                           1425 ;	Can't optimise plus by inc, falling back to the normal way
   0370 11 90 00           1426 	ld	de,#_drumB
   0373 21 65 01           1427 	ld	hl,#_x
   0376 6E                 1428 	ld	l,(hl)
   0377 26 00              1429 	ld	h,#0x00
   0379 19                 1430 	add	hl,de
   037A 7D                 1431 	ld	a,l
   037B 54                 1432 	ld	d,h
   037C F8 04              1433 	lda	hl,4(sp)
   037E 22                 1434 	ld	(hl+),a
   037F 72                 1435 	ld	(hl),d
                           1436 ;	genPlus
                           1437 ;	AOP_HL for _x
                           1438 ;	AOP_STK for _fillDrumB_sloc1_1_0
                           1439 ;	genPlusIncr
                           1440 ;	Can't optimise plus by inc, falling back to the normal way
   0380 21 65 01           1441 	ld	hl,#_x
   0383 7E                 1442 	ld	a,(hl)
   0384 C6 01              1443 	add	a,#0x01
   0386 F8 03              1444 	lda	hl,3(sp)
   0388 77                 1445 	ld	(hl),a
                           1446 ;	genPlus
                           1447 ;	AOP_STK for _fillDrumB_sloc1_1_0
                           1448 ;	AOP_STK for _fillDrumB_sloc2_1_0
                           1449 ;	Can't optimise plus by inc, falling back to the normal way
   0389 11 90 00           1450 	ld	de,#_drumB
   038C 6E                 1451 	ld	l,(hl)
   038D 26 00              1452 	ld	h,#0x00
   038F 19                 1453 	add	hl,de
   0390 7D                 1454 	ld	a,l
   0391 54                 1455 	ld	d,h
   0392 F8 01              1456 	lda	hl,1(sp)
                           1457 ;	genPointerGet
                           1458 ;	AOP_STK for _fillDrumB_sloc2_1_0
   0394 22                 1459 	ld	(hl+),a
   0395 72                 1460 	ld	(hl),d
   0396 5F                 1461 	ld	e,a
   0397 1A                 1462 	ld	a,(de)
                           1463 ;	genAssign (pointer)
                           1464 ;	AOP_STK for _fillDrumB_sloc0_1_0
   0398 23                 1465 	inc	hl
   0399 23                 1466 	inc	hl
   039A 5E                 1467 	ld	e,(hl)
   039B 23                 1468 	inc	hl
   039C 56                 1469 	ld	d,(hl)
   039D 12                 1470 	ld	(de),a
                           1471 ;	square.c 232
                           1472 ;	genAssign
                           1473 ;	AOP_STK for _fillDrumB_sloc1_1_0
   039E 2B                 1474 	dec	hl
   039F 2B                 1475 	dec	hl
   03A0 4E                 1476 	ld	c,(hl)
                           1477 ;	genAssign
                           1478 ;	AOP_HL for _x
   03A1 21 65 01           1479 	ld	hl,#_x
   03A4 71                 1480 	ld	(hl),c
                           1481 ;	genGoto
   03A5 C3 5F 03           1482 	jp	00122$
                           1483 ;	genLabel
   03A8                    1484 00125$:
                           1485 ;	square.c 235
                           1486 ;	genMinus
                           1487 ;	AOP_HL for _totalStepsB
   03A8 21 73 01           1488 	ld	hl,#_totalStepsB
   03AB 7E                 1489 	ld	a,(hl)
   03AC C6 FF              1490 	add	a,#0xFF
   03AE 4F                 1491 	ld	c,a
                           1492 ;	genPlus
                           1493 ;	Can't optimise plus by inc, falling back to the normal way
   03AF 3E 90              1494 	ld	a,#<_drumB
   03B1 81                 1495 	add	a,c
   03B2 4F                 1496 	ld	c,a
   03B3 3E 00              1497 	ld	a,#>_drumB
   03B5 CE 00              1498 	adc	a,#0x00
   03B7 47                 1499 	ld	b,a
                           1500 ;	genAssign (pointer)
                           1501 ;	AOP_HL for _first
   03B8 21 62 01           1502 	ld	hl,#_first
   03BB 7E                 1503 	ld	a,(hl)
   03BC 02                 1504 	ld	(bc),a
                           1505 ;	square.c 236
                           1506 ;	genPointerGet
   03BD 11 90 00           1507 	ld	de,#_drumB
   03C0 1A                 1508 	ld	a,(de)
                           1509 ;	genCmpEq
                           1510 ; genCmpEq: left 1, right 1, result 0
   03C1 4F                 1511 	ld	c,a
   03C2 FE 01              1512 	cp	a,#0x01
   03C4 CA CE 03           1513 	jp	z,00113$
   03C7                    1514 00154$:
                           1515 ;	square.c 231
                           1516 ;	genPlus
                           1517 ;	AOP_HL for _f
                           1518 ;	genPlusIncr
   03C7 21 64 01           1519 	ld	hl,#_f
   03CA 34                 1520 	inc	(hl)
                           1521 ;	genGoto
   03CB C3 4F 03           1522 	jp	00108$
                           1523 ;	genLabel
   03CE                    1524 00113$:
                           1525 ;	square.c 243
                           1526 ;	genMinus
                           1527 ;	AOP_HL for _totalStepsB
   03CE 21 73 01           1528 	ld	hl,#_totalStepsB
   03D1 7E                 1529 	ld	a,(hl)
   03D2 C6 FF              1530 	add	a,#0xFF
   03D4 4F                 1531 	ld	c,a
                           1532 ;	genPlus
                           1533 ;	Can't optimise plus by inc, falling back to the normal way
   03D5 3E 90              1534 	ld	a,#<_drumB
   03D7 81                 1535 	add	a,c
   03D8 4F                 1536 	ld	c,a
   03D9 3E 00              1537 	ld	a,#>_drumB
   03DB CE 00              1538 	adc	a,#0x00
   03DD 47                 1539 	ld	b,a
                           1540 ;	genPointerGet
                           1541 ;	AOP_HL for _last
   03DE 0A                 1542 	ld	a,(bc)
   03DF 21 63 01           1543 	ld	hl,#_last
   03E2 77                 1544 	ld	(hl),a
                           1545 ;	square.c 244
                           1546 ;	genIfx
                           1547 ;	AOP_STK for _fillDrumB_sloc3_1_0
   03E3 AF                 1548 	xor	a,a
   03E4 F8 00              1549 	lda	hl,0(sp)
   03E6 B6                 1550 	or	a,(hl)
   03E7 CA 5E 04           1551 	jp	z,00116$
                           1552 ;	genCmpEq
                           1553 ;	AOP_HL for _offStepB
                           1554 ; genCmpEq: left 1, right 1, result 0
   03EA 21 79 01           1555 	ld	hl,#_offStepB
   03ED 7E                 1556 	ld	a,(hl)
   03EE B7                 1557 	or	a,a
   03EF CA 5E 04           1558 	jp	z,00116$
   03F2                    1559 00155$:
                           1560 ;	square.c 246
                           1561 ;	genAssign
                           1562 ;	AOP_HL for _f
   03F2 21 64 01           1563 	ld	hl,#_f
   03F5 36 00              1564 	ld	(hl),#0x00
                           1565 ;	genLabel
   03F7                    1566 00130$:
                           1567 ;	genCmpLt
                           1568 ;	AOP_HL for _f
                           1569 ;	AOP_HL for _offStepB
   03F7 21 64 01           1570 	ld	hl,#_f
   03FA 7E                 1571 	ld	a,(hl)
   03FB 21 79 01           1572 	ld	hl,#_offStepB
   03FE 96                 1573 	sub	a,(hl)
   03FF D2 5E 04           1574 	jp	nc,00116$
                           1575 ;	square.c 247
                           1576 ;	genAssign
                           1577 ;	AOP_HL for _totalStepsB
                           1578 ;	AOP_HL for _x
   0402 21 73 01           1579 	ld	hl,#_totalStepsB
   0405 7E                 1580 	ld	a,(hl)
   0406 21 65 01           1581 	ld	hl,#_x
   0409 77                 1582 	ld	(hl),a
                           1583 ;	genLabel
   040A                    1584 00126$:
                           1585 ;	genCmpGt
                           1586 ;	AOP_HL for _x
                           1587 ;	AOP_STK for _fillDrumB_sloc3_1_0
   040A 3E 00              1588 	ld	a,#0x00
   040C 21 65 01           1589 	ld	hl,#_x
   040F 96                 1590 	sub	a,(hl)
   0410 3E 00              1591 	ld	a,#0x00
   0412 17                 1592 	rla
   0413 F8 00              1593 	lda	hl,0(sp)
   0415 77                 1594 	ld	(hl),a
                           1595 ;	genIfx
                           1596 ;	AOP_STK for _fillDrumB_sloc3_1_0
   0416 AF                 1597 	xor	a,a
   0417 B6                 1598 	or	a,(hl)
   0418 CA 4F 04           1599 	jp	z,00129$
                           1600 ;	square.c 248
                           1601 ;	genPlus
                           1602 ;	AOP_HL for _x
                           1603 ;	AOP_STK for _fillDrumB_sloc2_1_0
                           1604 ;	Can't optimise plus by inc, falling back to the normal way
   041B 11 90 00           1605 	ld	de,#_drumB
   041E 21 65 01           1606 	ld	hl,#_x
   0421 6E                 1607 	ld	l,(hl)
   0422 26 00              1608 	ld	h,#0x00
   0424 19                 1609 	add	hl,de
   0425 7D                 1610 	ld	a,l
   0426 54                 1611 	ld	d,h
   0427 F8 01              1612 	lda	hl,1(sp)
   0429 22                 1613 	ld	(hl+),a
   042A 72                 1614 	ld	(hl),d
                           1615 ;	genMinus
                           1616 ;	AOP_HL for _x
   042B 21 65 01           1617 	ld	hl,#_x
   042E 7E                 1618 	ld	a,(hl)
   042F C6 FF              1619 	add	a,#0xFF
   0431 47                 1620 	ld	b,a
                           1621 ;	genPlus
                           1622 ;	AOP_STK for _fillDrumB_sloc0_1_0
                           1623 ;	Can't optimise plus by inc, falling back to the normal way
   0432 11 90 00           1624 	ld	de,#_drumB
   0435 68                 1625 	ld	l,b
   0436 26 00              1626 	ld	h,#0x00
   0438 19                 1627 	add	hl,de
   0439 7D                 1628 	ld	a,l
   043A 54                 1629 	ld	d,h
   043B F8 04              1630 	lda	hl,4(sp)
                           1631 ;	genPointerGet
                           1632 ;	AOP_STK for _fillDrumB_sloc0_1_0
   043D 22                 1633 	ld	(hl+),a
   043E 72                 1634 	ld	(hl),d
   043F 5F                 1635 	ld	e,a
   0440 1A                 1636 	ld	a,(de)
                           1637 ;	genAssign (pointer)
                           1638 ;	AOP_STK for _fillDrumB_sloc2_1_0
   0441 F8 01              1639 	lda	hl,1(sp)
   0443 5E                 1640 	ld	e,(hl)
   0444 23                 1641 	inc	hl
   0445 56                 1642 	ld	d,(hl)
   0446 12                 1643 	ld	(de),a
                           1644 ;	square.c 247
                           1645 ;	genAssign
   0447 48                 1646 	ld	c,b
                           1647 ;	genAssign
                           1648 ;	AOP_HL for _x
   0448 21 65 01           1649 	ld	hl,#_x
   044B 71                 1650 	ld	(hl),c
                           1651 ;	genGoto
   044C C3 0A 04           1652 	jp	00126$
                           1653 ;	genLabel
   044F                    1654 00129$:
                           1655 ;	square.c 250
                           1656 ;	genAssign (pointer)
                           1657 ;	AOP_HL for _last
   044F 11 90 00           1658 	ld	de,#_drumB
   0452 21 63 01           1659 	ld	hl,#_last
   0455 7E                 1660 	ld	a,(hl)
   0456 12                 1661 	ld	(de),a
                           1662 ;	square.c 246
                           1663 ;	genPlus
                           1664 ;	AOP_HL for _f
                           1665 ;	genPlusIncr
   0457 21 64 01           1666 	ld	hl,#_f
   045A 34                 1667 	inc	(hl)
                           1668 ;	genGoto
   045B C3 F7 03           1669 	jp	00130$
                           1670 ;	genLabel
   045E                    1671 00116$:
                           1672 ;	square.c 253
                           1673 ;	genCall
                           1674 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   045E CD 14 00           1675 	call	_rand
                           1676 ;	AOP_HL for _randB
   0461 21 60 01           1677 	ld	hl,#_randB
   0464 73                 1678 	ld	(hl),e
                           1679 ;	square.c 254
                           1680 ;	genIpush
                           1681 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0465 3E 1E              1682 	ld	a,#0x1E
   0467 F5                 1683 	push	af
   0468 33                 1684 	inc	sp
                           1685 ;	genIpush
                           1686 ;	AOP_HL for _randB
   0469 21 60 01           1687 	ld	hl,#_randB
   046C 7E                 1688 	ld	a,(hl)
   046D F5                 1689 	push	af
   046E 33                 1690 	inc	sp
                           1691 ;	genCall
   046F CD 00 00           1692 	call	__moduchar_rrx_s
   0472 4B                 1693 	ld	c,e
   0473 E8 02              1694 	lda	sp,2(sp)
                           1695 ;	genPlus
                           1696 ;	AOP_HL for _delayB
                           1697 ;	AOP_HL for _xB
                           1698 ;	Can't optimise plus by inc, falling back to the normal way
   0475 21 6A 01           1699 	ld	hl,#_delayB
   0478 7E                 1700 	ld	a,(hl)
   0479 81                 1701 	add	a,c
   047A 21 67 01           1702 	ld	hl,#_xB
   047D 77                 1703 	ld	(hl),a
                           1704 ;	genLabel
   047E                    1705 00134$:
                           1706 ;	genEndFunction
   047E E8 06              1707 	lda	sp,6(sp)
   0480 C9                 1708 	ret
   0481                    1709 ___fillDrumB_end:
                           1710 ;	square.c 258
                           1711 ;	genLabel
                           1712 ;	genFunction
                           1713 ;	---------------------------------
                           1714 ; Function fillDrumC
                           1715 ; ---------------------------------
   0481                    1716 ___fillDrumC_start:
   0481                    1717 _fillDrumC:
   0481 E8 FA              1718 	lda	sp,-6(sp)
                           1719 ;	square.c 259
                           1720 ;	genAssign
                           1721 ;	AOP_HL for _bucket
   0483 21 5C 01           1722 	ld	hl,#_bucket
   0486 36 00              1723 	ld	(hl),#0x00
                           1724 ;	square.c 260
                           1725 ;	genAssign
                           1726 ;	AOP_HL for _i
   0488 21 5D 01           1727 	ld	hl,#_i
   048B 36 00              1728 	ld	(hl),#0x00
                           1729 ;	genLabel
   048D                    1730 00118$:
                           1731 ;	genCmpLt
                           1732 ;	AOP_HL for _i
                           1733 ;	AOP_HL for _totalStepsC
   048D 21 5D 01           1734 	ld	hl,#_i
   0490 7E                 1735 	ld	a,(hl)
   0491 21 76 01           1736 	ld	hl,#_totalStepsC
   0494 96                 1737 	sub	a,(hl)
   0495 D2 EE 04           1738 	jp	nc,00121$
                           1739 ;	square.c 262
                           1740 ;	genPlus
                           1741 ;	AOP_HL for _bucket
                           1742 ;	AOP_HL for _numberOfPulsesC
                           1743 ;	Can't optimise plus by inc, falling back to the normal way
   0498 21 5C 01           1744 	ld	hl,#_bucket
   049B 7E                 1745 	ld	a,(hl)
   049C 21 75 01           1746 	ld	hl,#_numberOfPulsesC
   049F 86                 1747 	add	a,(hl)
   04A0 21 5C 01           1748 	ld	hl,#_bucket
   04A3 77                 1749 	ld	(hl),a
                           1750 ;	square.c 263
                           1751 ;	genMinus
                           1752 ;	AOP_HL for _totalStepsC
   04A4 21 76 01           1753 	ld	hl,#_totalStepsC
   04A7 7E                 1754 	ld	a,(hl)
   04A8 C6 FF              1755 	add	a,#0xFF
                           1756 ;	genCmpGt
                           1757 ;	AOP_HL for _bucket
   04AA 4F                 1758 	ld	c,a
   04AB 21 5C 01           1759 	ld	hl,#_bucket
   04AE 96                 1760 	sub	a,(hl)
   04AF D2 CD 04           1761 	jp	nc,00104$
                           1762 ;	square.c 265
                           1763 ;	genMinus
                           1764 ;	AOP_HL for _bucket
                           1765 ;	AOP_HL for _totalStepsC
   04B2 7E                 1766 	ld	a,(hl)
   04B3 21 76 01           1767 	ld	hl,#_totalStepsC
   04B6 96                 1768 	sub	a,(hl)
   04B7 21 5C 01           1769 	ld	hl,#_bucket
   04BA 77                 1770 	ld	(hl),a
                           1771 ;	square.c 266
                           1772 ;	genPlus
                           1773 ;	AOP_HL for _i
                           1774 ;	Can't optimise plus by inc, falling back to the normal way
   04BB 3E B0              1775 	ld	a,#<_drumC
   04BD 21 5D 01           1776 	ld	hl,#_i
   04C0 86                 1777 	add	a,(hl)
   04C1 4F                 1778 	ld	c,a
   04C2 3E 00              1779 	ld	a,#>_drumC
   04C4 CE 00              1780 	adc	a,#0x00
   04C6 47                 1781 	ld	b,a
                           1782 ;	genAssign (pointer)
   04C7 3E 01              1783 	ld	a,#0x01
   04C9 02                 1784 	ld	(bc),a
                           1785 ;	genGoto
   04CA C3 E7 04           1786 	jp	00120$
                           1787 ;	genLabel
   04CD                    1788 00104$:
                           1789 ;	square.c 268
                           1790 ;	genCmpLt
                           1791 ;	AOP_HL for _bucket
                           1792 ;	AOP_HL for _totalStepsC
   04CD 21 5C 01           1793 	ld	hl,#_bucket
   04D0 7E                 1794 	ld	a,(hl)
   04D1 21 76 01           1795 	ld	hl,#_totalStepsC
   04D4 96                 1796 	sub	a,(hl)
   04D5 D2 E7 04           1797 	jp	nc,00120$
                           1798 ;	square.c 270
                           1799 ;	genPlus
                           1800 ;	AOP_HL for _i
                           1801 ;	Can't optimise plus by inc, falling back to the normal way
   04D8 3E B0              1802 	ld	a,#<_drumC
   04DA 21 5D 01           1803 	ld	hl,#_i
   04DD 86                 1804 	add	a,(hl)
   04DE 4F                 1805 	ld	c,a
   04DF 3E 00              1806 	ld	a,#>_drumC
   04E1 CE 00              1807 	adc	a,#0x00
   04E3 47                 1808 	ld	b,a
                           1809 ;	genAssign (pointer)
   04E4 3E 00              1810 	ld	a,#0x00
   04E6 02                 1811 	ld	(bc),a
                           1812 ;	genLabel
   04E7                    1813 00120$:
                           1814 ;	square.c 260
                           1815 ;	genPlus
                           1816 ;	AOP_HL for _i
                           1817 ;	genPlusIncr
   04E7 21 5D 01           1818 	ld	hl,#_i
   04EA 34                 1819 	inc	(hl)
                           1820 ;	genGoto
   04EB C3 8D 04           1821 	jp	00118$
                           1822 ;	genLabel
   04EE                    1823 00121$:
                           1824 ;	square.c 273
                           1825 ;	genPointerGet
                           1826 ;	AOP_HL for _first
   04EE 11 B0 00           1827 	ld	de,#_drumC
   04F1 1A                 1828 	ld	a,(de)
   04F2 21 62 01           1829 	ld	hl,#_first
   04F5 77                 1830 	ld	(hl),a
                           1831 ;	square.c 274
                           1832 ;	genIpush
                           1833 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   04F6 3E 01              1834 	ld	a,#0x01
   04F8 F5                 1835 	push	af
   04F9 33                 1836 	inc	sp
                           1837 ;	genCall
   04FA CD 00 00           1838 	call	_performantdelay
   04FD E8 01              1839 	lda	sp,1(sp)
                           1840 ;	square.c 276
                           1841 ;	genCmpGt
                           1842 ;	AOP_HL for _numberOfPulsesC
                           1843 ;	AOP_STK for _fillDrumC_sloc3_1_0
   04FF 3E 00              1844 	ld	a,#0x00
   0501 21 75 01           1845 	ld	hl,#_numberOfPulsesC
   0504 96                 1846 	sub	a,(hl)
   0505 3E 00              1847 	ld	a,#0x00
   0507 17                 1848 	rla
   0508 F8 00              1849 	lda	hl,0(sp)
   050A 77                 1850 	ld	(hl),a
                           1851 ;	genIfx
                           1852 ;	AOP_STK for _fillDrumC_sloc3_1_0
   050B AF                 1853 	xor	a,a
   050C B6                 1854 	or	a,(hl)
   050D CA 9D 05           1855 	jp	z,00113$
                           1856 ;	genCmpEq
                           1857 ;	AOP_HL for _first
                           1858 ; genCmpEq: left 1, right 1, result 0
   0510 21 62 01           1859 	ld	hl,#_first
   0513 7E                 1860 	ld	a,(hl)
   0514 FE 01              1861 	cp	a,#0x01
   0516 CA 9D 05           1862 	jp	z,00113$
   0519                    1863 00153$:
                           1864 ;	square.c 278
                           1865 ;	genAssign
                           1866 ;	AOP_HL for _f
   0519 21 64 01           1867 	ld	hl,#_f
   051C 36 00              1868 	ld	(hl),#0x00
                           1869 ;	genLabel
   051E                    1870 00108$:
                           1871 ;	genCmpLt
                           1872 ;	AOP_HL for _f
                           1873 ;	AOP_HL for _totalStepsC
   051E 21 64 01           1874 	ld	hl,#_f
   0521 7E                 1875 	ld	a,(hl)
   0522 21 76 01           1876 	ld	hl,#_totalStepsC
   0525 96                 1877 	sub	a,(hl)
   0526 D2 9D 05           1878 	jp	nc,00113$
                           1879 ;	square.c 279
                           1880 ;	genAssign
                           1881 ;	AOP_HL for _x
   0529 21 65 01           1882 	ld	hl,#_x
   052C 36 00              1883 	ld	(hl),#0x00
                           1884 ;	genLabel
   052E                    1885 00122$:
                           1886 ;	genCmpLt
                           1887 ;	AOP_HL for _x
                           1888 ;	AOP_HL for _totalStepsC
   052E 21 65 01           1889 	ld	hl,#_x
   0531 7E                 1890 	ld	a,(hl)
   0532 21 76 01           1891 	ld	hl,#_totalStepsC
   0535 96                 1892 	sub	a,(hl)
   0536 3E 00              1893 	ld	a,#0x00
   0538 17                 1894 	rla
   0539 47                 1895 	ld	b,a
                           1896 ;	genIfx
   053A AF                 1897 	xor	a,a
   053B B0                 1898 	or	a,b
   053C CA 77 05           1899 	jp	z,00125$
                           1900 ;	square.c 280
                           1901 ;	genPlus
                           1902 ;	AOP_HL for _x
                           1903 ;	AOP_STK for _fillDrumC_sloc0_1_0
                           1904 ;	Can't optimise plus by inc, falling back to the normal way
   053F 11 B0 00           1905 	ld	de,#_drumC
   0542 21 65 01           1906 	ld	hl,#_x
   0545 6E                 1907 	ld	l,(hl)
   0546 26 00              1908 	ld	h,#0x00
   0548 19                 1909 	add	hl,de
   0549 7D                 1910 	ld	a,l
   054A 54                 1911 	ld	d,h
   054B F8 04              1912 	lda	hl,4(sp)
   054D 22                 1913 	ld	(hl+),a
   054E 72                 1914 	ld	(hl),d
                           1915 ;	genPlus
                           1916 ;	AOP_HL for _x
                           1917 ;	AOP_STK for _fillDrumC_sloc1_1_0
                           1918 ;	genPlusIncr
                           1919 ;	Can't optimise plus by inc, falling back to the normal way
   054F 21 65 01           1920 	ld	hl,#_x
   0552 7E                 1921 	ld	a,(hl)
   0553 C6 01              1922 	add	a,#0x01
   0555 F8 03              1923 	lda	hl,3(sp)
   0557 77                 1924 	ld	(hl),a
                           1925 ;	genPlus
                           1926 ;	AOP_STK for _fillDrumC_sloc1_1_0
                           1927 ;	AOP_STK for _fillDrumC_sloc2_1_0
                           1928 ;	Can't optimise plus by inc, falling back to the normal way
   0558 11 B0 00           1929 	ld	de,#_drumC
   055B 6E                 1930 	ld	l,(hl)
   055C 26 00              1931 	ld	h,#0x00
   055E 19                 1932 	add	hl,de
   055F 7D                 1933 	ld	a,l
   0560 54                 1934 	ld	d,h
   0561 F8 01              1935 	lda	hl,1(sp)
                           1936 ;	genPointerGet
                           1937 ;	AOP_STK for _fillDrumC_sloc2_1_0
   0563 22                 1938 	ld	(hl+),a
   0564 72                 1939 	ld	(hl),d
   0565 5F                 1940 	ld	e,a
   0566 1A                 1941 	ld	a,(de)
                           1942 ;	genAssign (pointer)
                           1943 ;	AOP_STK for _fillDrumC_sloc0_1_0
   0567 23                 1944 	inc	hl
   0568 23                 1945 	inc	hl
   0569 5E                 1946 	ld	e,(hl)
   056A 23                 1947 	inc	hl
   056B 56                 1948 	ld	d,(hl)
   056C 12                 1949 	ld	(de),a
                           1950 ;	square.c 279
                           1951 ;	genAssign
                           1952 ;	AOP_STK for _fillDrumC_sloc1_1_0
   056D 2B                 1953 	dec	hl
   056E 2B                 1954 	dec	hl
   056F 4E                 1955 	ld	c,(hl)
                           1956 ;	genAssign
                           1957 ;	AOP_HL for _x
   0570 21 65 01           1958 	ld	hl,#_x
   0573 71                 1959 	ld	(hl),c
                           1960 ;	genGoto
   0574 C3 2E 05           1961 	jp	00122$
                           1962 ;	genLabel
   0577                    1963 00125$:
                           1964 ;	square.c 282
                           1965 ;	genMinus
                           1966 ;	AOP_HL for _totalStepsC
   0577 21 76 01           1967 	ld	hl,#_totalStepsC
   057A 7E                 1968 	ld	a,(hl)
   057B C6 FF              1969 	add	a,#0xFF
   057D 4F                 1970 	ld	c,a
                           1971 ;	genPlus
                           1972 ;	Can't optimise plus by inc, falling back to the normal way
   057E 3E B0              1973 	ld	a,#<_drumC
   0580 81                 1974 	add	a,c
   0581 4F                 1975 	ld	c,a
   0582 3E 00              1976 	ld	a,#>_drumC
   0584 CE 00              1977 	adc	a,#0x00
   0586 47                 1978 	ld	b,a
                           1979 ;	genAssign (pointer)
                           1980 ;	AOP_HL for _first
   0587 21 62 01           1981 	ld	hl,#_first
   058A 7E                 1982 	ld	a,(hl)
   058B 02                 1983 	ld	(bc),a
                           1984 ;	square.c 283
                           1985 ;	genPointerGet
   058C 11 B0 00           1986 	ld	de,#_drumC
   058F 1A                 1987 	ld	a,(de)
                           1988 ;	genCmpEq
                           1989 ; genCmpEq: left 1, right 1, result 0
   0590 4F                 1990 	ld	c,a
   0591 FE 01              1991 	cp	a,#0x01
   0593 CA 9D 05           1992 	jp	z,00113$
   0596                    1993 00154$:
                           1994 ;	square.c 278
                           1995 ;	genPlus
                           1996 ;	AOP_HL for _f
                           1997 ;	genPlusIncr
   0596 21 64 01           1998 	ld	hl,#_f
   0599 34                 1999 	inc	(hl)
                           2000 ;	genGoto
   059A C3 1E 05           2001 	jp	00108$
                           2002 ;	genLabel
   059D                    2003 00113$:
                           2004 ;	square.c 289
                           2005 ;	genMinus
                           2006 ;	AOP_HL for _totalStepsC
   059D 21 76 01           2007 	ld	hl,#_totalStepsC
   05A0 7E                 2008 	ld	a,(hl)
   05A1 C6 FF              2009 	add	a,#0xFF
   05A3 4F                 2010 	ld	c,a
                           2011 ;	genPlus
                           2012 ;	Can't optimise plus by inc, falling back to the normal way
   05A4 3E B0              2013 	ld	a,#<_drumC
   05A6 81                 2014 	add	a,c
   05A7 4F                 2015 	ld	c,a
   05A8 3E 00              2016 	ld	a,#>_drumC
   05AA CE 00              2017 	adc	a,#0x00
   05AC 47                 2018 	ld	b,a
                           2019 ;	genPointerGet
                           2020 ;	AOP_HL for _last
   05AD 0A                 2021 	ld	a,(bc)
   05AE 21 63 01           2022 	ld	hl,#_last
   05B1 77                 2023 	ld	(hl),a
                           2024 ;	square.c 290
                           2025 ;	genIfx
                           2026 ;	AOP_STK for _fillDrumC_sloc3_1_0
   05B2 AF                 2027 	xor	a,a
   05B3 F8 00              2028 	lda	hl,0(sp)
   05B5 B6                 2029 	or	a,(hl)
   05B6 CA 2D 06           2030 	jp	z,00116$
                           2031 ;	genCmpEq
                           2032 ;	AOP_HL for _offStepC
                           2033 ; genCmpEq: left 1, right 1, result 0
   05B9 21 7A 01           2034 	ld	hl,#_offStepC
   05BC 7E                 2035 	ld	a,(hl)
   05BD B7                 2036 	or	a,a
   05BE CA 2D 06           2037 	jp	z,00116$
   05C1                    2038 00155$:
                           2039 ;	square.c 292
                           2040 ;	genAssign
                           2041 ;	AOP_HL for _f
   05C1 21 64 01           2042 	ld	hl,#_f
   05C4 36 00              2043 	ld	(hl),#0x00
                           2044 ;	genLabel
   05C6                    2045 00130$:
                           2046 ;	genCmpLt
                           2047 ;	AOP_HL for _f
                           2048 ;	AOP_HL for _offStepC
   05C6 21 64 01           2049 	ld	hl,#_f
   05C9 7E                 2050 	ld	a,(hl)
   05CA 21 7A 01           2051 	ld	hl,#_offStepC
   05CD 96                 2052 	sub	a,(hl)
   05CE D2 2D 06           2053 	jp	nc,00116$
                           2054 ;	square.c 293
                           2055 ;	genAssign
                           2056 ;	AOP_HL for _totalStepsC
                           2057 ;	AOP_HL for _x
   05D1 21 76 01           2058 	ld	hl,#_totalStepsC
   05D4 7E                 2059 	ld	a,(hl)
   05D5 21 65 01           2060 	ld	hl,#_x
   05D8 77                 2061 	ld	(hl),a
                           2062 ;	genLabel
   05D9                    2063 00126$:
                           2064 ;	genCmpGt
                           2065 ;	AOP_HL for _x
                           2066 ;	AOP_STK for _fillDrumC_sloc3_1_0
   05D9 3E 00              2067 	ld	a,#0x00
   05DB 21 65 01           2068 	ld	hl,#_x
   05DE 96                 2069 	sub	a,(hl)
   05DF 3E 00              2070 	ld	a,#0x00
   05E1 17                 2071 	rla
   05E2 F8 00              2072 	lda	hl,0(sp)
   05E4 77                 2073 	ld	(hl),a
                           2074 ;	genIfx
                           2075 ;	AOP_STK for _fillDrumC_sloc3_1_0
   05E5 AF                 2076 	xor	a,a
   05E6 B6                 2077 	or	a,(hl)
   05E7 CA 1E 06           2078 	jp	z,00129$
                           2079 ;	square.c 294
                           2080 ;	genPlus
                           2081 ;	AOP_HL for _x
                           2082 ;	AOP_STK for _fillDrumC_sloc2_1_0
                           2083 ;	Can't optimise plus by inc, falling back to the normal way
   05EA 11 B0 00           2084 	ld	de,#_drumC
   05ED 21 65 01           2085 	ld	hl,#_x
   05F0 6E                 2086 	ld	l,(hl)
   05F1 26 00              2087 	ld	h,#0x00
   05F3 19                 2088 	add	hl,de
   05F4 7D                 2089 	ld	a,l
   05F5 54                 2090 	ld	d,h
   05F6 F8 01              2091 	lda	hl,1(sp)
   05F8 22                 2092 	ld	(hl+),a
   05F9 72                 2093 	ld	(hl),d
                           2094 ;	genMinus
                           2095 ;	AOP_HL for _x
   05FA 21 65 01           2096 	ld	hl,#_x
   05FD 7E                 2097 	ld	a,(hl)
   05FE C6 FF              2098 	add	a,#0xFF
   0600 47                 2099 	ld	b,a
                           2100 ;	genPlus
                           2101 ;	AOP_STK for _fillDrumC_sloc0_1_0
                           2102 ;	Can't optimise plus by inc, falling back to the normal way
   0601 11 B0 00           2103 	ld	de,#_drumC
   0604 68                 2104 	ld	l,b
   0605 26 00              2105 	ld	h,#0x00
   0607 19                 2106 	add	hl,de
   0608 7D                 2107 	ld	a,l
   0609 54                 2108 	ld	d,h
   060A F8 04              2109 	lda	hl,4(sp)
                           2110 ;	genPointerGet
                           2111 ;	AOP_STK for _fillDrumC_sloc0_1_0
   060C 22                 2112 	ld	(hl+),a
   060D 72                 2113 	ld	(hl),d
   060E 5F                 2114 	ld	e,a
   060F 1A                 2115 	ld	a,(de)
                           2116 ;	genAssign (pointer)
                           2117 ;	AOP_STK for _fillDrumC_sloc2_1_0
   0610 F8 01              2118 	lda	hl,1(sp)
   0612 5E                 2119 	ld	e,(hl)
   0613 23                 2120 	inc	hl
   0614 56                 2121 	ld	d,(hl)
   0615 12                 2122 	ld	(de),a
                           2123 ;	square.c 293
                           2124 ;	genAssign
   0616 48                 2125 	ld	c,b
                           2126 ;	genAssign
                           2127 ;	AOP_HL for _x
   0617 21 65 01           2128 	ld	hl,#_x
   061A 71                 2129 	ld	(hl),c
                           2130 ;	genGoto
   061B C3 D9 05           2131 	jp	00126$
                           2132 ;	genLabel
   061E                    2133 00129$:
                           2134 ;	square.c 296
                           2135 ;	genAssign (pointer)
                           2136 ;	AOP_HL for _last
   061E 11 B0 00           2137 	ld	de,#_drumC
   0621 21 63 01           2138 	ld	hl,#_last
   0624 7E                 2139 	ld	a,(hl)
   0625 12                 2140 	ld	(de),a
                           2141 ;	square.c 292
                           2142 ;	genPlus
                           2143 ;	AOP_HL for _f
                           2144 ;	genPlusIncr
   0626 21 64 01           2145 	ld	hl,#_f
   0629 34                 2146 	inc	(hl)
                           2147 ;	genGoto
   062A C3 C6 05           2148 	jp	00130$
                           2149 ;	genLabel
   062D                    2150 00116$:
                           2151 ;	square.c 299
                           2152 ;	genCall
                           2153 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   062D CD 14 00           2154 	call	_rand
                           2155 ;	AOP_HL for _randC
   0630 21 61 01           2156 	ld	hl,#_randC
   0633 73                 2157 	ld	(hl),e
                           2158 ;	square.c 300
                           2159 ;	genIpush
                           2160 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0634 3E 1E              2161 	ld	a,#0x1E
   0636 F5                 2162 	push	af
   0637 33                 2163 	inc	sp
                           2164 ;	genIpush
                           2165 ;	AOP_HL for _randC
   0638 21 61 01           2166 	ld	hl,#_randC
   063B 7E                 2167 	ld	a,(hl)
   063C F5                 2168 	push	af
   063D 33                 2169 	inc	sp
                           2170 ;	genCall
   063E CD 00 00           2171 	call	__moduchar_rrx_s
   0641 4B                 2172 	ld	c,e
   0642 E8 02              2173 	lda	sp,2(sp)
                           2174 ;	genPlus
                           2175 ;	AOP_HL for _delayC
                           2176 ;	AOP_HL for _xC
                           2177 ;	Can't optimise plus by inc, falling back to the normal way
   0644 21 6B 01           2178 	ld	hl,#_delayC
   0647 7E                 2179 	ld	a,(hl)
   0648 81                 2180 	add	a,c
   0649 21 68 01           2181 	ld	hl,#_xC
   064C 77                 2182 	ld	(hl),a
                           2183 ;	genLabel
   064D                    2184 00134$:
                           2185 ;	genEndFunction
   064D E8 06              2186 	lda	sp,6(sp)
   064F C9                 2187 	ret
   0650                    2188 ___fillDrumC_end:
                           2189 ;	square.c 367
                           2190 ;	genLabel
                           2191 ;	genFunction
                           2192 ;	---------------------------------
                           2193 ; Function setupDrum
                           2194 ; ---------------------------------
   0650                    2195 ___setupDrum_start:
   0650                    2196 _setupDrum:
                           2197 	
                           2198 ;	square.c 369
                           2199 ;	genCmpEq
                           2200 ;	AOP_HL for _seldrum
                           2201 ; genCmpEq: left 1, right 1, result 0
   0650 21 89 01           2202 	ld	hl,#_seldrum
   0653 7E                 2203 	ld	a,(hl)
   0654 B7                 2204 	or	a,a
   0655 CA 6D 06           2205 	jp	z,00101$
   0658                    2206 00111$:
                           2207 ;	genCmpEq
                           2208 ;	AOP_HL for _seldrum
                           2209 ; genCmpEq: left 1, right 1, result 0
   0658 21 89 01           2210 	ld	hl,#_seldrum
   065B 7E                 2211 	ld	a,(hl)
   065C FE 01              2212 	cp	a,#0x01
   065E CA 73 06           2213 	jp	z,00102$
   0661                    2214 00112$:
                           2215 ;	genCmpEq
                           2216 ;	AOP_HL for _seldrum
                           2217 ; genCmpEq: left 1, right 1, result 0
   0661 21 89 01           2218 	ld	hl,#_seldrum
   0664 7E                 2219 	ld	a,(hl)
   0665 FE 02              2220 	cp	a,#0x02
   0667 CA 79 06           2221 	jp	z,00103$
   066A                    2222 00113$:
                           2223 ;	genGoto
   066A C3 7F 06           2224 	jp	00104$
                           2225 ;	square.c 372
                           2226 ;	genLabel
   066D                    2227 00101$:
                           2228 ;	genCall
                           2229 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   066D CD E3 00           2230 	call	_fillDrumA
                           2231 ;	square.c 373
                           2232 ;	genGoto
   0670 C3 88 06           2233 	jp	00106$
                           2234 ;	square.c 375
                           2235 ;	genLabel
   0673                    2236 00102$:
                           2237 ;	genCall
                           2238 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0673 CD B2 02           2239 	call	_fillDrumB
                           2240 ;	square.c 376
                           2241 ;	genGoto
   0676 C3 88 06           2242 	jp	00106$
                           2243 ;	square.c 378
                           2244 ;	genLabel
   0679                    2245 00103$:
                           2246 ;	genCall
                           2247 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0679 CD 81 04           2248 	call	_fillDrumC
                           2249 ;	square.c 379
                           2250 ;	genGoto
   067C C3 88 06           2251 	jp	00106$
                           2252 ;	square.c 381
                           2253 ;	genLabel
   067F                    2254 00104$:
                           2255 ;	genCall
                           2256 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   067F CD E3 00           2257 	call	_fillDrumA
                           2258 ;	square.c 382
                           2259 ;	genCall
                           2260 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0682 CD B2 02           2261 	call	_fillDrumB
                           2262 ;	square.c 383
                           2263 ;	genCall
                           2264 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0685 CD 81 04           2265 	call	_fillDrumC
                           2266 ;	square.c 384
                           2267 ;	genLabel
   0688                    2268 00106$:
                           2269 ;	genEndFunction
                           2270 	
   0688 C9                 2271 	ret
   0689                    2272 ___setupDrum_end:
                           2273 ;	square.c 390
                           2274 ;	genLabel
                           2275 ;	genFunction
                           2276 ;	---------------------------------
                           2277 ; Function increaseOffStep
                           2278 ; ---------------------------------
   0689                    2279 ___increaseOffStep_start:
   0689                    2280 _increaseOffStep:
   0689 E8 FE              2281 	lda	sp,-2(sp)
                           2282 ;	square.c 392
                           2283 ;	genAssign
   068B 0E 00              2284 	ld	c,#0x00
                           2285 ;	square.c 393
                           2286 ;	genAssign
                           2287 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   068D F8 01              2288 	lda	hl,1(sp)
   068F 36 01              2289 	ld	(hl),#0x01
                           2290 ;	square.c 394
                           2291 ;	genCmpEq
                           2292 ;	AOP_HL for _seldrum
                           2293 ; genCmpEq: left 1, right 1, result 1
   0691 21 89 01           2294 	ld	hl,#_seldrum
   0694 7E                 2295 	ld	a,(hl)
   0695 B7                 2296 	or	a,a
   0696 C2 9D 06           2297 	jp	nz,00120$
   0699 3E 01              2298 	ld	a,#0x01
   069B 18 01              2299 	jr	00121$
   069D                    2300 00120$:
   069D AF                 2301 	xor	a,a
   069E                    2302 00121$:
   069E 47                 2303 	ld	b,a
                           2304 ;	genIfx
   069F AF                 2305 	xor	a,a
   06A0 B0                 2306 	or	a,b
   06A1 C2 B9 06           2307 	jp	nz,00101$
                           2308 ;	genCmpEq
                           2309 ;	AOP_HL for _seldrum
                           2310 ; genCmpEq: left 1, right 1, result 0
   06A4 21 89 01           2311 	ld	hl,#_seldrum
   06A7 7E                 2312 	ld	a,(hl)
   06A8 FE 01              2313 	cp	a,#0x01
   06AA CA C7 06           2314 	jp	z,00102$
   06AD                    2315 00122$:
                           2316 ;	genCmpEq
                           2317 ;	AOP_HL for _seldrum
                           2318 ; genCmpEq: left 1, right 1, result 0
   06AD 21 89 01           2319 	ld	hl,#_seldrum
   06B0 7E                 2320 	ld	a,(hl)
   06B1 FE 02              2321 	cp	a,#0x02
   06B3 CA D5 06           2322 	jp	z,00103$
   06B6                    2323 00123$:
                           2324 ;	genGoto
   06B6 C3 E0 06           2325 	jp	00104$
                           2326 ;	square.c 397
                           2327 ;	genLabel
   06B9                    2328 00101$:
                           2329 ;	genAssign
                           2330 ;	AOP_HL for _offStepA
   06B9 21 78 01           2331 	ld	hl,#_offStepA
   06BC 4E                 2332 	ld	c,(hl)
                           2333 ;	square.c 398
                           2334 ;	genAssign
                           2335 ;	AOP_HL for _totalStepsA
                           2336 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   06BD 21 70 01           2337 	ld	hl,#_totalStepsA
   06C0 7E                 2338 	ld	a,(hl)
   06C1 F8 01              2339 	lda	hl,1(sp)
   06C3 77                 2340 	ld	(hl),a
                           2341 ;	square.c 399
                           2342 ;	genGoto
   06C4 C3 E0 06           2343 	jp	00104$
                           2344 ;	square.c 401
                           2345 ;	genLabel
   06C7                    2346 00102$:
                           2347 ;	genAssign
                           2348 ;	AOP_HL for _offStepB
   06C7 21 79 01           2349 	ld	hl,#_offStepB
   06CA 4E                 2350 	ld	c,(hl)
                           2351 ;	square.c 402
                           2352 ;	genAssign
                           2353 ;	AOP_HL for _totalStepsB
                           2354 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   06CB 21 73 01           2355 	ld	hl,#_totalStepsB
   06CE 7E                 2356 	ld	a,(hl)
   06CF F8 01              2357 	lda	hl,1(sp)
   06D1 77                 2358 	ld	(hl),a
                           2359 ;	square.c 403
                           2360 ;	genGoto
   06D2 C3 E0 06           2361 	jp	00104$
                           2362 ;	square.c 405
                           2363 ;	genLabel
   06D5                    2364 00103$:
                           2365 ;	genAssign
                           2366 ;	AOP_HL for _offStepC
   06D5 21 7A 01           2367 	ld	hl,#_offStepC
   06D8 4E                 2368 	ld	c,(hl)
                           2369 ;	square.c 406
                           2370 ;	genAssign
                           2371 ;	AOP_HL for _totalStepsC
                           2372 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   06D9 21 76 01           2373 	ld	hl,#_totalStepsC
   06DC 7E                 2374 	ld	a,(hl)
   06DD F8 01              2375 	lda	hl,1(sp)
   06DF 77                 2376 	ld	(hl),a
                           2377 ;	square.c 408
                           2378 ;	genLabel
   06E0                    2379 00104$:
                           2380 ;	square.c 409
                           2381 ;	genPlus
                           2382 ;	genPlusIncr
                           2383 ; Removed redundent load
   06E0 0C                 2384 	inc	c
                           2385 ;	square.c 410
                           2386 ;	genMinus
                           2387 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
                           2388 ;	AOP_STK for _increaseOffStep_sloc0_1_0
   06E1 F8 01              2389 	lda	hl,1(sp)
   06E3 7E                 2390 	ld	a,(hl)
   06E4 C6 FF              2391 	add	a,#0xFF
   06E6 2B                 2392 	dec	hl
                           2393 ;	genCmpGt
                           2394 ;	AOP_STK for _increaseOffStep_sloc0_1_0
   06E7 77                 2395 	ld      (hl),a
                           2396 ; Removed redundent load
   06E8 91                 2397 	sub	a,c
   06E9 D2 EE 06           2398 	jp	nc,00106$
                           2399 ;	square.c 412
                           2400 ;	genAssign
   06EC 0E 00              2401 	ld	c,#0x00
                           2402 ;	genLabel
   06EE                    2403 00106$:
                           2404 ;	square.c 414
                           2405 ;	genIfx
   06EE AF                 2406 	xor	a,a
   06EF B0                 2407 	or	a,b
   06F0 C2 08 07           2408 	jp	nz,00107$
                           2409 ;	genCmpEq
                           2410 ;	AOP_HL for _seldrum
                           2411 ; genCmpEq: left 1, right 1, result 0
   06F3 21 89 01           2412 	ld	hl,#_seldrum
   06F6 7E                 2413 	ld	a,(hl)
   06F7 FE 01              2414 	cp	a,#0x01
   06F9 CA 0F 07           2415 	jp	z,00108$
   06FC                    2416 00124$:
                           2417 ;	genCmpEq
                           2418 ;	AOP_HL for _seldrum
                           2419 ; genCmpEq: left 1, right 1, result 0
   06FC 21 89 01           2420 	ld	hl,#_seldrum
   06FF 7E                 2421 	ld	a,(hl)
   0700 FE 02              2422 	cp	a,#0x02
   0702 CA 16 07           2423 	jp	z,00109$
   0705                    2424 00125$:
                           2425 ;	genGoto
   0705 C3 1A 07           2426 	jp	00110$
                           2427 ;	square.c 417
                           2428 ;	genLabel
   0708                    2429 00107$:
                           2430 ;	genAssign
                           2431 ;	AOP_HL for _offStepA
   0708 21 78 01           2432 	ld	hl,#_offStepA
   070B 71                 2433 	ld	(hl),c
                           2434 ;	square.c 418
                           2435 ;	genGoto
   070C C3 1A 07           2436 	jp	00110$
                           2437 ;	square.c 420
                           2438 ;	genLabel
   070F                    2439 00108$:
                           2440 ;	genAssign
                           2441 ;	AOP_HL for _offStepB
   070F 21 79 01           2442 	ld	hl,#_offStepB
   0712 71                 2443 	ld	(hl),c
                           2444 ;	square.c 421
                           2445 ;	genGoto
   0713 C3 1A 07           2446 	jp	00110$
                           2447 ;	square.c 423
                           2448 ;	genLabel
   0716                    2449 00109$:
                           2450 ;	genAssign
                           2451 ;	AOP_HL for _offStepC
   0716 21 7A 01           2452 	ld	hl,#_offStepC
   0719 71                 2453 	ld	(hl),c
                           2454 ;	square.c 425
                           2455 ;	genLabel
   071A                    2456 00110$:
                           2457 ;	square.c 426
                           2458 ;	genIpush
                           2459 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   071A C5                 2460 	push	bc
   071B 21 04 08           2461 	ld	hl,#0x0804
   071E E5                 2462 	push	hl
                           2463 ;	genCall
   071F CD 00 00           2464 	call	_set_sprite_tile
   0722 E8 02              2465 	lda	sp,2(sp)
   0724 E1                 2466 	pop	hl
   0725 4D                 2467 	ld	c,l
                           2468 ;	square.c 427
                           2469 ;	genPlus
                           2470 ;	Can't optimise plus by inc, falling back to the normal way
   0726 3E 18              2471 	ld	a,#<_dXlut
   0728 81                 2472 	add	a,c
   0729 4F                 2473 	ld	c,a
   072A 3E 01              2474 	ld	a,#>_dXlut
   072C CE 00              2475 	adc	a,#0x00
   072E 47                 2476 	ld	b,a
                           2477 ;	genPointerGet
   072F 0A                 2478 	ld	a,(bc)
                           2479 ;	genIpush
                           2480 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0730 4F                 2481 	ld	c,a
   0731 F5                 2482 	push	af
   0732 33                 2483 	inc	sp
                           2484 ;	genIpush
   0733 21 04 08           2485 	ld	hl,#0x0804
   0736 E5                 2486 	push	hl
                           2487 ;	genCall
   0737 CD 00 00           2488 	call	_move_sprite
   073A E8 03              2489 	lda	sp,3(sp)
                           2490 ;	square.c 428
                           2491 ;	genCall
                           2492 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   073C CD 00 00           2493 	call	_wait_vbl_done
                           2494 ;	square.c 429
                           2495 ;	genCall
                           2496 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   073F CD 50 06           2497 	call	_setupDrum
                           2498 ;	genLabel
   0742                    2499 00111$:
                           2500 ;	genEndFunction
   0742 E8 02              2501 	lda	sp,2(sp)
   0744 C9                 2502 	ret
   0745                    2503 ___increaseOffStep_end:
                           2504 ;	square.c 432
                           2505 ;	genLabel
                           2506 ;	genFunction
                           2507 ;	---------------------------------
                           2508 ; Function decreaseOffStep
                           2509 ; ---------------------------------
   0745                    2510 ___decreaseOffStep_start:
   0745                    2511 _decreaseOffStep:
                           2512 	
                           2513 ;	square.c 434
                           2514 ;	genAssign
   0745 0E 00              2515 	ld	c,#0x00
                           2516 ;	square.c 436
                           2517 ;	genCmpEq
                           2518 ;	AOP_HL for _seldrum
                           2519 ; genCmpEq: left 1, right 1, result 1
   0747 21 89 01           2520 	ld	hl,#_seldrum
   074A 7E                 2521 	ld	a,(hl)
   074B B7                 2522 	or	a,a
   074C C2 53 07           2523 	jp	nz,00120$
   074F 3E 01              2524 	ld	a,#0x01
   0751 18 01              2525 	jr	00121$
   0753                    2526 00120$:
   0753 AF                 2527 	xor	a,a
   0754                    2528 00121$:
   0754 47                 2529 	ld	b,a
                           2530 ;	genIfx
   0755 AF                 2531 	xor	a,a
   0756 B0                 2532 	or	a,b
   0757 C2 6F 07           2533 	jp	nz,00101$
                           2534 ;	genCmpEq
                           2535 ;	AOP_HL for _seldrum
                           2536 ; genCmpEq: left 1, right 1, result 0
   075A 21 89 01           2537 	ld	hl,#_seldrum
   075D 7E                 2538 	ld	a,(hl)
   075E FE 01              2539 	cp	a,#0x01
   0760 CA 76 07           2540 	jp	z,00102$
   0763                    2541 00122$:
                           2542 ;	genCmpEq
                           2543 ;	AOP_HL for _seldrum
                           2544 ; genCmpEq: left 1, right 1, result 0
   0763 21 89 01           2545 	ld	hl,#_seldrum
   0766 7E                 2546 	ld	a,(hl)
   0767 FE 02              2547 	cp	a,#0x02
   0769 CA 7D 07           2548 	jp	z,00103$
   076C                    2549 00123$:
                           2550 ;	genGoto
   076C C3 81 07           2551 	jp	00104$
                           2552 ;	square.c 439
                           2553 ;	genLabel
   076F                    2554 00101$:
                           2555 ;	genAssign
                           2556 ;	AOP_HL for _offStepA
   076F 21 78 01           2557 	ld	hl,#_offStepA
   0772 4E                 2558 	ld	c,(hl)
                           2559 ;	square.c 441
                           2560 ;	genGoto
   0773 C3 81 07           2561 	jp	00104$
                           2562 ;	square.c 443
                           2563 ;	genLabel
   0776                    2564 00102$:
                           2565 ;	genAssign
                           2566 ;	AOP_HL for _offStepB
   0776 21 79 01           2567 	ld	hl,#_offStepB
   0779 4E                 2568 	ld	c,(hl)
                           2569 ;	square.c 445
                           2570 ;	genGoto
   077A C3 81 07           2571 	jp	00104$
                           2572 ;	square.c 447
                           2573 ;	genLabel
   077D                    2574 00103$:
                           2575 ;	genAssign
                           2576 ;	AOP_HL for _offStepC
   077D 21 7A 01           2577 	ld	hl,#_offStepC
   0780 4E                 2578 	ld	c,(hl)
                           2579 ;	square.c 450
                           2580 ;	genLabel
   0781                    2581 00104$:
                           2582 ;	square.c 452
                           2583 ;	genCmpEq
                           2584 ; genCmpEq: left 1, right 1, result 0
   0781 79                 2585 	ld	a,c
   0782 B7                 2586 	or	a,a
   0783 CA 87 07           2587 	jp	z,00106$
   0786                    2588 00124$:
                           2589 ;	square.c 454
                           2590 ;	genMinus
   0786 0D                 2591 	dec	c
                           2592 ;	genLabel
   0787                    2593 00106$:
                           2594 ;	square.c 456
                           2595 ;	genIfx
   0787 AF                 2596 	xor	a,a
   0788 B0                 2597 	or	a,b
   0789 C2 A1 07           2598 	jp	nz,00107$
                           2599 ;	genCmpEq
                           2600 ;	AOP_HL for _seldrum
                           2601 ; genCmpEq: left 1, right 1, result 0
   078C 21 89 01           2602 	ld	hl,#_seldrum
   078F 7E                 2603 	ld	a,(hl)
   0790 FE 01              2604 	cp	a,#0x01
   0792 CA A8 07           2605 	jp	z,00108$
   0795                    2606 00125$:
                           2607 ;	genCmpEq
                           2608 ;	AOP_HL for _seldrum
                           2609 ; genCmpEq: left 1, right 1, result 0
   0795 21 89 01           2610 	ld	hl,#_seldrum
   0798 7E                 2611 	ld	a,(hl)
   0799 FE 02              2612 	cp	a,#0x02
   079B CA AF 07           2613 	jp	z,00109$
   079E                    2614 00126$:
                           2615 ;	genGoto
   079E C3 B3 07           2616 	jp	00110$
                           2617 ;	square.c 459
                           2618 ;	genLabel
   07A1                    2619 00107$:
                           2620 ;	genAssign
                           2621 ;	AOP_HL for _offStepA
   07A1 21 78 01           2622 	ld	hl,#_offStepA
   07A4 71                 2623 	ld	(hl),c
                           2624 ;	square.c 460
                           2625 ;	genGoto
   07A5 C3 B3 07           2626 	jp	00110$
                           2627 ;	square.c 462
                           2628 ;	genLabel
   07A8                    2629 00108$:
                           2630 ;	genAssign
                           2631 ;	AOP_HL for _offStepB
   07A8 21 79 01           2632 	ld	hl,#_offStepB
   07AB 71                 2633 	ld	(hl),c
                           2634 ;	square.c 463
                           2635 ;	genGoto
   07AC C3 B3 07           2636 	jp	00110$
                           2637 ;	square.c 465
                           2638 ;	genLabel
   07AF                    2639 00109$:
                           2640 ;	genAssign
                           2641 ;	AOP_HL for _offStepC
   07AF 21 7A 01           2642 	ld	hl,#_offStepC
   07B2 71                 2643 	ld	(hl),c
                           2644 ;	square.c 467
                           2645 ;	genLabel
   07B3                    2646 00110$:
                           2647 ;	square.c 468
                           2648 ;	genIpush
                           2649 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   07B3 C5                 2650 	push	bc
   07B4 21 04 08           2651 	ld	hl,#0x0804
   07B7 E5                 2652 	push	hl
                           2653 ;	genCall
   07B8 CD 00 00           2654 	call	_set_sprite_tile
   07BB E8 02              2655 	lda	sp,2(sp)
   07BD E1                 2656 	pop	hl
   07BE 4D                 2657 	ld	c,l
                           2658 ;	square.c 469
                           2659 ;	genPlus
                           2660 ;	Can't optimise plus by inc, falling back to the normal way
   07BF 3E 18              2661 	ld	a,#<_dXlut
   07C1 81                 2662 	add	a,c
   07C2 4F                 2663 	ld	c,a
   07C3 3E 01              2664 	ld	a,#>_dXlut
   07C5 CE 00              2665 	adc	a,#0x00
   07C7 47                 2666 	ld	b,a
                           2667 ;	genPointerGet
   07C8 0A                 2668 	ld	a,(bc)
                           2669 ;	genIpush
                           2670 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07C9 4F                 2671 	ld	c,a
   07CA F5                 2672 	push	af
   07CB 33                 2673 	inc	sp
                           2674 ;	genIpush
   07CC 21 04 08           2675 	ld	hl,#0x0804
   07CF E5                 2676 	push	hl
                           2677 ;	genCall
   07D0 CD 00 00           2678 	call	_move_sprite
   07D3 E8 03              2679 	lda	sp,3(sp)
                           2680 ;	square.c 470
                           2681 ;	genCall
                           2682 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07D5 CD 00 00           2683 	call	_wait_vbl_done
                           2684 ;	square.c 471
                           2685 ;	genCall
                           2686 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07D8 CD 50 06           2687 	call	_setupDrum
                           2688 ;	genLabel
   07DB                    2689 00111$:
                           2690 ;	genEndFunction
                           2691 	
   07DB C9                 2692 	ret
   07DC                    2693 ___decreaseOffStep_end:
                           2694 ;	square.c 474
                           2695 ;	genLabel
                           2696 ;	genFunction
                           2697 ;	---------------------------------
                           2698 ; Function increaseSteps
                           2699 ; ---------------------------------
   07DC                    2700 ___increaseSteps_start:
   07DC                    2701 _increaseSteps:
   07DC E8 FD              2702 	lda	sp,-3(sp)
                           2703 ;	square.c 476
                           2704 ;	genAssign
   07DE 0E 01              2705 	ld	c,#0x01
                           2706 ;	square.c 477
                           2707 ;	genAssign
                           2708 ;	AOP_STK for _increaseSteps_currentPulses_1_1
   07E0 F8 02              2709 	lda	hl,2(sp)
   07E2 36 01              2710 	ld	(hl),#0x01
                           2711 ;	square.c 478
                           2712 ;	genCmpEq
                           2713 ;	AOP_HL for _seldrum
                           2714 ; genCmpEq: left 1, right 1, result 1
   07E4 21 89 01           2715 	ld	hl,#_seldrum
   07E7 7E                 2716 	ld	a,(hl)
   07E8 B7                 2717 	or	a,a
   07E9 C2 F0 07           2718 	jp	nz,00120$
   07EC 3E 01              2719 	ld	a,#0x01
   07EE 18 01              2720 	jr	00121$
   07F0                    2721 00120$:
   07F0 AF                 2722 	xor	a,a
   07F1                    2723 00121$:
   07F1 47                 2724 	ld	b,a
                           2725 ;	genIfx
   07F2 AF                 2726 	xor	a,a
   07F3 B0                 2727 	or	a,b
   07F4 C2 0C 08           2728 	jp	nz,00101$
                           2729 ;	genCmpEq
                           2730 ;	AOP_HL for _seldrum
                           2731 ; genCmpEq: left 1, right 1, result 0
   07F7 21 89 01           2732 	ld	hl,#_seldrum
   07FA 7E                 2733 	ld	a,(hl)
   07FB FE 01              2734 	cp	a,#0x01
   07FD CA 25 08           2735 	jp	z,00102$
   0800                    2736 00122$:
                           2737 ;	genCmpEq
                           2738 ;	AOP_HL for _seldrum
                           2739 ; genCmpEq: left 1, right 1, result 0
   0800 21 89 01           2740 	ld	hl,#_seldrum
   0803 7E                 2741 	ld	a,(hl)
   0804 FE 02              2742 	cp	a,#0x02
   0806 CA 3E 08           2743 	jp	z,00103$
   0809                    2744 00123$:
                           2745 ;	genGoto
   0809 C3 54 08           2746 	jp	00104$
                           2747 ;	square.c 481
                           2748 ;	genLabel
   080C                    2749 00101$:
                           2750 ;	genAssign
                           2751 ;	AOP_HL for _totalStepsA
   080C 21 70 01           2752 	ld	hl,#_totalStepsA
   080F 4E                 2753 	ld	c,(hl)
                           2754 ;	square.c 482
                           2755 ;	genAssign
                           2756 ;	AOP_HL for _numberOfPulsesA
                           2757 ;	AOP_STK for _increaseSteps_currentPulses_1_1
   0810 21 6F 01           2758 	ld	hl,#_numberOfPulsesA
   0813 7E                 2759 	ld	a,(hl)
   0814 F8 02              2760 	lda	hl,2(sp)
   0816 77                 2761 	ld	(hl),a
                           2762 ;	square.c 483
                           2763 ;	genIpush
                           2764 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0817 C5                 2765 	push	bc
   0818 21 00 00           2766 	ld	hl,#0x0000
   081B E5                 2767 	push	hl
                           2768 ;	genCall
   081C CD 00 00           2769 	call	_set_sprite_tile
   081F E8 02              2770 	lda	sp,2(sp)
   0821 C1                 2771 	pop	bc
                           2772 ;	square.c 484
                           2773 ;	genGoto
   0822 C3 54 08           2774 	jp	00104$
                           2775 ;	square.c 486
                           2776 ;	genLabel
   0825                    2777 00102$:
                           2778 ;	genAssign
                           2779 ;	AOP_HL for _totalStepsB
   0825 21 73 01           2780 	ld	hl,#_totalStepsB
   0828 4E                 2781 	ld	c,(hl)
                           2782 ;	square.c 487
                           2783 ;	genAssign
                           2784 ;	AOP_HL for _numberOfPulsesB
                           2785 ;	AOP_STK for _increaseSteps_currentPulses_1_1
   0829 21 72 01           2786 	ld	hl,#_numberOfPulsesB
   082C 7E                 2787 	ld	a,(hl)
   082D F8 02              2788 	lda	hl,2(sp)
   082F 77                 2789 	ld	(hl),a
                           2790 ;	square.c 488
                           2791 ;	genIpush
                           2792 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0830 C5                 2793 	push	bc
   0831 21 01 02           2794 	ld	hl,#0x0201
   0834 E5                 2795 	push	hl
                           2796 ;	genCall
   0835 CD 00 00           2797 	call	_set_sprite_tile
   0838 E8 02              2798 	lda	sp,2(sp)
   083A C1                 2799 	pop	bc
                           2800 ;	square.c 489
                           2801 ;	genGoto
   083B C3 54 08           2802 	jp	00104$
                           2803 ;	square.c 491
                           2804 ;	genLabel
   083E                    2805 00103$:
                           2806 ;	genAssign
                           2807 ;	AOP_HL for _totalStepsC
   083E 21 76 01           2808 	ld	hl,#_totalStepsC
   0841 4E                 2809 	ld	c,(hl)
                           2810 ;	square.c 492
                           2811 ;	genAssign
                           2812 ;	AOP_HL for _numberOfPulsesC
                           2813 ;	AOP_STK for _increaseSteps_currentPulses_1_1
   0842 21 75 01           2814 	ld	hl,#_numberOfPulsesC
   0845 7E                 2815 	ld	a,(hl)
   0846 F8 02              2816 	lda	hl,2(sp)
   0848 77                 2817 	ld	(hl),a
                           2818 ;	square.c 493
                           2819 ;	genIpush
                           2820 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0849 C5                 2821 	push	bc
   084A 21 03 06           2822 	ld	hl,#0x0603
   084D E5                 2823 	push	hl
                           2824 ;	genCall
   084E CD 00 00           2825 	call	_set_sprite_tile
   0851 E8 02              2826 	lda	sp,2(sp)
   0853 C1                 2827 	pop	bc
                           2828 ;	square.c 495
                           2829 ;	genLabel
   0854                    2830 00104$:
                           2831 ;	square.c 496
                           2832 ;	genPlus
                           2833 ;	genPlusIncr
                           2834 ; Removed redundent load
   0854 0C                 2835 	inc	c
                           2836 ;	square.c 497
                           2837 ;	genCmpGt
   0855 3E 20              2838 	ld	a,#0x20
   0857 91                 2839 	sub	a,c
   0858 D2 5D 08           2840 	jp	nc,00106$
                           2841 ;	square.c 499
                           2842 ;	genAssign
   085B 0E 01              2843 	ld	c,#0x01
                           2844 ;	genLabel
   085D                    2845 00106$:
                           2846 ;	square.c 501
                           2847 ;	genIfx
   085D AF                 2848 	xor	a,a
   085E B0                 2849 	or	a,b
   085F C2 77 08           2850 	jp	nz,00107$
                           2851 ;	genCmpEq
                           2852 ;	AOP_HL for _seldrum
                           2853 ; genCmpEq: left 1, right 1, result 0
   0862 21 89 01           2854 	ld	hl,#_seldrum
   0865 7E                 2855 	ld	a,(hl)
   0866 FE 01              2856 	cp	a,#0x01
   0868 CA 7E 08           2857 	jp	z,00108$
   086B                    2858 00124$:
                           2859 ;	genCmpEq
                           2860 ;	AOP_HL for _seldrum
                           2861 ; genCmpEq: left 1, right 1, result 0
   086B 21 89 01           2862 	ld	hl,#_seldrum
   086E 7E                 2863 	ld	a,(hl)
   086F FE 02              2864 	cp	a,#0x02
   0871 CA 85 08           2865 	jp	z,00109$
   0874                    2866 00125$:
                           2867 ;	genGoto
   0874 C3 89 08           2868 	jp	00110$
                           2869 ;	square.c 504
                           2870 ;	genLabel
   0877                    2871 00107$:
                           2872 ;	genAssign
                           2873 ;	AOP_HL for _totalStepsA
   0877 21 70 01           2874 	ld	hl,#_totalStepsA
   087A 71                 2875 	ld	(hl),c
                           2876 ;	square.c 505
                           2877 ;	genGoto
   087B C3 89 08           2878 	jp	00110$
                           2879 ;	square.c 507
                           2880 ;	genLabel
   087E                    2881 00108$:
                           2882 ;	genAssign
                           2883 ;	AOP_HL for _totalStepsB
   087E 21 73 01           2884 	ld	hl,#_totalStepsB
   0881 71                 2885 	ld	(hl),c
                           2886 ;	square.c 508
                           2887 ;	genGoto
   0882 C3 89 08           2888 	jp	00110$
                           2889 ;	square.c 510
                           2890 ;	genLabel
   0885                    2891 00109$:
                           2892 ;	genAssign
                           2893 ;	AOP_HL for _totalStepsC
   0885 21 76 01           2894 	ld	hl,#_totalStepsC
   0888 71                 2895 	ld	(hl),c
                           2896 ;	square.c 512
                           2897 ;	genLabel
   0889                    2898 00110$:
                           2899 ;	square.c 513
                           2900 ;	genMinus
   0889 0D                 2901 	dec	c
                           2902 ;	genPlus
                           2903 ;	Can't optimise plus by inc, falling back to the normal way
   088A 3E 18              2904 	ld	a,#<_dXlut
   088C 81                 2905 	add	a,c
   088D 4F                 2906 	ld	c,a
   088E 3E 01              2907 	ld	a,#>_dXlut
   0890 CE 00              2908 	adc	a,#0x00
   0892 47                 2909 	ld	b,a
                           2910 ;	genPointerGet
   0893 0A                 2911 	ld	a,(bc)
   0894 4F                 2912 	ld	c,a
                           2913 ;	genMinus
                           2914 ;	AOP_STK for _increaseSteps_currentPulses_1_1
   0895 F8 02              2915 	lda	hl,2(sp)
   0897 7E                 2916 	ld	a,(hl)
   0898 C6 FF              2917 	add	a,#0xFF
   089A 47                 2918 	ld	b,a
                           2919 ;	genPlus
                           2920 ;	AOP_STK for _increaseSteps_sloc0_1_0
                           2921 ;	Can't optimise plus by inc, falling back to the normal way
   089B 11 38 01           2922 	ld	de,#_dYlut
   089E 68                 2923 	ld	l,b
   089F 26 00              2924 	ld	h,#0x00
   08A1 19                 2925 	add	hl,de
   08A2 7D                 2926 	ld	a,l
   08A3 54                 2927 	ld	d,h
   08A4 F8 00              2928 	lda	hl,0(sp)
                           2929 ;	genPointerGet
                           2930 ;	AOP_STK for _increaseSteps_sloc0_1_0
   08A6 22                 2931 	ld	(hl+),a
   08A7 72                 2932 	ld	(hl),d
   08A8 5F                 2933 	ld	e,a
   08A9 1A                 2934 	ld	a,(de)
   08AA 47                 2935 	ld	b,a
                           2936 ;	genIpush
                           2937 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08AB 79                 2938 	ld	a,c
   08AC F5                 2939 	push	af
   08AD 33                 2940 	inc	sp
                           2941 ;	genIpush
   08AE 78                 2942 	ld	a,b
   08AF F5                 2943 	push	af
   08B0 33                 2944 	inc	sp
                           2945 ;	genIpush
                           2946 ;	AOP_HL for _seldrum
   08B1 21 89 01           2947 	ld	hl,#_seldrum
   08B4 7E                 2948 	ld	a,(hl)
   08B5 F5                 2949 	push	af
   08B6 33                 2950 	inc	sp
                           2951 ;	genCall
   08B7 CD 00 00           2952 	call	_move_sprite
   08BA E8 03              2953 	lda	sp,3(sp)
                           2954 ;	square.c 514
                           2955 ;	genCall
                           2956 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08BC CD 00 00           2957 	call	_wait_vbl_done
                           2958 ;	square.c 515
                           2959 ;	genCall
                           2960 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08BF CD 50 06           2961 	call	_setupDrum
                           2962 ;	genLabel
   08C2                    2963 00111$:
                           2964 ;	genEndFunction
   08C2 E8 03              2965 	lda	sp,3(sp)
   08C4 C9                 2966 	ret
   08C5                    2967 ___increaseSteps_end:
                           2968 ;	square.c 518
                           2969 ;	genLabel
                           2970 ;	genFunction
                           2971 ;	---------------------------------
                           2972 ; Function decreaseSteps
                           2973 ; ---------------------------------
   08C5                    2974 ___decreaseSteps_start:
   08C5                    2975 _decreaseSteps:
   08C5 E8 FD              2976 	lda	sp,-3(sp)
                           2977 ;	square.c 520
                           2978 ;	genAssign
   08C7 0E 01              2979 	ld	c,#0x01
                           2980 ;	square.c 521
                           2981 ;	genAssign
                           2982 ;	AOP_STK for _decreaseSteps_currentPulses_1_1
   08C9 F8 02              2983 	lda	hl,2(sp)
   08CB 36 01              2984 	ld	(hl),#0x01
                           2985 ;	square.c 522
                           2986 ;	genCmpEq
                           2987 ;	AOP_HL for _seldrum
                           2988 ; genCmpEq: left 1, right 1, result 1
   08CD 21 89 01           2989 	ld	hl,#_seldrum
   08D0 7E                 2990 	ld	a,(hl)
   08D1 B7                 2991 	or	a,a
   08D2 C2 D9 08           2992 	jp	nz,00120$
   08D5 3E 01              2993 	ld	a,#0x01
   08D7 18 01              2994 	jr	00121$
   08D9                    2995 00120$:
   08D9 AF                 2996 	xor	a,a
   08DA                    2997 00121$:
   08DA 47                 2998 	ld	b,a
                           2999 ;	genIfx
   08DB AF                 3000 	xor	a,a
   08DC B0                 3001 	or	a,b
   08DD C2 F5 08           3002 	jp	nz,00101$
                           3003 ;	genCmpEq
                           3004 ;	AOP_HL for _seldrum
                           3005 ; genCmpEq: left 1, right 1, result 0
   08E0 21 89 01           3006 	ld	hl,#_seldrum
   08E3 7E                 3007 	ld	a,(hl)
   08E4 FE 01              3008 	cp	a,#0x01
   08E6 CA 0E 09           3009 	jp	z,00102$
   08E9                    3010 00122$:
                           3011 ;	genCmpEq
                           3012 ;	AOP_HL for _seldrum
                           3013 ; genCmpEq: left 1, right 1, result 0
   08E9 21 89 01           3014 	ld	hl,#_seldrum
   08EC 7E                 3015 	ld	a,(hl)
   08ED FE 02              3016 	cp	a,#0x02
   08EF CA 27 09           3017 	jp	z,00103$
   08F2                    3018 00123$:
                           3019 ;	genGoto
   08F2 C3 3D 09           3020 	jp	00104$
                           3021 ;	square.c 525
                           3022 ;	genLabel
   08F5                    3023 00101$:
                           3024 ;	genAssign
                           3025 ;	AOP_HL for _totalStepsA
   08F5 21 70 01           3026 	ld	hl,#_totalStepsA
   08F8 4E                 3027 	ld	c,(hl)
                           3028 ;	square.c 526
                           3029 ;	genAssign
                           3030 ;	AOP_HL for _numberOfPulsesA
                           3031 ;	AOP_STK for _decreaseSteps_currentPulses_1_1
   08F9 21 6F 01           3032 	ld	hl,#_numberOfPulsesA
   08FC 7E                 3033 	ld	a,(hl)
   08FD F8 02              3034 	lda	hl,2(sp)
   08FF 77                 3035 	ld	(hl),a
                           3036 ;	square.c 527
                           3037 ;	genIpush
                           3038 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0900 C5                 3039 	push	bc
   0901 21 00 00           3040 	ld	hl,#0x0000
   0904 E5                 3041 	push	hl
                           3042 ;	genCall
   0905 CD 00 00           3043 	call	_set_sprite_tile
   0908 E8 02              3044 	lda	sp,2(sp)
   090A C1                 3045 	pop	bc
                           3046 ;	square.c 528
                           3047 ;	genGoto
   090B C3 3D 09           3048 	jp	00104$
                           3049 ;	square.c 530
                           3050 ;	genLabel
   090E                    3051 00102$:
                           3052 ;	genAssign
                           3053 ;	AOP_HL for _totalStepsB
   090E 21 73 01           3054 	ld	hl,#_totalStepsB
   0911 4E                 3055 	ld	c,(hl)
                           3056 ;	square.c 531
                           3057 ;	genAssign
                           3058 ;	AOP_HL for _numberOfPulsesB
                           3059 ;	AOP_STK for _decreaseSteps_currentPulses_1_1
   0912 21 72 01           3060 	ld	hl,#_numberOfPulsesB
   0915 7E                 3061 	ld	a,(hl)
   0916 F8 02              3062 	lda	hl,2(sp)
   0918 77                 3063 	ld	(hl),a
                           3064 ;	square.c 532
                           3065 ;	genIpush
                           3066 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0919 C5                 3067 	push	bc
   091A 21 01 02           3068 	ld	hl,#0x0201
   091D E5                 3069 	push	hl
                           3070 ;	genCall
   091E CD 00 00           3071 	call	_set_sprite_tile
   0921 E8 02              3072 	lda	sp,2(sp)
   0923 C1                 3073 	pop	bc
                           3074 ;	square.c 533
                           3075 ;	genGoto
   0924 C3 3D 09           3076 	jp	00104$
                           3077 ;	square.c 535
                           3078 ;	genLabel
   0927                    3079 00103$:
                           3080 ;	genAssign
                           3081 ;	AOP_HL for _totalStepsC
   0927 21 76 01           3082 	ld	hl,#_totalStepsC
   092A 4E                 3083 	ld	c,(hl)
                           3084 ;	square.c 536
                           3085 ;	genAssign
                           3086 ;	AOP_HL for _numberOfPulsesC
                           3087 ;	AOP_STK for _decreaseSteps_currentPulses_1_1
   092B 21 75 01           3088 	ld	hl,#_numberOfPulsesC
   092E 7E                 3089 	ld	a,(hl)
   092F F8 02              3090 	lda	hl,2(sp)
   0931 77                 3091 	ld	(hl),a
                           3092 ;	square.c 537
                           3093 ;	genIpush
                           3094 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0932 C5                 3095 	push	bc
   0933 21 03 06           3096 	ld	hl,#0x0603
   0936 E5                 3097 	push	hl
                           3098 ;	genCall
   0937 CD 00 00           3099 	call	_set_sprite_tile
   093A E8 02              3100 	lda	sp,2(sp)
   093C C1                 3101 	pop	bc
                           3102 ;	square.c 539
                           3103 ;	genLabel
   093D                    3104 00104$:
                           3105 ;	square.c 540
                           3106 ;	genMinus
   093D 0D                 3107 	dec	c
                           3108 ;	square.c 541
                           3109 ;	genCmpLt
   093E 79                 3110 	ld	a,c
   093F FE 01              3111 	cp	#0x01
   0941 D2 46 09           3112 	jp	nc,00106$
                           3113 ;	square.c 543
                           3114 ;	genAssign
   0944 0E 20              3115 	ld	c,#0x20
                           3116 ;	genLabel
   0946                    3117 00106$:
                           3118 ;	square.c 545
                           3119 ;	genIfx
   0946 AF                 3120 	xor	a,a
   0947 B0                 3121 	or	a,b
   0948 C2 60 09           3122 	jp	nz,00107$
                           3123 ;	genCmpEq
                           3124 ;	AOP_HL for _seldrum
                           3125 ; genCmpEq: left 1, right 1, result 0
   094B 21 89 01           3126 	ld	hl,#_seldrum
   094E 7E                 3127 	ld	a,(hl)
   094F FE 01              3128 	cp	a,#0x01
   0951 CA 67 09           3129 	jp	z,00108$
   0954                    3130 00124$:
                           3131 ;	genCmpEq
                           3132 ;	AOP_HL for _seldrum
                           3133 ; genCmpEq: left 1, right 1, result 0
   0954 21 89 01           3134 	ld	hl,#_seldrum
   0957 7E                 3135 	ld	a,(hl)
   0958 FE 02              3136 	cp	a,#0x02
   095A CA 6E 09           3137 	jp	z,00109$
   095D                    3138 00125$:
                           3139 ;	genGoto
   095D C3 72 09           3140 	jp	00110$
                           3141 ;	square.c 548
                           3142 ;	genLabel
   0960                    3143 00107$:
                           3144 ;	genAssign
                           3145 ;	AOP_HL for _totalStepsA
   0960 21 70 01           3146 	ld	hl,#_totalStepsA
   0963 71                 3147 	ld	(hl),c
                           3148 ;	square.c 549
                           3149 ;	genGoto
   0964 C3 72 09           3150 	jp	00110$
                           3151 ;	square.c 551
                           3152 ;	genLabel
   0967                    3153 00108$:
                           3154 ;	genAssign
                           3155 ;	AOP_HL for _totalStepsB
   0967 21 73 01           3156 	ld	hl,#_totalStepsB
   096A 71                 3157 	ld	(hl),c
                           3158 ;	square.c 552
                           3159 ;	genGoto
   096B C3 72 09           3160 	jp	00110$
                           3161 ;	square.c 554
                           3162 ;	genLabel
   096E                    3163 00109$:
                           3164 ;	genAssign
                           3165 ;	AOP_HL for _totalStepsC
   096E 21 76 01           3166 	ld	hl,#_totalStepsC
   0971 71                 3167 	ld	(hl),c
                           3168 ;	square.c 556
                           3169 ;	genLabel
   0972                    3170 00110$:
                           3171 ;	square.c 557
                           3172 ;	genMinus
   0972 0D                 3173 	dec	c
                           3174 ;	genPlus
                           3175 ;	Can't optimise plus by inc, falling back to the normal way
   0973 3E 18              3176 	ld	a,#<_dXlut
   0975 81                 3177 	add	a,c
   0976 4F                 3178 	ld	c,a
   0977 3E 01              3179 	ld	a,#>_dXlut
   0979 CE 00              3180 	adc	a,#0x00
   097B 47                 3181 	ld	b,a
                           3182 ;	genPointerGet
   097C 0A                 3183 	ld	a,(bc)
   097D 4F                 3184 	ld	c,a
                           3185 ;	genMinus
                           3186 ;	AOP_STK for _decreaseSteps_currentPulses_1_1
   097E F8 02              3187 	lda	hl,2(sp)
   0980 7E                 3188 	ld	a,(hl)
   0981 C6 FF              3189 	add	a,#0xFF
   0983 47                 3190 	ld	b,a
                           3191 ;	genPlus
                           3192 ;	AOP_STK for _decreaseSteps_sloc0_1_0
                           3193 ;	Can't optimise plus by inc, falling back to the normal way
   0984 11 38 01           3194 	ld	de,#_dYlut
   0987 68                 3195 	ld	l,b
   0988 26 00              3196 	ld	h,#0x00
   098A 19                 3197 	add	hl,de
   098B 7D                 3198 	ld	a,l
   098C 54                 3199 	ld	d,h
   098D F8 00              3200 	lda	hl,0(sp)
                           3201 ;	genPointerGet
                           3202 ;	AOP_STK for _decreaseSteps_sloc0_1_0
   098F 22                 3203 	ld	(hl+),a
   0990 72                 3204 	ld	(hl),d
   0991 5F                 3205 	ld	e,a
   0992 1A                 3206 	ld	a,(de)
   0993 47                 3207 	ld	b,a
                           3208 ;	genIpush
                           3209 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0994 79                 3210 	ld	a,c
   0995 F5                 3211 	push	af
   0996 33                 3212 	inc	sp
                           3213 ;	genIpush
   0997 78                 3214 	ld	a,b
   0998 F5                 3215 	push	af
   0999 33                 3216 	inc	sp
                           3217 ;	genIpush
                           3218 ;	AOP_HL for _seldrum
   099A 21 89 01           3219 	ld	hl,#_seldrum
   099D 7E                 3220 	ld	a,(hl)
   099E F5                 3221 	push	af
   099F 33                 3222 	inc	sp
                           3223 ;	genCall
   09A0 CD 00 00           3224 	call	_move_sprite
   09A3 E8 03              3225 	lda	sp,3(sp)
                           3226 ;	square.c 558
                           3227 ;	genCall
                           3228 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   09A5 CD 00 00           3229 	call	_wait_vbl_done
                           3230 ;	square.c 559
                           3231 ;	genCall
                           3232 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   09A8 CD 50 06           3233 	call	_setupDrum
                           3234 ;	genLabel
   09AB                    3235 00111$:
                           3236 ;	genEndFunction
   09AB E8 03              3237 	lda	sp,3(sp)
   09AD C9                 3238 	ret
   09AE                    3239 ___decreaseSteps_end:
                           3240 ;	square.c 562
                           3241 ;	genLabel
                           3242 ;	genFunction
                           3243 ;	---------------------------------
                           3244 ; Function increasePulses
                           3245 ; ---------------------------------
   09AE                    3246 ___increasePulses_start:
   09AE                    3247 _increasePulses:
   09AE E8 FC              3248 	lda	sp,-4(sp)
                           3249 ;	square.c 564
                           3250 ;	genAssign
                           3251 ;	AOP_STK for _increasePulses_currentSteps_1_1
   09B0 F8 03              3252 	lda	hl,3(sp)
   09B2 36 01              3253 	ld	(hl),#0x01
                           3254 ;	square.c 565
                           3255 ;	genAssign
                           3256 ;	AOP_STK for _increasePulses_currentPulses_1_1
   09B4 2B                 3257 	dec	hl
   09B5 36 01              3258 	ld	(hl),#0x01
                           3259 ;	square.c 566
                           3260 ;	genCmpEq
                           3261 ;	AOP_HL for _seldrum
                           3262 ; genCmpEq: left 1, right 1, result 1
   09B7 21 89 01           3263 	ld	hl,#_seldrum
   09BA 7E                 3264 	ld	a,(hl)
   09BB B7                 3265 	or	a,a
   09BC C2 C3 09           3266 	jp	nz,00120$
   09BF 3E 01              3267 	ld	a,#0x01
   09C1 18 01              3268 	jr	00121$
   09C3                    3269 00120$:
   09C3 AF                 3270 	xor	a,a
   09C4                    3271 00121$:
   09C4 4F                 3272 	ld	c,a
                           3273 ;	genIfx
   09C5 AF                 3274 	xor	a,a
   09C6 B1                 3275 	or	a,c
   09C7 C2 DF 09           3276 	jp	nz,00101$
                           3277 ;	genCmpEq
                           3278 ;	AOP_HL for _seldrum
                           3279 ; genCmpEq: left 1, right 1, result 0
   09CA 21 89 01           3280 	ld	hl,#_seldrum
   09CD 7E                 3281 	ld	a,(hl)
   09CE FE 01              3282 	cp	a,#0x01
   09D0 CA FC 09           3283 	jp	z,00102$
   09D3                    3284 00122$:
                           3285 ;	genCmpEq
                           3286 ;	AOP_HL for _seldrum
                           3287 ; genCmpEq: left 1, right 1, result 0
   09D3 21 89 01           3288 	ld	hl,#_seldrum
   09D6 7E                 3289 	ld	a,(hl)
   09D7 FE 02              3290 	cp	a,#0x02
   09D9 CA 19 0A           3291 	jp	z,00103$
   09DC                    3292 00123$:
                           3293 ;	genGoto
   09DC C3 33 0A           3294 	jp	00104$
                           3295 ;	square.c 569
                           3296 ;	genLabel
   09DF                    3297 00101$:
                           3298 ;	genAssign
                           3299 ;	AOP_HL for _totalStepsA
                           3300 ;	AOP_STK for _increasePulses_currentSteps_1_1
   09DF 21 70 01           3301 	ld	hl,#_totalStepsA
   09E2 7E                 3302 	ld	a,(hl)
   09E3 F8 03              3303 	lda	hl,3(sp)
   09E5 77                 3304 	ld	(hl),a
                           3305 ;	square.c 570
                           3306 ;	genAssign
                           3307 ;	AOP_HL for _numberOfPulsesA
                           3308 ;	AOP_STK for _increasePulses_currentPulses_1_1
   09E6 21 6F 01           3309 	ld	hl,#_numberOfPulsesA
   09E9 7E                 3310 	ld	a,(hl)
   09EA F8 02              3311 	lda	hl,2(sp)
   09EC 77                 3312 	ld	(hl),a
                           3313 ;	square.c 571
                           3314 ;	genIpush
                           3315 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   09ED C5                 3316 	push	bc
   09EE 21 00 00           3317 	ld	hl,#0x0000
   09F1 E5                 3318 	push	hl
                           3319 ;	genCall
   09F2 CD 00 00           3320 	call	_set_sprite_tile
   09F5 E8 02              3321 	lda	sp,2(sp)
   09F7 E1                 3322 	pop	hl
   09F8 4D                 3323 	ld	c,l
                           3324 ;	square.c 572
                           3325 ;	genGoto
   09F9 C3 33 0A           3326 	jp	00104$
                           3327 ;	square.c 574
                           3328 ;	genLabel
   09FC                    3329 00102$:
                           3330 ;	genAssign
                           3331 ;	AOP_HL for _totalStepsB
                           3332 ;	AOP_STK for _increasePulses_currentSteps_1_1
   09FC 21 73 01           3333 	ld	hl,#_totalStepsB
   09FF 7E                 3334 	ld	a,(hl)
   0A00 F8 03              3335 	lda	hl,3(sp)
   0A02 77                 3336 	ld	(hl),a
                           3337 ;	square.c 575
                           3338 ;	genAssign
                           3339 ;	AOP_HL for _numberOfPulsesB
                           3340 ;	AOP_STK for _increasePulses_currentPulses_1_1
   0A03 21 72 01           3341 	ld	hl,#_numberOfPulsesB
   0A06 7E                 3342 	ld	a,(hl)
   0A07 F8 02              3343 	lda	hl,2(sp)
   0A09 77                 3344 	ld	(hl),a
                           3345 ;	square.c 576
                           3346 ;	genIpush
                           3347 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A0A C5                 3348 	push	bc
   0A0B 21 01 02           3349 	ld	hl,#0x0201
   0A0E E5                 3350 	push	hl
                           3351 ;	genCall
   0A0F CD 00 00           3352 	call	_set_sprite_tile
   0A12 E8 02              3353 	lda	sp,2(sp)
   0A14 E1                 3354 	pop	hl
   0A15 4D                 3355 	ld	c,l
                           3356 ;	square.c 577
                           3357 ;	genGoto
   0A16 C3 33 0A           3358 	jp	00104$
                           3359 ;	square.c 579
                           3360 ;	genLabel
   0A19                    3361 00103$:
                           3362 ;	genAssign
                           3363 ;	AOP_HL for _totalStepsC
                           3364 ;	AOP_STK for _increasePulses_currentSteps_1_1
   0A19 21 76 01           3365 	ld	hl,#_totalStepsC
   0A1C 7E                 3366 	ld	a,(hl)
   0A1D F8 03              3367 	lda	hl,3(sp)
   0A1F 77                 3368 	ld	(hl),a
                           3369 ;	square.c 580
                           3370 ;	genAssign
                           3371 ;	AOP_HL for _numberOfPulsesC
                           3372 ;	AOP_STK for _increasePulses_currentPulses_1_1
   0A20 21 75 01           3373 	ld	hl,#_numberOfPulsesC
   0A23 7E                 3374 	ld	a,(hl)
   0A24 F8 02              3375 	lda	hl,2(sp)
   0A26 77                 3376 	ld	(hl),a
                           3377 ;	square.c 581
                           3378 ;	genIpush
                           3379 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A27 C5                 3380 	push	bc
   0A28 21 03 06           3381 	ld	hl,#0x0603
   0A2B E5                 3382 	push	hl
                           3383 ;	genCall
   0A2C CD 00 00           3384 	call	_set_sprite_tile
   0A2F E8 02              3385 	lda	sp,2(sp)
   0A31 E1                 3386 	pop	hl
   0A32 4D                 3387 	ld	c,l
                           3388 ;	square.c 583
                           3389 ;	genLabel
   0A33                    3390 00104$:
                           3391 ;	square.c 584
                           3392 ;	genPlus
                           3393 ;	AOP_STK for _increasePulses_currentPulses_1_1
                           3394 ;	genPlusIncr
   0A33 F8 02              3395 	lda	hl,2(sp)
   0A35 34                 3396 	inc	(hl)
                           3397 ;	square.c 585
                           3398 ;	genCmpGt
                           3399 ;	AOP_STK for _increasePulses_currentPulses_1_1
   0A36 3E 20              3400 	ld	a,#0x20
   0A38 96                 3401 	sub	a,(hl)
   0A39 D2 3E 0A           3402 	jp	nc,00106$
                           3403 ;	square.c 587
                           3404 ;	genAssign
                           3405 ;	AOP_STK for _increasePulses_currentPulses_1_1
   0A3C 36 01              3406 	ld	(hl),#0x01
                           3407 ;	genLabel
   0A3E                    3408 00106$:
                           3409 ;	square.c 589
                           3410 ;	genIfx
   0A3E AF                 3411 	xor	a,a
   0A3F B1                 3412 	or	a,c
   0A40 C2 58 0A           3413 	jp	nz,00107$
                           3414 ;	genCmpEq
                           3415 ;	AOP_HL for _seldrum
                           3416 ; genCmpEq: left 1, right 1, result 0
   0A43 21 89 01           3417 	ld	hl,#_seldrum
   0A46 7E                 3418 	ld	a,(hl)
   0A47 FE 01              3419 	cp	a,#0x01
   0A49 CA 62 0A           3420 	jp	z,00108$
   0A4C                    3421 00124$:
                           3422 ;	genCmpEq
                           3423 ;	AOP_HL for _seldrum
                           3424 ; genCmpEq: left 1, right 1, result 0
   0A4C 21 89 01           3425 	ld	hl,#_seldrum
   0A4F 7E                 3426 	ld	a,(hl)
   0A50 FE 02              3427 	cp	a,#0x02
   0A52 CA 6C 0A           3428 	jp	z,00109$
   0A55                    3429 00125$:
                           3430 ;	genGoto
   0A55 C3 73 0A           3431 	jp	00110$
                           3432 ;	square.c 592
                           3433 ;	genLabel
   0A58                    3434 00107$:
                           3435 ;	genAssign
                           3436 ;	AOP_STK for _increasePulses_currentPulses_1_1
                           3437 ;	AOP_HL for _numberOfPulsesA
   0A58 F8 02              3438 	lda	hl,2(sp)
   0A5A 7E                 3439 	ld	a,(hl)
   0A5B 21 6F 01           3440 	ld	hl,#_numberOfPulsesA
   0A5E 77                 3441 	ld	(hl),a
                           3442 ;	square.c 593
                           3443 ;	genGoto
   0A5F C3 73 0A           3444 	jp	00110$
                           3445 ;	square.c 595
                           3446 ;	genLabel
   0A62                    3447 00108$:
                           3448 ;	genAssign
                           3449 ;	AOP_STK for _increasePulses_currentPulses_1_1
                           3450 ;	AOP_HL for _numberOfPulsesB
   0A62 F8 02              3451 	lda	hl,2(sp)
   0A64 7E                 3452 	ld	a,(hl)
   0A65 21 72 01           3453 	ld	hl,#_numberOfPulsesB
   0A68 77                 3454 	ld	(hl),a
                           3455 ;	square.c 596
                           3456 ;	genGoto
   0A69 C3 73 0A           3457 	jp	00110$
                           3458 ;	square.c 598
                           3459 ;	genLabel
   0A6C                    3460 00109$:
                           3461 ;	genAssign
                           3462 ;	AOP_STK for _increasePulses_currentPulses_1_1
                           3463 ;	AOP_HL for _numberOfPulsesC
   0A6C F8 02              3464 	lda	hl,2(sp)
   0A6E 7E                 3465 	ld	a,(hl)
   0A6F 21 75 01           3466 	ld	hl,#_numberOfPulsesC
   0A72 77                 3467 	ld	(hl),a
                           3468 ;	square.c 600
                           3469 ;	genLabel
   0A73                    3470 00110$:
                           3471 ;	square.c 601
                           3472 ;	genMinus
                           3473 ;	AOP_STK for _increasePulses_currentSteps_1_1
   0A73 F8 03              3474 	lda	hl,3(sp)
   0A75 7E                 3475 	ld	a,(hl)
   0A76 C6 FF              3476 	add	a,#0xFF
   0A78 4F                 3477 	ld	c,a
                           3478 ;	genPlus
                           3479 ;	Can't optimise plus by inc, falling back to the normal way
   0A79 3E 18              3480 	ld	a,#<_dXlut
   0A7B 81                 3481 	add	a,c
   0A7C 4F                 3482 	ld	c,a
   0A7D 3E 01              3483 	ld	a,#>_dXlut
   0A7F CE 00              3484 	adc	a,#0x00
   0A81 47                 3485 	ld	b,a
                           3486 ;	genPointerGet
   0A82 0A                 3487 	ld	a,(bc)
   0A83 4F                 3488 	ld	c,a
                           3489 ;	genMinus
                           3490 ;	AOP_STK for _increasePulses_currentPulses_1_1
   0A84 2B                 3491 	dec	hl
   0A85 7E                 3492 	ld	a,(hl)
   0A86 C6 FF              3493 	add	a,#0xFF
   0A88 47                 3494 	ld	b,a
                           3495 ;	genPlus
                           3496 ;	AOP_STK for _increasePulses_sloc0_1_0
                           3497 ;	Can't optimise plus by inc, falling back to the normal way
   0A89 11 38 01           3498 	ld	de,#_dYlut
   0A8C 68                 3499 	ld	l,b
   0A8D 26 00              3500 	ld	h,#0x00
   0A8F 19                 3501 	add	hl,de
   0A90 7D                 3502 	ld	a,l
   0A91 54                 3503 	ld	d,h
   0A92 F8 00              3504 	lda	hl,0(sp)
                           3505 ;	genPointerGet
                           3506 ;	AOP_STK for _increasePulses_sloc0_1_0
   0A94 22                 3507 	ld	(hl+),a
   0A95 72                 3508 	ld	(hl),d
   0A96 5F                 3509 	ld	e,a
   0A97 1A                 3510 	ld	a,(de)
   0A98 47                 3511 	ld	b,a
                           3512 ;	genIpush
                           3513 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A99 79                 3514 	ld	a,c
   0A9A F5                 3515 	push	af
   0A9B 33                 3516 	inc	sp
                           3517 ;	genIpush
   0A9C 78                 3518 	ld	a,b
   0A9D F5                 3519 	push	af
   0A9E 33                 3520 	inc	sp
                           3521 ;	genIpush
                           3522 ;	AOP_HL for _seldrum
   0A9F 21 89 01           3523 	ld	hl,#_seldrum
   0AA2 7E                 3524 	ld	a,(hl)
   0AA3 F5                 3525 	push	af
   0AA4 33                 3526 	inc	sp
                           3527 ;	genCall
   0AA5 CD 00 00           3528 	call	_move_sprite
   0AA8 E8 03              3529 	lda	sp,3(sp)
                           3530 ;	square.c 602
                           3531 ;	genCall
                           3532 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AAA CD 00 00           3533 	call	_wait_vbl_done
                           3534 ;	square.c 603
                           3535 ;	genCall
                           3536 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AAD CD 50 06           3537 	call	_setupDrum
                           3538 ;	genLabel
   0AB0                    3539 00111$:
                           3540 ;	genEndFunction
   0AB0 E8 04              3541 	lda	sp,4(sp)
   0AB2 C9                 3542 	ret
   0AB3                    3543 ___increasePulses_end:
                           3544 ;	square.c 606
                           3545 ;	genLabel
                           3546 ;	genFunction
                           3547 ;	---------------------------------
                           3548 ; Function decreasePulses
                           3549 ; ---------------------------------
   0AB3                    3550 ___decreasePulses_start:
   0AB3                    3551 _decreasePulses:
   0AB3 E8 FC              3552 	lda	sp,-4(sp)
                           3553 ;	square.c 608
                           3554 ;	genAssign
                           3555 ;	AOP_STK for _decreasePulses_currentSteps_1_1
   0AB5 F8 03              3556 	lda	hl,3(sp)
   0AB7 36 01              3557 	ld	(hl),#0x01
                           3558 ;	square.c 609
                           3559 ;	genAssign
                           3560 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0AB9 2B                 3561 	dec	hl
   0ABA 36 01              3562 	ld	(hl),#0x01
                           3563 ;	square.c 610
                           3564 ;	genCmpEq
                           3565 ;	AOP_HL for _seldrum
                           3566 ; genCmpEq: left 1, right 1, result 1
   0ABC 21 89 01           3567 	ld	hl,#_seldrum
   0ABF 7E                 3568 	ld	a,(hl)
   0AC0 B7                 3569 	or	a,a
   0AC1 C2 C8 0A           3570 	jp	nz,00120$
   0AC4 3E 01              3571 	ld	a,#0x01
   0AC6 18 01              3572 	jr	00121$
   0AC8                    3573 00120$:
   0AC8 AF                 3574 	xor	a,a
   0AC9                    3575 00121$:
   0AC9 4F                 3576 	ld	c,a
                           3577 ;	genIfx
   0ACA AF                 3578 	xor	a,a
   0ACB B1                 3579 	or	a,c
   0ACC C2 E4 0A           3580 	jp	nz,00101$
                           3581 ;	genCmpEq
                           3582 ;	AOP_HL for _seldrum
                           3583 ; genCmpEq: left 1, right 1, result 0
   0ACF 21 89 01           3584 	ld	hl,#_seldrum
   0AD2 7E                 3585 	ld	a,(hl)
   0AD3 FE 01              3586 	cp	a,#0x01
   0AD5 CA 01 0B           3587 	jp	z,00102$
   0AD8                    3588 00122$:
                           3589 ;	genCmpEq
                           3590 ;	AOP_HL for _seldrum
                           3591 ; genCmpEq: left 1, right 1, result 0
   0AD8 21 89 01           3592 	ld	hl,#_seldrum
   0ADB 7E                 3593 	ld	a,(hl)
   0ADC FE 02              3594 	cp	a,#0x02
   0ADE CA 1E 0B           3595 	jp	z,00103$
   0AE1                    3596 00123$:
                           3597 ;	genGoto
   0AE1 C3 38 0B           3598 	jp	00104$
                           3599 ;	square.c 613
                           3600 ;	genLabel
   0AE4                    3601 00101$:
                           3602 ;	genAssign
                           3603 ;	AOP_HL for _totalStepsA
                           3604 ;	AOP_STK for _decreasePulses_currentSteps_1_1
   0AE4 21 70 01           3605 	ld	hl,#_totalStepsA
   0AE7 7E                 3606 	ld	a,(hl)
   0AE8 F8 03              3607 	lda	hl,3(sp)
   0AEA 77                 3608 	ld	(hl),a
                           3609 ;	square.c 614
                           3610 ;	genAssign
                           3611 ;	AOP_HL for _numberOfPulsesA
                           3612 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0AEB 21 6F 01           3613 	ld	hl,#_numberOfPulsesA
   0AEE 7E                 3614 	ld	a,(hl)
   0AEF F8 02              3615 	lda	hl,2(sp)
   0AF1 77                 3616 	ld	(hl),a
                           3617 ;	square.c 615
                           3618 ;	genIpush
                           3619 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0AF2 C5                 3620 	push	bc
   0AF3 21 00 00           3621 	ld	hl,#0x0000
   0AF6 E5                 3622 	push	hl
                           3623 ;	genCall
   0AF7 CD 00 00           3624 	call	_set_sprite_tile
   0AFA E8 02              3625 	lda	sp,2(sp)
   0AFC E1                 3626 	pop	hl
   0AFD 4D                 3627 	ld	c,l
                           3628 ;	square.c 616
                           3629 ;	genGoto
   0AFE C3 38 0B           3630 	jp	00104$
                           3631 ;	square.c 618
                           3632 ;	genLabel
   0B01                    3633 00102$:
                           3634 ;	genAssign
                           3635 ;	AOP_HL for _totalStepsB
                           3636 ;	AOP_STK for _decreasePulses_currentSteps_1_1
   0B01 21 73 01           3637 	ld	hl,#_totalStepsB
   0B04 7E                 3638 	ld	a,(hl)
   0B05 F8 03              3639 	lda	hl,3(sp)
   0B07 77                 3640 	ld	(hl),a
                           3641 ;	square.c 619
                           3642 ;	genAssign
                           3643 ;	AOP_HL for _numberOfPulsesB
                           3644 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0B08 21 72 01           3645 	ld	hl,#_numberOfPulsesB
   0B0B 7E                 3646 	ld	a,(hl)
   0B0C F8 02              3647 	lda	hl,2(sp)
   0B0E 77                 3648 	ld	(hl),a
                           3649 ;	square.c 620
                           3650 ;	genIpush
                           3651 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B0F C5                 3652 	push	bc
   0B10 21 01 02           3653 	ld	hl,#0x0201
   0B13 E5                 3654 	push	hl
                           3655 ;	genCall
   0B14 CD 00 00           3656 	call	_set_sprite_tile
   0B17 E8 02              3657 	lda	sp,2(sp)
   0B19 E1                 3658 	pop	hl
   0B1A 4D                 3659 	ld	c,l
                           3660 ;	square.c 621
                           3661 ;	genGoto
   0B1B C3 38 0B           3662 	jp	00104$
                           3663 ;	square.c 623
                           3664 ;	genLabel
   0B1E                    3665 00103$:
                           3666 ;	genAssign
                           3667 ;	AOP_HL for _totalStepsC
                           3668 ;	AOP_STK for _decreasePulses_currentSteps_1_1
   0B1E 21 76 01           3669 	ld	hl,#_totalStepsC
   0B21 7E                 3670 	ld	a,(hl)
   0B22 F8 03              3671 	lda	hl,3(sp)
   0B24 77                 3672 	ld	(hl),a
                           3673 ;	square.c 624
                           3674 ;	genAssign
                           3675 ;	AOP_HL for _numberOfPulsesC
                           3676 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0B25 21 75 01           3677 	ld	hl,#_numberOfPulsesC
   0B28 7E                 3678 	ld	a,(hl)
   0B29 F8 02              3679 	lda	hl,2(sp)
   0B2B 77                 3680 	ld	(hl),a
                           3681 ;	square.c 625
                           3682 ;	genIpush
                           3683 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B2C C5                 3684 	push	bc
   0B2D 21 03 06           3685 	ld	hl,#0x0603
   0B30 E5                 3686 	push	hl
                           3687 ;	genCall
   0B31 CD 00 00           3688 	call	_set_sprite_tile
   0B34 E8 02              3689 	lda	sp,2(sp)
   0B36 E1                 3690 	pop	hl
   0B37 4D                 3691 	ld	c,l
                           3692 ;	square.c 627
                           3693 ;	genLabel
   0B38                    3694 00104$:
                           3695 ;	square.c 628
                           3696 ;	genMinus
                           3697 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0B38 F8 02              3698 	lda	hl,2(sp)
   0B3A 35                 3699 	dec	(hl)
                           3700 ;	square.c 629
                           3701 ;	genCmpLt
                           3702 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0B3B 7E                 3703 	ld	a,(hl)
   0B3C FE 01              3704 	cp	#0x01
   0B3E D2 43 0B           3705 	jp	nc,00106$
                           3706 ;	square.c 631
                           3707 ;	genAssign
                           3708 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0B41 36 20              3709 	ld	(hl),#0x20
                           3710 ;	genLabel
   0B43                    3711 00106$:
                           3712 ;	square.c 633
                           3713 ;	genIfx
   0B43 AF                 3714 	xor	a,a
   0B44 B1                 3715 	or	a,c
   0B45 C2 5D 0B           3716 	jp	nz,00107$
                           3717 ;	genCmpEq
                           3718 ;	AOP_HL for _seldrum
                           3719 ; genCmpEq: left 1, right 1, result 0
   0B48 21 89 01           3720 	ld	hl,#_seldrum
   0B4B 7E                 3721 	ld	a,(hl)
   0B4C FE 01              3722 	cp	a,#0x01
   0B4E CA 67 0B           3723 	jp	z,00108$
   0B51                    3724 00124$:
                           3725 ;	genCmpEq
                           3726 ;	AOP_HL for _seldrum
                           3727 ; genCmpEq: left 1, right 1, result 0
   0B51 21 89 01           3728 	ld	hl,#_seldrum
   0B54 7E                 3729 	ld	a,(hl)
   0B55 FE 02              3730 	cp	a,#0x02
   0B57 CA 71 0B           3731 	jp	z,00109$
   0B5A                    3732 00125$:
                           3733 ;	genGoto
   0B5A C3 78 0B           3734 	jp	00110$
                           3735 ;	square.c 636
                           3736 ;	genLabel
   0B5D                    3737 00107$:
                           3738 ;	genAssign
                           3739 ;	AOP_STK for _decreasePulses_currentPulses_1_1
                           3740 ;	AOP_HL for _numberOfPulsesA
   0B5D F8 02              3741 	lda	hl,2(sp)
   0B5F 7E                 3742 	ld	a,(hl)
   0B60 21 6F 01           3743 	ld	hl,#_numberOfPulsesA
   0B63 77                 3744 	ld	(hl),a
                           3745 ;	square.c 637
                           3746 ;	genGoto
   0B64 C3 78 0B           3747 	jp	00110$
                           3748 ;	square.c 639
                           3749 ;	genLabel
   0B67                    3750 00108$:
                           3751 ;	genAssign
                           3752 ;	AOP_STK for _decreasePulses_currentPulses_1_1
                           3753 ;	AOP_HL for _numberOfPulsesB
   0B67 F8 02              3754 	lda	hl,2(sp)
   0B69 7E                 3755 	ld	a,(hl)
   0B6A 21 72 01           3756 	ld	hl,#_numberOfPulsesB
   0B6D 77                 3757 	ld	(hl),a
                           3758 ;	square.c 640
                           3759 ;	genGoto
   0B6E C3 78 0B           3760 	jp	00110$
                           3761 ;	square.c 642
                           3762 ;	genLabel
   0B71                    3763 00109$:
                           3764 ;	genAssign
                           3765 ;	AOP_STK for _decreasePulses_currentPulses_1_1
                           3766 ;	AOP_HL for _numberOfPulsesC
   0B71 F8 02              3767 	lda	hl,2(sp)
   0B73 7E                 3768 	ld	a,(hl)
   0B74 21 75 01           3769 	ld	hl,#_numberOfPulsesC
   0B77 77                 3770 	ld	(hl),a
                           3771 ;	square.c 644
                           3772 ;	genLabel
   0B78                    3773 00110$:
                           3774 ;	square.c 645
                           3775 ;	genMinus
                           3776 ;	AOP_STK for _decreasePulses_currentSteps_1_1
   0B78 F8 03              3777 	lda	hl,3(sp)
   0B7A 7E                 3778 	ld	a,(hl)
   0B7B C6 FF              3779 	add	a,#0xFF
   0B7D 4F                 3780 	ld	c,a
                           3781 ;	genPlus
                           3782 ;	Can't optimise plus by inc, falling back to the normal way
   0B7E 3E 18              3783 	ld	a,#<_dXlut
   0B80 81                 3784 	add	a,c
   0B81 4F                 3785 	ld	c,a
   0B82 3E 01              3786 	ld	a,#>_dXlut
   0B84 CE 00              3787 	adc	a,#0x00
   0B86 47                 3788 	ld	b,a
                           3789 ;	genPointerGet
   0B87 0A                 3790 	ld	a,(bc)
   0B88 4F                 3791 	ld	c,a
                           3792 ;	genMinus
                           3793 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0B89 2B                 3794 	dec	hl
   0B8A 7E                 3795 	ld	a,(hl)
   0B8B C6 FF              3796 	add	a,#0xFF
   0B8D 47                 3797 	ld	b,a
                           3798 ;	genPlus
                           3799 ;	AOP_STK for _decreasePulses_sloc0_1_0
                           3800 ;	Can't optimise plus by inc, falling back to the normal way
   0B8E 11 38 01           3801 	ld	de,#_dYlut
   0B91 68                 3802 	ld	l,b
   0B92 26 00              3803 	ld	h,#0x00
   0B94 19                 3804 	add	hl,de
   0B95 7D                 3805 	ld	a,l
   0B96 54                 3806 	ld	d,h
   0B97 F8 00              3807 	lda	hl,0(sp)
                           3808 ;	genPointerGet
                           3809 ;	AOP_STK for _decreasePulses_sloc0_1_0
   0B99 22                 3810 	ld	(hl+),a
   0B9A 72                 3811 	ld	(hl),d
   0B9B 5F                 3812 	ld	e,a
   0B9C 1A                 3813 	ld	a,(de)
   0B9D 47                 3814 	ld	b,a
                           3815 ;	genIpush
                           3816 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B9E 79                 3817 	ld	a,c
   0B9F F5                 3818 	push	af
   0BA0 33                 3819 	inc	sp
                           3820 ;	genIpush
   0BA1 78                 3821 	ld	a,b
   0BA2 F5                 3822 	push	af
   0BA3 33                 3823 	inc	sp
                           3824 ;	genIpush
                           3825 ;	AOP_HL for _seldrum
   0BA4 21 89 01           3826 	ld	hl,#_seldrum
   0BA7 7E                 3827 	ld	a,(hl)
   0BA8 F5                 3828 	push	af
   0BA9 33                 3829 	inc	sp
                           3830 ;	genCall
   0BAA CD 00 00           3831 	call	_move_sprite
   0BAD E8 03              3832 	lda	sp,3(sp)
                           3833 ;	square.c 646
                           3834 ;	genCall
                           3835 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0BAF CD 00 00           3836 	call	_wait_vbl_done
                           3837 ;	square.c 647
                           3838 ;	genCall
                           3839 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0BB2 CD 50 06           3840 	call	_setupDrum
                           3841 ;	genLabel
   0BB5                    3842 00111$:
                           3843 ;	genEndFunction
   0BB5 E8 04              3844 	lda	sp,4(sp)
   0BB7 C9                 3845 	ret
   0BB8                    3846 ___decreasePulses_end:
                           3847 ;	square.c 651
                           3848 ;	genLabel
                           3849 ;	genFunction
                           3850 ;	---------------------------------
                           3851 ; Function increaseSwing
                           3852 ; ---------------------------------
   0BB8                    3853 ___increaseSwing_start:
   0BB8                    3854 _increaseSwing:
                           3855 	
                           3856 ;	square.c 653
                           3857 ;	genAssign
   0BB8 0E 00              3858 	ld	c,#0x00
                           3859 ;	square.c 654
                           3860 ;	genCmpEq
                           3861 ;	AOP_HL for _seldrum
                           3862 ; genCmpEq: left 1, right 1, result 1
   0BBA 21 89 01           3863 	ld	hl,#_seldrum
   0BBD 7E                 3864 	ld	a,(hl)
   0BBE B7                 3865 	or	a,a
   0BBF C2 C6 0B           3866 	jp	nz,00117$
   0BC2 3E 01              3867 	ld	a,#0x01
   0BC4 18 01              3868 	jr	00118$
   0BC6                    3869 00117$:
   0BC6 AF                 3870 	xor	a,a
   0BC7                    3871 00118$:
   0BC7 47                 3872 	ld	b,a
                           3873 ;	genIfx
   0BC8 AF                 3874 	xor	a,a
   0BC9 B0                 3875 	or	a,b
   0BCA C2 E2 0B           3876 	jp	nz,00101$
                           3877 ;	genCmpEq
                           3878 ;	AOP_HL for _seldrum
                           3879 ; genCmpEq: left 1, right 1, result 0
   0BCD 21 89 01           3880 	ld	hl,#_seldrum
   0BD0 7E                 3881 	ld	a,(hl)
   0BD1 FE 01              3882 	cp	a,#0x01
   0BD3 CA E9 0B           3883 	jp	z,00102$
   0BD6                    3884 00119$:
                           3885 ;	genCmpEq
                           3886 ;	AOP_HL for _seldrum
                           3887 ; genCmpEq: left 1, right 1, result 0
   0BD6 21 89 01           3888 	ld	hl,#_seldrum
   0BD9 7E                 3889 	ld	a,(hl)
   0BDA FE 02              3890 	cp	a,#0x02
   0BDC CA F0 0B           3891 	jp	z,00103$
   0BDF                    3892 00120$:
                           3893 ;	genGoto
   0BDF C3 F4 0B           3894 	jp	00104$
                           3895 ;	square.c 657
                           3896 ;	genLabel
   0BE2                    3897 00101$:
                           3898 ;	genAssign
                           3899 ;	AOP_HL for _delayA
   0BE2 21 69 01           3900 	ld	hl,#_delayA
   0BE5 4E                 3901 	ld	c,(hl)
                           3902 ;	square.c 658
                           3903 ;	genGoto
   0BE6 C3 F4 0B           3904 	jp	00104$
                           3905 ;	square.c 660
                           3906 ;	genLabel
   0BE9                    3907 00102$:
                           3908 ;	genAssign
                           3909 ;	AOP_HL for _delayB
   0BE9 21 6A 01           3910 	ld	hl,#_delayB
   0BEC 4E                 3911 	ld	c,(hl)
                           3912 ;	square.c 661
                           3913 ;	genGoto
   0BED C3 F4 0B           3914 	jp	00104$
                           3915 ;	square.c 663
                           3916 ;	genLabel
   0BF0                    3917 00103$:
                           3918 ;	genAssign
                           3919 ;	AOP_HL for _delayC
   0BF0 21 6B 01           3920 	ld	hl,#_delayC
   0BF3 4E                 3921 	ld	c,(hl)
                           3922 ;	square.c 665
                           3923 ;	genLabel
   0BF4                    3924 00104$:
                           3925 ;	square.c 666
                           3926 ;	genPlus
                           3927 ;	genPlusIncr
                           3928 ; Removed redundent load
   0BF4 0C                 3929 	inc	c
                           3930 ;	square.c 667
                           3931 ;	genIfx
   0BF5 AF                 3932 	xor	a,a
   0BF6 B0                 3933 	or	a,b
   0BF7 C2 0F 0C           3934 	jp	nz,00105$
                           3935 ;	genCmpEq
                           3936 ;	AOP_HL for _seldrum
                           3937 ; genCmpEq: left 1, right 1, result 0
   0BFA 21 89 01           3938 	ld	hl,#_seldrum
   0BFD 7E                 3939 	ld	a,(hl)
   0BFE FE 01              3940 	cp	a,#0x01
   0C00 CA 16 0C           3941 	jp	z,00106$
   0C03                    3942 00121$:
                           3943 ;	genCmpEq
                           3944 ;	AOP_HL for _seldrum
                           3945 ; genCmpEq: left 1, right 1, result 0
   0C03 21 89 01           3946 	ld	hl,#_seldrum
   0C06 7E                 3947 	ld	a,(hl)
   0C07 FE 02              3948 	cp	a,#0x02
   0C09 CA 1D 0C           3949 	jp	z,00107$
   0C0C                    3950 00122$:
                           3951 ;	genGoto
   0C0C C3 21 0C           3952 	jp	00108$
                           3953 ;	square.c 670
                           3954 ;	genLabel
   0C0F                    3955 00105$:
                           3956 ;	genAssign
                           3957 ;	AOP_HL for _delayA
   0C0F 21 69 01           3958 	ld	hl,#_delayA
   0C12 71                 3959 	ld	(hl),c
                           3960 ;	square.c 671
                           3961 ;	genGoto
   0C13 C3 21 0C           3962 	jp	00108$
                           3963 ;	square.c 673
                           3964 ;	genLabel
   0C16                    3965 00106$:
                           3966 ;	genAssign
                           3967 ;	AOP_HL for _delayB
   0C16 21 6A 01           3968 	ld	hl,#_delayB
   0C19 71                 3969 	ld	(hl),c
                           3970 ;	square.c 674
                           3971 ;	genGoto
   0C1A C3 21 0C           3972 	jp	00108$
                           3973 ;	square.c 676
                           3974 ;	genLabel
   0C1D                    3975 00107$:
                           3976 ;	genAssign
                           3977 ;	AOP_HL for _delayC
   0C1D 21 6B 01           3978 	ld	hl,#_delayC
   0C20 71                 3979 	ld	(hl),c
                           3980 ;	square.c 678
                           3981 ;	genLabel
   0C21                    3982 00108$:
                           3983 ;	square.c 679
                           3984 ;	genIpush
                           3985 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0C21 C5                 3986 	push	bc
   0C22 21 05 0A           3987 	ld	hl,#0x0A05
   0C25 E5                 3988 	push	hl
                           3989 ;	genCall
   0C26 CD 00 00           3990 	call	_set_sprite_tile
   0C29 E8 02              3991 	lda	sp,2(sp)
   0C2B E1                 3992 	pop	hl
   0C2C 4D                 3993 	ld	c,l
                           3994 ;	square.c 680
                           3995 ;	genPlus
                           3996 ;	genPlusIncr
                           3997 ;	Can't optimise plus by inc, falling back to the normal way
   0C2D 79                 3998 	ld	a,c
   0C2E C6 08              3999 	add	a,#0x08
   0C30 4F                 4000 	ld	c,a
                           4001 ;	genIpush
                           4002 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C31 3E 98              4003 	ld	a,#0x98
   0C33 F5                 4004 	push	af
   0C34 33                 4005 	inc	sp
                           4006 ;	genIpush
   0C35 79                 4007 	ld	a,c
   0C36 F5                 4008 	push	af
   0C37 33                 4009 	inc	sp
                           4010 ;	genIpush
   0C38 3E 05              4011 	ld	a,#0x05
   0C3A F5                 4012 	push	af
   0C3B 33                 4013 	inc	sp
                           4014 ;	genCall
   0C3C CD 00 00           4015 	call	_move_sprite
   0C3F E8 03              4016 	lda	sp,3(sp)
                           4017 ;	square.c 681
                           4018 ;	genCall
                           4019 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C41 CD 00 00           4020 	call	_wait_vbl_done
                           4021 ;	square.c 682
                           4022 ;	genCall
                           4023 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C44 CD 50 06           4024 	call	_setupDrum
                           4025 ;	genLabel
   0C47                    4026 00109$:
                           4027 ;	genEndFunction
                           4028 	
   0C47 C9                 4029 	ret
   0C48                    4030 ___increaseSwing_end:
                           4031 ;	square.c 685
                           4032 ;	genLabel
                           4033 ;	genFunction
                           4034 ;	---------------------------------
                           4035 ; Function decreaseSwing
                           4036 ; ---------------------------------
   0C48                    4037 ___decreaseSwing_start:
   0C48                    4038 _decreaseSwing:
                           4039 	
                           4040 ;	square.c 687
                           4041 ;	genAssign
   0C48 0E 00              4042 	ld	c,#0x00
                           4043 ;	square.c 688
                           4044 ;	genCmpEq
                           4045 ;	AOP_HL for _seldrum
                           4046 ; genCmpEq: left 1, right 1, result 1
   0C4A 21 89 01           4047 	ld	hl,#_seldrum
   0C4D 7E                 4048 	ld	a,(hl)
   0C4E B7                 4049 	or	a,a
   0C4F C2 56 0C           4050 	jp	nz,00120$
   0C52 3E 01              4051 	ld	a,#0x01
   0C54 18 01              4052 	jr	00121$
   0C56                    4053 00120$:
   0C56 AF                 4054 	xor	a,a
   0C57                    4055 00121$:
   0C57 47                 4056 	ld	b,a
                           4057 ;	genIfx
   0C58 AF                 4058 	xor	a,a
   0C59 B0                 4059 	or	a,b
   0C5A C2 72 0C           4060 	jp	nz,00101$
                           4061 ;	genCmpEq
                           4062 ;	AOP_HL for _seldrum
                           4063 ; genCmpEq: left 1, right 1, result 0
   0C5D 21 89 01           4064 	ld	hl,#_seldrum
   0C60 7E                 4065 	ld	a,(hl)
   0C61 FE 01              4066 	cp	a,#0x01
   0C63 CA 79 0C           4067 	jp	z,00102$
   0C66                    4068 00122$:
                           4069 ;	genCmpEq
                           4070 ;	AOP_HL for _seldrum
                           4071 ; genCmpEq: left 1, right 1, result 0
   0C66 21 89 01           4072 	ld	hl,#_seldrum
   0C69 7E                 4073 	ld	a,(hl)
   0C6A FE 02              4074 	cp	a,#0x02
   0C6C CA 80 0C           4075 	jp	z,00103$
   0C6F                    4076 00123$:
                           4077 ;	genGoto
   0C6F C3 84 0C           4078 	jp	00104$
                           4079 ;	square.c 691
                           4080 ;	genLabel
   0C72                    4081 00101$:
                           4082 ;	genAssign
                           4083 ;	AOP_HL for _delayA
   0C72 21 69 01           4084 	ld	hl,#_delayA
   0C75 4E                 4085 	ld	c,(hl)
                           4086 ;	square.c 692
                           4087 ;	genGoto
   0C76 C3 84 0C           4088 	jp	00104$
                           4089 ;	square.c 694
                           4090 ;	genLabel
   0C79                    4091 00102$:
                           4092 ;	genAssign
                           4093 ;	AOP_HL for _delayB
   0C79 21 6A 01           4094 	ld	hl,#_delayB
   0C7C 4E                 4095 	ld	c,(hl)
                           4096 ;	square.c 695
                           4097 ;	genGoto
   0C7D C3 84 0C           4098 	jp	00104$
                           4099 ;	square.c 697
                           4100 ;	genLabel
   0C80                    4101 00103$:
                           4102 ;	genAssign
                           4103 ;	AOP_HL for _delayC
   0C80 21 6B 01           4104 	ld	hl,#_delayC
   0C83 4E                 4105 	ld	c,(hl)
                           4106 ;	square.c 699
                           4107 ;	genLabel
   0C84                    4108 00104$:
                           4109 ;	square.c 700
                           4110 ;	genCmpEq
                           4111 ; genCmpEq: left 1, right 1, result 0
   0C84 79                 4112 	ld	a,c
   0C85 B7                 4113 	or	a,a
   0C86 CA 8A 0C           4114 	jp	z,00106$
   0C89                    4115 00124$:
                           4116 ;	square.c 702
                           4117 ;	genMinus
   0C89 0D                 4118 	dec	c
                           4119 ;	genLabel
   0C8A                    4120 00106$:
                           4121 ;	square.c 704
                           4122 ;	genIfx
   0C8A AF                 4123 	xor	a,a
   0C8B B0                 4124 	or	a,b
   0C8C C2 A4 0C           4125 	jp	nz,00107$
                           4126 ;	genCmpEq
                           4127 ;	AOP_HL for _seldrum
                           4128 ; genCmpEq: left 1, right 1, result 0
   0C8F 21 89 01           4129 	ld	hl,#_seldrum
   0C92 7E                 4130 	ld	a,(hl)
   0C93 FE 01              4131 	cp	a,#0x01
   0C95 CA AB 0C           4132 	jp	z,00108$
   0C98                    4133 00125$:
                           4134 ;	genCmpEq
                           4135 ;	AOP_HL for _seldrum
                           4136 ; genCmpEq: left 1, right 1, result 0
   0C98 21 89 01           4137 	ld	hl,#_seldrum
   0C9B 7E                 4138 	ld	a,(hl)
   0C9C FE 02              4139 	cp	a,#0x02
   0C9E CA B2 0C           4140 	jp	z,00109$
   0CA1                    4141 00126$:
                           4142 ;	genGoto
   0CA1 C3 B6 0C           4143 	jp	00110$
                           4144 ;	square.c 707
                           4145 ;	genLabel
   0CA4                    4146 00107$:
                           4147 ;	genAssign
                           4148 ;	AOP_HL for _delayA
   0CA4 21 69 01           4149 	ld	hl,#_delayA
   0CA7 71                 4150 	ld	(hl),c
                           4151 ;	square.c 708
                           4152 ;	genGoto
   0CA8 C3 B6 0C           4153 	jp	00110$
                           4154 ;	square.c 710
                           4155 ;	genLabel
   0CAB                    4156 00108$:
                           4157 ;	genAssign
                           4158 ;	AOP_HL for _delayB
   0CAB 21 6A 01           4159 	ld	hl,#_delayB
   0CAE 71                 4160 	ld	(hl),c
                           4161 ;	square.c 711
                           4162 ;	genGoto
   0CAF C3 B6 0C           4163 	jp	00110$
                           4164 ;	square.c 713
                           4165 ;	genLabel
   0CB2                    4166 00109$:
                           4167 ;	genAssign
                           4168 ;	AOP_HL for _delayC
   0CB2 21 6B 01           4169 	ld	hl,#_delayC
   0CB5 71                 4170 	ld	(hl),c
                           4171 ;	square.c 715
                           4172 ;	genLabel
   0CB6                    4173 00110$:
                           4174 ;	square.c 716
                           4175 ;	genIpush
                           4176 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0CB6 C5                 4177 	push	bc
   0CB7 21 05 0A           4178 	ld	hl,#0x0A05
   0CBA E5                 4179 	push	hl
                           4180 ;	genCall
   0CBB CD 00 00           4181 	call	_set_sprite_tile
   0CBE E8 02              4182 	lda	sp,2(sp)
   0CC0 E1                 4183 	pop	hl
   0CC1 4D                 4184 	ld	c,l
                           4185 ;	square.c 717
                           4186 ;	genPlus
                           4187 ;	genPlusIncr
                           4188 ;	Can't optimise plus by inc, falling back to the normal way
   0CC2 79                 4189 	ld	a,c
   0CC3 C6 08              4190 	add	a,#0x08
   0CC5 4F                 4191 	ld	c,a
                           4192 ;	genIpush
                           4193 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CC6 3E 98              4194 	ld	a,#0x98
   0CC8 F5                 4195 	push	af
   0CC9 33                 4196 	inc	sp
                           4197 ;	genIpush
   0CCA 79                 4198 	ld	a,c
   0CCB F5                 4199 	push	af
   0CCC 33                 4200 	inc	sp
                           4201 ;	genIpush
   0CCD 3E 05              4202 	ld	a,#0x05
   0CCF F5                 4203 	push	af
   0CD0 33                 4204 	inc	sp
                           4205 ;	genCall
   0CD1 CD 00 00           4206 	call	_move_sprite
   0CD4 E8 03              4207 	lda	sp,3(sp)
                           4208 ;	square.c 718
                           4209 ;	genCall
                           4210 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CD6 CD 00 00           4211 	call	_wait_vbl_done
                           4212 ;	square.c 719
                           4213 ;	genCall
                           4214 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CD9 CD 50 06           4215 	call	_setupDrum
                           4216 ;	genLabel
   0CDC                    4217 00111$:
                           4218 ;	genEndFunction
                           4219 	
   0CDC C9                 4220 	ret
   0CDD                    4221 ___decreaseSwing_end:
                           4222 ;	square.c 722
                           4223 ;	genLabel
                           4224 ;	genFunction
                           4225 ;	---------------------------------
                           4226 ; Function tick
                           4227 ; ---------------------------------
   0CDD                    4228 ___tick_start:
   0CDD                    4229 _tick:
                           4230 	
                           4231 ;	square.c 725
                           4232 ;	genMinus
                           4233 ;	AOP_HL for _totalStepsA
   0CDD 21 70 01           4234 	ld	hl,#_totalStepsA
   0CE0 7E                 4235 	ld	a,(hl)
   0CE1 C6 FF              4236 	add	a,#0xFF
                           4237 ;	genCmpGt
                           4238 ;	AOP_HL for _clkA
   0CE3 4F                 4239 	ld	c,a
   0CE4 21 71 01           4240 	ld	hl,#_clkA
   0CE7 96                 4241 	sub	a,(hl)
   0CE8 D2 ED 0C           4242 	jp	nc,00102$
                           4243 ;	square.c 727
                           4244 ;	genAssign
                           4245 ;	AOP_HL for _clkA
   0CEB 36 00              4246 	ld	(hl),#0x00
                           4247 ;	genLabel
   0CED                    4248 00102$:
                           4249 ;	square.c 729
                           4250 ;	genMinus
                           4251 ;	AOP_HL for _totalStepsB
   0CED 21 73 01           4252 	ld	hl,#_totalStepsB
   0CF0 7E                 4253 	ld	a,(hl)
   0CF1 C6 FF              4254 	add	a,#0xFF
                           4255 ;	genCmpGt
                           4256 ;	AOP_HL for _clkB
   0CF3 4F                 4257 	ld	c,a
   0CF4 21 74 01           4258 	ld	hl,#_clkB
   0CF7 96                 4259 	sub	a,(hl)
   0CF8 D2 FD 0C           4260 	jp	nc,00104$
                           4261 ;	square.c 731
                           4262 ;	genAssign
                           4263 ;	AOP_HL for _clkB
   0CFB 36 00              4264 	ld	(hl),#0x00
                           4265 ;	genLabel
   0CFD                    4266 00104$:
                           4267 ;	square.c 733
                           4268 ;	genMinus
                           4269 ;	AOP_HL for _totalStepsC
   0CFD 21 76 01           4270 	ld	hl,#_totalStepsC
   0D00 7E                 4271 	ld	a,(hl)
   0D01 C6 FF              4272 	add	a,#0xFF
                           4273 ;	genCmpGt
                           4274 ;	AOP_HL for _clkC
   0D03 4F                 4275 	ld	c,a
   0D04 21 77 01           4276 	ld	hl,#_clkC
   0D07 96                 4277 	sub	a,(hl)
   0D08 D2 0D 0D           4278 	jp	nc,00106$
                           4279 ;	square.c 735
                           4280 ;	genAssign
                           4281 ;	AOP_HL for _clkC
   0D0B 36 00              4282 	ld	(hl),#0x00
                           4283 ;	genLabel
   0D0D                    4284 00106$:
                           4285 ;	square.c 738
                           4286 ;	genCmpEq
                           4287 ;	AOP_HL for _syncToDrum
                           4288 ; genCmpEq: left 1, right 1, result 0
   0D0D 21 6D 01           4289 	ld	hl,#_syncToDrum
   0D10 7E                 4290 	ld	a,(hl)
   0D11 FE 01              4291 	cp	a,#0x01
   0D13 C2 77 0D           4292 	jp	nz,00114$
   0D16 18 03              4293 	jr	00144$
   0D18                    4294 00143$:
   0D18 C3 77 0D           4295 	jp	00114$
   0D1B                    4296 00144$:
                           4297 ;	square.c 740
                           4298 ;	genCmpEq
                           4299 ;	AOP_HL for _seldrum
                           4300 ; genCmpEq: left 1, right 1, result 0
   0D1B 21 89 01           4301 	ld	hl,#_seldrum
   0D1E 7E                 4302 	ld	a,(hl)
   0D1F B7                 4303 	or	a,a
   0D20 CA 38 0D           4304 	jp	z,00107$
   0D23                    4305 00145$:
                           4306 ;	genCmpEq
                           4307 ;	AOP_HL for _seldrum
                           4308 ; genCmpEq: left 1, right 1, result 0
   0D23 21 89 01           4309 	ld	hl,#_seldrum
   0D26 7E                 4310 	ld	a,(hl)
   0D27 FE 01              4311 	cp	a,#0x01
   0D29 CA 43 0D           4312 	jp	z,00108$
   0D2C                    4313 00146$:
                           4314 ;	genCmpEq
                           4315 ;	AOP_HL for _seldrum
                           4316 ; genCmpEq: left 1, right 1, result 0
   0D2C 21 89 01           4317 	ld	hl,#_seldrum
   0D2F 7E                 4318 	ld	a,(hl)
   0D30 FE 02              4319 	cp	a,#0x02
   0D32 CA 4E 0D           4320 	jp	z,00109$
   0D35                    4321 00147$:
                           4322 ;	genGoto
   0D35 C3 56 0D           4323 	jp	00110$
                           4324 ;	square.c 743
                           4325 ;	genLabel
   0D38                    4326 00107$:
                           4327 ;	genAssign
                           4328 ;	AOP_HL for _clkA
                           4329 ;	AOP_HL for _clockToSync
   0D38 21 71 01           4330 	ld	hl,#_clkA
   0D3B 7E                 4331 	ld	a,(hl)
   0D3C 21 6E 01           4332 	ld	hl,#_clockToSync
   0D3F 77                 4333 	ld	(hl),a
                           4334 ;	square.c 744
                           4335 ;	genGoto
   0D40 C3 56 0D           4336 	jp	00110$
                           4337 ;	square.c 746
                           4338 ;	genLabel
   0D43                    4339 00108$:
                           4340 ;	genAssign
                           4341 ;	AOP_HL for _clkB
                           4342 ;	AOP_HL for _clockToSync
   0D43 21 74 01           4343 	ld	hl,#_clkB
   0D46 7E                 4344 	ld	a,(hl)
   0D47 21 6E 01           4345 	ld	hl,#_clockToSync
   0D4A 77                 4346 	ld	(hl),a
                           4347 ;	square.c 747
                           4348 ;	genGoto
   0D4B C3 56 0D           4349 	jp	00110$
                           4350 ;	square.c 749
                           4351 ;	genLabel
   0D4E                    4352 00109$:
                           4353 ;	genAssign
                           4354 ;	AOP_HL for _clkC
                           4355 ;	AOP_HL for _clockToSync
   0D4E 21 77 01           4356 	ld	hl,#_clkC
   0D51 7E                 4357 	ld	a,(hl)
   0D52 21 6E 01           4358 	ld	hl,#_clockToSync
   0D55 77                 4359 	ld	(hl),a
                           4360 ;	square.c 751
                           4361 ;	genLabel
   0D56                    4362 00110$:
                           4363 ;	square.c 753
                           4364 ;	genCmpEq
                           4365 ;	AOP_HL for _clockToSync
                           4366 ; genCmpEq: left 1, right 1, result 0
   0D56 21 6E 01           4367 	ld	hl,#_clockToSync
   0D59 7E                 4368 	ld	a,(hl)
   0D5A B7                 4369 	or	a,a
   0D5B C2 77 0D           4370 	jp	nz,00114$
   0D5E 18 03              4371 	jr	00149$
   0D60                    4372 00148$:
   0D60 C3 77 0D           4373 	jp	00114$
   0D63                    4374 00149$:
                           4375 ;	square.c 755
                           4376 ;	genAssign
                           4377 ;	AOP_HL for _clkA
   0D63 21 71 01           4378 	ld	hl,#_clkA
   0D66 36 00              4379 	ld	(hl),#0x00
                           4380 ;	square.c 756
                           4381 ;	genAssign
                           4382 ;	AOP_HL for _clkB
   0D68 21 74 01           4383 	ld	hl,#_clkB
   0D6B 36 00              4384 	ld	(hl),#0x00
                           4385 ;	square.c 757
                           4386 ;	genAssign
                           4387 ;	AOP_HL for _clkC
   0D6D 21 77 01           4388 	ld	hl,#_clkC
   0D70 36 00              4389 	ld	(hl),#0x00
                           4390 ;	square.c 758
                           4391 ;	genAssign
                           4392 ;	AOP_HL for _syncToDrum
   0D72 21 6D 01           4393 	ld	hl,#_syncToDrum
   0D75 36 00              4394 	ld	(hl),#0x00
                           4395 ;	genLabel
   0D77                    4396 00114$:
                           4397 ;	square.c 763
                           4398 ;	genPlus
                           4399 ;	AOP_HL for _clkA
                           4400 ;	Can't optimise plus by inc, falling back to the normal way
   0D77 3E 70              4401 	ld	a,#<_drumA
   0D79 21 71 01           4402 	ld	hl,#_clkA
   0D7C 86                 4403 	add	a,(hl)
   0D7D 4F                 4404 	ld	c,a
   0D7E 3E 00              4405 	ld	a,#>_drumA
   0D80 CE 00              4406 	adc	a,#0x00
   0D82 47                 4407 	ld	b,a
                           4408 ;	genPointerGet
   0D83 0A                 4409 	ld	a,(bc)
                           4410 ;	genCmpEq
                           4411 ; genCmpEq: left 1, right 1, result 0
   0D84 4F                 4412 	ld	c,a
   0D85 FE 01              4413 	cp	a,#0x01
   0D87 C2 A6 0D           4414 	jp	nz,00118$
   0D8A 18 03              4415 	jr	00151$
   0D8C                    4416 00150$:
   0D8C C3 A6 0D           4417 	jp	00118$
   0D8F                    4418 00151$:
                           4419 ;	square.c 765
                           4420 ;	genCmpEq
                           4421 ;	AOP_HL for _xA
                           4422 ; genCmpEq: left 1, right 1, result 0
   0D8F 21 66 01           4423 	ld	hl,#_xA
   0D92 7E                 4424 	ld	a,(hl)
   0D93 B7                 4425 	or	a,a
   0D94 CA A3 0D           4426 	jp	z,00116$
   0D97                    4427 00152$:
                           4428 ;	square.c 766
                           4429 ;	genCast
                           4430 ;	AOP_HL for _xA
   0D97 21 66 01           4431 	ld	hl,#_xA
   0D9A 4E                 4432 	ld	c,(hl)
   0D9B 06 00              4433 	ld	b,#0x00
                           4434 ;	genIpush
                           4435 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D9D C5                 4436 	push	bc
                           4437 ;	genCall
   0D9E CD 00 00           4438 	call	_delay
   0DA1 E8 02              4439 	lda	sp,2(sp)
                           4440 ;	genLabel
   0DA3                    4441 00116$:
                           4442 ;	square.c 767
                           4443 ;	genCall
                           4444 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DA3 CD 44 00           4445 	call	_makeASound
                           4446 ;	genLabel
   0DA6                    4447 00118$:
                           4448 ;	square.c 769
                           4449 ;	genPlus
                           4450 ;	AOP_HL for _clkB
                           4451 ;	Can't optimise plus by inc, falling back to the normal way
   0DA6 3E 90              4452 	ld	a,#<_drumB
   0DA8 21 74 01           4453 	ld	hl,#_clkB
   0DAB 86                 4454 	add	a,(hl)
   0DAC 4F                 4455 	ld	c,a
   0DAD 3E 00              4456 	ld	a,#>_drumB
   0DAF CE 00              4457 	adc	a,#0x00
   0DB1 47                 4458 	ld	b,a
                           4459 ;	genPointerGet
   0DB2 0A                 4460 	ld	a,(bc)
                           4461 ;	genCmpEq
                           4462 ; genCmpEq: left 1, right 1, result 0
   0DB3 4F                 4463 	ld	c,a
   0DB4 FE 01              4464 	cp	a,#0x01
   0DB6 C2 D5 0D           4465 	jp	nz,00122$
   0DB9 18 03              4466 	jr	00154$
   0DBB                    4467 00153$:
   0DBB C3 D5 0D           4468 	jp	00122$
   0DBE                    4469 00154$:
                           4470 ;	square.c 771
                           4471 ;	genCmpEq
                           4472 ;	AOP_HL for _xB
                           4473 ; genCmpEq: left 1, right 1, result 0
   0DBE 21 67 01           4474 	ld	hl,#_xB
   0DC1 7E                 4475 	ld	a,(hl)
   0DC2 B7                 4476 	or	a,a
   0DC3 CA D2 0D           4477 	jp	z,00120$
   0DC6                    4478 00155$:
                           4479 ;	square.c 772
                           4480 ;	genCast
                           4481 ;	AOP_HL for _xB
   0DC6 21 67 01           4482 	ld	hl,#_xB
   0DC9 4E                 4483 	ld	c,(hl)
   0DCA 06 00              4484 	ld	b,#0x00
                           4485 ;	genIpush
                           4486 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DCC C5                 4487 	push	bc
                           4488 ;	genCall
   0DCD CD 00 00           4489 	call	_delay
   0DD0 E8 02              4490 	lda	sp,2(sp)
                           4491 ;	genLabel
   0DD2                    4492 00120$:
                           4493 ;	square.c 773
                           4494 ;	genCall
                           4495 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DD2 CD 7D 00           4496 	call	_makeBSound
                           4497 ;	genLabel
   0DD5                    4498 00122$:
                           4499 ;	square.c 775
                           4500 ;	genPlus
                           4501 ;	AOP_HL for _clkC
                           4502 ;	Can't optimise plus by inc, falling back to the normal way
   0DD5 3E B0              4503 	ld	a,#<_drumC
   0DD7 21 77 01           4504 	ld	hl,#_clkC
   0DDA 86                 4505 	add	a,(hl)
   0DDB 4F                 4506 	ld	c,a
   0DDC 3E 00              4507 	ld	a,#>_drumC
   0DDE CE 00              4508 	adc	a,#0x00
   0DE0 47                 4509 	ld	b,a
                           4510 ;	genPointerGet
   0DE1 0A                 4511 	ld	a,(bc)
                           4512 ;	genCmpEq
                           4513 ; genCmpEq: left 1, right 1, result 0
   0DE2 4F                 4514 	ld	c,a
   0DE3 FE 01              4515 	cp	a,#0x01
   0DE5 C2 04 0E           4516 	jp	nz,00126$
   0DE8 18 03              4517 	jr	00157$
   0DEA                    4518 00156$:
   0DEA C3 04 0E           4519 	jp	00126$
   0DED                    4520 00157$:
                           4521 ;	square.c 777
                           4522 ;	genCmpEq
                           4523 ;	AOP_HL for _xC
                           4524 ; genCmpEq: left 1, right 1, result 0
   0DED 21 68 01           4525 	ld	hl,#_xC
   0DF0 7E                 4526 	ld	a,(hl)
   0DF1 B7                 4527 	or	a,a
   0DF2 CA 01 0E           4528 	jp	z,00124$
   0DF5                    4529 00158$:
                           4530 ;	square.c 778
                           4531 ;	genCast
                           4532 ;	AOP_HL for _xC
   0DF5 21 68 01           4533 	ld	hl,#_xC
   0DF8 4E                 4534 	ld	c,(hl)
   0DF9 06 00              4535 	ld	b,#0x00
                           4536 ;	genIpush
                           4537 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DFB C5                 4538 	push	bc
                           4539 ;	genCall
   0DFC CD 00 00           4540 	call	_delay
   0DFF E8 02              4541 	lda	sp,2(sp)
                           4542 ;	genLabel
   0E01                    4543 00124$:
                           4544 ;	square.c 779
                           4545 ;	genCall
                           4546 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E01 CD B0 00           4547 	call	_makeCSound
                           4548 ;	genLabel
   0E04                    4549 00126$:
                           4550 ;	square.c 782
                           4551 ;	genPlus
                           4552 ;	AOP_HL for _clkA
                           4553 ;	genPlusIncr
   0E04 21 71 01           4554 	ld	hl,#_clkA
   0E07 34                 4555 	inc	(hl)
                           4556 ;	square.c 783
                           4557 ;	genPlus
                           4558 ;	AOP_HL for _clkB
                           4559 ;	genPlusIncr
   0E08 21 74 01           4560 	ld	hl,#_clkB
   0E0B 34                 4561 	inc	(hl)
                           4562 ;	square.c 784
                           4563 ;	genPlus
                           4564 ;	AOP_HL for _clkC
                           4565 ;	genPlusIncr
   0E0C 21 77 01           4566 	ld	hl,#_clkC
   0E0F 34                 4567 	inc	(hl)
                           4568 ;	genLabel
   0E10                    4569 00127$:
                           4570 ;	genEndFunction
                           4571 	
   0E10 C9                 4572 	ret
   0E11                    4573 ___tick_end:
                           4574 ;	square.c 789
                           4575 ;	genLabel
                           4576 ;	genFunction
                           4577 ;	---------------------------------
                           4578 ; Function sync
                           4579 ; ---------------------------------
   0E11                    4580 ___sync_start:
   0E11                    4581 _sync:
                           4582 	
                           4583 ;	square.c 791
                           4584 ;	genAssign
                           4585 ;	AOP_HL for _pop
                           4586 ;	AOP_HL for _bob
   0E11 21 84 01           4587 	ld	hl,#_pop
   0E14 7E                 4588 	ld	a,(hl)
   0E15 21 82 01           4589 	ld	hl,#_bob
   0E18 77                 4590 	ld	(hl),a
                           4591 ;	square.c 792
                           4592 ;	genAssign
   0E19 01 02 FF           4593 	ld	bc,#0xFF02
                           4594 ;	genAssign (pointer)
   0E1C 3E 80              4595 	ld	a,#0x80
   0E1E 02                 4596 	ld	(bc),a
                           4597 ;	square.c 793
                           4598 ;	genPointerGet
                           4599 ;	AOP_HL for _todd
   0E1F 11 01 FF           4600 	ld	de,#0xFF01
   0E22 1A                 4601 	ld	a,(de)
   0E23 21 83 01           4602 	ld	hl,#_todd
                           4603 ;	square.c 794
                           4604 ;	genCmpEq
                           4605 ;	AOP_HL for _todd
                           4606 ; genCmpEq: left 1, right 1, result 0
   0E26 77                 4607 	ld      (hl),a
                           4608 ; Removed redundent load
   0E27 B7                 4609 	or	a,a
   0E28 C2 38 0E           4610 	jp	nz,00102$
   0E2B 18 03              4611 	jr	00111$
   0E2D                    4612 00110$:
   0E2D C3 38 0E           4613 	jp	00102$
   0E30                    4614 00111$:
                           4615 ;	square.c 795
                           4616 ;	genAssign
                           4617 ;	AOP_HL for _pop
   0E30 21 84 01           4618 	ld	hl,#_pop
   0E33 36 00              4619 	ld	(hl),#0x00
                           4620 ;	genGoto
   0E35 C3 3D 0E           4621 	jp	00103$
                           4622 ;	genLabel
   0E38                    4623 00102$:
                           4624 ;	square.c 797
                           4625 ;	genAssign
                           4626 ;	AOP_HL for _pop
   0E38 21 84 01           4627 	ld	hl,#_pop
   0E3B 36 01              4628 	ld	(hl),#0x01
                           4629 ;	genLabel
   0E3D                    4630 00103$:
                           4631 ;	square.c 798
                           4632 ;	genCmpEq
                           4633 ;	AOP_HL for _bob
                           4634 ;	AOP_HL for _pop
                           4635 ; genCmpEq: left 1, right 1, result 0
   0E3D 21 84 01           4636 	ld	hl,#_pop
   0E40 7E                 4637 	ld	a,(hl)
   0E41 21 82 01           4638 	ld	hl,#_bob
   0E44 BE                 4639 	cp	(hl)
   0E45 20 03              4640 	jr	nz,00112$
   0E47 C3 4D 0E           4641 	jp	00106$
   0E4A                    4642 00112$:
                           4643 ;	square.c 800
                           4644 ;	genCall
                           4645 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E4A CD DD 0C           4646 	call	_tick
                           4647 ;	genLabel
   0E4D                    4648 00106$:
                           4649 ;	genEndFunction
                           4650 	
   0E4D C9                 4651 	ret
   0E4E                    4652 ___sync_end:
                           4653 ;	square.c 806
                           4654 ;	genLabel
                           4655 ;	genFunction
                           4656 ;	---------------------------------
                           4657 ; Function master
                           4658 ; ---------------------------------
   0E4E                    4659 ___master_start:
   0E4E                    4660 _master:
                           4661 	
                           4662 ;	square.c 808
                           4663 ;	genPlus
                           4664 ;	AOP_HL for _watch
                           4665 ;	genPlusIncr
   0E4E 21 81 01           4666 	ld	hl,#_watch
   0E51 34                 4667 	inc	(hl)
                           4668 ;	square.c 809
                           4669 ;	genCmpGt
                           4670 ;	AOP_HL for _watch
                           4671 ;	AOP_HL for _tempo
   0E52 21 80 01           4672 	ld	hl,#_tempo
   0E55 7E                 4673 	ld	a,(hl)
   0E56 21 81 01           4674 	ld	hl,#_watch
   0E59 96                 4675 	sub	a,(hl)
   0E5A D2 62 0E           4676 	jp	nc,00103$
                           4677 ;	square.c 811
                           4678 ;	genAssign
                           4679 ;	AOP_HL for _watch
   0E5D 36 00              4680 	ld	(hl),#0x00
                           4681 ;	square.c 812
                           4682 ;	genCall
                           4683 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E5F CD DD 0C           4684 	call	_tick
                           4685 ;	genLabel
   0E62                    4686 00103$:
                           4687 ;	genEndFunction
                           4688 	
   0E62 C9                 4689 	ret
   0E63                    4690 ___master_end:
                           4691 ;	square.c 816
                           4692 ;	genLabel
                           4693 ;	genFunction
                           4694 ;	---------------------------------
                           4695 ; Function player
                           4696 ; ---------------------------------
   0E63                    4697 ___player_start:
   0E63                    4698 _player:
                           4699 	
                           4700 ;	square.c 818
                           4701 ;	genCmpEq
                           4702 ;	AOP_HL for _modus
                           4703 ; genCmpEq: left 1, right 1, result 0
   0E63 21 85 01           4704 	ld	hl,#_modus
   0E66 7E                 4705 	ld	a,(hl)
   0E67 B7                 4706 	or	a,a
   0E68 C2 76 0E           4707 	jp	nz,00102$
   0E6B 18 03              4708 	jr	00108$
   0E6D                    4709 00107$:
   0E6D C3 76 0E           4710 	jp	00102$
   0E70                    4711 00108$:
                           4712 ;	square.c 820
                           4713 ;	genCall
                           4714 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E70 CD 4E 0E           4715 	call	_master
                           4716 ;	genGoto
   0E73 C3 79 0E           4717 	jp	00104$
                           4718 ;	genLabel
   0E76                    4719 00102$:
                           4720 ;	square.c 823
                           4721 ;	genCall
                           4722 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E76 CD 11 0E           4723 	call	_sync
                           4724 ;	genLabel
   0E79                    4725 00104$:
                           4726 ;	genEndFunction
                           4727 	
   0E79 C9                 4728 	ret
   0E7A                    4729 ___player_end:
                           4730 ;	square.c 827
                           4731 ;	genLabel
                           4732 ;	genFunction
                           4733 ;	---------------------------------
                           4734 ; Function tim
                           4735 ; ---------------------------------
   0E7A                    4736 ___tim_start:
   0E7A                    4737 _tim:
                           4738 	
                           4739 ;	square.c 829
                           4740 ;	genCall
                           4741 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E7A CD 63 0E           4742 	call	_player
                           4743 ;	genLabel
   0E7D                    4744 00101$:
                           4745 ;	genEndFunction
                           4746 	
   0E7D C9                 4747 	ret
   0E7E                    4748 ___tim_end:
                           4749 ;	square.c 832
                           4750 ;	genLabel
                           4751 ;	genFunction
                           4752 ;	---------------------------------
                           4753 ; Function loadPattern
                           4754 ; ---------------------------------
   0E7E                    4755 ___loadPattern_start:
   0E7E                    4756 _loadPattern:
   0E7E E8 FE              4757 	lda	sp,-2(sp)
                           4758 ;	square.c 835
                           4759 ;	genAssign
                           4760 ;	AOP_STK for 
   0E80 F8 04              4761 	lda	hl,4(sp)
   0E82 4E                 4762 	ld	c,(hl)
   0E83 23                 4763 	inc	hl
   0E84 46                 4764 	ld	b,(hl)
                           4765 ;	genPointerGet
                           4766 ;	AOP_HL for _numberOfPulsesA
   0E85 0A                 4767 	ld	a,(bc)
   0E86 21 6F 01           4768 	ld	hl,#_numberOfPulsesA
   0E89 77                 4769 	ld	(hl),a
                           4770 ;	square.c 836
                           4771 ;	genPlus
                           4772 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4773 ;	genPlusIncr
                           4774 ;	Can't optimise plus by inc, falling back to the normal way
   0E8A 21 01 00           4775 	ld	hl,#0x0001
   0E8D 09                 4776 	add	hl,bc
   0E8E 7D                 4777 	ld	a,l
   0E8F 54                 4778 	ld	d,h
   0E90 F8 00              4779 	lda	hl,0(sp)
                           4780 ;	genPointerGet
                           4781 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4782 ;	AOP_HL for _totalStepsA
   0E92 22                 4783 	ld	(hl+),a
   0E93 72                 4784 	ld	(hl),d
   0E94 5F                 4785 	ld	e,a
   0E95 1A                 4786 	ld	a,(de)
   0E96 21 70 01           4787 	ld	hl,#_totalStepsA
   0E99 77                 4788 	ld	(hl),a
                           4789 ;	square.c 837
                           4790 ;	genPlus
                           4791 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4792 ;	genPlusIncr
                           4793 ;	Can't optimise plus by inc, falling back to the normal way
   0E9A 21 02 00           4794 	ld	hl,#0x0002
   0E9D 09                 4795 	add	hl,bc
   0E9E 7D                 4796 	ld	a,l
   0E9F 54                 4797 	ld	d,h
   0EA0 F8 00              4798 	lda	hl,0(sp)
                           4799 ;	genPointerGet
                           4800 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4801 ;	AOP_HL for _numberOfPulsesB
   0EA2 22                 4802 	ld	(hl+),a
   0EA3 72                 4803 	ld	(hl),d
   0EA4 5F                 4804 	ld	e,a
   0EA5 1A                 4805 	ld	a,(de)
   0EA6 21 72 01           4806 	ld	hl,#_numberOfPulsesB
   0EA9 77                 4807 	ld	(hl),a
                           4808 ;	square.c 838
                           4809 ;	genPlus
                           4810 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4811 ;	genPlusIncr
                           4812 ;	Can't optimise plus by inc, falling back to the normal way
   0EAA 21 03 00           4813 	ld	hl,#0x0003
   0EAD 09                 4814 	add	hl,bc
   0EAE 7D                 4815 	ld	a,l
   0EAF 54                 4816 	ld	d,h
   0EB0 F8 00              4817 	lda	hl,0(sp)
                           4818 ;	genPointerGet
                           4819 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4820 ;	AOP_HL for _totalStepsB
   0EB2 22                 4821 	ld	(hl+),a
   0EB3 72                 4822 	ld	(hl),d
   0EB4 5F                 4823 	ld	e,a
   0EB5 1A                 4824 	ld	a,(de)
   0EB6 21 73 01           4825 	ld	hl,#_totalStepsB
   0EB9 77                 4826 	ld	(hl),a
                           4827 ;	square.c 839
                           4828 ;	genPlus
                           4829 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4830 ;	genPlusIncr
                           4831 ;	Can't optimise plus by inc, falling back to the normal way
   0EBA 21 04 00           4832 	ld	hl,#0x0004
   0EBD 09                 4833 	add	hl,bc
   0EBE 7D                 4834 	ld	a,l
   0EBF 54                 4835 	ld	d,h
   0EC0 F8 00              4836 	lda	hl,0(sp)
                           4837 ;	genPointerGet
                           4838 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4839 ;	AOP_HL for _numberOfPulsesC
   0EC2 22                 4840 	ld	(hl+),a
   0EC3 72                 4841 	ld	(hl),d
   0EC4 5F                 4842 	ld	e,a
   0EC5 1A                 4843 	ld	a,(de)
   0EC6 21 75 01           4844 	ld	hl,#_numberOfPulsesC
   0EC9 77                 4845 	ld	(hl),a
                           4846 ;	square.c 840
                           4847 ;	genPlus
                           4848 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4849 ;	genPlusIncr
                           4850 ;	Can't optimise plus by inc, falling back to the normal way
   0ECA 21 05 00           4851 	ld	hl,#0x0005
   0ECD 09                 4852 	add	hl,bc
   0ECE 7D                 4853 	ld	a,l
   0ECF 54                 4854 	ld	d,h
   0ED0 F8 00              4855 	lda	hl,0(sp)
                           4856 ;	genPointerGet
                           4857 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4858 ;	AOP_HL for _totalStepsC
   0ED2 22                 4859 	ld	(hl+),a
   0ED3 72                 4860 	ld	(hl),d
   0ED4 5F                 4861 	ld	e,a
   0ED5 1A                 4862 	ld	a,(de)
   0ED6 21 76 01           4863 	ld	hl,#_totalStepsC
   0ED9 77                 4864 	ld	(hl),a
                           4865 ;	square.c 841
                           4866 ;	genPlus
                           4867 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4868 ;	genPlusIncr
                           4869 ;	Can't optimise plus by inc, falling back to the normal way
   0EDA 21 06 00           4870 	ld	hl,#0x0006
   0EDD 09                 4871 	add	hl,bc
   0EDE 7D                 4872 	ld	a,l
   0EDF 54                 4873 	ld	d,h
   0EE0 F8 00              4874 	lda	hl,0(sp)
                           4875 ;	genPointerGet
                           4876 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4877 ;	AOP_HL for _offStepA
   0EE2 22                 4878 	ld	(hl+),a
   0EE3 72                 4879 	ld	(hl),d
   0EE4 5F                 4880 	ld	e,a
   0EE5 1A                 4881 	ld	a,(de)
   0EE6 21 78 01           4882 	ld	hl,#_offStepA
   0EE9 77                 4883 	ld	(hl),a
                           4884 ;	square.c 842
                           4885 ;	genPlus
                           4886 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4887 ;	genPlusIncr
                           4888 ;	Can't optimise plus by inc, falling back to the normal way
   0EEA 21 07 00           4889 	ld	hl,#0x0007
   0EED 09                 4890 	add	hl,bc
   0EEE 7D                 4891 	ld	a,l
   0EEF 54                 4892 	ld	d,h
   0EF0 F8 00              4893 	lda	hl,0(sp)
                           4894 ;	genPointerGet
                           4895 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4896 ;	AOP_HL for _offStepB
   0EF2 22                 4897 	ld	(hl+),a
   0EF3 72                 4898 	ld	(hl),d
   0EF4 5F                 4899 	ld	e,a
   0EF5 1A                 4900 	ld	a,(de)
   0EF6 21 79 01           4901 	ld	hl,#_offStepB
   0EF9 77                 4902 	ld	(hl),a
                           4903 ;	square.c 843
                           4904 ;	genPlus
                           4905 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4906 ;	genPlusIncr
                           4907 ;	Can't optimise plus by inc, falling back to the normal way
   0EFA 21 08 00           4908 	ld	hl,#0x0008
   0EFD 09                 4909 	add	hl,bc
   0EFE 7D                 4910 	ld	a,l
   0EFF 54                 4911 	ld	d,h
   0F00 F8 00              4912 	lda	hl,0(sp)
                           4913 ;	genPointerGet
                           4914 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4915 ;	AOP_HL for _offStepC
   0F02 22                 4916 	ld	(hl+),a
   0F03 72                 4917 	ld	(hl),d
   0F04 5F                 4918 	ld	e,a
   0F05 1A                 4919 	ld	a,(de)
   0F06 21 7A 01           4920 	ld	hl,#_offStepC
   0F09 77                 4921 	ld	(hl),a
                           4922 ;	square.c 844
                           4923 ;	genPlus
                           4924 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4925 ;	genPlusIncr
                           4926 ;	Can't optimise plus by inc, falling back to the normal way
   0F0A 21 09 00           4927 	ld	hl,#0x0009
   0F0D 09                 4928 	add	hl,bc
   0F0E 7D                 4929 	ld	a,l
   0F0F 54                 4930 	ld	d,h
   0F10 F8 00              4931 	lda	hl,0(sp)
                           4932 ;	genPointerGet
                           4933 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4934 ;	AOP_HL for _randA
   0F12 22                 4935 	ld	(hl+),a
   0F13 72                 4936 	ld	(hl),d
   0F14 5F                 4937 	ld	e,a
   0F15 1A                 4938 	ld	a,(de)
   0F16 21 5F 01           4939 	ld	hl,#_randA
   0F19 77                 4940 	ld	(hl),a
                           4941 ;	square.c 845
                           4942 ;	genPlus
                           4943 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4944 ;	genPlusIncr
                           4945 ;	Can't optimise plus by inc, falling back to the normal way
   0F1A 21 0A 00           4946 	ld	hl,#0x000A
   0F1D 09                 4947 	add	hl,bc
   0F1E 7D                 4948 	ld	a,l
   0F1F 54                 4949 	ld	d,h
   0F20 F8 00              4950 	lda	hl,0(sp)
                           4951 ;	genPointerGet
                           4952 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4953 ;	AOP_HL for _randB
   0F22 22                 4954 	ld	(hl+),a
   0F23 72                 4955 	ld	(hl),d
   0F24 5F                 4956 	ld	e,a
   0F25 1A                 4957 	ld	a,(de)
   0F26 21 60 01           4958 	ld	hl,#_randB
   0F29 77                 4959 	ld	(hl),a
                           4960 ;	square.c 846
                           4961 ;	genPlus
                           4962 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4963 ;	genPlusIncr
                           4964 ;	Can't optimise plus by inc, falling back to the normal way
   0F2A 21 0B 00           4965 	ld	hl,#0x000B
   0F2D 09                 4966 	add	hl,bc
   0F2E 7D                 4967 	ld	a,l
   0F2F 54                 4968 	ld	d,h
   0F30 F8 00              4969 	lda	hl,0(sp)
                           4970 ;	genPointerGet
                           4971 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4972 ;	AOP_HL for _randC
   0F32 22                 4973 	ld	(hl+),a
   0F33 72                 4974 	ld	(hl),d
   0F34 5F                 4975 	ld	e,a
   0F35 1A                 4976 	ld	a,(de)
   0F36 21 61 01           4977 	ld	hl,#_randC
   0F39 77                 4978 	ld	(hl),a
                           4979 ;	square.c 847
                           4980 ;	genPlus
                           4981 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4982 ;	genPlusIncr
                           4983 ;	Can't optimise plus by inc, falling back to the normal way
   0F3A 21 0C 00           4984 	ld	hl,#0x000C
   0F3D 09                 4985 	add	hl,bc
   0F3E 7D                 4986 	ld	a,l
   0F3F 54                 4987 	ld	d,h
   0F40 F8 00              4988 	lda	hl,0(sp)
                           4989 ;	genPointerGet
                           4990 ;	AOP_STK for _loadPattern_sloc0_1_0
                           4991 ;	AOP_HL for _xA
   0F42 22                 4992 	ld	(hl+),a
   0F43 72                 4993 	ld	(hl),d
   0F44 5F                 4994 	ld	e,a
   0F45 1A                 4995 	ld	a,(de)
   0F46 21 66 01           4996 	ld	hl,#_xA
   0F49 77                 4997 	ld	(hl),a
                           4998 ;	square.c 848
                           4999 ;	genPlus
                           5000 ;	AOP_STK for _loadPattern_sloc0_1_0
                           5001 ;	genPlusIncr
                           5002 ;	Can't optimise plus by inc, falling back to the normal way
   0F4A 21 0D 00           5003 	ld	hl,#0x000D
   0F4D 09                 5004 	add	hl,bc
   0F4E 7D                 5005 	ld	a,l
   0F4F 54                 5006 	ld	d,h
   0F50 F8 00              5007 	lda	hl,0(sp)
                           5008 ;	genPointerGet
                           5009 ;	AOP_STK for _loadPattern_sloc0_1_0
                           5010 ;	AOP_HL for _xB
   0F52 22                 5011 	ld	(hl+),a
   0F53 72                 5012 	ld	(hl),d
   0F54 5F                 5013 	ld	e,a
   0F55 1A                 5014 	ld	a,(de)
   0F56 21 67 01           5015 	ld	hl,#_xB
   0F59 77                 5016 	ld	(hl),a
                           5017 ;	square.c 849
                           5018 ;	genPlus
                           5019 ;	AOP_STK for _loadPattern_sloc0_1_0
                           5020 ;	genPlusIncr
                           5021 ;	Can't optimise plus by inc, falling back to the normal way
   0F5A 21 0E 00           5022 	ld	hl,#0x000E
   0F5D 09                 5023 	add	hl,bc
   0F5E 7D                 5024 	ld	a,l
   0F5F 54                 5025 	ld	d,h
   0F60 F8 00              5026 	lda	hl,0(sp)
                           5027 ;	genPointerGet
                           5028 ;	AOP_STK for _loadPattern_sloc0_1_0
                           5029 ;	AOP_HL for _xC
   0F62 22                 5030 	ld	(hl+),a
   0F63 72                 5031 	ld	(hl),d
   0F64 5F                 5032 	ld	e,a
   0F65 1A                 5033 	ld	a,(de)
   0F66 21 68 01           5034 	ld	hl,#_xC
   0F69 77                 5035 	ld	(hl),a
                           5036 ;	square.c 850
                           5037 ;	genPlus
                           5038 ;	AOP_STK for _loadPattern_sloc0_1_0
                           5039 ;	genPlusIncr
                           5040 ;	Can't optimise plus by inc, falling back to the normal way
   0F6A 21 0F 00           5041 	ld	hl,#0x000F
   0F6D 09                 5042 	add	hl,bc
   0F6E 7D                 5043 	ld	a,l
   0F6F 54                 5044 	ld	d,h
   0F70 F8 00              5045 	lda	hl,0(sp)
                           5046 ;	genPointerGet
                           5047 ;	AOP_STK for _loadPattern_sloc0_1_0
                           5048 ;	AOP_HL for _delayA
   0F72 22                 5049 	ld	(hl+),a
   0F73 72                 5050 	ld	(hl),d
   0F74 5F                 5051 	ld	e,a
   0F75 1A                 5052 	ld	a,(de)
   0F76 21 69 01           5053 	ld	hl,#_delayA
   0F79 77                 5054 	ld	(hl),a
                           5055 ;	square.c 851
                           5056 ;	genPlus
                           5057 ;	AOP_STK for _loadPattern_sloc0_1_0
                           5058 ;	genPlusIncr
                           5059 ;	Can't optimise plus by inc, falling back to the normal way
   0F7A 21 10 00           5060 	ld	hl,#0x0010
   0F7D 09                 5061 	add	hl,bc
   0F7E 7D                 5062 	ld	a,l
   0F7F 54                 5063 	ld	d,h
   0F80 F8 00              5064 	lda	hl,0(sp)
                           5065 ;	genPointerGet
                           5066 ;	AOP_STK for _loadPattern_sloc0_1_0
                           5067 ;	AOP_HL for _delayB
   0F82 22                 5068 	ld	(hl+),a
   0F83 72                 5069 	ld	(hl),d
   0F84 5F                 5070 	ld	e,a
   0F85 1A                 5071 	ld	a,(de)
   0F86 21 6A 01           5072 	ld	hl,#_delayB
   0F89 77                 5073 	ld	(hl),a
                           5074 ;	square.c 852
                           5075 ;	genPlus
                           5076 ;	genPlusIncr
                           5077 ;	Can't optimise plus by inc, falling back to the normal way
   0F8A 79                 5078 	ld	a,c
   0F8B C6 11              5079 	add	a,#0x11
   0F8D 4F                 5080 	ld	c,a
   0F8E 78                 5081 	ld	a,b
   0F8F CE 00              5082 	adc	a,#0x00
   0F91 47                 5083 	ld	b,a
                           5084 ;	genPointerGet
                           5085 ;	AOP_HL for _delayC
   0F92 0A                 5086 	ld	a,(bc)
   0F93 21 6B 01           5087 	ld	hl,#_delayC
   0F96 77                 5088 	ld	(hl),a
                           5089 ;	square.c 854
                           5090 ;	genIpush
                           5091 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F97 21 00 00           5092 	ld	hl,#0x0000
   0F9A E5                 5093 	push	hl
                           5094 ;	genCall
   0F9B CD 00 00           5095 	call	_set_sprite_tile
   0F9E E8 02              5096 	lda	sp,2(sp)
                           5097 ;	square.c 855
                           5098 ;	genMinus
                           5099 ;	AOP_HL for _totalStepsA
   0FA0 21 70 01           5100 	ld	hl,#_totalStepsA
   0FA3 7E                 5101 	ld	a,(hl)
   0FA4 C6 FF              5102 	add	a,#0xFF
   0FA6 4F                 5103 	ld	c,a
                           5104 ;	genPlus
                           5105 ;	Can't optimise plus by inc, falling back to the normal way
   0FA7 3E 18              5106 	ld	a,#<_dXlut
   0FA9 81                 5107 	add	a,c
   0FAA 4F                 5108 	ld	c,a
   0FAB 3E 01              5109 	ld	a,#>_dXlut
   0FAD CE 00              5110 	adc	a,#0x00
   0FAF 47                 5111 	ld	b,a
                           5112 ;	genPointerGet
   0FB0 0A                 5113 	ld	a,(bc)
   0FB1 4F                 5114 	ld	c,a
                           5115 ;	genMinus
                           5116 ;	AOP_HL for _numberOfPulsesA
   0FB2 21 6F 01           5117 	ld	hl,#_numberOfPulsesA
   0FB5 7E                 5118 	ld	a,(hl)
   0FB6 C6 FF              5119 	add	a,#0xFF
   0FB8 47                 5120 	ld	b,a
                           5121 ;	genPlus
                           5122 ;	AOP_STK for _loadPattern_sloc0_1_0
                           5123 ;	Can't optimise plus by inc, falling back to the normal way
   0FB9 11 38 01           5124 	ld	de,#_dYlut
   0FBC 68                 5125 	ld	l,b
   0FBD 26 00              5126 	ld	h,#0x00
   0FBF 19                 5127 	add	hl,de
   0FC0 7D                 5128 	ld	a,l
   0FC1 54                 5129 	ld	d,h
   0FC2 F8 00              5130 	lda	hl,0(sp)
                           5131 ;	genPointerGet
                           5132 ;	AOP_STK for _loadPattern_sloc0_1_0
   0FC4 22                 5133 	ld	(hl+),a
   0FC5 72                 5134 	ld	(hl),d
   0FC6 5F                 5135 	ld	e,a
   0FC7 1A                 5136 	ld	a,(de)
   0FC8 47                 5137 	ld	b,a
                           5138 ;	genIpush
                           5139 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FC9 79                 5140 	ld	a,c
   0FCA F5                 5141 	push	af
   0FCB 33                 5142 	inc	sp
                           5143 ;	genIpush
   0FCC 78                 5144 	ld	a,b
   0FCD F5                 5145 	push	af
   0FCE 33                 5146 	inc	sp
                           5147 ;	genIpush
   0FCF 3E 00              5148 	ld	a,#0x00
   0FD1 F5                 5149 	push	af
   0FD2 33                 5150 	inc	sp
                           5151 ;	genCall
   0FD3 CD 00 00           5152 	call	_move_sprite
   0FD6 E8 03              5153 	lda	sp,3(sp)
                           5154 ;	square.c 857
                           5155 ;	genIpush
                           5156 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FD8 21 01 02           5157 	ld	hl,#0x0201
   0FDB E5                 5158 	push	hl
                           5159 ;	genCall
   0FDC CD 00 00           5160 	call	_set_sprite_tile
   0FDF E8 02              5161 	lda	sp,2(sp)
                           5162 ;	square.c 858
                           5163 ;	genMinus
                           5164 ;	AOP_HL for _totalStepsB
   0FE1 21 73 01           5165 	ld	hl,#_totalStepsB
   0FE4 7E                 5166 	ld	a,(hl)
   0FE5 C6 FF              5167 	add	a,#0xFF
   0FE7 4F                 5168 	ld	c,a
                           5169 ;	genPlus
                           5170 ;	Can't optimise plus by inc, falling back to the normal way
   0FE8 3E 18              5171 	ld	a,#<_dXlut
   0FEA 81                 5172 	add	a,c
   0FEB 4F                 5173 	ld	c,a
   0FEC 3E 01              5174 	ld	a,#>_dXlut
   0FEE CE 00              5175 	adc	a,#0x00
   0FF0 47                 5176 	ld	b,a
                           5177 ;	genPointerGet
   0FF1 0A                 5178 	ld	a,(bc)
   0FF2 4F                 5179 	ld	c,a
                           5180 ;	genMinus
                           5181 ;	AOP_HL for _numberOfPulsesB
   0FF3 21 72 01           5182 	ld	hl,#_numberOfPulsesB
   0FF6 7E                 5183 	ld	a,(hl)
   0FF7 C6 FF              5184 	add	a,#0xFF
   0FF9 47                 5185 	ld	b,a
                           5186 ;	genPlus
                           5187 ;	AOP_STK for _loadPattern_sloc0_1_0
                           5188 ;	Can't optimise plus by inc, falling back to the normal way
   0FFA 11 38 01           5189 	ld	de,#_dYlut
   0FFD 68                 5190 	ld	l,b
   0FFE 26 00              5191 	ld	h,#0x00
   1000 19                 5192 	add	hl,de
   1001 7D                 5193 	ld	a,l
   1002 54                 5194 	ld	d,h
   1003 F8 00              5195 	lda	hl,0(sp)
                           5196 ;	genPointerGet
                           5197 ;	AOP_STK for _loadPattern_sloc0_1_0
   1005 22                 5198 	ld	(hl+),a
   1006 72                 5199 	ld	(hl),d
   1007 5F                 5200 	ld	e,a
   1008 1A                 5201 	ld	a,(de)
   1009 47                 5202 	ld	b,a
                           5203 ;	genIpush
                           5204 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   100A 79                 5205 	ld	a,c
   100B F5                 5206 	push	af
   100C 33                 5207 	inc	sp
                           5208 ;	genIpush
   100D 78                 5209 	ld	a,b
   100E F5                 5210 	push	af
   100F 33                 5211 	inc	sp
                           5212 ;	genIpush
   1010 3E 01              5213 	ld	a,#0x01
   1012 F5                 5214 	push	af
   1013 33                 5215 	inc	sp
                           5216 ;	genCall
   1014 CD 00 00           5217 	call	_move_sprite
   1017 E8 03              5218 	lda	sp,3(sp)
                           5219 ;	square.c 860
                           5220 ;	genIpush
                           5221 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1019 21 02 04           5222 	ld	hl,#0x0402
   101C E5                 5223 	push	hl
                           5224 ;	genCall
   101D CD 00 00           5225 	call	_set_sprite_tile
   1020 E8 02              5226 	lda	sp,2(sp)
                           5227 ;	square.c 861
                           5228 ;	genMinus
                           5229 ;	AOP_HL for _totalStepsC
   1022 21 76 01           5230 	ld	hl,#_totalStepsC
   1025 7E                 5231 	ld	a,(hl)
   1026 C6 FF              5232 	add	a,#0xFF
   1028 4F                 5233 	ld	c,a
                           5234 ;	genPlus
                           5235 ;	Can't optimise plus by inc, falling back to the normal way
   1029 3E 18              5236 	ld	a,#<_dXlut
   102B 81                 5237 	add	a,c
   102C 4F                 5238 	ld	c,a
   102D 3E 01              5239 	ld	a,#>_dXlut
   102F CE 00              5240 	adc	a,#0x00
   1031 47                 5241 	ld	b,a
                           5242 ;	genPointerGet
   1032 0A                 5243 	ld	a,(bc)
   1033 4F                 5244 	ld	c,a
                           5245 ;	genMinus
                           5246 ;	AOP_HL for _numberOfPulsesC
   1034 21 75 01           5247 	ld	hl,#_numberOfPulsesC
   1037 7E                 5248 	ld	a,(hl)
   1038 C6 FF              5249 	add	a,#0xFF
   103A 47                 5250 	ld	b,a
                           5251 ;	genPlus
                           5252 ;	AOP_STK for _loadPattern_sloc0_1_0
                           5253 ;	Can't optimise plus by inc, falling back to the normal way
   103B 11 38 01           5254 	ld	de,#_dYlut
   103E 68                 5255 	ld	l,b
   103F 26 00              5256 	ld	h,#0x00
   1041 19                 5257 	add	hl,de
   1042 7D                 5258 	ld	a,l
   1043 54                 5259 	ld	d,h
   1044 F8 00              5260 	lda	hl,0(sp)
                           5261 ;	genPointerGet
                           5262 ;	AOP_STK for _loadPattern_sloc0_1_0
   1046 22                 5263 	ld	(hl+),a
   1047 72                 5264 	ld	(hl),d
   1048 5F                 5265 	ld	e,a
   1049 1A                 5266 	ld	a,(de)
   104A 47                 5267 	ld	b,a
                           5268 ;	genIpush
                           5269 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   104B 79                 5270 	ld	a,c
   104C F5                 5271 	push	af
   104D 33                 5272 	inc	sp
                           5273 ;	genIpush
   104E 78                 5274 	ld	a,b
   104F F5                 5275 	push	af
   1050 33                 5276 	inc	sp
                           5277 ;	genIpush
   1051 3E 02              5278 	ld	a,#0x02
   1053 F5                 5279 	push	af
   1054 33                 5280 	inc	sp
                           5281 ;	genCall
   1055 CD 00 00           5282 	call	_move_sprite
   1058 E8 03              5283 	lda	sp,3(sp)
                           5284 ;	square.c 862
                           5285 ;	genCall
                           5286 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   105A CD 00 00           5287 	call	_disable_interrupts
                           5288 ;	square.c 863
                           5289 ;	genCall
                           5290 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   105D CD E3 00           5291 	call	_fillDrumA
                           5292 ;	square.c 864
                           5293 ;	genCall
                           5294 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1060 CD B2 02           5295 	call	_fillDrumB
                           5296 ;	square.c 865
                           5297 ;	genCall
                           5298 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1063 CD 81 04           5299 	call	_fillDrumC
                           5300 ;	square.c 866
                           5301 ;	genAssign
                           5302 ;	AOP_HL for _clkA
   1066 21 71 01           5303 	ld	hl,#_clkA
   1069 36 00              5304 	ld	(hl),#0x00
                           5305 ;	square.c 867
                           5306 ;	genAssign
                           5307 ;	AOP_HL for _clkB
   106B 21 74 01           5308 	ld	hl,#_clkB
   106E 36 00              5309 	ld	(hl),#0x00
                           5310 ;	square.c 868
                           5311 ;	genAssign
                           5312 ;	AOP_HL for _clkC
   1070 21 77 01           5313 	ld	hl,#_clkC
   1073 36 00              5314 	ld	(hl),#0x00
                           5315 ;	square.c 869
                           5316 ;	genCall
                           5317 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1075 CD 00 00           5318 	call	_enable_interrupts
                           5319 ;	square.c 870
                           5320 ;	genCall
                           5321 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1078 CD 00 00           5322 	call	_wait_vbl_done
                           5323 ;	genLabel
   107B                    5324 00101$:
                           5325 ;	genEndFunction
   107B E8 02              5326 	lda	sp,2(sp)
   107D C9                 5327 	ret
   107E                    5328 ___loadPattern_end:
                           5329 ;	square.c 873
                           5330 ;	genLabel
                           5331 ;	genFunction
                           5332 ;	---------------------------------
                           5333 ; Function savePattern
                           5334 ; ---------------------------------
   107E                    5335 ___savePattern_start:
   107E                    5336 _savePattern:
                           5337 	
                           5338 ;	square.c 875
                           5339 ;	genCmpGt
                           5340 ;	AOP_HL for _currentSaveSlot
   107E 3E 03              5341 	ld	a,#0x03
   1080 21 7D 01           5342 	ld	hl,#_currentSaveSlot
   1083 96                 5343 	sub	a,(hl)
   1084 DA E6 12           5344 	jp	c,00105$
                           5345 ;	genJumpTab
                           5346 ;	AOP_HL for _currentSaveSlot
   1087 5E                 5347 	ld	e,(hl)
   1088 16 00              5348 	ld	d,#0x00
   108A 21 91 10           5349 	ld	hl,#00109$
   108D 19                 5350 	add	hl,de
   108E 19                 5351 	add	hl,de
   108F 19                 5352 	add	hl,de
   1090 E9                 5353 	jp	(hl)
   1091                    5354 00109$:
   1091 C3 9D 10           5355 	jp	00101$
   1094 C3 30 11           5356 	jp	00102$
   1097 C3 C3 11           5357 	jp	00103$
   109A C3 56 12           5358 	jp	00104$
                           5359 ;	square.c 878
                           5360 ;	genLabel
   109D                    5361 00101$:
                           5362 ;	genAssign (pointer)
                           5363 ;	AOP_HL for _numberOfPulsesA
   109D 11 D0 00           5364 	ld	de,#_patternA
   10A0 21 6F 01           5365 	ld	hl,#_numberOfPulsesA
   10A3 7E                 5366 	ld	a,(hl)
   10A4 12                 5367 	ld	(de),a
                           5368 ;	square.c 879
                           5369 ;	genPlus
                           5370 ;	genPlusIncr
   10A5 21 D1 00           5371 	ld	hl,#_patternA + 1
                           5372 ;	genAssign (pointer)
                           5373 ;	AOP_HL for _totalStepsA
   10A8 21 70 01           5374 	ld	hl,#_totalStepsA
   10AB 7E                 5375 	ld	a,(hl)
   10AC 77                 5376 	ld	(hl),a
                           5377 ;	square.c 880
                           5378 ;	genPlus
                           5379 ;	genPlusIncr
   10AD 21 D2 00           5380 	ld	hl,#_patternA + 2
                           5381 ;	genAssign (pointer)
                           5382 ;	AOP_HL for _numberOfPulsesB
   10B0 21 72 01           5383 	ld	hl,#_numberOfPulsesB
   10B3 7E                 5384 	ld	a,(hl)
   10B4 77                 5385 	ld	(hl),a
                           5386 ;	square.c 881
                           5387 ;	genPlus
                           5388 ;	genPlusIncr
   10B5 21 D3 00           5389 	ld	hl,#_patternA + 3
                           5390 ;	genAssign (pointer)
                           5391 ;	AOP_HL for _totalStepsB
   10B8 21 73 01           5392 	ld	hl,#_totalStepsB
   10BB 7E                 5393 	ld	a,(hl)
   10BC 77                 5394 	ld	(hl),a
                           5395 ;	square.c 882
                           5396 ;	genPlus
                           5397 ;	genPlusIncr
   10BD 21 D4 00           5398 	ld	hl,#_patternA + 4
                           5399 ;	genAssign (pointer)
                           5400 ;	AOP_HL for _numberOfPulsesC
   10C0 21 75 01           5401 	ld	hl,#_numberOfPulsesC
   10C3 7E                 5402 	ld	a,(hl)
   10C4 77                 5403 	ld	(hl),a
                           5404 ;	square.c 883
                           5405 ;	genPlus
                           5406 ;	genPlusIncr
   10C5 21 D5 00           5407 	ld	hl,#_patternA + 5
                           5408 ;	genAssign (pointer)
                           5409 ;	AOP_HL for _totalStepsC
   10C8 21 76 01           5410 	ld	hl,#_totalStepsC
   10CB 7E                 5411 	ld	a,(hl)
   10CC 77                 5412 	ld	(hl),a
                           5413 ;	square.c 884
                           5414 ;	genPlus
                           5415 ;	genPlusIncr
   10CD 21 D6 00           5416 	ld	hl,#_patternA + 6
                           5417 ;	genAssign (pointer)
                           5418 ;	AOP_HL for _offStepA
   10D0 21 78 01           5419 	ld	hl,#_offStepA
   10D3 7E                 5420 	ld	a,(hl)
   10D4 77                 5421 	ld	(hl),a
                           5422 ;	square.c 885
                           5423 ;	genPlus
                           5424 ;	genPlusIncr
   10D5 21 D7 00           5425 	ld	hl,#_patternA + 7
                           5426 ;	genAssign (pointer)
                           5427 ;	AOP_HL for _offStepB
   10D8 21 79 01           5428 	ld	hl,#_offStepB
   10DB 7E                 5429 	ld	a,(hl)
   10DC 77                 5430 	ld	(hl),a
                           5431 ;	square.c 886
                           5432 ;	genPlus
                           5433 ;	genPlusIncr
   10DD 21 D8 00           5434 	ld	hl,#_patternA + 8
                           5435 ;	genAssign (pointer)
                           5436 ;	AOP_HL for _offStepC
   10E0 21 7A 01           5437 	ld	hl,#_offStepC
   10E3 7E                 5438 	ld	a,(hl)
   10E4 77                 5439 	ld	(hl),a
                           5440 ;	square.c 887
                           5441 ;	genPlus
                           5442 ;	genPlusIncr
   10E5 21 D9 00           5443 	ld	hl,#_patternA + 9
                           5444 ;	genAssign (pointer)
                           5445 ;	AOP_HL for _randA
   10E8 21 5F 01           5446 	ld	hl,#_randA
   10EB 7E                 5447 	ld	a,(hl)
   10EC 77                 5448 	ld	(hl),a
                           5449 ;	square.c 888
                           5450 ;	genPlus
                           5451 ;	genPlusIncr
   10ED 21 DA 00           5452 	ld	hl,#_patternA + 10
                           5453 ;	genAssign (pointer)
                           5454 ;	AOP_HL for _randB
   10F0 21 60 01           5455 	ld	hl,#_randB
   10F3 7E                 5456 	ld	a,(hl)
   10F4 77                 5457 	ld	(hl),a
                           5458 ;	square.c 889
                           5459 ;	genPlus
                           5460 ;	genPlusIncr
   10F5 21 DB 00           5461 	ld	hl,#_patternA + 11
                           5462 ;	genAssign (pointer)
                           5463 ;	AOP_HL for _randC
   10F8 21 61 01           5464 	ld	hl,#_randC
   10FB 7E                 5465 	ld	a,(hl)
   10FC 77                 5466 	ld	(hl),a
                           5467 ;	square.c 890
                           5468 ;	genPlus
                           5469 ;	genPlusIncr
   10FD 21 DC 00           5470 	ld	hl,#_patternA + 12
                           5471 ;	genAssign (pointer)
                           5472 ;	AOP_HL for _xA
   1100 21 66 01           5473 	ld	hl,#_xA
   1103 7E                 5474 	ld	a,(hl)
   1104 77                 5475 	ld	(hl),a
                           5476 ;	square.c 891
                           5477 ;	genPlus
                           5478 ;	genPlusIncr
   1105 21 DD 00           5479 	ld	hl,#_patternA + 13
                           5480 ;	genAssign (pointer)
                           5481 ;	AOP_HL for _xB
   1108 21 67 01           5482 	ld	hl,#_xB
   110B 7E                 5483 	ld	a,(hl)
   110C 77                 5484 	ld	(hl),a
                           5485 ;	square.c 892
                           5486 ;	genPlus
                           5487 ;	genPlusIncr
   110D 21 DE 00           5488 	ld	hl,#_patternA + 14
                           5489 ;	genAssign (pointer)
                           5490 ;	AOP_HL for _xC
   1110 21 68 01           5491 	ld	hl,#_xC
   1113 7E                 5492 	ld	a,(hl)
   1114 77                 5493 	ld	(hl),a
                           5494 ;	square.c 893
                           5495 ;	genPlus
                           5496 ;	genPlusIncr
   1115 21 DF 00           5497 	ld	hl,#_patternA + 15
                           5498 ;	genAssign (pointer)
                           5499 ;	AOP_HL for _delayA
   1118 21 69 01           5500 	ld	hl,#_delayA
   111B 7E                 5501 	ld	a,(hl)
   111C 77                 5502 	ld	(hl),a
                           5503 ;	square.c 894
                           5504 ;	genPlus
                           5505 ;	genPlusIncr
   111D 21 E0 00           5506 	ld	hl,#_patternA + 16
                           5507 ;	genAssign (pointer)
                           5508 ;	AOP_HL for _delayB
   1120 21 6A 01           5509 	ld	hl,#_delayB
   1123 7E                 5510 	ld	a,(hl)
   1124 77                 5511 	ld	(hl),a
                           5512 ;	square.c 895
                           5513 ;	genPlus
                           5514 ;	genPlusIncr
   1125 21 E1 00           5515 	ld	hl,#_patternA + 17
                           5516 ;	genAssign (pointer)
                           5517 ;	AOP_HL for _delayC
   1128 21 6B 01           5518 	ld	hl,#_delayC
   112B 7E                 5519 	ld	a,(hl)
   112C 77                 5520 	ld	(hl),a
                           5521 ;	square.c 896
                           5522 ;	genGoto
   112D C3 E6 12           5523 	jp	00105$
                           5524 ;	square.c 898
                           5525 ;	genLabel
   1130                    5526 00102$:
                           5527 ;	genAssign (pointer)
                           5528 ;	AOP_HL for _numberOfPulsesA
   1130 11 E2 00           5529 	ld	de,#_patternB
   1133 21 6F 01           5530 	ld	hl,#_numberOfPulsesA
   1136 7E                 5531 	ld	a,(hl)
   1137 12                 5532 	ld	(de),a
                           5533 ;	square.c 899
                           5534 ;	genPlus
                           5535 ;	genPlusIncr
   1138 21 E3 00           5536 	ld	hl,#_patternB + 1
                           5537 ;	genAssign (pointer)
                           5538 ;	AOP_HL for _totalStepsA
   113B 21 70 01           5539 	ld	hl,#_totalStepsA
   113E 7E                 5540 	ld	a,(hl)
   113F 77                 5541 	ld	(hl),a
                           5542 ;	square.c 900
                           5543 ;	genPlus
                           5544 ;	genPlusIncr
   1140 21 E4 00           5545 	ld	hl,#_patternB + 2
                           5546 ;	genAssign (pointer)
                           5547 ;	AOP_HL for _numberOfPulsesB
   1143 21 72 01           5548 	ld	hl,#_numberOfPulsesB
   1146 7E                 5549 	ld	a,(hl)
   1147 77                 5550 	ld	(hl),a
                           5551 ;	square.c 901
                           5552 ;	genPlus
                           5553 ;	genPlusIncr
   1148 21 E5 00           5554 	ld	hl,#_patternB + 3
                           5555 ;	genAssign (pointer)
                           5556 ;	AOP_HL for _totalStepsB
   114B 21 73 01           5557 	ld	hl,#_totalStepsB
   114E 7E                 5558 	ld	a,(hl)
   114F 77                 5559 	ld	(hl),a
                           5560 ;	square.c 902
                           5561 ;	genPlus
                           5562 ;	genPlusIncr
   1150 21 E6 00           5563 	ld	hl,#_patternB + 4
                           5564 ;	genAssign (pointer)
                           5565 ;	AOP_HL for _numberOfPulsesC
   1153 21 75 01           5566 	ld	hl,#_numberOfPulsesC
   1156 7E                 5567 	ld	a,(hl)
   1157 77                 5568 	ld	(hl),a
                           5569 ;	square.c 903
                           5570 ;	genPlus
                           5571 ;	genPlusIncr
   1158 21 E7 00           5572 	ld	hl,#_patternB + 5
                           5573 ;	genAssign (pointer)
                           5574 ;	AOP_HL for _totalStepsC
   115B 21 76 01           5575 	ld	hl,#_totalStepsC
   115E 7E                 5576 	ld	a,(hl)
   115F 77                 5577 	ld	(hl),a
                           5578 ;	square.c 904
                           5579 ;	genPlus
                           5580 ;	genPlusIncr
   1160 21 E8 00           5581 	ld	hl,#_patternB + 6
                           5582 ;	genAssign (pointer)
                           5583 ;	AOP_HL for _offStepA
   1163 21 78 01           5584 	ld	hl,#_offStepA
   1166 7E                 5585 	ld	a,(hl)
   1167 77                 5586 	ld	(hl),a
                           5587 ;	square.c 905
                           5588 ;	genPlus
                           5589 ;	genPlusIncr
   1168 21 E9 00           5590 	ld	hl,#_patternB + 7
                           5591 ;	genAssign (pointer)
                           5592 ;	AOP_HL for _offStepB
   116B 21 79 01           5593 	ld	hl,#_offStepB
   116E 7E                 5594 	ld	a,(hl)
   116F 77                 5595 	ld	(hl),a
                           5596 ;	square.c 906
                           5597 ;	genPlus
                           5598 ;	genPlusIncr
   1170 21 EA 00           5599 	ld	hl,#_patternB + 8
                           5600 ;	genAssign (pointer)
                           5601 ;	AOP_HL for _offStepC
   1173 21 7A 01           5602 	ld	hl,#_offStepC
   1176 7E                 5603 	ld	a,(hl)
   1177 77                 5604 	ld	(hl),a
                           5605 ;	square.c 907
                           5606 ;	genPlus
                           5607 ;	genPlusIncr
   1178 21 EB 00           5608 	ld	hl,#_patternB + 9
                           5609 ;	genAssign (pointer)
                           5610 ;	AOP_HL for _randA
   117B 21 5F 01           5611 	ld	hl,#_randA
   117E 7E                 5612 	ld	a,(hl)
   117F 77                 5613 	ld	(hl),a
                           5614 ;	square.c 908
                           5615 ;	genPlus
                           5616 ;	genPlusIncr
   1180 21 EC 00           5617 	ld	hl,#_patternB + 10
                           5618 ;	genAssign (pointer)
                           5619 ;	AOP_HL for _randB
   1183 21 60 01           5620 	ld	hl,#_randB
   1186 7E                 5621 	ld	a,(hl)
   1187 77                 5622 	ld	(hl),a
                           5623 ;	square.c 909
                           5624 ;	genPlus
                           5625 ;	genPlusIncr
   1188 21 ED 00           5626 	ld	hl,#_patternB + 11
                           5627 ;	genAssign (pointer)
                           5628 ;	AOP_HL for _randC
   118B 21 61 01           5629 	ld	hl,#_randC
   118E 7E                 5630 	ld	a,(hl)
   118F 77                 5631 	ld	(hl),a
                           5632 ;	square.c 910
                           5633 ;	genPlus
                           5634 ;	genPlusIncr
   1190 21 EE 00           5635 	ld	hl,#_patternB + 12
                           5636 ;	genAssign (pointer)
                           5637 ;	AOP_HL for _xA
   1193 21 66 01           5638 	ld	hl,#_xA
   1196 7E                 5639 	ld	a,(hl)
   1197 77                 5640 	ld	(hl),a
                           5641 ;	square.c 911
                           5642 ;	genPlus
                           5643 ;	genPlusIncr
   1198 21 EF 00           5644 	ld	hl,#_patternB + 13
                           5645 ;	genAssign (pointer)
                           5646 ;	AOP_HL for _xB
   119B 21 67 01           5647 	ld	hl,#_xB
   119E 7E                 5648 	ld	a,(hl)
   119F 77                 5649 	ld	(hl),a
                           5650 ;	square.c 912
                           5651 ;	genPlus
                           5652 ;	genPlusIncr
   11A0 21 F0 00           5653 	ld	hl,#_patternB + 14
                           5654 ;	genAssign (pointer)
                           5655 ;	AOP_HL for _xC
   11A3 21 68 01           5656 	ld	hl,#_xC
   11A6 7E                 5657 	ld	a,(hl)
   11A7 77                 5658 	ld	(hl),a
                           5659 ;	square.c 913
                           5660 ;	genPlus
                           5661 ;	genPlusIncr
   11A8 21 F1 00           5662 	ld	hl,#_patternB + 15
                           5663 ;	genAssign (pointer)
                           5664 ;	AOP_HL for _delayA
   11AB 21 69 01           5665 	ld	hl,#_delayA
   11AE 7E                 5666 	ld	a,(hl)
   11AF 77                 5667 	ld	(hl),a
                           5668 ;	square.c 914
                           5669 ;	genPlus
                           5670 ;	genPlusIncr
   11B0 21 F2 00           5671 	ld	hl,#_patternB + 16
                           5672 ;	genAssign (pointer)
                           5673 ;	AOP_HL for _delayB
   11B3 21 6A 01           5674 	ld	hl,#_delayB
   11B6 7E                 5675 	ld	a,(hl)
   11B7 77                 5676 	ld	(hl),a
                           5677 ;	square.c 915
                           5678 ;	genPlus
                           5679 ;	genPlusIncr
   11B8 21 F3 00           5680 	ld	hl,#_patternB + 17
                           5681 ;	genAssign (pointer)
                           5682 ;	AOP_HL for _delayC
   11BB 21 6B 01           5683 	ld	hl,#_delayC
   11BE 7E                 5684 	ld	a,(hl)
   11BF 77                 5685 	ld	(hl),a
                           5686 ;	square.c 916
                           5687 ;	genGoto
   11C0 C3 E6 12           5688 	jp	00105$
                           5689 ;	square.c 919
                           5690 ;	genLabel
   11C3                    5691 00103$:
                           5692 ;	genAssign (pointer)
                           5693 ;	AOP_HL for _numberOfPulsesA
   11C3 11 F4 00           5694 	ld	de,#_patternC
   11C6 21 6F 01           5695 	ld	hl,#_numberOfPulsesA
   11C9 7E                 5696 	ld	a,(hl)
   11CA 12                 5697 	ld	(de),a
                           5698 ;	square.c 920
                           5699 ;	genPlus
                           5700 ;	genPlusIncr
   11CB 21 F5 00           5701 	ld	hl,#_patternC + 1
                           5702 ;	genAssign (pointer)
                           5703 ;	AOP_HL for _totalStepsA
   11CE 21 70 01           5704 	ld	hl,#_totalStepsA
   11D1 7E                 5705 	ld	a,(hl)
   11D2 77                 5706 	ld	(hl),a
                           5707 ;	square.c 921
                           5708 ;	genPlus
                           5709 ;	genPlusIncr
   11D3 21 F6 00           5710 	ld	hl,#_patternC + 2
                           5711 ;	genAssign (pointer)
                           5712 ;	AOP_HL for _numberOfPulsesB
   11D6 21 72 01           5713 	ld	hl,#_numberOfPulsesB
   11D9 7E                 5714 	ld	a,(hl)
   11DA 77                 5715 	ld	(hl),a
                           5716 ;	square.c 922
                           5717 ;	genPlus
                           5718 ;	genPlusIncr
   11DB 21 F7 00           5719 	ld	hl,#_patternC + 3
                           5720 ;	genAssign (pointer)
                           5721 ;	AOP_HL for _totalStepsB
   11DE 21 73 01           5722 	ld	hl,#_totalStepsB
   11E1 7E                 5723 	ld	a,(hl)
   11E2 77                 5724 	ld	(hl),a
                           5725 ;	square.c 923
                           5726 ;	genPlus
                           5727 ;	genPlusIncr
   11E3 21 F8 00           5728 	ld	hl,#_patternC + 4
                           5729 ;	genAssign (pointer)
                           5730 ;	AOP_HL for _numberOfPulsesC
   11E6 21 75 01           5731 	ld	hl,#_numberOfPulsesC
   11E9 7E                 5732 	ld	a,(hl)
   11EA 77                 5733 	ld	(hl),a
                           5734 ;	square.c 924
                           5735 ;	genPlus
                           5736 ;	genPlusIncr
   11EB 21 F9 00           5737 	ld	hl,#_patternC + 5
                           5738 ;	genAssign (pointer)
                           5739 ;	AOP_HL for _totalStepsC
   11EE 21 76 01           5740 	ld	hl,#_totalStepsC
   11F1 7E                 5741 	ld	a,(hl)
   11F2 77                 5742 	ld	(hl),a
                           5743 ;	square.c 925
                           5744 ;	genPlus
                           5745 ;	genPlusIncr
   11F3 21 FA 00           5746 	ld	hl,#_patternC + 6
                           5747 ;	genAssign (pointer)
                           5748 ;	AOP_HL for _offStepA
   11F6 21 78 01           5749 	ld	hl,#_offStepA
   11F9 7E                 5750 	ld	a,(hl)
   11FA 77                 5751 	ld	(hl),a
                           5752 ;	square.c 926
                           5753 ;	genPlus
                           5754 ;	genPlusIncr
   11FB 21 FB 00           5755 	ld	hl,#_patternC + 7
                           5756 ;	genAssign (pointer)
                           5757 ;	AOP_HL for _offStepB
   11FE 21 79 01           5758 	ld	hl,#_offStepB
   1201 7E                 5759 	ld	a,(hl)
   1202 77                 5760 	ld	(hl),a
                           5761 ;	square.c 927
                           5762 ;	genPlus
                           5763 ;	genPlusIncr
   1203 21 FC 00           5764 	ld	hl,#_patternC + 8
                           5765 ;	genAssign (pointer)
                           5766 ;	AOP_HL for _offStepC
   1206 21 7A 01           5767 	ld	hl,#_offStepC
   1209 7E                 5768 	ld	a,(hl)
   120A 77                 5769 	ld	(hl),a
                           5770 ;	square.c 928
                           5771 ;	genPlus
                           5772 ;	genPlusIncr
   120B 21 FD 00           5773 	ld	hl,#_patternC + 9
                           5774 ;	genAssign (pointer)
                           5775 ;	AOP_HL for _randA
   120E 21 5F 01           5776 	ld	hl,#_randA
   1211 7E                 5777 	ld	a,(hl)
   1212 77                 5778 	ld	(hl),a
                           5779 ;	square.c 929
                           5780 ;	genPlus
                           5781 ;	genPlusIncr
   1213 21 FE 00           5782 	ld	hl,#_patternC + 10
                           5783 ;	genAssign (pointer)
                           5784 ;	AOP_HL for _randB
   1216 21 60 01           5785 	ld	hl,#_randB
   1219 7E                 5786 	ld	a,(hl)
   121A 77                 5787 	ld	(hl),a
                           5788 ;	square.c 930
                           5789 ;	genPlus
                           5790 ;	genPlusIncr
   121B 21 FF 00           5791 	ld	hl,#_patternC + 11
                           5792 ;	genAssign (pointer)
                           5793 ;	AOP_HL for _randC
   121E 21 61 01           5794 	ld	hl,#_randC
   1221 7E                 5795 	ld	a,(hl)
   1222 77                 5796 	ld	(hl),a
                           5797 ;	square.c 931
                           5798 ;	genPlus
                           5799 ;	genPlusIncr
   1223 21 00 01           5800 	ld	hl,#_patternC + 12
                           5801 ;	genAssign (pointer)
                           5802 ;	AOP_HL for _xA
   1226 21 66 01           5803 	ld	hl,#_xA
   1229 7E                 5804 	ld	a,(hl)
   122A 77                 5805 	ld	(hl),a
                           5806 ;	square.c 932
                           5807 ;	genPlus
                           5808 ;	genPlusIncr
   122B 21 01 01           5809 	ld	hl,#_patternC + 13
                           5810 ;	genAssign (pointer)
                           5811 ;	AOP_HL for _xB
   122E 21 67 01           5812 	ld	hl,#_xB
   1231 7E                 5813 	ld	a,(hl)
   1232 77                 5814 	ld	(hl),a
                           5815 ;	square.c 933
                           5816 ;	genPlus
                           5817 ;	genPlusIncr
   1233 21 02 01           5818 	ld	hl,#_patternC + 14
                           5819 ;	genAssign (pointer)
                           5820 ;	AOP_HL for _xC
   1236 21 68 01           5821 	ld	hl,#_xC
   1239 7E                 5822 	ld	a,(hl)
   123A 77                 5823 	ld	(hl),a
                           5824 ;	square.c 934
                           5825 ;	genPlus
                           5826 ;	genPlusIncr
   123B 21 03 01           5827 	ld	hl,#_patternC + 15
                           5828 ;	genAssign (pointer)
                           5829 ;	AOP_HL for _delayA
   123E 21 69 01           5830 	ld	hl,#_delayA
   1241 7E                 5831 	ld	a,(hl)
   1242 77                 5832 	ld	(hl),a
                           5833 ;	square.c 935
                           5834 ;	genPlus
                           5835 ;	genPlusIncr
   1243 21 04 01           5836 	ld	hl,#_patternC + 16
                           5837 ;	genAssign (pointer)
                           5838 ;	AOP_HL for _delayB
   1246 21 6A 01           5839 	ld	hl,#_delayB
   1249 7E                 5840 	ld	a,(hl)
   124A 77                 5841 	ld	(hl),a
                           5842 ;	square.c 936
                           5843 ;	genPlus
                           5844 ;	genPlusIncr
   124B 21 05 01           5845 	ld	hl,#_patternC + 17
                           5846 ;	genAssign (pointer)
                           5847 ;	AOP_HL for _delayC
   124E 21 6B 01           5848 	ld	hl,#_delayC
   1251 7E                 5849 	ld	a,(hl)
   1252 77                 5850 	ld	(hl),a
                           5851 ;	square.c 937
                           5852 ;	genGoto
   1253 C3 E6 12           5853 	jp	00105$
                           5854 ;	square.c 939
                           5855 ;	genLabel
   1256                    5856 00104$:
                           5857 ;	genAssign (pointer)
                           5858 ;	AOP_HL for _numberOfPulsesA
   1256 11 06 01           5859 	ld	de,#_patternD
   1259 21 6F 01           5860 	ld	hl,#_numberOfPulsesA
   125C 7E                 5861 	ld	a,(hl)
   125D 12                 5862 	ld	(de),a
                           5863 ;	square.c 940
                           5864 ;	genPlus
                           5865 ;	genPlusIncr
   125E 21 07 01           5866 	ld	hl,#_patternD + 1
                           5867 ;	genAssign (pointer)
                           5868 ;	AOP_HL for _totalStepsA
   1261 21 70 01           5869 	ld	hl,#_totalStepsA
   1264 7E                 5870 	ld	a,(hl)
   1265 77                 5871 	ld	(hl),a
                           5872 ;	square.c 941
                           5873 ;	genPlus
                           5874 ;	genPlusIncr
   1266 21 08 01           5875 	ld	hl,#_patternD + 2
                           5876 ;	genAssign (pointer)
                           5877 ;	AOP_HL for _numberOfPulsesB
   1269 21 72 01           5878 	ld	hl,#_numberOfPulsesB
   126C 7E                 5879 	ld	a,(hl)
   126D 77                 5880 	ld	(hl),a
                           5881 ;	square.c 942
                           5882 ;	genPlus
                           5883 ;	genPlusIncr
   126E 21 09 01           5884 	ld	hl,#_patternD + 3
                           5885 ;	genAssign (pointer)
                           5886 ;	AOP_HL for _totalStepsB
   1271 21 73 01           5887 	ld	hl,#_totalStepsB
   1274 7E                 5888 	ld	a,(hl)
   1275 77                 5889 	ld	(hl),a
                           5890 ;	square.c 943
                           5891 ;	genPlus
                           5892 ;	genPlusIncr
   1276 21 0A 01           5893 	ld	hl,#_patternD + 4
                           5894 ;	genAssign (pointer)
                           5895 ;	AOP_HL for _numberOfPulsesC
   1279 21 75 01           5896 	ld	hl,#_numberOfPulsesC
   127C 7E                 5897 	ld	a,(hl)
   127D 77                 5898 	ld	(hl),a
                           5899 ;	square.c 944
                           5900 ;	genPlus
                           5901 ;	genPlusIncr
   127E 21 0B 01           5902 	ld	hl,#_patternD + 5
                           5903 ;	genAssign (pointer)
                           5904 ;	AOP_HL for _totalStepsC
   1281 21 76 01           5905 	ld	hl,#_totalStepsC
   1284 7E                 5906 	ld	a,(hl)
   1285 77                 5907 	ld	(hl),a
                           5908 ;	square.c 945
                           5909 ;	genPlus
                           5910 ;	genPlusIncr
   1286 21 0C 01           5911 	ld	hl,#_patternD + 6
                           5912 ;	genAssign (pointer)
                           5913 ;	AOP_HL for _offStepA
   1289 21 78 01           5914 	ld	hl,#_offStepA
   128C 7E                 5915 	ld	a,(hl)
   128D 77                 5916 	ld	(hl),a
                           5917 ;	square.c 946
                           5918 ;	genPlus
                           5919 ;	genPlusIncr
   128E 21 0D 01           5920 	ld	hl,#_patternD + 7
                           5921 ;	genAssign (pointer)
                           5922 ;	AOP_HL for _offStepB
   1291 21 79 01           5923 	ld	hl,#_offStepB
   1294 7E                 5924 	ld	a,(hl)
   1295 77                 5925 	ld	(hl),a
                           5926 ;	square.c 947
                           5927 ;	genPlus
                           5928 ;	genPlusIncr
   1296 21 0E 01           5929 	ld	hl,#_patternD + 8
                           5930 ;	genAssign (pointer)
                           5931 ;	AOP_HL for _offStepC
   1299 21 7A 01           5932 	ld	hl,#_offStepC
   129C 7E                 5933 	ld	a,(hl)
   129D 77                 5934 	ld	(hl),a
                           5935 ;	square.c 948
                           5936 ;	genPlus
                           5937 ;	genPlusIncr
   129E 21 0F 01           5938 	ld	hl,#_patternD + 9
                           5939 ;	genAssign (pointer)
                           5940 ;	AOP_HL for _randA
   12A1 21 5F 01           5941 	ld	hl,#_randA
   12A4 7E                 5942 	ld	a,(hl)
   12A5 77                 5943 	ld	(hl),a
                           5944 ;	square.c 949
                           5945 ;	genPlus
                           5946 ;	genPlusIncr
   12A6 21 10 01           5947 	ld	hl,#_patternD + 10
                           5948 ;	genAssign (pointer)
                           5949 ;	AOP_HL for _randB
   12A9 21 60 01           5950 	ld	hl,#_randB
   12AC 7E                 5951 	ld	a,(hl)
   12AD 77                 5952 	ld	(hl),a
                           5953 ;	square.c 950
                           5954 ;	genPlus
                           5955 ;	genPlusIncr
   12AE 21 11 01           5956 	ld	hl,#_patternD + 11
                           5957 ;	genAssign (pointer)
                           5958 ;	AOP_HL for _randC
   12B1 21 61 01           5959 	ld	hl,#_randC
   12B4 7E                 5960 	ld	a,(hl)
   12B5 77                 5961 	ld	(hl),a
                           5962 ;	square.c 951
                           5963 ;	genPlus
                           5964 ;	genPlusIncr
   12B6 21 12 01           5965 	ld	hl,#_patternD + 12
                           5966 ;	genAssign (pointer)
                           5967 ;	AOP_HL for _xA
   12B9 21 66 01           5968 	ld	hl,#_xA
   12BC 7E                 5969 	ld	a,(hl)
   12BD 77                 5970 	ld	(hl),a
                           5971 ;	square.c 952
                           5972 ;	genPlus
                           5973 ;	genPlusIncr
   12BE 21 13 01           5974 	ld	hl,#_patternD + 13
                           5975 ;	genAssign (pointer)
                           5976 ;	AOP_HL for _xB
   12C1 21 67 01           5977 	ld	hl,#_xB
   12C4 7E                 5978 	ld	a,(hl)
   12C5 77                 5979 	ld	(hl),a
                           5980 ;	square.c 953
                           5981 ;	genPlus
                           5982 ;	genPlusIncr
   12C6 21 14 01           5983 	ld	hl,#_patternD + 14
                           5984 ;	genAssign (pointer)
                           5985 ;	AOP_HL for _xC
   12C9 21 68 01           5986 	ld	hl,#_xC
   12CC 7E                 5987 	ld	a,(hl)
   12CD 77                 5988 	ld	(hl),a
                           5989 ;	square.c 954
                           5990 ;	genPlus
                           5991 ;	genPlusIncr
   12CE 21 15 01           5992 	ld	hl,#_patternD + 15
                           5993 ;	genAssign (pointer)
                           5994 ;	AOP_HL for _delayA
   12D1 21 69 01           5995 	ld	hl,#_delayA
   12D4 7E                 5996 	ld	a,(hl)
   12D5 77                 5997 	ld	(hl),a
                           5998 ;	square.c 955
                           5999 ;	genPlus
                           6000 ;	genPlusIncr
   12D6 21 16 01           6001 	ld	hl,#_patternD + 16
                           6002 ;	genAssign (pointer)
                           6003 ;	AOP_HL for _delayB
   12D9 21 6A 01           6004 	ld	hl,#_delayB
   12DC 7E                 6005 	ld	a,(hl)
   12DD 77                 6006 	ld	(hl),a
                           6007 ;	square.c 956
                           6008 ;	genPlus
                           6009 ;	genPlusIncr
   12DE 21 17 01           6010 	ld	hl,#_patternD + 17
                           6011 ;	genAssign (pointer)
                           6012 ;	AOP_HL for _delayC
   12E1 21 6B 01           6013 	ld	hl,#_delayC
   12E4 7E                 6014 	ld	a,(hl)
   12E5 77                 6015 	ld	(hl),a
                           6016 ;	square.c 958
                           6017 ;	genLabel
   12E6                    6018 00105$:
                           6019 ;	square.c 959
                           6020 ;	genIpush
                           6021 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12E6 3E 01              6022 	ld	a,#0x01
   12E8 F5                 6023 	push	af
   12E9 33                 6024 	inc	sp
                           6025 ;	genCall
   12EA CD 00 00           6026 	call	_performantdelay
   12ED E8 01              6027 	lda	sp,1(sp)
                           6028 ;	square.c 960
                           6029 ;	genCall
                           6030 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12EF CD 00 00           6031 	call	_wait_vbl_done
                           6032 ;	genLabel
   12F2                    6033 00106$:
                           6034 ;	genEndFunction
                           6035 	
   12F2 C9                 6036 	ret
   12F3                    6037 ___savePattern_end:
                           6038 ;	square.c 964
                           6039 ;	genLabel
                           6040 ;	genFunction
                           6041 ;	---------------------------------
                           6042 ; Function main
                           6043 ; ---------------------------------
   12F3                    6044 ___main_start:
   12F3                    6045 _main:
   12F3 E8 FD              6046 	lda	sp,-3(sp)
                           6047 ;	square.c 966
                           6048 ;	genAssign
   12F5 01 24 FF           6049 	ld	bc,#0xFF24
                           6050 ;	genAssign (pointer)
   12F8 3E FF              6051 	ld	a,#0xFF
   12FA 02                 6052 	ld	(bc),a
                           6053 ;	square.c 967
                           6054 ;	genAssign
   12FB 01 25 FF           6055 	ld	bc,#0xFF25
                           6056 ;	genAssign (pointer)
   12FE 3E FF              6057 	ld	a,#0xFF
   1300 02                 6058 	ld	(bc),a
                           6059 ;	square.c 968
                           6060 ;	genAssign
   1301 01 26 FF           6061 	ld	bc,#0xFF26
                           6062 ;	genAssign (pointer)
   1304 3E 80              6063 	ld	a,#0x80
   1306 02                 6064 	ld	(bc),a
                           6065 ;	square.c 969
                           6066 ;	genAssign
                           6067 ;	AOP_HL for _watch
   1307 21 81 01           6068 	ld	hl,#_watch
   130A 36 00              6069 	ld	(hl),#0x00
                           6070 ;	square.c 970
                           6071 ;	genAssign
                           6072 ;	AOP_HL for _clkA
   130C 21 71 01           6073 	ld	hl,#_clkA
   130F 36 00              6074 	ld	(hl),#0x00
                           6075 ;	square.c 971
                           6076 ;	genAssign
                           6077 ;	AOP_HL for _pop
   1311 21 84 01           6078 	ld	hl,#_pop
   1314 36 00              6079 	ld	(hl),#0x00
                           6080 ;	square.c 972
                           6081 ;	genAssign
                           6082 ;	AOP_HL for _modus
   1316 21 85 01           6083 	ld	hl,#_modus
   1319 36 00              6084 	ld	(hl),#0x00
                           6085 ;	square.c 973
                           6086 ;	genAssign
                           6087 ;	AOP_HL for _samp_freq
   131B 21 7F 01           6088 	ld	hl,#_samp_freq
   131E 36 A4              6089 	ld	(hl),#0xA4
                           6090 ;	square.c 974
                           6091 ;	genAssign
                           6092 ;	AOP_HL for _tempo
   1320 21 80 01           6093 	ld	hl,#_tempo
   1323 36 14              6094 	ld	(hl),#0x14
                           6095 ;	square.c 975
                           6096 ;	genAssign
                           6097 ;	AOP_HL for _seldrum
   1325 21 89 01           6098 	ld	hl,#_seldrum
   1328 36 00              6099 	ld	(hl),#0x00
                           6100 ;	square.c 976
                           6101 ;	genAssign
                           6102 ;	AOP_HL for _syncToDrum
   132A 21 6D 01           6103 	ld	hl,#_syncToDrum
   132D 36 00              6104 	ld	(hl),#0x00
                           6105 ;	square.c 977
                           6106 ;	genAssign
                           6107 ;	AOP_HL for _currentSaveSlot
   132F 21 7D 01           6108 	ld	hl,#_currentSaveSlot
   1332 36 00              6109 	ld	(hl),#0x00
                           6110 ;	square.c 979
                           6111 ;	genIpush
                           6112 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1334 21 D0 00           6113 	ld	hl,#_patternA
   1337 E5                 6114 	push	hl
                           6115 ;	genCall
   1338 CD 7E 0E           6116 	call	_loadPattern
   133B E8 02              6117 	lda	sp,2(sp)
                           6118 ;	square.c 984
                           6119 ;	genAssign
   133D 01 40 FF           6120 	ld	bc,#0xFF40
                           6121 ;	genAssign
                           6122 ;	AOP_STK for _main_sloc0_1_0
   1340 F8 01              6123 	lda	hl,1(sp)
   1342 36 40              6124 	ld	(hl),#0x40
   1344 23                 6125 	inc	hl
   1345 36 FF              6126 	ld	(hl),#0xFF
                           6127 ;	genPointerGet
                           6128 ;	AOP_STK for _main_sloc0_1_0
                           6129 ;	AOP_STK for _main_sloc1_1_0
   1347 2B                 6130 	dec	hl
   1348 5E                 6131 	ld	e,(hl)
   1349 23                 6132 	inc	hl
   134A 56                 6133 	ld	d,(hl)
   134B 1A                 6134 	ld	a,(de)
   134C 2B                 6135 	dec	hl
   134D 2B                 6136 	dec	hl
                           6137 ;	genAnd
                           6138 ;	AOP_STK for _main_sloc1_1_0
   134E 77                 6139 	ld      (hl),a
                           6140 ; Removed redundent load
   134F E6 FB              6141 	and	a,#0xFB
                           6142 ;	genAssign (pointer)
   1351 02                 6143 	ld	(bc),a
                           6144 ;	square.c 985
                           6145 ;	genIpush
                           6146 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1352 21 00 00           6147 	ld	hl,#_squareA
   1355 E5                 6148 	push	hl
                           6149 ;	genIpush
   1356 21 00 02           6150 	ld	hl,#0x0200
   1359 E5                 6151 	push	hl
                           6152 ;	genCall
   135A CD 00 00           6153 	call	_set_sprite_data
   135D E8 04              6154 	lda	sp,4(sp)
                           6155 ;	square.c 986
                           6156 ;	genIpush
                           6157 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   135F 21 00 00           6158 	ld	hl,#0x0000
   1362 E5                 6159 	push	hl
                           6160 ;	genCall
   1363 CD 00 00           6161 	call	_set_sprite_tile
   1366 E8 02              6162 	lda	sp,2(sp)
                           6163 ;	square.c 987
                           6164 ;	genMinus
                           6165 ;	AOP_HL for _totalStepsA
   1368 21 70 01           6166 	ld	hl,#_totalStepsA
   136B 7E                 6167 	ld	a,(hl)
   136C C6 FF              6168 	add	a,#0xFF
   136E 4F                 6169 	ld	c,a
                           6170 ;	genPlus
                           6171 ;	Can't optimise plus by inc, falling back to the normal way
   136F 3E 18              6172 	ld	a,#<_dXlut
   1371 81                 6173 	add	a,c
   1372 4F                 6174 	ld	c,a
   1373 3E 01              6175 	ld	a,#>_dXlut
   1375 CE 00              6176 	adc	a,#0x00
   1377 47                 6177 	ld	b,a
                           6178 ;	genPointerGet
   1378 0A                 6179 	ld	a,(bc)
   1379 4F                 6180 	ld	c,a
                           6181 ;	genMinus
                           6182 ;	AOP_HL for _numberOfPulsesA
   137A 21 6F 01           6183 	ld	hl,#_numberOfPulsesA
   137D 7E                 6184 	ld	a,(hl)
   137E C6 FF              6185 	add	a,#0xFF
   1380 47                 6186 	ld	b,a
                           6187 ;	genPlus
                           6188 ;	AOP_STK for _main_sloc0_1_0
                           6189 ;	Can't optimise plus by inc, falling back to the normal way
   1381 11 38 01           6190 	ld	de,#_dYlut
   1384 68                 6191 	ld	l,b
   1385 26 00              6192 	ld	h,#0x00
   1387 19                 6193 	add	hl,de
   1388 7D                 6194 	ld	a,l
   1389 54                 6195 	ld	d,h
   138A F8 01              6196 	lda	hl,1(sp)
                           6197 ;	genPointerGet
                           6198 ;	AOP_STK for _main_sloc0_1_0
   138C 22                 6199 	ld	(hl+),a
   138D 72                 6200 	ld	(hl),d
   138E 5F                 6201 	ld	e,a
   138F 1A                 6202 	ld	a,(de)
   1390 47                 6203 	ld	b,a
                           6204 ;	genIpush
                           6205 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1391 79                 6206 	ld	a,c
   1392 F5                 6207 	push	af
   1393 33                 6208 	inc	sp
                           6209 ;	genIpush
   1394 78                 6210 	ld	a,b
   1395 F5                 6211 	push	af
   1396 33                 6212 	inc	sp
                           6213 ;	genIpush
   1397 3E 00              6214 	ld	a,#0x00
   1399 F5                 6215 	push	af
   139A 33                 6216 	inc	sp
                           6217 ;	genCall
   139B CD 00 00           6218 	call	_move_sprite
   139E E8 03              6219 	lda	sp,3(sp)
                           6220 ;	square.c 989
                           6221 ;	genIpush
                           6222 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13A0 21 10 00           6223 	ld	hl,#_squareB
   13A3 E5                 6224 	push	hl
                           6225 ;	genIpush
   13A4 21 02 04           6226 	ld	hl,#0x0402
   13A7 E5                 6227 	push	hl
                           6228 ;	genCall
   13A8 CD 00 00           6229 	call	_set_sprite_data
   13AB E8 04              6230 	lda	sp,4(sp)
                           6231 ;	square.c 990
                           6232 ;	genIpush
                           6233 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13AD 21 01 02           6234 	ld	hl,#0x0201
   13B0 E5                 6235 	push	hl
                           6236 ;	genCall
   13B1 CD 00 00           6237 	call	_set_sprite_tile
   13B4 E8 02              6238 	lda	sp,2(sp)
                           6239 ;	square.c 991
                           6240 ;	genMinus
                           6241 ;	AOP_HL for _totalStepsB
   13B6 21 73 01           6242 	ld	hl,#_totalStepsB
   13B9 7E                 6243 	ld	a,(hl)
   13BA C6 FF              6244 	add	a,#0xFF
   13BC 4F                 6245 	ld	c,a
                           6246 ;	genPlus
                           6247 ;	Can't optimise plus by inc, falling back to the normal way
   13BD 3E 18              6248 	ld	a,#<_dXlut
   13BF 81                 6249 	add	a,c
   13C0 4F                 6250 	ld	c,a
   13C1 3E 01              6251 	ld	a,#>_dXlut
   13C3 CE 00              6252 	adc	a,#0x00
   13C5 47                 6253 	ld	b,a
                           6254 ;	genPointerGet
   13C6 0A                 6255 	ld	a,(bc)
   13C7 4F                 6256 	ld	c,a
                           6257 ;	genMinus
                           6258 ;	AOP_HL for _numberOfPulsesB
   13C8 21 72 01           6259 	ld	hl,#_numberOfPulsesB
   13CB 7E                 6260 	ld	a,(hl)
   13CC C6 FF              6261 	add	a,#0xFF
   13CE 47                 6262 	ld	b,a
                           6263 ;	genPlus
                           6264 ;	AOP_STK for _main_sloc0_1_0
                           6265 ;	Can't optimise plus by inc, falling back to the normal way
   13CF 11 38 01           6266 	ld	de,#_dYlut
   13D2 68                 6267 	ld	l,b
   13D3 26 00              6268 	ld	h,#0x00
   13D5 19                 6269 	add	hl,de
   13D6 7D                 6270 	ld	a,l
   13D7 54                 6271 	ld	d,h
   13D8 F8 01              6272 	lda	hl,1(sp)
                           6273 ;	genPointerGet
                           6274 ;	AOP_STK for _main_sloc0_1_0
   13DA 22                 6275 	ld	(hl+),a
   13DB 72                 6276 	ld	(hl),d
   13DC 5F                 6277 	ld	e,a
   13DD 1A                 6278 	ld	a,(de)
   13DE 47                 6279 	ld	b,a
                           6280 ;	genIpush
                           6281 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13DF 79                 6282 	ld	a,c
   13E0 F5                 6283 	push	af
   13E1 33                 6284 	inc	sp
                           6285 ;	genIpush
   13E2 78                 6286 	ld	a,b
   13E3 F5                 6287 	push	af
   13E4 33                 6288 	inc	sp
                           6289 ;	genIpush
   13E5 3E 01              6290 	ld	a,#0x01
   13E7 F5                 6291 	push	af
   13E8 33                 6292 	inc	sp
                           6293 ;	genCall
   13E9 CD 00 00           6294 	call	_move_sprite
   13EC E8 03              6295 	lda	sp,3(sp)
                           6296 ;	square.c 993
                           6297 ;	genIpush
                           6298 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13EE 21 20 00           6299 	ld	hl,#_squareC
   13F1 E5                 6300 	push	hl
                           6301 ;	genIpush
   13F2 21 04 06           6302 	ld	hl,#0x0604
   13F5 E5                 6303 	push	hl
                           6304 ;	genCall
   13F6 CD 00 00           6305 	call	_set_sprite_data
   13F9 E8 04              6306 	lda	sp,4(sp)
                           6307 ;	square.c 994
                           6308 ;	genIpush
                           6309 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13FB 21 02 04           6310 	ld	hl,#0x0402
   13FE E5                 6311 	push	hl
                           6312 ;	genCall
   13FF CD 00 00           6313 	call	_set_sprite_tile
   1402 E8 02              6314 	lda	sp,2(sp)
                           6315 ;	square.c 995
                           6316 ;	genMinus
                           6317 ;	AOP_HL for _totalStepsC
   1404 21 76 01           6318 	ld	hl,#_totalStepsC
   1407 7E                 6319 	ld	a,(hl)
   1408 C6 FF              6320 	add	a,#0xFF
   140A 4F                 6321 	ld	c,a
                           6322 ;	genPlus
                           6323 ;	Can't optimise plus by inc, falling back to the normal way
   140B 3E 18              6324 	ld	a,#<_dXlut
   140D 81                 6325 	add	a,c
   140E 4F                 6326 	ld	c,a
   140F 3E 01              6327 	ld	a,#>_dXlut
   1411 CE 00              6328 	adc	a,#0x00
   1413 47                 6329 	ld	b,a
                           6330 ;	genPointerGet
   1414 0A                 6331 	ld	a,(bc)
   1415 4F                 6332 	ld	c,a
                           6333 ;	genMinus
                           6334 ;	AOP_HL for _numberOfPulsesC
   1416 21 75 01           6335 	ld	hl,#_numberOfPulsesC
   1419 7E                 6336 	ld	a,(hl)
   141A C6 FF              6337 	add	a,#0xFF
   141C 47                 6338 	ld	b,a
                           6339 ;	genPlus
                           6340 ;	AOP_STK for _main_sloc0_1_0
                           6341 ;	Can't optimise plus by inc, falling back to the normal way
   141D 11 38 01           6342 	ld	de,#_dYlut
   1420 68                 6343 	ld	l,b
   1421 26 00              6344 	ld	h,#0x00
   1423 19                 6345 	add	hl,de
   1424 7D                 6346 	ld	a,l
   1425 54                 6347 	ld	d,h
   1426 F8 01              6348 	lda	hl,1(sp)
                           6349 ;	genPointerGet
                           6350 ;	AOP_STK for _main_sloc0_1_0
   1428 22                 6351 	ld	(hl+),a
   1429 72                 6352 	ld	(hl),d
   142A 5F                 6353 	ld	e,a
   142B 1A                 6354 	ld	a,(de)
   142C 47                 6355 	ld	b,a
                           6356 ;	genIpush
                           6357 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   142D 79                 6358 	ld	a,c
   142E F5                 6359 	push	af
   142F 33                 6360 	inc	sp
                           6361 ;	genIpush
   1430 78                 6362 	ld	a,b
   1431 F5                 6363 	push	af
   1432 33                 6364 	inc	sp
                           6365 ;	genIpush
   1433 3E 02              6366 	ld	a,#0x02
   1435 F5                 6367 	push	af
   1436 33                 6368 	inc	sp
                           6369 ;	genCall
   1437 CD 00 00           6370 	call	_move_sprite
   143A E8 03              6371 	lda	sp,3(sp)
                           6372 ;	square.c 997
                           6373 ;	genIpush
                           6374 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   143C 21 30 00           6375 	ld	hl,#_midiC
   143F E5                 6376 	push	hl
                           6377 ;	genIpush
   1440 21 06 08           6378 	ld	hl,#0x0806
   1443 E5                 6379 	push	hl
                           6380 ;	genCall
   1444 CD 00 00           6381 	call	_set_sprite_data
   1447 E8 04              6382 	lda	sp,4(sp)
                           6383 ;	square.c 998
                           6384 ;	genIpush
                           6385 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1449 21 03 06           6386 	ld	hl,#0x0603
   144C E5                 6387 	push	hl
                           6388 ;	genCall
   144D CD 00 00           6389 	call	_set_sprite_tile
   1450 E8 02              6390 	lda	sp,2(sp)
                           6391 ;	square.c 999
                           6392 ;	genIpush
                           6393 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1452 21 00 00           6394 	ld	hl,#0x0000
   1455 E5                 6395 	push	hl
                           6396 ;	genIpush
   1456 3E 03              6397 	ld	a,#0x03
   1458 F5                 6398 	push	af
   1459 33                 6399 	inc	sp
                           6400 ;	genCall
   145A CD 00 00           6401 	call	_move_sprite
   145D E8 03              6402 	lda	sp,3(sp)
                           6403 ;	square.c 1001
                           6404 ;	genIpush
                           6405 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   145F 21 40 00           6406 	ld	hl,#_offsetC
   1462 E5                 6407 	push	hl
                           6408 ;	genIpush
   1463 21 08 0A           6409 	ld	hl,#0x0A08
   1466 E5                 6410 	push	hl
                           6411 ;	genCall
   1467 CD 00 00           6412 	call	_set_sprite_data
   146A E8 04              6413 	lda	sp,4(sp)
                           6414 ;	square.c 1002
                           6415 ;	genIpush
                           6416 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   146C 21 04 08           6417 	ld	hl,#0x0804
   146F E5                 6418 	push	hl
                           6419 ;	genCall
   1470 CD 00 00           6420 	call	_set_sprite_tile
   1473 E8 02              6421 	lda	sp,2(sp)
                           6422 ;	square.c 1003
                           6423 ;	genPlus
                           6424 ;	AOP_HL for _offStepA
                           6425 ;	Can't optimise plus by inc, falling back to the normal way
   1475 3E 18              6426 	ld	a,#<_dXlut
   1477 21 78 01           6427 	ld	hl,#_offStepA
   147A 86                 6428 	add	a,(hl)
   147B 4F                 6429 	ld	c,a
   147C 3E 01              6430 	ld	a,#>_dXlut
   147E CE 00              6431 	adc	a,#0x00
   1480 47                 6432 	ld	b,a
                           6433 ;	genPointerGet
   1481 0A                 6434 	ld	a,(bc)
                           6435 ;	genIpush
                           6436 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1482 4F                 6437 	ld	c,a
   1483 F5                 6438 	push	af
   1484 33                 6439 	inc	sp
                           6440 ;	genIpush
   1485 21 04 08           6441 	ld	hl,#0x0804
   1488 E5                 6442 	push	hl
                           6443 ;	genCall
   1489 CD 00 00           6444 	call	_move_sprite
   148C E8 03              6445 	lda	sp,3(sp)
                           6446 ;	square.c 1005
                           6447 ;	genIpush
                           6448 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   148E 21 50 00           6449 	ld	hl,#_swingC
   1491 E5                 6450 	push	hl
                           6451 ;	genIpush
   1492 21 0A 0C           6452 	ld	hl,#0x0C0A
   1495 E5                 6453 	push	hl
                           6454 ;	genCall
   1496 CD 00 00           6455 	call	_set_sprite_data
   1499 E8 04              6456 	lda	sp,4(sp)
                           6457 ;	square.c 1006
                           6458 ;	genIpush
                           6459 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   149B 21 05 0A           6460 	ld	hl,#0x0A05
   149E E5                 6461 	push	hl
                           6462 ;	genCall
   149F CD 00 00           6463 	call	_set_sprite_tile
   14A2 E8 02              6464 	lda	sp,2(sp)
                           6465 ;	square.c 1007
                           6466 ;	genPlus
                           6467 ;	AOP_HL for _delayA
                           6468 ;	genPlusIncr
                           6469 ;	Can't optimise plus by inc, falling back to the normal way
   14A4 21 69 01           6470 	ld	hl,#_delayA
   14A7 7E                 6471 	ld	a,(hl)
   14A8 C6 08              6472 	add	a,#0x08
   14AA 4F                 6473 	ld	c,a
                           6474 ;	genIpush
                           6475 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14AB 3E 98              6476 	ld	a,#0x98
   14AD F5                 6477 	push	af
   14AE 33                 6478 	inc	sp
                           6479 ;	genIpush
   14AF 79                 6480 	ld	a,c
   14B0 F5                 6481 	push	af
   14B1 33                 6482 	inc	sp
                           6483 ;	genIpush
   14B2 3E 05              6484 	ld	a,#0x05
   14B4 F5                 6485 	push	af
   14B5 33                 6486 	inc	sp
                           6487 ;	genCall
   14B6 CD 00 00           6488 	call	_move_sprite
   14B9 E8 03              6489 	lda	sp,3(sp)
                           6490 ;	square.c 1010
                           6491 ;	genIpush
                           6492 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14BB 21 60 00           6493 	ld	hl,#_saveC
   14BE E5                 6494 	push	hl
                           6495 ;	genIpush
   14BF 21 0C 0E           6496 	ld	hl,#0x0E0C
   14C2 E5                 6497 	push	hl
                           6498 ;	genCall
   14C3 CD 00 00           6499 	call	_set_sprite_data
   14C6 E8 04              6500 	lda	sp,4(sp)
                           6501 ;	square.c 1011
                           6502 ;	genIpush
                           6503 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14C8 21 06 0C           6504 	ld	hl,#0x0C06
   14CB E5                 6505 	push	hl
                           6506 ;	genCall
   14CC CD 00 00           6507 	call	_set_sprite_tile
   14CF E8 02              6508 	lda	sp,2(sp)
                           6509 ;	square.c 1012
                           6510 ;	genIpush
                           6511 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14D1 21 A0 90           6512 	ld	hl,#0x90A0
   14D4 E5                 6513 	push	hl
                           6514 ;	genIpush
   14D5 3E 06              6515 	ld	a,#0x06
   14D7 F5                 6516 	push	af
   14D8 33                 6517 	inc	sp
                           6518 ;	genCall
   14D9 CD 00 00           6519 	call	_move_sprite
   14DC E8 03              6520 	lda	sp,3(sp)
                           6521 ;	square.c 1014
                           6522 ;	genIpush
                           6523 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14DE 21 07 00           6524 	ld	hl,#0x0007
   14E1 E5                 6525 	push	hl
                           6526 ;	genCall
   14E2 CD 00 00           6527 	call	_set_sprite_tile
   14E5 E8 02              6528 	lda	sp,2(sp)
                           6529 ;	square.c 1015
                           6530 ;	genIpush
                           6531 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14E7 21 08 10           6532 	ld	hl,#0x1008
   14EA E5                 6533 	push	hl
                           6534 ;	genIpush
   14EB 3E 07              6535 	ld	a,#0x07
   14ED F5                 6536 	push	af
   14EE 33                 6537 	inc	sp
                           6538 ;	genCall
   14EF CD 00 00           6539 	call	_move_sprite
   14F2 E8 03              6540 	lda	sp,3(sp)
                           6541 ;	square.c 1020
                           6542 ;	genCall
                           6543 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14F4 CD 00 00           6544 	call	_disable_interrupts
                           6545 ;	square.c 1021
                           6546 ;	genIpush
                           6547 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14F7 21 7A 0E           6548 	ld	hl,#_tim
   14FA E5                 6549 	push	hl
                           6550 ;	genCall
   14FB CD 00 00           6551 	call	_add_TIM
   14FE E8 02              6552 	lda	sp,2(sp)
                           6553 ;	square.c 1022
                           6554 ;	genCall
                           6555 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1500 CD 00 00           6556 	call	_enable_interrupts
                           6557 ;	square.c 1023
                           6558 ;	genAssign
   1503 01 06 FF           6559 	ld	bc,#0xFF06
                           6560 ;	genAssign (pointer)
                           6561 ;	AOP_HL for _samp_freq
   1506 21 7F 01           6562 	ld	hl,#_samp_freq
   1509 7E                 6563 	ld	a,(hl)
   150A 02                 6564 	ld	(bc),a
                           6565 ;	square.c 1028
                           6566 ;	genAssign
   150B 01 07 FF           6567 	ld	bc,#0xFF07
                           6568 ;	genAssign (pointer)
   150E 3E 07              6569 	ld	a,#0x07
   1510 02                 6570 	ld	(bc),a
                           6571 ;	square.c 1030
                           6572 ;	genIpush
                           6573 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1511 3E 05              6574 	ld	a,#0x05
   1513 F5                 6575 	push	af
   1514 33                 6576 	inc	sp
                           6577 ;	genCall
   1515 CD 00 00           6578 	call	_set_interrupts
   1518 E8 01              6579 	lda	sp,1(sp)
                           6580 ;	square.c 1035
                           6581 ;	genAssign
   151A 01 40 FF           6582 	ld	bc,#0xFF40
                           6583 ;	genAssign
                           6584 ;	AOP_STK for _main_sloc0_1_0
   151D F8 01              6585 	lda	hl,1(sp)
   151F 36 40              6586 	ld	(hl),#0x40
   1521 23                 6587 	inc	hl
   1522 36 FF              6588 	ld	(hl),#0xFF
                           6589 ;	genPointerGet
                           6590 ;	AOP_STK for _main_sloc0_1_0
                           6591 ;	AOP_STK for _main_sloc1_1_0
   1524 2B                 6592 	dec	hl
   1525 5E                 6593 	ld	e,(hl)
   1526 23                 6594 	inc	hl
   1527 56                 6595 	ld	d,(hl)
   1528 1A                 6596 	ld	a,(de)
   1529 2B                 6597 	dec	hl
   152A 2B                 6598 	dec	hl
                           6599 ;	genOr
                           6600 ;	AOP_STK for _main_sloc1_1_0
   152B 77                 6601 	ld      (hl),a
                           6602 ; Removed redundent load
   152C F6 80              6603 	or	a,#0x80
                           6604 ;	genAssign (pointer)
   152E 02                 6605 	ld	(bc),a
                           6606 ;	square.c 1036
                           6607 ;	genAssign
   152F 01 40 FF           6608 	ld	bc,#0xFF40
                           6609 ;	genAssign
                           6610 ;	AOP_STK for _main_sloc0_1_0
   1532 23                 6611 	inc	hl
   1533 36 40              6612 	ld	(hl),#0x40
   1535 23                 6613 	inc	hl
   1536 36 FF              6614 	ld	(hl),#0xFF
                           6615 ;	genPointerGet
                           6616 ;	AOP_STK for _main_sloc0_1_0
                           6617 ;	AOP_STK for _main_sloc1_1_0
   1538 2B                 6618 	dec	hl
   1539 5E                 6619 	ld	e,(hl)
   153A 23                 6620 	inc	hl
   153B 56                 6621 	ld	d,(hl)
   153C 1A                 6622 	ld	a,(de)
   153D 2B                 6623 	dec	hl
   153E 2B                 6624 	dec	hl
                           6625 ;	genOr
                           6626 ;	AOP_STK for _main_sloc1_1_0
   153F 77                 6627 	ld      (hl),a
                           6628 ; Removed redundent load
   1540 F6 02              6629 	or	a,#0x02
                           6630 ;	genAssign (pointer)
   1542 02                 6631 	ld	(bc),a
                           6632 ;	square.c 1040
                           6633 ;	genLabel
   1543                    6634 00163$:
                           6635 ;	square.c 1042
                           6636 ;	genCall
                           6637 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1543 CD 00 00           6638 	call	_joypad
   1546 4B                 6639 	ld	c,e
                           6640 ;	genCmpEq
                           6641 ; genCmpEq: left 1, right 1, result 0
   1547 79                 6642 	ld	a,c
   1548 B7                 6643 	or	a,a
   1549 CA 53 15           6644 	jp	z,00102$
   154C                    6645 00196$:
                           6646 ;	square.c 1043
                           6647 ;	genPlus
                           6648 ;	AOP_HL for _pad
                           6649 ;	genPlusIncr
   154C 21 88 01           6650 	ld	hl,#_pad
   154F 34                 6651 	inc	(hl)
                           6652 ;	genGoto
   1550 C3 58 15           6653 	jp	00103$
                           6654 ;	genLabel
   1553                    6655 00102$:
                           6656 ;	square.c 1046
                           6657 ;	genAssign
                           6658 ;	AOP_HL for _pad
   1553 21 88 01           6659 	ld	hl,#_pad
   1556 36 00              6660 	ld	(hl),#0x00
                           6661 ;	genLabel
   1558                    6662 00103$:
                           6663 ;	square.c 1049
                           6664 ;	genCall
                           6665 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1558 CD 00 00           6666 	call	_joypad
   155B 4B                 6667 	ld	c,e
                           6668 ;	genCmpEq
                           6669 ;	AOP_HL for _joy
                           6670 ; genCmpEq: left 1, right 1, result 0
   155C 21 87 01           6671 	ld	hl,#_joy
   155F 7E                 6672 	ld	a,(hl)
   1560 B9                 6673 	cp	c
   1561 20 02              6674 	jr	nz,00197$
   1563 18 03              6675 	jr	00198$
   1565                    6676 00197$:
   1565 C3 71 15           6677 	jp	00104$
   1568                    6678 00198$:
                           6679 ;	genCmpGt
                           6680 ;	AOP_HL for _pad
   1568 3E 0A              6681 	ld	a,#0x0A
   156A 21 88 01           6682 	ld	hl,#_pad
   156D 96                 6683 	sub	a,(hl)
   156E D2 7B 15           6684 	jp	nc,00105$
                           6685 ;	genLabel
   1571                    6686 00104$:
                           6687 ;	square.c 1050
                           6688 ;	genCall
                           6689 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1571 CD 00 00           6690 	call	_joypad
                           6691 ;	AOP_HL for _padext
   1574 21 86 01           6692 	ld	hl,#_padext
   1577 73                 6693 	ld	(hl),e
                           6694 ;	genGoto
   1578 C3 80 15           6695 	jp	00106$
                           6696 ;	genLabel
   157B                    6697 00105$:
                           6698 ;	square.c 1053
                           6699 ;	genAssign
                           6700 ;	AOP_HL for _padext
   157B 21 86 01           6701 	ld	hl,#_padext
   157E 36 00              6702 	ld	(hl),#0x00
                           6703 ;	genLabel
   1580                    6704 00106$:
                           6705 ;	square.c 1057
                           6706 ;	genCall
                           6707 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1580 CD 00 00           6708 	call	_joypad
   1583 4B                 6709 	ld	c,e
                           6710 ;	genCmpEq
                           6711 ;	AOP_HL for _joy
                           6712 ; genCmpEq: left 1, right 1, result 0
   1584 21 87 01           6713 	ld	hl,#_joy
   1587 7E                 6714 	ld	a,(hl)
   1588 B9                 6715 	cp	c
   1589 20 03              6716 	jr	nz,00199$
   158B C3 93 15           6717 	jp	00109$
   158E                    6718 00199$:
                           6719 ;	square.c 1059
                           6720 ;	genAssign
                           6721 ;	AOP_HL for _pad
   158E 21 88 01           6722 	ld	hl,#_pad
   1591 36 00              6723 	ld	(hl),#0x00
                           6724 ;	genLabel
   1593                    6725 00109$:
                           6726 ;	square.c 1062
                           6727 ;	genCall
                           6728 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1593 CD 00 00           6729 	call	_joypad
                           6730 ;	AOP_HL for _joy
   1596 21 87 01           6731 	ld	hl,#_joy
   1599 73                 6732 	ld	(hl),e
                           6733 ;	square.c 1064
                           6734 ;	genCall
                           6735 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   159A CD 00 00           6736 	call	_joypad
   159D 4B                 6737 	ld	c,e
                           6738 ;	genCmpEq
                           6739 ; genCmpEq: left 1, right 1, result 0
   159E 79                 6740 	ld	a,c
   159F FE 02              6741 	cp	a,#0x02
   15A1 C2 B5 15           6742 	jp	nz,00111$
   15A4 18 03              6743 	jr	00201$
   15A6                    6744 00200$:
   15A6 C3 B5 15           6745 	jp	00111$
   15A9                    6746 00201$:
                           6747 ;	square.c 1066
                           6748 ;	genCall
                           6749 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15A9 CD B3 0A           6750 	call	_decreasePulses
                           6751 ;	square.c 1067
                           6752 ;	genIpush
                           6753 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15AC 3E 05              6754 	ld	a,#0x05
   15AE F5                 6755 	push	af
   15AF 33                 6756 	inc	sp
                           6757 ;	genCall
   15B0 CD 00 00           6758 	call	_performantdelay
   15B3 E8 01              6759 	lda	sp,1(sp)
                           6760 ;	genLabel
   15B5                    6761 00111$:
                           6762 ;	square.c 1070
                           6763 ;	genCall
                           6764 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15B5 CD 00 00           6765 	call	_joypad
   15B8 4B                 6766 	ld	c,e
                           6767 ;	genCmpEq
                           6768 ; genCmpEq: left 1, right 1, result 0
   15B9 79                 6769 	ld	a,c
   15BA FE 01              6770 	cp	a,#0x01
   15BC C2 D0 15           6771 	jp	nz,00113$
   15BF 18 03              6772 	jr	00203$
   15C1                    6773 00202$:
   15C1 C3 D0 15           6774 	jp	00113$
   15C4                    6775 00203$:
                           6776 ;	square.c 1072
                           6777 ;	genCall
                           6778 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15C4 CD AE 09           6779 	call	_increasePulses
                           6780 ;	square.c 1073
                           6781 ;	genIpush
                           6782 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15C7 3E 05              6783 	ld	a,#0x05
   15C9 F5                 6784 	push	af
   15CA 33                 6785 	inc	sp
                           6786 ;	genCall
   15CB CD 00 00           6787 	call	_performantdelay
   15CE E8 01              6788 	lda	sp,1(sp)
                           6789 ;	genLabel
   15D0                    6790 00113$:
                           6791 ;	square.c 1076
                           6792 ;	genCall
                           6793 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15D0 CD 00 00           6794 	call	_joypad
   15D3 4B                 6795 	ld	c,e
                           6796 ;	genCmpEq
                           6797 ; genCmpEq: left 1, right 1, result 0
   15D4 79                 6798 	ld	a,c
   15D5 FE 08              6799 	cp	a,#0x08
   15D7 C2 EB 15           6800 	jp	nz,00115$
   15DA 18 03              6801 	jr	00205$
   15DC                    6802 00204$:
   15DC C3 EB 15           6803 	jp	00115$
   15DF                    6804 00205$:
                           6805 ;	square.c 1078
                           6806 ;	genCall
                           6807 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15DF CD C5 08           6808 	call	_decreaseSteps
                           6809 ;	square.c 1079
                           6810 ;	genIpush
                           6811 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15E2 3E 05              6812 	ld	a,#0x05
   15E4 F5                 6813 	push	af
   15E5 33                 6814 	inc	sp
                           6815 ;	genCall
   15E6 CD 00 00           6816 	call	_performantdelay
   15E9 E8 01              6817 	lda	sp,1(sp)
                           6818 ;	genLabel
   15EB                    6819 00115$:
                           6820 ;	square.c 1082
                           6821 ;	genCall
                           6822 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15EB CD 00 00           6823 	call	_joypad
   15EE 4B                 6824 	ld	c,e
                           6825 ;	genCmpEq
                           6826 ; genCmpEq: left 1, right 1, result 0
   15EF 79                 6827 	ld	a,c
   15F0 FE 04              6828 	cp	a,#0x04
   15F2 C2 06 16           6829 	jp	nz,00117$
   15F5 18 03              6830 	jr	00207$
   15F7                    6831 00206$:
   15F7 C3 06 16           6832 	jp	00117$
   15FA                    6833 00207$:
                           6834 ;	square.c 1084
                           6835 ;	genCall
                           6836 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15FA CD DC 07           6837 	call	_increaseSteps
                           6838 ;	square.c 1085
                           6839 ;	genIpush
                           6840 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15FD 3E 05              6841 	ld	a,#0x05
   15FF F5                 6842 	push	af
   1600 33                 6843 	inc	sp
                           6844 ;	genCall
   1601 CD 00 00           6845 	call	_performantdelay
   1604 E8 01              6846 	lda	sp,1(sp)
                           6847 ;	genLabel
   1606                    6848 00117$:
                           6849 ;	square.c 1089
                           6850 ;	genCmpEq
                           6851 ;	AOP_HL for _padext
                           6852 ; genCmpEq: left 1, right 1, result 0
   1606 21 86 01           6853 	ld	hl,#_padext
   1609 7E                 6854 	ld	a,(hl)
   160A FE 84              6855 	cp	a,#0x84
   160C C2 21 16           6856 	jp	nz,00119$
   160F 18 03              6857 	jr	00209$
   1611                    6858 00208$:
   1611 C3 21 16           6859 	jp	00119$
   1614                    6860 00209$:
                           6861 ;	square.c 1091
                           6862 ;	genMinus
                           6863 ;	AOP_HL for _tempo
   1614 21 80 01           6864 	ld	hl,#_tempo
   1617 35                 6865 	dec	(hl)
                           6866 ;	square.c 1092
                           6867 ;	genIpush
                           6868 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1618 3E 02              6869 	ld	a,#0x02
   161A F5                 6870 	push	af
   161B 33                 6871 	inc	sp
                           6872 ;	genCall
   161C CD 00 00           6873 	call	_performantdelay
   161F E8 01              6874 	lda	sp,1(sp)
                           6875 ;	genLabel
   1621                    6876 00119$:
                           6877 ;	square.c 1095
                           6878 ;	genCmpEq
                           6879 ;	AOP_HL for _padext
                           6880 ; genCmpEq: left 1, right 1, result 0
   1621 21 86 01           6881 	ld	hl,#_padext
   1624 7E                 6882 	ld	a,(hl)
   1625 FE 88              6883 	cp	a,#0x88
   1627 C2 3C 16           6884 	jp	nz,00121$
   162A 18 03              6885 	jr	00211$
   162C                    6886 00210$:
   162C C3 3C 16           6887 	jp	00121$
   162F                    6888 00211$:
                           6889 ;	square.c 1097
                           6890 ;	genPlus
                           6891 ;	AOP_HL for _tempo
                           6892 ;	genPlusIncr
   162F 21 80 01           6893 	ld	hl,#_tempo
   1632 34                 6894 	inc	(hl)
                           6895 ;	square.c 1098
                           6896 ;	genIpush
                           6897 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1633 3E 02              6898 	ld	a,#0x02
   1635 F5                 6899 	push	af
   1636 33                 6900 	inc	sp
                           6901 ;	genCall
   1637 CD 00 00           6902 	call	_performantdelay
   163A E8 01              6903 	lda	sp,1(sp)
                           6904 ;	genLabel
   163C                    6905 00121$:
                           6906 ;	square.c 1102
                           6907 ;	genCmpEq
                           6908 ;	AOP_HL for _padext
                           6909 ; genCmpEq: left 1, right 1, result 0
   163C 21 86 01           6910 	ld	hl,#_padext
   163F 7E                 6911 	ld	a,(hl)
   1640 FE 44              6912 	cp	a,#0x44
   1642 C2 2C 17           6913 	jp	nz,00129$
   1645 18 03              6914 	jr	00213$
   1647                    6915 00212$:
   1647 C3 2C 17           6916 	jp	00129$
   164A                    6917 00213$:
                           6918 ;	square.c 1104
                           6919 ;	genPlus
                           6920 ;	AOP_HL for _seldrum
                           6921 ;	genPlusIncr
   164A 21 89 01           6922 	ld	hl,#_seldrum
   164D 34                 6923 	inc	(hl)
                           6924 ;	square.c 1105
                           6925 ;	genCmpEq
                           6926 ;	AOP_HL for _seldrum
                           6927 ; genCmpEq: left 1, right 1, result 0
   164E 7E                 6928 	ld	a,(hl)
   164F FE 03              6929 	cp	a,#0x03
   1651 C2 5E 16           6930 	jp	nz,00123$
   1654 18 03              6931 	jr	00215$
   1656                    6932 00214$:
   1656 C3 5E 16           6933 	jp	00123$
   1659                    6934 00215$:
                           6935 ;	square.c 1107
                           6936 ;	genAssign
                           6937 ;	AOP_HL for _seldrum
   1659 21 89 01           6938 	ld	hl,#_seldrum
   165C 36 00              6939 	ld	(hl),#0x00
                           6940 ;	genLabel
   165E                    6941 00123$:
                           6942 ;	square.c 1109
                           6943 ;	genIpush
                           6944 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   165E 3E 0A              6945 	ld	a,#0x0A
   1660 F5                 6946 	push	af
   1661 33                 6947 	inc	sp
                           6948 ;	genCall
   1662 CD 00 00           6949 	call	_performantdelay
   1665 E8 01              6950 	lda	sp,1(sp)
                           6951 ;	square.c 1110
                           6952 ;	genAssign
                           6953 ;	AOP_HL for _cDelay
   1667 21 7B 01           6954 	ld	hl,#_cDelay
   166A 36 00              6955 	ld	(hl),#0x00
                           6956 ;	square.c 1111
                           6957 ;	genAssign
                           6958 ;	AOP_HL for _cOffStep
   166C 21 7C 01           6959 	ld	hl,#_cOffStep
   166F 36 00              6960 	ld	(hl),#0x00
                           6961 ;	square.c 1112
                           6962 ;	genCmpEq
                           6963 ;	AOP_HL for _seldrum
                           6964 ; genCmpEq: left 1, right 1, result 0
   1671 21 89 01           6965 	ld	hl,#_seldrum
   1674 7E                 6966 	ld	a,(hl)
   1675 B7                 6967 	or	a,a
   1676 CA 8E 16           6968 	jp	z,00124$
   1679                    6969 00216$:
                           6970 ;	genCmpEq
                           6971 ;	AOP_HL for _seldrum
                           6972 ; genCmpEq: left 1, right 1, result 0
   1679 21 89 01           6973 	ld	hl,#_seldrum
   167C 7E                 6974 	ld	a,(hl)
   167D FE 01              6975 	cp	a,#0x01
   167F CA A1 16           6976 	jp	z,00125$
   1682                    6977 00217$:
                           6978 ;	genCmpEq
                           6979 ;	AOP_HL for _seldrum
                           6980 ; genCmpEq: left 1, right 1, result 0
   1682 21 89 01           6981 	ld	hl,#_seldrum
   1685 7E                 6982 	ld	a,(hl)
   1686 FE 02              6983 	cp	a,#0x02
   1688 CA B4 16           6984 	jp	z,00126$
   168B                    6985 00218$:
                           6986 ;	genGoto
   168B C3 C4 16           6987 	jp	00127$
                           6988 ;	square.c 1115
                           6989 ;	genLabel
   168E                    6990 00124$:
                           6991 ;	genAssign
                           6992 ;	AOP_HL for _delayA
                           6993 ;	AOP_HL for _cDelay
   168E 21 69 01           6994 	ld	hl,#_delayA
   1691 7E                 6995 	ld	a,(hl)
   1692 21 7B 01           6996 	ld	hl,#_cDelay
   1695 77                 6997 	ld	(hl),a
                           6998 ;	square.c 1116
                           6999 ;	genAssign
                           7000 ;	AOP_HL for _offStepA
                           7001 ;	AOP_HL for _cOffStep
   1696 21 78 01           7002 	ld	hl,#_offStepA
   1699 7E                 7003 	ld	a,(hl)
   169A 21 7C 01           7004 	ld	hl,#_cOffStep
   169D 77                 7005 	ld	(hl),a
                           7006 ;	square.c 1117
                           7007 ;	genGoto
   169E C3 C4 16           7008 	jp	00127$
                           7009 ;	square.c 1119
                           7010 ;	genLabel
   16A1                    7011 00125$:
                           7012 ;	genAssign
                           7013 ;	AOP_HL for _delayB
                           7014 ;	AOP_HL for _cDelay
   16A1 21 6A 01           7015 	ld	hl,#_delayB
   16A4 7E                 7016 	ld	a,(hl)
   16A5 21 7B 01           7017 	ld	hl,#_cDelay
   16A8 77                 7018 	ld	(hl),a
                           7019 ;	square.c 1120
                           7020 ;	genAssign
                           7021 ;	AOP_HL for _offStepB
                           7022 ;	AOP_HL for _cOffStep
   16A9 21 79 01           7023 	ld	hl,#_offStepB
   16AC 7E                 7024 	ld	a,(hl)
   16AD 21 7C 01           7025 	ld	hl,#_cOffStep
   16B0 77                 7026 	ld	(hl),a
                           7027 ;	square.c 1121
                           7028 ;	genGoto
   16B1 C3 C4 16           7029 	jp	00127$
                           7030 ;	square.c 1123
                           7031 ;	genLabel
   16B4                    7032 00126$:
                           7033 ;	genAssign
                           7034 ;	AOP_HL for _delayC
                           7035 ;	AOP_HL for _cDelay
   16B4 21 6B 01           7036 	ld	hl,#_delayC
   16B7 7E                 7037 	ld	a,(hl)
   16B8 21 7B 01           7038 	ld	hl,#_cDelay
   16BB 77                 7039 	ld	(hl),a
                           7040 ;	square.c 1124
                           7041 ;	genAssign
                           7042 ;	AOP_HL for _offStepC
                           7043 ;	AOP_HL for _cOffStep
   16BC 21 7A 01           7044 	ld	hl,#_offStepC
   16BF 7E                 7045 	ld	a,(hl)
   16C0 21 7C 01           7046 	ld	hl,#_cOffStep
   16C3 77                 7047 	ld	(hl),a
                           7048 ;	square.c 1126
                           7049 ;	genLabel
   16C4                    7050 00127$:
                           7051 ;	square.c 1127
                           7052 ;	genCast
                           7053 ;	AOP_HL for _seldrum
   16C4 21 89 01           7054 	ld	hl,#_seldrum
   16C7 4E                 7055 	ld	c,(hl)
   16C8 06 00              7056 	ld	b,#0x00
                           7057 ;	genLeftShift
   16CA CB 21              7058 	sla	c
   16CC CB 10              7059 	rl	b
                           7060 ;	genCast
                           7061 ; Removed redundent load
                           7062 ;	genIpush
                           7063 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   16CE 79                 7064 	ld	a,c
   16CF F5                 7065 	push	af
   16D0 33                 7066 	inc	sp
                           7067 ;	genIpush
   16D1 3E 07              7068 	ld	a,#0x07
   16D3 F5                 7069 	push	af
   16D4 33                 7070 	inc	sp
                           7071 ;	genCall
   16D5 CD 00 00           7072 	call	_set_sprite_tile
   16D8 E8 02              7073 	lda	sp,2(sp)
                           7074 ;	square.c 1128
                           7075 ;	genIpush
                           7076 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   16DA 21 08 10           7077 	ld	hl,#0x1008
   16DD E5                 7078 	push	hl
                           7079 ;	genIpush
   16DE 3E 07              7080 	ld	a,#0x07
   16E0 F5                 7081 	push	af
   16E1 33                 7082 	inc	sp
                           7083 ;	genCall
   16E2 CD 00 00           7084 	call	_move_sprite
   16E5 E8 03              7085 	lda	sp,3(sp)
                           7086 ;	square.c 1129
                           7087 ;	genIpush
                           7088 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   16E7 21 05 0A           7089 	ld	hl,#0x0A05
   16EA E5                 7090 	push	hl
                           7091 ;	genCall
   16EB CD 00 00           7092 	call	_set_sprite_tile
   16EE E8 02              7093 	lda	sp,2(sp)
                           7094 ;	square.c 1130
                           7095 ;	genPlus
                           7096 ;	AOP_HL for _cDelay
                           7097 ;	genPlusIncr
                           7098 ;	Can't optimise plus by inc, falling back to the normal way
   16F0 21 7B 01           7099 	ld	hl,#_cDelay
   16F3 7E                 7100 	ld	a,(hl)
   16F4 C6 08              7101 	add	a,#0x08
   16F6 4F                 7102 	ld	c,a
                           7103 ;	genIpush
                           7104 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   16F7 3E 98              7105 	ld	a,#0x98
   16F9 F5                 7106 	push	af
   16FA 33                 7107 	inc	sp
                           7108 ;	genIpush
   16FB 79                 7109 	ld	a,c
   16FC F5                 7110 	push	af
   16FD 33                 7111 	inc	sp
                           7112 ;	genIpush
   16FE 3E 05              7113 	ld	a,#0x05
   1700 F5                 7114 	push	af
   1701 33                 7115 	inc	sp
                           7116 ;	genCall
   1702 CD 00 00           7117 	call	_move_sprite
   1705 E8 03              7118 	lda	sp,3(sp)
                           7119 ;	square.c 1131
                           7120 ;	genIpush
                           7121 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1707 21 04 08           7122 	ld	hl,#0x0804
   170A E5                 7123 	push	hl
                           7124 ;	genCall
   170B CD 00 00           7125 	call	_set_sprite_tile
   170E E8 02              7126 	lda	sp,2(sp)
                           7127 ;	square.c 1132
                           7128 ;	genPlus
                           7129 ;	AOP_HL for _cOffStep
                           7130 ;	Can't optimise plus by inc, falling back to the normal way
   1710 3E 18              7131 	ld	a,#<_dXlut
   1712 21 7C 01           7132 	ld	hl,#_cOffStep
   1715 86                 7133 	add	a,(hl)
   1716 4F                 7134 	ld	c,a
   1717 3E 01              7135 	ld	a,#>_dXlut
   1719 CE 00              7136 	adc	a,#0x00
   171B 47                 7137 	ld	b,a
                           7138 ;	genPointerGet
   171C 0A                 7139 	ld	a,(bc)
                           7140 ;	genIpush
                           7141 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   171D 4F                 7142 	ld	c,a
   171E F5                 7143 	push	af
   171F 33                 7144 	inc	sp
                           7145 ;	genIpush
   1720 21 04 08           7146 	ld	hl,#0x0804
   1723 E5                 7147 	push	hl
                           7148 ;	genCall
   1724 CD 00 00           7149 	call	_move_sprite
   1727 E8 03              7150 	lda	sp,3(sp)
                           7151 ;	square.c 1133
                           7152 ;	genCall
                           7153 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1729 CD 00 00           7154 	call	_wait_vbl_done
                           7155 ;	genLabel
   172C                    7156 00129$:
                           7157 ;	square.c 1136
                           7158 ;	genCmpEq
                           7159 ;	AOP_HL for _padext
                           7160 ; genCmpEq: left 1, right 1, result 0
   172C 21 86 01           7161 	ld	hl,#_padext
   172F 7E                 7162 	ld	a,(hl)
   1730 FE 48              7163 	cp	a,#0x48
   1732 C2 AA 17           7164 	jp	nz,00134$
   1735 18 03              7165 	jr	00222$
   1737                    7166 00221$:
   1737 C3 AA 17           7167 	jp	00134$
   173A                    7168 00222$:
                           7169 ;	square.c 1138
                           7170 ;	genCmpEq
                           7171 ;	AOP_HL for _modus
                           7172 ; genCmpEq: left 1, right 1, result 0
   173A 21 85 01           7173 	ld	hl,#_modus
   173D 7E                 7174 	ld	a,(hl)
   173E B7                 7175 	or	a,a
   173F C2 74 17           7176 	jp	nz,00131$
   1742 18 03              7177 	jr	00224$
   1744                    7178 00223$:
   1744 C3 74 17           7179 	jp	00131$
   1747                    7180 00224$:
                           7181 ;	square.c 1140
                           7182 ;	genAssign
                           7183 ;	AOP_HL for _clkA
   1747 21 71 01           7184 	ld	hl,#_clkA
   174A 36 00              7185 	ld	(hl),#0x00
                           7186 ;	square.c 1141
                           7187 ;	genAssign
                           7188 ;	AOP_HL for _clkB
   174C 21 74 01           7189 	ld	hl,#_clkB
   174F 36 00              7190 	ld	(hl),#0x00
                           7191 ;	square.c 1142
                           7192 ;	genAssign
                           7193 ;	AOP_HL for _clkC
   1751 21 77 01           7194 	ld	hl,#_clkC
   1754 36 00              7195 	ld	(hl),#0x00
                           7196 ;	square.c 1143
                           7197 ;	genAssign
                           7198 ;	AOP_HL for _modus
   1756 21 85 01           7199 	ld	hl,#_modus
   1759 36 01              7200 	ld	(hl),#0x01
                           7201 ;	square.c 1144
                           7202 ;	genIpush
                           7203 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   175B 21 03 06           7204 	ld	hl,#0x0603
   175E E5                 7205 	push	hl
                           7206 ;	genCall
   175F CD 00 00           7207 	call	_set_sprite_tile
   1762 E8 02              7208 	lda	sp,2(sp)
                           7209 ;	square.c 1145
                           7210 ;	genIpush
                           7211 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1764 21 A0 10           7212 	ld	hl,#0x10A0
   1767 E5                 7213 	push	hl
                           7214 ;	genIpush
   1768 3E 03              7215 	ld	a,#0x03
   176A F5                 7216 	push	af
   176B 33                 7217 	inc	sp
                           7218 ;	genCall
   176C CD 00 00           7219 	call	_move_sprite
   176F E8 03              7220 	lda	sp,3(sp)
                           7221 ;	genGoto
   1771 C3 9E 17           7222 	jp	00132$
                           7223 ;	genLabel
   1774                    7224 00131$:
                           7225 ;	square.c 1149
                           7226 ;	genAssign
                           7227 ;	AOP_HL for _clkA
   1774 21 71 01           7228 	ld	hl,#_clkA
   1777 36 00              7229 	ld	(hl),#0x00
                           7230 ;	square.c 1150
                           7231 ;	genAssign
                           7232 ;	AOP_HL for _clkB
   1779 21 74 01           7233 	ld	hl,#_clkB
   177C 36 00              7234 	ld	(hl),#0x00
                           7235 ;	square.c 1151
                           7236 ;	genAssign
                           7237 ;	AOP_HL for _clkC
   177E 21 77 01           7238 	ld	hl,#_clkC
   1781 36 00              7239 	ld	(hl),#0x00
                           7240 ;	square.c 1152
                           7241 ;	genAssign
                           7242 ;	AOP_HL for _modus
   1783 21 85 01           7243 	ld	hl,#_modus
   1786 36 00              7244 	ld	(hl),#0x00
                           7245 ;	square.c 1153
                           7246 ;	genIpush
                           7247 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1788 21 03 06           7248 	ld	hl,#0x0603
   178B E5                 7249 	push	hl
                           7250 ;	genCall
   178C CD 00 00           7251 	call	_set_sprite_tile
   178F E8 02              7252 	lda	sp,2(sp)
                           7253 ;	square.c 1154
                           7254 ;	genIpush
                           7255 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1791 21 00 00           7256 	ld	hl,#0x0000
   1794 E5                 7257 	push	hl
                           7258 ;	genIpush
   1795 3E 03              7259 	ld	a,#0x03
   1797 F5                 7260 	push	af
   1798 33                 7261 	inc	sp
                           7262 ;	genCall
   1799 CD 00 00           7263 	call	_move_sprite
   179C E8 03              7264 	lda	sp,3(sp)
                           7265 ;	genLabel
   179E                    7266 00132$:
                           7267 ;	square.c 1158
                           7268 ;	genCall
                           7269 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   179E CD 00 00           7270 	call	_wait_vbl_done
                           7271 ;	square.c 1159
                           7272 ;	genIpush
                           7273 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   17A1 3E 05              7274 	ld	a,#0x05
   17A3 F5                 7275 	push	af
   17A4 33                 7276 	inc	sp
                           7277 ;	genCall
   17A5 CD 00 00           7278 	call	_performantdelay
   17A8 E8 01              7279 	lda	sp,1(sp)
                           7280 ;	genLabel
   17AA                    7281 00134$:
                           7282 ;	square.c 1190
                           7283 ;	genCmpEq
                           7284 ;	AOP_HL for _padext
                           7285 ; genCmpEq: left 1, right 1, result 0
   17AA 21 86 01           7286 	ld	hl,#_padext
   17AD 7E                 7287 	ld	a,(hl)
   17AE FE 14              7288 	cp	a,#0x14
   17B0 C2 C4 17           7289 	jp	nz,00136$
   17B3 18 03              7290 	jr	00226$
   17B5                    7291 00225$:
   17B5 C3 C4 17           7292 	jp	00136$
   17B8                    7293 00226$:
                           7294 ;	square.c 1192
                           7295 ;	genCall
                           7296 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   17B8 CD 89 06           7297 	call	_increaseOffStep
                           7298 ;	square.c 1193
                           7299 ;	genIpush
                           7300 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   17BB 3E 05              7301 	ld	a,#0x05
   17BD F5                 7302 	push	af
   17BE 33                 7303 	inc	sp
                           7304 ;	genCall
   17BF CD 00 00           7305 	call	_performantdelay
   17C2 E8 01              7306 	lda	sp,1(sp)
                           7307 ;	genLabel
   17C4                    7308 00136$:
                           7309 ;	square.c 1196
                           7310 ;	genCmpEq
                           7311 ;	AOP_HL for _padext
                           7312 ; genCmpEq: left 1, right 1, result 0
   17C4 21 86 01           7313 	ld	hl,#_padext
   17C7 7E                 7314 	ld	a,(hl)
   17C8 FE 18              7315 	cp	a,#0x18
   17CA C2 DE 17           7316 	jp	nz,00138$
   17CD 18 03              7317 	jr	00228$
   17CF                    7318 00227$:
   17CF C3 DE 17           7319 	jp	00138$
   17D2                    7320 00228$:
                           7321 ;	square.c 1198
                           7322 ;	genCall
                           7323 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   17D2 CD 45 07           7324 	call	_decreaseOffStep
                           7325 ;	square.c 1199
                           7326 ;	genIpush
                           7327 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   17D5 3E 05              7328 	ld	a,#0x05
   17D7 F5                 7329 	push	af
   17D8 33                 7330 	inc	sp
                           7331 ;	genCall
   17D9 CD 00 00           7332 	call	_performantdelay
   17DC E8 01              7333 	lda	sp,1(sp)
                           7334 ;	genLabel
   17DE                    7335 00138$:
                           7336 ;	square.c 1202
                           7337 ;	genCmpEq
                           7338 ;	AOP_HL for _padext
                           7339 ; genCmpEq: left 1, right 1, result 0
   17DE 21 86 01           7340 	ld	hl,#_padext
   17E1 7E                 7341 	ld	a,(hl)
   17E2 FE 11              7342 	cp	a,#0x11
   17E4 C2 F8 17           7343 	jp	nz,00140$
   17E7 18 03              7344 	jr	00230$
   17E9                    7345 00229$:
   17E9 C3 F8 17           7346 	jp	00140$
   17EC                    7347 00230$:
                           7348 ;	square.c 1204
                           7349 ;	genCall
                           7350 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   17EC CD B8 0B           7351 	call	_increaseSwing
                           7352 ;	square.c 1205
                           7353 ;	genIpush
                           7354 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   17EF 3E 05              7355 	ld	a,#0x05
   17F1 F5                 7356 	push	af
   17F2 33                 7357 	inc	sp
                           7358 ;	genCall
   17F3 CD 00 00           7359 	call	_performantdelay
   17F6 E8 01              7360 	lda	sp,1(sp)
                           7361 ;	genLabel
   17F8                    7362 00140$:
                           7363 ;	square.c 1208
                           7364 ;	genCmpEq
                           7365 ;	AOP_HL for _padext
                           7366 ; genCmpEq: left 1, right 1, result 0
   17F8 21 86 01           7367 	ld	hl,#_padext
   17FB 7E                 7368 	ld	a,(hl)
   17FC FE 12              7369 	cp	a,#0x12
   17FE C2 12 18           7370 	jp	nz,00142$
   1801 18 03              7371 	jr	00232$
   1803                    7372 00231$:
   1803 C3 12 18           7373 	jp	00142$
   1806                    7374 00232$:
                           7375 ;	square.c 1210
                           7376 ;	genCall
                           7377 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1806 CD 48 0C           7378 	call	_decreaseSwing
                           7379 ;	square.c 1211
                           7380 ;	genIpush
                           7381 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1809 3E 05              7382 	ld	a,#0x05
   180B F5                 7383 	push	af
   180C 33                 7384 	inc	sp
                           7385 ;	genCall
   180D CD 00 00           7386 	call	_performantdelay
   1810 E8 01              7387 	lda	sp,1(sp)
                           7388 ;	genLabel
   1812                    7389 00142$:
                           7390 ;	square.c 1214
                           7391 ;	genCmpEq
                           7392 ;	AOP_HL for _padext
                           7393 ; genCmpEq: left 1, right 1, result 0
   1812 21 86 01           7394 	ld	hl,#_padext
   1815 7E                 7395 	ld	a,(hl)
   1816 FE 30              7396 	cp	a,#0x30
   1818 C2 28 18           7397 	jp	nz,00144$
   181B 18 03              7398 	jr	00234$
   181D                    7399 00233$:
   181D C3 28 18           7400 	jp	00144$
   1820                    7401 00234$:
                           7402 ;	square.c 1216
                           7403 ;	genAssign
                           7404 ;	AOP_HL for _syncToDrum
   1820 21 6D 01           7405 	ld	hl,#_syncToDrum
   1823 36 01              7406 	ld	(hl),#0x01
                           7407 ;	square.c 1218
                           7408 ;	genCall
                           7409 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1825 CD 00 00           7410 	call	_waitpadup
                           7411 ;	genLabel
   1828                    7412 00144$:
                           7413 ;	square.c 1222
                           7414 ;	genCmpEq
                           7415 ;	AOP_HL for _padext
                           7416 ; genCmpEq: left 1, right 1, result 0
   1828 21 86 01           7417 	ld	hl,#_padext
   182B 7E                 7418 	ld	a,(hl)
   182C FE 21              7419 	cp	a,#0x21
   182E C2 42 18           7420 	jp	nz,00146$
   1831 18 03              7421 	jr	00236$
   1833                    7422 00235$:
   1833 C3 42 18           7423 	jp	00146$
   1836                    7424 00236$:
                           7425 ;	square.c 1224
                           7426 ;	genCall
                           7427 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1836 CD 7E 10           7428 	call	_savePattern
                           7429 ;	square.c 1225
                           7430 ;	genIpush
                           7431 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1839 3E 05              7432 	ld	a,#0x05
   183B F5                 7433 	push	af
   183C 33                 7434 	inc	sp
                           7435 ;	genCall
   183D CD 00 00           7436 	call	_performantdelay
   1840 E8 01              7437 	lda	sp,1(sp)
                           7438 ;	genLabel
   1842                    7439 00146$:
                           7440 ;	square.c 1228
                           7441 ;	genCmpEq
                           7442 ;	AOP_HL for _padext
                           7443 ; genCmpEq: left 1, right 1, result 0
   1842 21 86 01           7444 	ld	hl,#_padext
   1845 7E                 7445 	ld	a,(hl)
   1846 FE 22              7446 	cp	a,#0x22
   1848 C2 A5 18           7447 	jp	nz,00153$
   184B 18 03              7448 	jr	00238$
   184D                    7449 00237$:
   184D C3 A5 18           7450 	jp	00153$
   1850                    7451 00238$:
                           7452 ;	square.c 1230
                           7453 ;	genCmpGt
                           7454 ;	AOP_HL for _currentSaveSlot
   1850 3E 03              7455 	ld	a,#0x03
   1852 21 7D 01           7456 	ld	hl,#_currentSaveSlot
   1855 96                 7457 	sub	a,(hl)
   1856 DA 9C 18           7458 	jp	c,00151$
                           7459 ;	genJumpTab
                           7460 ;	AOP_HL for _currentSaveSlot
   1859 5E                 7461 	ld	e,(hl)
   185A 16 00              7462 	ld	d,#0x00
   185C 21 63 18           7463 	ld	hl,#00239$
   185F 19                 7464 	add	hl,de
   1860 19                 7465 	add	hl,de
   1861 19                 7466 	add	hl,de
   1862 E9                 7467 	jp	(hl)
   1863                    7468 00239$:
   1863 C3 6F 18           7469 	jp	00147$
   1866 C3 7B 18           7470 	jp	00148$
   1869 C3 87 18           7471 	jp	00149$
   186C C3 93 18           7472 	jp	00150$
                           7473 ;	square.c 1233
                           7474 ;	genLabel
   186F                    7475 00147$:
                           7476 ;	genIpush
                           7477 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   186F 21 D0 00           7478 	ld	hl,#_patternA
   1872 E5                 7479 	push	hl
                           7480 ;	genCall
   1873 CD 7E 0E           7481 	call	_loadPattern
   1876 E8 02              7482 	lda	sp,2(sp)
                           7483 ;	square.c 1234
                           7484 ;	genGoto
   1878 C3 9C 18           7485 	jp	00151$
                           7486 ;	square.c 1236
                           7487 ;	genLabel
   187B                    7488 00148$:
                           7489 ;	genIpush
                           7490 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   187B 21 E2 00           7491 	ld	hl,#_patternB
   187E E5                 7492 	push	hl
                           7493 ;	genCall
   187F CD 7E 0E           7494 	call	_loadPattern
   1882 E8 02              7495 	lda	sp,2(sp)
                           7496 ;	square.c 1237
                           7497 ;	genGoto
   1884 C3 9C 18           7498 	jp	00151$
                           7499 ;	square.c 1240
                           7500 ;	genLabel
   1887                    7501 00149$:
                           7502 ;	genIpush
                           7503 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1887 21 F4 00           7504 	ld	hl,#_patternC
   188A E5                 7505 	push	hl
                           7506 ;	genCall
   188B CD 7E 0E           7507 	call	_loadPattern
   188E E8 02              7508 	lda	sp,2(sp)
                           7509 ;	square.c 1241
                           7510 ;	genGoto
   1890 C3 9C 18           7511 	jp	00151$
                           7512 ;	square.c 1243
                           7513 ;	genLabel
   1893                    7514 00150$:
                           7515 ;	genIpush
                           7516 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1893 21 06 01           7517 	ld	hl,#_patternD
   1896 E5                 7518 	push	hl
                           7519 ;	genCall
   1897 CD 7E 0E           7520 	call	_loadPattern
   189A E8 02              7521 	lda	sp,2(sp)
                           7522 ;	square.c 1245
                           7523 ;	genLabel
   189C                    7524 00151$:
                           7525 ;	square.c 1246
                           7526 ;	genIpush
                           7527 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   189C 3E 05              7528 	ld	a,#0x05
   189E F5                 7529 	push	af
   189F 33                 7530 	inc	sp
                           7531 ;	genCall
   18A0 CD 00 00           7532 	call	_performantdelay
   18A3 E8 01              7533 	lda	sp,1(sp)
                           7534 ;	genLabel
   18A5                    7535 00153$:
                           7536 ;	square.c 1249
                           7537 ;	genCmpEq
                           7538 ;	AOP_HL for _padext
                           7539 ; genCmpEq: left 1, right 1, result 0
   18A5 21 86 01           7540 	ld	hl,#_padext
   18A8 7E                 7541 	ld	a,(hl)
   18A9 FE 24              7542 	cp	a,#0x24
   18AB C2 E8 18           7543 	jp	nz,00157$
   18AE 18 03              7544 	jr	00241$
   18B0                    7545 00240$:
   18B0 C3 E8 18           7546 	jp	00157$
   18B3                    7547 00241$:
                           7548 ;	square.c 1251
                           7549 ;	genCmpLt
                           7550 ;	AOP_HL for _currentSaveSlot
   18B3 21 7D 01           7551 	ld	hl,#_currentSaveSlot
   18B6 7E                 7552 	ld	a,(hl)
   18B7 FE 03              7553 	cp	#0x03
   18B9 D2 DF 18           7554 	jp	nc,00155$
                           7555 ;	square.c 1253
                           7556 ;	genPlus
                           7557 ;	AOP_HL for _currentSaveSlot
                           7558 ;	genPlusIncr
   18BC 34                 7559 	inc	(hl)
                           7560 ;	square.c 1254
                           7561 ;	genIpush
                           7562 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   18BD 21 06 0C           7563 	ld	hl,#0x0C06
   18C0 E5                 7564 	push	hl
                           7565 ;	genCall
   18C1 CD 00 00           7566 	call	_set_sprite_tile
   18C4 E8 02              7567 	lda	sp,2(sp)
                           7568 ;	square.c 1255
                           7569 ;	genPlus
                           7570 ;	AOP_HL for _currentSaveSlot
                           7571 ;	Can't optimise plus by inc, falling back to the normal way
   18C6 3E 58              7572 	ld	a,#<_savelut
   18C8 21 7D 01           7573 	ld	hl,#_currentSaveSlot
   18CB 86                 7574 	add	a,(hl)
   18CC 4F                 7575 	ld	c,a
   18CD 3E 01              7576 	ld	a,#>_savelut
   18CF CE 00              7577 	adc	a,#0x00
   18D1 47                 7578 	ld	b,a
                           7579 ;	genPointerGet
   18D2 0A                 7580 	ld	a,(bc)
                           7581 ;	genIpush
                           7582 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   18D3 4F                 7583 	ld	c,a
   18D4 F5                 7584 	push	af
   18D5 33                 7585 	inc	sp
                           7586 ;	genIpush
   18D6 21 06 A0           7587 	ld	hl,#0xA006
   18D9 E5                 7588 	push	hl
                           7589 ;	genCall
   18DA CD 00 00           7590 	call	_move_sprite
   18DD E8 03              7591 	lda	sp,3(sp)
                           7592 ;	genLabel
   18DF                    7593 00155$:
                           7594 ;	square.c 1257
                           7595 ;	genIpush
                           7596 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   18DF 3E 05              7597 	ld	a,#0x05
   18E1 F5                 7598 	push	af
   18E2 33                 7599 	inc	sp
                           7600 ;	genCall
   18E3 CD 00 00           7601 	call	_performantdelay
   18E6 E8 01              7602 	lda	sp,1(sp)
                           7603 ;	genLabel
   18E8                    7604 00157$:
                           7605 ;	square.c 1260
                           7606 ;	genCmpEq
                           7607 ;	AOP_HL for _padext
                           7608 ; genCmpEq: left 1, right 1, result 0
   18E8 21 86 01           7609 	ld	hl,#_padext
   18EB 7E                 7610 	ld	a,(hl)
   18EC FE 28              7611 	cp	a,#0x28
   18EE C2 43 15           7612 	jp	nz,00163$
   18F1 18 03              7613 	jr	00243$
   18F3                    7614 00242$:
   18F3 C3 43 15           7615 	jp	00163$
   18F6                    7616 00243$:
                           7617 ;	square.c 1262
                           7618 ;	genCmpGt
                           7619 ;	AOP_HL for _currentSaveSlot
   18F6 3E 00              7620 	ld	a,#0x00
   18F8 21 7D 01           7621 	ld	hl,#_currentSaveSlot
   18FB 96                 7622 	sub	a,(hl)
   18FC D2 22 19           7623 	jp	nc,00159$
                           7624 ;	square.c 1264
                           7625 ;	genMinus
                           7626 ;	AOP_HL for _currentSaveSlot
   18FF 35                 7627 	dec	(hl)
                           7628 ;	square.c 1265
                           7629 ;	genIpush
                           7630 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1900 21 06 0C           7631 	ld	hl,#0x0C06
   1903 E5                 7632 	push	hl
                           7633 ;	genCall
   1904 CD 00 00           7634 	call	_set_sprite_tile
   1907 E8 02              7635 	lda	sp,2(sp)
                           7636 ;	square.c 1266
                           7637 ;	genPlus
                           7638 ;	AOP_HL for _currentSaveSlot
                           7639 ;	Can't optimise plus by inc, falling back to the normal way
   1909 3E 58              7640 	ld	a,#<_savelut
   190B 21 7D 01           7641 	ld	hl,#_currentSaveSlot
   190E 86                 7642 	add	a,(hl)
   190F 4F                 7643 	ld	c,a
   1910 3E 01              7644 	ld	a,#>_savelut
   1912 CE 00              7645 	adc	a,#0x00
   1914 47                 7646 	ld	b,a
                           7647 ;	genPointerGet
   1915 0A                 7648 	ld	a,(bc)
                           7649 ;	genIpush
                           7650 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1916 4F                 7651 	ld	c,a
   1917 F5                 7652 	push	af
   1918 33                 7653 	inc	sp
                           7654 ;	genIpush
   1919 21 06 A0           7655 	ld	hl,#0xA006
   191C E5                 7656 	push	hl
                           7657 ;	genCall
   191D CD 00 00           7658 	call	_move_sprite
   1920 E8 03              7659 	lda	sp,3(sp)
                           7660 ;	genLabel
   1922                    7661 00159$:
                           7662 ;	square.c 1268
                           7663 ;	genIpush
                           7664 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1922 3E 05              7665 	ld	a,#0x05
   1924 F5                 7666 	push	af
   1925 33                 7667 	inc	sp
                           7668 ;	genCall
   1926 CD 00 00           7669 	call	_performantdelay
   1929 E8 01              7670 	lda	sp,1(sp)
                           7671 ;	genGoto
   192B C3 43 15           7672 	jp	00163$
                           7673 ;	genLabel
   192E                    7674 00165$:
                           7675 ;	genEndFunction
   192E E8 03              7676 	lda	sp,3(sp)
   1930 C9                 7677 	ret
   1931                    7678 ___main_end:
                           7679 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 ___decreaseOffStep_end             07DC R
  0 ___decreaseOffStep_start           0745 R
  0 ___decreasePulses_end              0BB8 R
  0 ___decreasePulses_start            0AB3 R
  0 ___decreaseSteps_end               09AE R
  0 ___decreaseSteps_start             08C5 R
  0 ___decreaseSwing_end               0CDD R
  0 ___decreaseSwing_start             0C48 R
  0 ___fillDrumA_end                   02B2 R
  0 ___fillDrumA_start                 00E3 R
  0 ___fillDrumB_end                   0481 R
  0 ___fillDrumB_start                 02B2 R
  0 ___fillDrumC_end                   0650 R
  0 ___fillDrumC_start                 0481 R
  0 ___increaseOffStep_end             0745 R
  0 ___increaseOffStep_start           0689 R
  0 ___increasePulses_end              0AB3 R
  0 ___increasePulses_start            09AE R
  0 ___increaseSteps_end               08C5 R
  0 ___increaseSteps_start             07DC R
  0 ___increaseSwing_end               0C48 R
  0 ___increaseSwing_start             0BB8 R
  0 ___loadPattern_end                 107E R
  0 ___loadPattern_start               0E7E R
  0 ___main_end                        1931 R
  0 ___main_start                      12F3 R
  0 ___makeASound_end                  007D R
  0 ___makeASound_start                0044 R
  0 ___makeBSound_end                  00B0 R
  0 ___makeBSound_start                007D R
  0 ___makeCSound_end                  00E3 R
  0 ___makeCSound_start                00B0 R
  0 ___master_end                      0E63 R
  0 ___master_start                    0E4E R
  0 ___performantdelay_end             0014 R
  0 ___performantdelay_start           0000 R
  0 ___player_end                      0E7A R
  0 ___player_start                    0E63 R
  0 ___rand_end                        0044 R
  0 ___rand_start                      0014 R
  0 ___savePattern_end                 12F3 R
  0 ___savePattern_start               107E R
  0 ___setupDrum_end                   0689 R
  0 ___setupDrum_start                 0650 R
  0 ___sync_end                        0E4E R
  0 ___sync_start                      0E11 R
  0 ___tick_end                        0E11 R
  0 ___tick_start                      0CDD R
  0 ___tim_end                         0E7E R
  0 ___tim_start                       0E7A R
    __initrleblock                     **** GX
    __moduchar_rrx_s                   **** GX
    __muluint_rrx_s                    **** GX
    _add_TIM                           **** GX
  1 _bob                               0182 GR
  1 _bucket                            015C GR
  1 _cDelay                            017B GR
  1 _cOffStep                          017C GR
  1 _clkA                              0171 GR
  1 _clkB                              0174 GR
  1 _clkC                              0177 GR
    _clock                             **** GX
  1 _clockToSync                       016E GR
  1 _currentSaveSlot                   017D GR
  1 _current_rand                      017E R
  1 _dXlut                             0118 GR
  1 _dYlut                             0138 GR
  0 _decreaseOffStep                   0745 GR
  0 _decreasePulses                    0AB3 GR
  0 _decreaseSteps                     08C5 GR
  0 _decreaseSwing                     0C48 GR
    _delay                             **** GX
  1 _delayA                            0169 GR
  1 _delayB                            016A GR
  1 _delayC                            016B GR
    _disable_interrupts                **** GX
  1 _drumA                             0070 GR
  1 _drumB                             0090 GR
  1 _drumC                             00B0 GR
    _enable_interrupts                 **** GX
  1 _f                                 0164 GR
  0 _fillDrumA                         00E3 GR
  0 _fillDrumB                         02B2 GR
  0 _fillDrumC                         0481 GR
  1 _first                             0162 GR
  1 _g                                 016C GR
  1 _i                                 015D GR
  0 _increaseOffStep                   0689 GR
  0 _increasePulses                    09AE GR
  0 _increaseSteps                     07DC GR
  0 _increaseSwing                     0BB8 GR
  1 _joy                               0187 GR
    _joypad                            **** GX
  1 _last                              0163 GR
  0 _loadPattern                       0E7E GR
  0 _main                              12F3 GR
  0 _makeASound                        0044 GR
  0 _makeBSound                        007D GR
  0 _makeCSound                        00B0 GR
  0 _master                            0E4E GR
  1 _midiC                             0030 GR
  1 _modus                             0185 GR
    _move_sprite                       **** GX
  1 _numberOfPulsesA                   016F GR
  1 _numberOfPulsesB                   0172 GR
  1 _numberOfPulsesC                   0175 GR
  1 _offStepA                          0178 GR
  1 _offStepB                          0179 GR
  1 _offStepC                          017A GR
  1 _offsetC                           0040 GR
  1 _pad                               0188 GR
  1 _padext                            0186 GR
  1 _patternA                          00D0 GR
  1 _patternB                          00E2 GR
  1 _patternC                          00F4 GR
  1 _patternD                          0106 GR
  0 _performantdelay                   0000 GR
  0 _player                            0E63 GR
  1 _pop                               0184 GR
  0 _rand                              0014 GR
  1 _randA                             015F GR
  1 _randB                             0160 GR
  1 _randC                             0161 GR
  1 _samp_freq                         017F GR
  1 _saveC                             0060 GR
  0 _savePattern                       107E GR
  1 _savelut                           0158 GR
  1 _seldrum                           0189 GR
    _set_interrupts                    **** GX
    _set_sprite_data                   **** GX
    _set_sprite_tile                   **** GX
  0 _setupDrum                         0650 GR
  1 _squareA                           0000 GR
  1 _squareB                           0010 GR
  1 _squareC                           0020 GR
  1 _swingC                            0050 GR
  0 _sync                              0E11 GR
  1 _syncToDrum                        016D GR
  1 _tempo                             0180 GR
  0 _tick                              0CDD GR
  0 _tim                               0E7A GR
  1 _todd                              0183 GR
  1 _totalStepsA                       0170 GR
  1 _totalStepsB                       0173 GR
  1 _totalStepsC                       0176 GR
    _wait_vbl_done                     **** GX
    _waitpadup                         **** GX
  1 _watch                             0181 GR
  1 _x                                 0165 GR
  1 _xA                                0166 GR
  1 _xB                                0167 GR
  1 _xC                                0168 GR
  1 _y                                 015E GR

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size 1931   flags 0
   1 _DATA                              size  18A   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size  158   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
