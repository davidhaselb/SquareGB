                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Mon Mar 30 22:50:13 2020
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc705670
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _savePattern
                             13 	.globl _loadD
                             14 	.globl _loadC
                             15 	.globl _loadB
                             16 	.globl _loadA
                             17 	.globl _tim
                             18 	.globl _player
                             19 	.globl _master
                             20 	.globl _sync
                             21 	.globl _tick
                             22 	.globl _decreaseSwing
                             23 	.globl _increaseSwing
                             24 	.globl _decreasePulses
                             25 	.globl _increasePulses
                             26 	.globl _decreaseSteps
                             27 	.globl _increaseSteps
                             28 	.globl _decreaseOffStep
                             29 	.globl _increaseOffStep
                             30 	.globl _setupDrum
                             31 	.globl _fillDrumC
                             32 	.globl _fillDrumB
                             33 	.globl _fillDrumA
                             34 	.globl _makeCSound
                             35 	.globl _makeBSound
                             36 	.globl _makeASound
                             37 	.globl _rand
                             38 	.globl _performantdelay
                             39 	.globl _seldrum
                             40 	.globl _pad
                             41 	.globl _joy
                             42 	.globl _padext
                             43 	.globl _modus
                             44 	.globl _pop
                             45 	.globl _todd
                             46 	.globl _bob
                             47 	.globl _watch
                             48 	.globl _tempo
                             49 	.globl _samp_freq
                             50 	.globl _storeDDC
                             51 	.globl _storeDDB
                             52 	.globl _storeDDA
                             53 	.globl _storeDOC
                             54 	.globl _storeDOB
                             55 	.globl _storeDOA
                             56 	.globl _storeDSC
                             57 	.globl _storeDPC
                             58 	.globl _storeDSB
                             59 	.globl _storeDPB
                             60 	.globl _storeDSA
                             61 	.globl _storeDPA
                             62 	.globl _storeCDC
                             63 	.globl _storeCDB
                             64 	.globl _storeCDA
                             65 	.globl _storeCOC
                             66 	.globl _storeCOB
                             67 	.globl _storeCOA
                             68 	.globl _storeCSC
                             69 	.globl _storeCPC
                             70 	.globl _storeCSB
                             71 	.globl _storeCPB
                             72 	.globl _storeCSA
                             73 	.globl _storeCPA
                             74 	.globl _storeBDC
                             75 	.globl _storeBDB
                             76 	.globl _storeBDA
                             77 	.globl _storeBOC
                             78 	.globl _storeBOB
                             79 	.globl _storeBOA
                             80 	.globl _storeBSC
                             81 	.globl _storeBPC
                             82 	.globl _storeBSB
                             83 	.globl _storeBPB
                             84 	.globl _storeBSA
                             85 	.globl _storeBPA
                             86 	.globl _storeADC
                             87 	.globl _storeADB
                             88 	.globl _storeADA
                             89 	.globl _storeAOC
                             90 	.globl _storeAOB
                             91 	.globl _storeAOA
                             92 	.globl _storeASC
                             93 	.globl _storeAPC
                             94 	.globl _storeASB
                             95 	.globl _storeAPB
                             96 	.globl _storeASA
                             97 	.globl _storeAPA
                             98 	.globl _currentSaveSlot
                             99 	.globl _cOffStep
                            100 	.globl _cDelay
                            101 	.globl _offStepC
                            102 	.globl _offStepB
                            103 	.globl _offStepA
                            104 	.globl _clkC
                            105 	.globl _totalStepsC
                            106 	.globl _numberOfPulsesC
                            107 	.globl _clkB
                            108 	.globl _totalStepsB
                            109 	.globl _numberOfPulsesB
                            110 	.globl _clkA
                            111 	.globl _totalStepsA
                            112 	.globl _numberOfPulsesA
                            113 	.globl _clockToSync
                            114 	.globl _syncToDrum
                            115 	.globl _g
                            116 	.globl _delayC
                            117 	.globl _delayB
                            118 	.globl _delayA
                            119 	.globl _xC
                            120 	.globl _xB
                            121 	.globl _xA
                            122 	.globl _x
                            123 	.globl _f
                            124 	.globl _last
                            125 	.globl _first
                            126 	.globl _randC
                            127 	.globl _randB
                            128 	.globl _randA
                            129 	.globl _y
                            130 	.globl _i
                            131 	.globl _bucket
                            132 	.globl _savelut
                            133 	.globl _dYlut
                            134 	.globl _dXlut
                            135 	.globl _drumC
                            136 	.globl _drumB
                            137 	.globl _drumA
                            138 	.globl _saveC
                            139 	.globl _swingC
                            140 	.globl _offsetC
                            141 	.globl _midiC
                            142 	.globl _squareC
                            143 	.globl _squareB
                            144 	.globl _squareA
                            145 ;--------------------------------------------------------
                            146 ; special function registers
                            147 ;--------------------------------------------------------
                            148 ;--------------------------------------------------------
                            149 ; special function bits 
                            150 ;--------------------------------------------------------
                            151 ;--------------------------------------------------------
                            152 ; internal ram data
                            153 ;--------------------------------------------------------
                            154 	.area _DATA
   0000                     155 _squareA::
   0000                     156 	.ds 16
   0010                     157 _squareB::
   0010                     158 	.ds 16
   0020                     159 _squareC::
   0020                     160 	.ds 16
   0030                     161 _midiC::
   0030                     162 	.ds 16
   0040                     163 _offsetC::
   0040                     164 	.ds 16
   0050                     165 _swingC::
   0050                     166 	.ds 16
   0060                     167 _saveC::
   0060                     168 	.ds 16
   0070                     169 _drumA::
   0070                     170 	.ds 32
   0090                     171 _drumB::
   0090                     172 	.ds 32
   00B0                     173 _drumC::
   00B0                     174 	.ds 32
   00D0                     175 _dXlut::
   00D0                     176 	.ds 32
   00F0                     177 _dYlut::
   00F0                     178 	.ds 32
   0110                     179 _savelut::
   0110                     180 	.ds 4
   0114                     181 _bucket::
   0114                     182 	.ds 1
   0115                     183 _i::
   0115                     184 	.ds 1
   0116                     185 _y::
   0116                     186 	.ds 1
   0117                     187 _randA::
   0117                     188 	.ds 1
   0118                     189 _randB::
   0118                     190 	.ds 1
   0119                     191 _randC::
   0119                     192 	.ds 1
   011A                     193 _first::
   011A                     194 	.ds 1
   011B                     195 _last::
   011B                     196 	.ds 1
   011C                     197 _f::
   011C                     198 	.ds 1
   011D                     199 _x::
   011D                     200 	.ds 1
   011E                     201 _xA::
   011E                     202 	.ds 1
   011F                     203 _xB::
   011F                     204 	.ds 1
   0120                     205 _xC::
   0120                     206 	.ds 1
   0121                     207 _delayA::
   0121                     208 	.ds 1
   0122                     209 _delayB::
   0122                     210 	.ds 1
   0123                     211 _delayC::
   0123                     212 	.ds 1
   0124                     213 _g::
   0124                     214 	.ds 1
   0125                     215 _syncToDrum::
   0125                     216 	.ds 1
   0126                     217 _clockToSync::
   0126                     218 	.ds 1
   0127                     219 _numberOfPulsesA::
   0127                     220 	.ds 1
   0128                     221 _totalStepsA::
   0128                     222 	.ds 1
   0129                     223 _clkA::
   0129                     224 	.ds 1
   012A                     225 _numberOfPulsesB::
   012A                     226 	.ds 1
   012B                     227 _totalStepsB::
   012B                     228 	.ds 1
   012C                     229 _clkB::
   012C                     230 	.ds 1
   012D                     231 _numberOfPulsesC::
   012D                     232 	.ds 1
   012E                     233 _totalStepsC::
   012E                     234 	.ds 1
   012F                     235 _clkC::
   012F                     236 	.ds 1
   0130                     237 _offStepA::
   0130                     238 	.ds 1
   0131                     239 _offStepB::
   0131                     240 	.ds 1
   0132                     241 _offStepC::
   0132                     242 	.ds 1
   0133                     243 _cDelay::
   0133                     244 	.ds 1
   0134                     245 _cOffStep::
   0134                     246 	.ds 1
   0135                     247 _currentSaveSlot::
   0135                     248 	.ds 1
   0136                     249 _storeAPA::
   0136                     250 	.ds 1
   0137                     251 _storeASA::
   0137                     252 	.ds 1
   0138                     253 _storeAPB::
   0138                     254 	.ds 1
   0139                     255 _storeASB::
   0139                     256 	.ds 1
   013A                     257 _storeAPC::
   013A                     258 	.ds 1
   013B                     259 _storeASC::
   013B                     260 	.ds 1
   013C                     261 _storeAOA::
   013C                     262 	.ds 1
   013D                     263 _storeAOB::
   013D                     264 	.ds 1
   013E                     265 _storeAOC::
   013E                     266 	.ds 1
   013F                     267 _storeADA::
   013F                     268 	.ds 1
   0140                     269 _storeADB::
   0140                     270 	.ds 1
   0141                     271 _storeADC::
   0141                     272 	.ds 1
   0142                     273 _storeBPA::
   0142                     274 	.ds 1
   0143                     275 _storeBSA::
   0143                     276 	.ds 1
   0144                     277 _storeBPB::
   0144                     278 	.ds 1
   0145                     279 _storeBSB::
   0145                     280 	.ds 1
   0146                     281 _storeBPC::
   0146                     282 	.ds 1
   0147                     283 _storeBSC::
   0147                     284 	.ds 1
   0148                     285 _storeBOA::
   0148                     286 	.ds 1
   0149                     287 _storeBOB::
   0149                     288 	.ds 1
   014A                     289 _storeBOC::
   014A                     290 	.ds 1
   014B                     291 _storeBDA::
   014B                     292 	.ds 1
   014C                     293 _storeBDB::
   014C                     294 	.ds 1
   014D                     295 _storeBDC::
   014D                     296 	.ds 1
   014E                     297 _storeCPA::
   014E                     298 	.ds 1
   014F                     299 _storeCSA::
   014F                     300 	.ds 1
   0150                     301 _storeCPB::
   0150                     302 	.ds 1
   0151                     303 _storeCSB::
   0151                     304 	.ds 1
   0152                     305 _storeCPC::
   0152                     306 	.ds 1
   0153                     307 _storeCSC::
   0153                     308 	.ds 1
   0154                     309 _storeCOA::
   0154                     310 	.ds 1
   0155                     311 _storeCOB::
   0155                     312 	.ds 1
   0156                     313 _storeCOC::
   0156                     314 	.ds 1
   0157                     315 _storeCDA::
   0157                     316 	.ds 1
   0158                     317 _storeCDB::
   0158                     318 	.ds 1
   0159                     319 _storeCDC::
   0159                     320 	.ds 1
   015A                     321 _storeDPA::
   015A                     322 	.ds 1
   015B                     323 _storeDSA::
   015B                     324 	.ds 1
   015C                     325 _storeDPB::
   015C                     326 	.ds 1
   015D                     327 _storeDSB::
   015D                     328 	.ds 1
   015E                     329 _storeDPC::
   015E                     330 	.ds 1
   015F                     331 _storeDSC::
   015F                     332 	.ds 1
   0160                     333 _storeDOA::
   0160                     334 	.ds 1
   0161                     335 _storeDOB::
   0161                     336 	.ds 1
   0162                     337 _storeDOC::
   0162                     338 	.ds 1
   0163                     339 _storeDDA::
   0163                     340 	.ds 1
   0164                     341 _storeDDB::
   0164                     342 	.ds 1
   0165                     343 _storeDDC::
   0165                     344 	.ds 1
   0166                     345 _current_rand:
   0166                     346 	.ds 1
   0167                     347 _samp_freq::
   0167                     348 	.ds 1
   0168                     349 _tempo::
   0168                     350 	.ds 1
   0169                     351 _watch::
   0169                     352 	.ds 1
   016A                     353 _bob::
   016A                     354 	.ds 1
   016B                     355 _todd::
   016B                     356 	.ds 1
   016C                     357 _pop::
   016C                     358 	.ds 1
   016D                     359 _modus::
   016D                     360 	.ds 1
   016E                     361 _padext::
   016E                     362 	.ds 1
   016F                     363 _joy::
   016F                     364 	.ds 1
   0170                     365 _pad::
   0170                     366 	.ds 1
   0171                     367 _seldrum::
   0171                     368 	.ds 1
                            369 ;--------------------------------------------------------
                            370 ; overlayable items in internal ram 
                            371 ;--------------------------------------------------------
                            372 	.area _OVERLAY
                            373 ;--------------------------------------------------------
                            374 ; indirectly addressable internal ram data
                            375 ;--------------------------------------------------------
                            376 	.area _ISEG
                            377 ;--------------------------------------------------------
                            378 ; bit data
                            379 ;--------------------------------------------------------
                            380 	.area _BSEG
                            381 ;--------------------------------------------------------
                            382 ; external ram data
                            383 ;--------------------------------------------------------
                            384 	.area _XSEG
                            385 ;--------------------------------------------------------
                            386 ; global & static initialisations
                            387 ;--------------------------------------------------------
                            388 	.area _GSINIT
                            389 	.area _GSFINAL
                            390 	.area _GSINIT
                            391 ;	square.c 61
                            392 ;	square.c 1349
                            393 ;	genArrayInit
                            394 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 00 00            395 	ld	hl,#_squareA
   0003 CD 00 00            396 	call	__initrleblock
   0006 02                  397 	.db	2
   0007 FF FF               398 	.db	0xFF, 0xFF
   0009 F4 81               399 	.db	-12,0x81
   000B 02                  400 	.db	2
   000C FF FF               401 	.db	0xFF, 0xFF
   000E 00                  402 	.db	0
                            403 ;	square.c 66
                            404 ;	square.c 1349
                            405 ;	genArrayInit
                            406 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   000F 21 10 00            407 	ld	hl,#_squareB
   0012 CD 00 00            408 	call	__initrleblock
   0015 04                  409 	.db	4
   0016 00 00 7E 7E         410 	.db	0x00, 0x00, 0x7E, 0x7E
   001A F8 42               411 	.db	-8,0x42
   001C 04                  412 	.db	4
   001D 7E 7E 00 00         413 	.db	0x7E, 0x7E, 0x00, 0x00
   0021 00                  414 	.db	0
                            415 ;	square.c 72
                            416 ;	square.c 1349
                            417 ;	genArrayInit
                            418 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0022 21 20 00            419 	ld	hl,#_squareC
   0025 CD 00 00            420 	call	__initrleblock
   0028 04                  421 	.db	4
   0029 00 00 00 00         422 	.db	0x00, 0x00, 0x00, 0x00
   002D F8 3C               423 	.db	-8,0x3C
   002F 04                  424 	.db	4
   0030 00 00 00 00         425 	.db	0x00, 0x00, 0x00, 0x00
   0034 00                  426 	.db	0
                            427 ;	square.c 77
                            428 ;	square.c 1349
                            429 ;	genArrayInit
                            430 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0035 21 30 00            431 	ld	hl,#_midiC
   0038 CD 00 00            432 	call	__initrleblock
   003B 0A                  433 	.db	10
   003C C3 C3 E7 E7 FF FF   434 	.db	0xC3, 0xC3, 0xE7, 0xE7, 0xFF, 0xFF, 0xFF, 0xFF
        FF FF
   0044 DB DB               435 	.db	0xDB, 0xDB
   0046 FA C3               436 	.db	-6,0xC3
   0048 00                  437 	.db	0
                            438 ;	square.c 82
                            439 ;	square.c 1349
                            440 ;	genArrayInit
                            441 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0049 21 40 00            442 	ld	hl,#_offsetC
   004C CD 00 00            443 	call	__initrleblock
   004F 10                  444 	.db	16
   0050 3C 3C 7E 7E E7 E7   445 	.db	0x3C, 0x3C, 0x7E, 0x7E, 0xE7, 0xE7, 0xC3, 0xC3
        C3 C3
   0058 C3 C3 E7 E7 7E 7E   446 	.db	0xC3, 0xC3, 0xE7, 0xE7, 0x7E, 0x7E, 0x3C, 0x3C
        3C 3C
   0060 00                  447 	.db	0
                            448 ;	square.c 88
                            449 ;	square.c 1349
                            450 ;	genArrayInit
                            451 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0061 21 50 00            452 	ld	hl,#_swingC
   0064 CD 00 00            453 	call	__initrleblock
   0067 10                  454 	.db	16
   0068 00 00 00 00 18 18   455 	.db	0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x3C, 0x3C
        3C 3C
   0070 3C 3C 18 18 00 00   456 	.db	0x3C, 0x3C, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00
        00 00
   0078 00                  457 	.db	0
                            458 ;	square.c 93
                            459 ;	square.c 1349
                            460 ;	genArrayInit
                            461 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0079 21 60 00            462 	ld	hl,#_saveC
   007C CD 00 00            463 	call	__initrleblock
   007F 10                  464 	.db	16
   0080 10 10 18 18 1C 1C   465 	.db	0x10, 0x10, 0x18, 0x18, 0x1C, 0x1C, 0x1E, 0x1E
        1E 1E
   0088 1E 1E 1C 1C 18 18   466 	.db	0x1E, 0x1E, 0x1C, 0x1C, 0x18, 0x18, 0x10, 0x10
        10 10
   0090 00                  467 	.db	0
                            468 ;	square.c 99
                            469 ;	square.c 1349
                            470 ;	genArrayInit
                            471 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0091 21 70 00            472 	ld	hl,#_drumA
   0094 CD 00 00            473 	call	__initrleblock
   0097 E0 00               474 	.db	-32,0x00
   0099 00                  475 	.db	0
                            476 ;	square.c 100
                            477 ;	square.c 1349
                            478 ;	genArrayInit
                            479 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   009A 21 90 00            480 	ld	hl,#_drumB
   009D CD 00 00            481 	call	__initrleblock
   00A0 E0 00               482 	.db	-32,0x00
   00A2 00                  483 	.db	0
                            484 ;	square.c 101
                            485 ;	square.c 1349
                            486 ;	genArrayInit
                            487 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00A3 21 B0 00            488 	ld	hl,#_drumC
   00A6 CD 00 00            489 	call	__initrleblock
   00A9 E0 00               490 	.db	-32,0x00
   00AB 00                  491 	.db	0
                            492 ;	square.c 103
                            493 ;	square.c 1349
                            494 ;	genArrayInit
                            495 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00AC 21 D0 00            496 	ld	hl,#_dXlut
   00AF CD 00 00            497 	call	__initrleblock
   00B2 20                  498 	.db	32
   00B3 90 8C 88 84 80 7C   499 	.db	0x90, 0x8C, 0x88, 0x84, 0x80, 0x7C, 0x78, 0x74
        78 74
   00BB 70 6C 68 64 60 5C   500 	.db	0x70, 0x6C, 0x68, 0x64, 0x60, 0x5C, 0x58, 0x54
        58 54
   00C3 50 4C 48 44 40 3C   501 	.db	0x50, 0x4C, 0x48, 0x44, 0x40, 0x3C, 0x38, 0x34
        38 34
   00CB 30 2C 28 24 20 1C   502 	.db	0x30, 0x2C, 0x28, 0x24, 0x20, 0x1C, 0x18, 0x14
        18 14
   00D3 00                  503 	.db	0
                            504 ;	square.c 104
                            505 ;	square.c 1349
                            506 ;	genArrayInit
                            507 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00D4 21 F0 00            508 	ld	hl,#_dYlut
   00D7 CD 00 00            509 	call	__initrleblock
   00DA 20                  510 	.db	32
   00DB 10 14 18 1C 20 24   511 	.db	0x10, 0x14, 0x18, 0x1C, 0x20, 0x24, 0x28, 0x2C
        28 2C
   00E3 30 34 38 3C 40 44   512 	.db	0x30, 0x34, 0x38, 0x3C, 0x40, 0x44, 0x48, 0x4C
        48 4C
   00EB 50 54 58 5C 60 64   513 	.db	0x50, 0x54, 0x58, 0x5C, 0x60, 0x64, 0x68, 0x6C
        68 6C
   00F3 70 74 78 7C 80 84   514 	.db	0x70, 0x74, 0x78, 0x7C, 0x80, 0x84, 0x88, 0x8C
        88 8C
   00FB 00                  515 	.db	0
                            516 ;	square.c 105
                            517 ;	square.c 1349
                            518 ;	genArrayInit
                            519 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00FC 21 10 01            520 	ld	hl,#_savelut
   00FF CD 00 00            521 	call	__initrleblock
   0102 04                  522 	.db	4
   0103 90 80 70 60         523 	.db	0x90, 0x80, 0x70, 0x60
   0107 00                  524 	.db	0
                            525 ;--------------------------------------------------------
                            526 ; Home
                            527 ;--------------------------------------------------------
                            528 	.area _HOME
                            529 	.area _CODE
                            530 ;--------------------------------------------------------
                            531 ; code
                            532 ;--------------------------------------------------------
                            533 	.area _CODE
                            534 ;	square.c 115
                            535 ;	genLabel
                            536 ;	genFunction
                            537 ;	---------------------------------
                            538 ; Function performantdelay
                            539 ; ---------------------------------
   0000                     540 ___performantdelay_start:
   0000                     541 _performantdelay:
                            542 	
                            543 ;	square.c 117
                            544 ;	genAssign
   0000 0E 00               545 	ld	c,#0x00
                            546 ;	genLabel
   0002                     547 00101$:
                            548 ;	genCmpLt
                            549 ;	AOP_STK for 
   0002 79                  550 	ld	a,c
   0003 F8 02               551 	lda	hl,2(sp)
   0005 96                  552 	sub	a,(hl)
   0006 D2 13 00            553 	jp	nc,00105$
                            554 ;	square.c 118
                            555 ;	genCall
                            556 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0009 C5                  557 	push	bc
   000A CD 00 00            558 	call	_wait_vbl_done
   000D E1                  559 	pop	hl
   000E 4D                  560 	ld	c,l
                            561 ;	square.c 117
                            562 ;	genPlus
                            563 ;	genPlusIncr
                            564 ; Removed redundent load
   000F 0C                  565 	inc	c
                            566 ;	genGoto
   0010 C3 02 00            567 	jp	00101$
                            568 ;	genLabel
   0013                     569 00105$:
                            570 ;	genEndFunction
                            571 	
   0013 C9                  572 	ret
   0014                     573 ___performantdelay_end:
                            574 ;	square.c 122
                            575 ;	genLabel
                            576 ;	genFunction
                            577 ;	---------------------------------
                            578 ; Function rand
                            579 ; ---------------------------------
   0014                     580 ___rand_start:
   0014                     581 _rand:
   0014 E8 FE               582 	lda	sp,-2(sp)
                            583 ;	square.c 125
                            584 ;	genCall
                            585 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0016 CD 00 00            586 	call	_clock
   0019 42                  587 	ld	b,d
   001A 4B                  588 	ld	c,e
                            589 ;	genCast
                            590 ;	AOP_HL for _current_rand
                            591 ;	AOP_STK for _rand_sloc0_1_0
   001B 21 66 01            592 	ld	hl,#_current_rand
   001E 7E                  593 	ld	a,(hl)
   001F F8 00               594 	lda	hl,0(sp)
   0021 22                  595 	ld	(hl+),a
   0022 36 00               596 	ld	(hl),#0x00
                            597 ;	genIpush
                            598 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0024 C5                  599 	push	bc
                            600 ;	genIpush
                            601 ;	AOP_STK for _rand_sloc0_1_0
   0025 2B                  602 	dec	hl
   0026 2A                  603 	ld	a,(hl+)
   0027 66                  604 	ld	h,(hl)
   0028 6F                  605 	ld	l,a
   0029 E5                  606 	push	hl
                            607 ;	genCall
   002A CD 00 00            608 	call	__muluint_rrx_s
   002D 42                  609 	ld	b,d
   002E 4B                  610 	ld	c,e
   002F E8 04               611 	lda	sp,4(sp)
                            612 ;	genPlus
                            613 ;	genPlusIncr
                            614 ;	Can't optimise plus by inc, falling back to the normal way
   0031 79                  615 	ld	a,c
   0032 C6 7B               616 	add	a,#0x7B
   0034 4F                  617 	ld	c,a
   0035 78                  618 	ld	a,b
   0036 CE 00               619 	adc	a,#0x00
                            620 ;	genAnd
   0038 47                  621 	ld	b,a
   0039 E6 07               622 	and	a,#0x07
   003B 47                  623 	ld	b,a
                            624 ;	genCast
                            625 ;	AOP_HL for _current_rand
   003C 21 66 01            626 	ld	hl,#_current_rand
   003F 71                  627 	ld	(hl),c
                            628 ;	square.c 126
                            629 ;	genRet
                            630 ;	AOP_HL for _current_rand
   0040 5E                  631 	ld	e,(hl)
                            632 ;	genLabel
   0041                     633 00101$:
                            634 ;	genEndFunction
   0041 E8 02               635 	lda	sp,2(sp)
   0043 C9                  636 	ret
   0044                     637 ___rand_end:
                            638 ;	square.c 129
                            639 ;	genLabel
                            640 ;	genFunction
                            641 ;	---------------------------------
                            642 ; Function makeASound
                            643 ; ---------------------------------
   0044                     644 ___makeASound_start:
   0044                     645 _makeASound:
   0044 E8 FD               646 	lda	sp,-3(sp)
                            647 ;	square.c 131
                            648 ;	genAssign
   0046 01 10 FF            649 	ld	bc,#0xFF10
                            650 ;	genAssign (pointer)
   0049 3E 29               651 	ld	a,#0x29
   004B 02                  652 	ld	(bc),a
                            653 ;	square.c 132
                            654 ;	genAssign
   004C 01 11 FF            655 	ld	bc,#0xFF11
                            656 ;	genAssign (pointer)
   004F 3E 4F               657 	ld	a,#0x4F
   0051 02                  658 	ld	(bc),a
                            659 ;	square.c 133
                            660 ;	genAssign
   0052 01 12 FF            661 	ld	bc,#0xFF12
                            662 ;	genAssign (pointer)
   0055 3E F1               663 	ld	a,#0xF1
   0057 02                  664 	ld	(bc),a
                            665 ;	square.c 134
                            666 ;	genAssign
   0058 01 13 FF            667 	ld	bc,#0xFF13
                            668 ;	genAssign (pointer)
   005B 3E 6F               669 	ld	a,#0x6F
   005D 02                  670 	ld	(bc),a
                            671 ;	square.c 135
                            672 ;	genAssign
   005E 01 14 FF            673 	ld	bc,#0xFF14
                            674 ;	genAssign (pointer)
   0061 3E C4               675 	ld	a,#0xC4
   0063 02                  676 	ld	(bc),a
                            677 ;	square.c 136
                            678 ;	genAssign
   0064 01 25 FF            679 	ld	bc,#0xFF25
                            680 ;	genAssign
                            681 ;	AOP_STK for _makeASound_sloc0_1_0
   0067 F8 01               682 	lda	hl,1(sp)
   0069 36 25               683 	ld	(hl),#0x25
   006B 23                  684 	inc	hl
   006C 36 FF               685 	ld	(hl),#0xFF
                            686 ;	genPointerGet
                            687 ;	AOP_STK for _makeASound_sloc0_1_0
                            688 ;	AOP_STK for _makeASound_sloc1_1_0
   006E 2B                  689 	dec	hl
   006F 5E                  690 	ld	e,(hl)
   0070 23                  691 	inc	hl
   0071 56                  692 	ld	d,(hl)
   0072 1A                  693 	ld	a,(de)
   0073 2B                  694 	dec	hl
   0074 2B                  695 	dec	hl
                            696 ;	genOr
                            697 ;	AOP_STK for _makeASound_sloc1_1_0
   0075 77                  698 	ld      (hl),a
   0076 7F                  699 	ld      a,a
   0077 F6 FF               700 	or	a,#0xFF
                            701 ;	genAssign (pointer)
   0079 02                  702 	ld	(bc),a
                            703 ;	genLabel
   007A                     704 00101$:
                            705 ;	genEndFunction
   007A E8 03               706 	lda	sp,3(sp)
   007C C9                  707 	ret
   007D                     708 ___makeASound_end:
                            709 ;	square.c 139
                            710 ;	genLabel
                            711 ;	genFunction
                            712 ;	---------------------------------
                            713 ; Function makeBSound
                            714 ; ---------------------------------
   007D                     715 ___makeBSound_start:
   007D                     716 _makeBSound:
   007D E8 FD               717 	lda	sp,-3(sp)
                            718 ;	square.c 141
                            719 ;	genAssign
   007F 01 16 FF            720 	ld	bc,#0xFF16
                            721 ;	genAssign (pointer)
   0082 3E 4A               722 	ld	a,#0x4A
   0084 02                  723 	ld	(bc),a
                            724 ;	square.c 142
                            725 ;	genAssign
   0085 01 17 FF            726 	ld	bc,#0xFF17
                            727 ;	genAssign (pointer)
   0088 3E 15               728 	ld	a,#0x15
   008A 02                  729 	ld	(bc),a
                            730 ;	square.c 143
                            731 ;	genAssign
   008B 01 18 FF            732 	ld	bc,#0xFF18
                            733 ;	genAssign (pointer)
   008E 3E 27               734 	ld	a,#0x27
   0090 02                  735 	ld	(bc),a
                            736 ;	square.c 144
                            737 ;	genAssign
   0091 01 19 FF            738 	ld	bc,#0xFF19
                            739 ;	genAssign (pointer)
   0094 3E C7               740 	ld	a,#0xC7
   0096 02                  741 	ld	(bc),a
                            742 ;	square.c 145
                            743 ;	genAssign
   0097 01 25 FF            744 	ld	bc,#0xFF25
                            745 ;	genAssign
                            746 ;	AOP_STK for _makeBSound_sloc0_1_0
   009A F8 01               747 	lda	hl,1(sp)
   009C 36 25               748 	ld	(hl),#0x25
   009E 23                  749 	inc	hl
   009F 36 FF               750 	ld	(hl),#0xFF
                            751 ;	genPointerGet
                            752 ;	AOP_STK for _makeBSound_sloc0_1_0
                            753 ;	AOP_STK for _makeBSound_sloc1_1_0
   00A1 2B                  754 	dec	hl
   00A2 5E                  755 	ld	e,(hl)
   00A3 23                  756 	inc	hl
   00A4 56                  757 	ld	d,(hl)
   00A5 1A                  758 	ld	a,(de)
   00A6 2B                  759 	dec	hl
   00A7 2B                  760 	dec	hl
                            761 ;	genOr
                            762 ;	AOP_STK for _makeBSound_sloc1_1_0
   00A8 77                  763 	ld      (hl),a
   00A9 7F                  764 	ld      a,a
   00AA F6 FF               765 	or	a,#0xFF
                            766 ;	genAssign (pointer)
   00AC 02                  767 	ld	(bc),a
                            768 ;	genLabel
   00AD                     769 00101$:
                            770 ;	genEndFunction
   00AD E8 03               771 	lda	sp,3(sp)
   00AF C9                  772 	ret
   00B0                     773 ___makeBSound_end:
                            774 ;	square.c 148
                            775 ;	genLabel
                            776 ;	genFunction
                            777 ;	---------------------------------
                            778 ; Function makeCSound
                            779 ; ---------------------------------
   00B0                     780 ___makeCSound_start:
   00B0                     781 _makeCSound:
   00B0 E8 FD               782 	lda	sp,-3(sp)
                            783 ;	square.c 150
                            784 ;	genAssign
   00B2 01 20 FF            785 	ld	bc,#0xFF20
                            786 ;	genAssign (pointer)
   00B5 3E 10               787 	ld	a,#0x10
   00B7 02                  788 	ld	(bc),a
                            789 ;	square.c 151
                            790 ;	genAssign
   00B8 01 21 FF            791 	ld	bc,#0xFF21
                            792 ;	genAssign (pointer)
   00BB 3E 24               793 	ld	a,#0x24
   00BD 02                  794 	ld	(bc),a
                            795 ;	square.c 152
                            796 ;	genAssign
   00BE 01 22 FF            797 	ld	bc,#0xFF22
                            798 ;	genAssign (pointer)
   00C1 3E 31               799 	ld	a,#0x31
   00C3 02                  800 	ld	(bc),a
                            801 ;	square.c 153
                            802 ;	genAssign
   00C4 01 23 FF            803 	ld	bc,#0xFF23
                            804 ;	genAssign (pointer)
   00C7 3E C0               805 	ld	a,#0xC0
   00C9 02                  806 	ld	(bc),a
                            807 ;	square.c 154
                            808 ;	genAssign
   00CA 01 25 FF            809 	ld	bc,#0xFF25
                            810 ;	genAssign
                            811 ;	AOP_STK for _makeCSound_sloc0_1_0
   00CD F8 01               812 	lda	hl,1(sp)
   00CF 36 25               813 	ld	(hl),#0x25
   00D1 23                  814 	inc	hl
   00D2 36 FF               815 	ld	(hl),#0xFF
                            816 ;	genPointerGet
                            817 ;	AOP_STK for _makeCSound_sloc0_1_0
                            818 ;	AOP_STK for _makeCSound_sloc1_1_0
   00D4 2B                  819 	dec	hl
   00D5 5E                  820 	ld	e,(hl)
   00D6 23                  821 	inc	hl
   00D7 56                  822 	ld	d,(hl)
   00D8 1A                  823 	ld	a,(de)
   00D9 2B                  824 	dec	hl
   00DA 2B                  825 	dec	hl
                            826 ;	genOr
                            827 ;	AOP_STK for _makeCSound_sloc1_1_0
   00DB 77                  828 	ld      (hl),a
   00DC 7F                  829 	ld      a,a
   00DD F6 FF               830 	or	a,#0xFF
                            831 ;	genAssign (pointer)
   00DF 02                  832 	ld	(bc),a
                            833 ;	genLabel
   00E0                     834 00101$:
                            835 ;	genEndFunction
   00E0 E8 03               836 	lda	sp,3(sp)
   00E2 C9                  837 	ret
   00E3                     838 ___makeCSound_end:
                            839 ;	square.c 159
                            840 ;	genLabel
                            841 ;	genFunction
                            842 ;	---------------------------------
                            843 ; Function fillDrumA
                            844 ; ---------------------------------
   00E3                     845 ___fillDrumA_start:
   00E3                     846 _fillDrumA:
   00E3 E8 FA               847 	lda	sp,-6(sp)
                            848 ;	square.c 160
                            849 ;	genAssign
                            850 ;	AOP_HL for _bucket
   00E5 21 14 01            851 	ld	hl,#_bucket
   00E8 36 00               852 	ld	(hl),#0x00
                            853 ;	square.c 161
                            854 ;	genAssign
                            855 ;	AOP_HL for _i
   00EA 21 15 01            856 	ld	hl,#_i
   00ED 36 00               857 	ld	(hl),#0x00
                            858 ;	genLabel
   00EF                     859 00118$:
                            860 ;	genCmpLt
                            861 ;	AOP_HL for _i
                            862 ;	AOP_HL for _totalStepsA
   00EF 21 15 01            863 	ld	hl,#_i
   00F2 7E                  864 	ld	a,(hl)
   00F3 21 28 01            865 	ld	hl,#_totalStepsA
   00F6 96                  866 	sub	a,(hl)
   00F7 D2 50 01            867 	jp	nc,00121$
                            868 ;	square.c 163
                            869 ;	genPlus
                            870 ;	AOP_HL for _bucket
                            871 ;	AOP_HL for _numberOfPulsesA
                            872 ;	Can't optimise plus by inc, falling back to the normal way
   00FA 21 14 01            873 	ld	hl,#_bucket
   00FD 7E                  874 	ld	a,(hl)
   00FE 21 27 01            875 	ld	hl,#_numberOfPulsesA
   0101 86                  876 	add	a,(hl)
   0102 21 14 01            877 	ld	hl,#_bucket
   0105 77                  878 	ld	(hl),a
                            879 ;	square.c 164
                            880 ;	genMinus
                            881 ;	AOP_HL for _totalStepsA
   0106 21 28 01            882 	ld	hl,#_totalStepsA
   0109 7E                  883 	ld	a,(hl)
   010A C6 FF               884 	add	a,#0xFF
                            885 ;	genCmpGt
                            886 ;	AOP_HL for _bucket
   010C 4F                  887 	ld	c,a
   010D 21 14 01            888 	ld	hl,#_bucket
   0110 96                  889 	sub	a,(hl)
   0111 D2 2F 01            890 	jp	nc,00104$
                            891 ;	square.c 166
                            892 ;	genMinus
                            893 ;	AOP_HL for _bucket
                            894 ;	AOP_HL for _totalStepsA
   0114 7E                  895 	ld	a,(hl)
   0115 21 28 01            896 	ld	hl,#_totalStepsA
   0118 96                  897 	sub	a,(hl)
   0119 21 14 01            898 	ld	hl,#_bucket
   011C 77                  899 	ld	(hl),a
                            900 ;	square.c 167
                            901 ;	genPlus
                            902 ;	AOP_HL for _i
                            903 ;	Can't optimise plus by inc, falling back to the normal way
   011D 3E 70               904 	ld	a,#<_drumA
   011F 21 15 01            905 	ld	hl,#_i
   0122 86                  906 	add	a,(hl)
   0123 4F                  907 	ld	c,a
   0124 3E 00               908 	ld	a,#>_drumA
   0126 CE 00               909 	adc	a,#0x00
   0128 47                  910 	ld	b,a
                            911 ;	genAssign (pointer)
   0129 3E 01               912 	ld	a,#0x01
   012B 02                  913 	ld	(bc),a
                            914 ;	genGoto
   012C C3 49 01            915 	jp	00120$
                            916 ;	genLabel
   012F                     917 00104$:
                            918 ;	square.c 169
                            919 ;	genCmpLt
                            920 ;	AOP_HL for _bucket
                            921 ;	AOP_HL for _totalStepsA
   012F 21 14 01            922 	ld	hl,#_bucket
   0132 7E                  923 	ld	a,(hl)
   0133 21 28 01            924 	ld	hl,#_totalStepsA
   0136 96                  925 	sub	a,(hl)
   0137 D2 49 01            926 	jp	nc,00120$
                            927 ;	square.c 171
                            928 ;	genPlus
                            929 ;	AOP_HL for _i
                            930 ;	Can't optimise plus by inc, falling back to the normal way
   013A 3E 70               931 	ld	a,#<_drumA
   013C 21 15 01            932 	ld	hl,#_i
   013F 86                  933 	add	a,(hl)
   0140 4F                  934 	ld	c,a
   0141 3E 00               935 	ld	a,#>_drumA
   0143 CE 00               936 	adc	a,#0x00
   0145 47                  937 	ld	b,a
                            938 ;	genAssign (pointer)
   0146 3E 00               939 	ld	a,#0x00
   0148 02                  940 	ld	(bc),a
                            941 ;	genLabel
   0149                     942 00120$:
                            943 ;	square.c 161
                            944 ;	genPlus
                            945 ;	AOP_HL for _i
                            946 ;	genPlusIncr
   0149 21 15 01            947 	ld	hl,#_i
   014C 34                  948 	inc	(hl)
                            949 ;	genGoto
   014D C3 EF 00            950 	jp	00118$
                            951 ;	genLabel
   0150                     952 00121$:
                            953 ;	square.c 174
                            954 ;	genPointerGet
                            955 ;	AOP_HL for _first
   0150 11 70 00            956 	ld	de,#_drumA
   0153 1A                  957 	ld	a,(de)
   0154 21 1A 01            958 	ld	hl,#_first
   0157 77                  959 	ld	(hl),a
                            960 ;	square.c 175
                            961 ;	genIpush
                            962 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0158 3E 01               963 	ld	a,#0x01
   015A F5                  964 	push	af
   015B 33                  965 	inc	sp
                            966 ;	genCall
   015C CD 00 00            967 	call	_performantdelay
   015F E8 01               968 	lda	sp,1(sp)
                            969 ;	square.c 177
                            970 ;	genCmpGt
                            971 ;	AOP_HL for _numberOfPulsesA
                            972 ;	AOP_STK for _fillDrumA_sloc3_1_0
   0161 3E 00               973 	ld	a,#0x00
   0163 21 27 01            974 	ld	hl,#_numberOfPulsesA
   0166 96                  975 	sub	a,(hl)
   0167 3E 00               976 	ld	a,#0x00
   0169 17                  977 	rla
   016A F8 00               978 	lda	hl,0(sp)
   016C 77                  979 	ld	(hl),a
                            980 ;	genIfx
                            981 ;	AOP_STK for _fillDrumA_sloc3_1_0
   016D AF                  982 	xor	a,a
   016E B6                  983 	or	a,(hl)
   016F CA FF 01            984 	jp	z,00113$
                            985 ;	genCmpEq
                            986 ;	AOP_HL for _first
                            987 ; genCmpEq: left 1, right 1, result 0
   0172 21 1A 01            988 	ld	hl,#_first
   0175 7E                  989 	ld	a,(hl)
   0176 FE 01               990 	cp	a,#0x01
   0178 CA FF 01            991 	jp	z,00113$
   017B                     992 00153$:
                            993 ;	square.c 179
                            994 ;	genAssign
                            995 ;	AOP_HL for _f
   017B 21 1C 01            996 	ld	hl,#_f
   017E 36 00               997 	ld	(hl),#0x00
                            998 ;	genLabel
   0180                     999 00108$:
                           1000 ;	genCmpLt
                           1001 ;	AOP_HL for _f
                           1002 ;	AOP_HL for _totalStepsA
   0180 21 1C 01           1003 	ld	hl,#_f
   0183 7E                 1004 	ld	a,(hl)
   0184 21 28 01           1005 	ld	hl,#_totalStepsA
   0187 96                 1006 	sub	a,(hl)
   0188 D2 FF 01           1007 	jp	nc,00113$
                           1008 ;	square.c 180
                           1009 ;	genAssign
                           1010 ;	AOP_HL for _x
   018B 21 1D 01           1011 	ld	hl,#_x
   018E 36 00              1012 	ld	(hl),#0x00
                           1013 ;	genLabel
   0190                    1014 00122$:
                           1015 ;	genCmpLt
                           1016 ;	AOP_HL for _x
                           1017 ;	AOP_HL for _totalStepsA
   0190 21 1D 01           1018 	ld	hl,#_x
   0193 7E                 1019 	ld	a,(hl)
   0194 21 28 01           1020 	ld	hl,#_totalStepsA
   0197 96                 1021 	sub	a,(hl)
   0198 3E 00              1022 	ld	a,#0x00
   019A 17                 1023 	rla
   019B 47                 1024 	ld	b,a
                           1025 ;	genIfx
   019C AF                 1026 	xor	a,a
   019D B0                 1027 	or	a,b
   019E CA D9 01           1028 	jp	z,00125$
                           1029 ;	square.c 181
                           1030 ;	genPlus
                           1031 ;	AOP_HL for _x
                           1032 ;	AOP_STK for _fillDrumA_sloc0_1_0
                           1033 ;	Can't optimise plus by inc, falling back to the normal way
   01A1 11 70 00           1034 	ld	de,#_drumA
   01A4 21 1D 01           1035 	ld	hl,#_x
   01A7 6E                 1036 	ld	l,(hl)
   01A8 26 00              1037 	ld	h,#0x00
   01AA 19                 1038 	add	hl,de
   01AB 7D                 1039 	ld	a,l
   01AC 54                 1040 	ld	d,h
   01AD F8 04              1041 	lda	hl,4(sp)
   01AF 22                 1042 	ld	(hl+),a
   01B0 72                 1043 	ld	(hl),d
                           1044 ;	genPlus
                           1045 ;	AOP_HL for _x
                           1046 ;	AOP_STK for _fillDrumA_sloc1_1_0
                           1047 ;	genPlusIncr
                           1048 ;	Can't optimise plus by inc, falling back to the normal way
   01B1 21 1D 01           1049 	ld	hl,#_x
   01B4 7E                 1050 	ld	a,(hl)
   01B5 C6 01              1051 	add	a,#0x01
   01B7 F8 03              1052 	lda	hl,3(sp)
   01B9 77                 1053 	ld	(hl),a
                           1054 ;	genPlus
                           1055 ;	AOP_STK for _fillDrumA_sloc1_1_0
                           1056 ;	AOP_STK for _fillDrumA_sloc2_1_0
                           1057 ;	Can't optimise plus by inc, falling back to the normal way
   01BA 11 70 00           1058 	ld	de,#_drumA
   01BD 6E                 1059 	ld	l,(hl)
   01BE 26 00              1060 	ld	h,#0x00
   01C0 19                 1061 	add	hl,de
   01C1 7D                 1062 	ld	a,l
   01C2 54                 1063 	ld	d,h
   01C3 F8 01              1064 	lda	hl,1(sp)
                           1065 ;	genPointerGet
                           1066 ;	AOP_STK for _fillDrumA_sloc2_1_0
   01C5 22                 1067 	ld	(hl+),a
   01C6 72                 1068 	ld	(hl),d
   01C7 5F                 1069 	ld	e,a
   01C8 1A                 1070 	ld	a,(de)
                           1071 ;	genAssign (pointer)
                           1072 ;	AOP_STK for _fillDrumA_sloc0_1_0
   01C9 23                 1073 	inc	hl
   01CA 23                 1074 	inc	hl
   01CB 5E                 1075 	ld	e,(hl)
   01CC 23                 1076 	inc	hl
   01CD 56                 1077 	ld	d,(hl)
   01CE 12                 1078 	ld	(de),a
                           1079 ;	square.c 180
                           1080 ;	genAssign
                           1081 ;	AOP_STK for _fillDrumA_sloc1_1_0
   01CF 2B                 1082 	dec	hl
   01D0 2B                 1083 	dec	hl
   01D1 4E                 1084 	ld	c,(hl)
                           1085 ;	genAssign
                           1086 ;	AOP_HL for _x
   01D2 21 1D 01           1087 	ld	hl,#_x
   01D5 71                 1088 	ld	(hl),c
                           1089 ;	genGoto
   01D6 C3 90 01           1090 	jp	00122$
                           1091 ;	genLabel
   01D9                    1092 00125$:
                           1093 ;	square.c 183
                           1094 ;	genMinus
                           1095 ;	AOP_HL for _totalStepsA
   01D9 21 28 01           1096 	ld	hl,#_totalStepsA
   01DC 7E                 1097 	ld	a,(hl)
   01DD C6 FF              1098 	add	a,#0xFF
   01DF 4F                 1099 	ld	c,a
                           1100 ;	genPlus
                           1101 ;	Can't optimise plus by inc, falling back to the normal way
   01E0 3E 70              1102 	ld	a,#<_drumA
   01E2 81                 1103 	add	a,c
   01E3 4F                 1104 	ld	c,a
   01E4 3E 00              1105 	ld	a,#>_drumA
   01E6 CE 00              1106 	adc	a,#0x00
   01E8 47                 1107 	ld	b,a
                           1108 ;	genAssign (pointer)
                           1109 ;	AOP_HL for _first
   01E9 21 1A 01           1110 	ld	hl,#_first
   01EC 7E                 1111 	ld	a,(hl)
   01ED 02                 1112 	ld	(bc),a
                           1113 ;	square.c 184
                           1114 ;	genPointerGet
   01EE 11 70 00           1115 	ld	de,#_drumA
   01F1 1A                 1116 	ld	a,(de)
                           1117 ;	genCmpEq
                           1118 ; genCmpEq: left 1, right 1, result 0
   01F2 4F                 1119 	ld	c,a
   01F3 FE 01              1120 	cp	a,#0x01
   01F5 CA FF 01           1121 	jp	z,00113$
   01F8                    1122 00154$:
                           1123 ;	square.c 179
                           1124 ;	genPlus
                           1125 ;	AOP_HL for _f
                           1126 ;	genPlusIncr
   01F8 21 1C 01           1127 	ld	hl,#_f
   01FB 34                 1128 	inc	(hl)
                           1129 ;	genGoto
   01FC C3 80 01           1130 	jp	00108$
                           1131 ;	genLabel
   01FF                    1132 00113$:
                           1133 ;	square.c 192
                           1134 ;	genMinus
                           1135 ;	AOP_HL for _totalStepsA
   01FF 21 28 01           1136 	ld	hl,#_totalStepsA
   0202 7E                 1137 	ld	a,(hl)
   0203 C6 FF              1138 	add	a,#0xFF
   0205 4F                 1139 	ld	c,a
                           1140 ;	genPlus
                           1141 ;	Can't optimise plus by inc, falling back to the normal way
   0206 3E 70              1142 	ld	a,#<_drumA
   0208 81                 1143 	add	a,c
   0209 4F                 1144 	ld	c,a
   020A 3E 00              1145 	ld	a,#>_drumA
   020C CE 00              1146 	adc	a,#0x00
   020E 47                 1147 	ld	b,a
                           1148 ;	genPointerGet
                           1149 ;	AOP_HL for _last
   020F 0A                 1150 	ld	a,(bc)
   0210 21 1B 01           1151 	ld	hl,#_last
   0213 77                 1152 	ld	(hl),a
                           1153 ;	square.c 193
                           1154 ;	genIfx
                           1155 ;	AOP_STK for _fillDrumA_sloc3_1_0
   0214 AF                 1156 	xor	a,a
   0215 F8 00              1157 	lda	hl,0(sp)
   0217 B6                 1158 	or	a,(hl)
   0218 CA 8F 02           1159 	jp	z,00116$
                           1160 ;	genCmpEq
                           1161 ;	AOP_HL for _offStepA
                           1162 ; genCmpEq: left 1, right 1, result 0
   021B 21 30 01           1163 	ld	hl,#_offStepA
   021E 7E                 1164 	ld	a,(hl)
   021F B7                 1165 	or	a,a
   0220 CA 8F 02           1166 	jp	z,00116$
   0223                    1167 00155$:
                           1168 ;	square.c 195
                           1169 ;	genAssign
                           1170 ;	AOP_HL for _f
   0223 21 1C 01           1171 	ld	hl,#_f
   0226 36 00              1172 	ld	(hl),#0x00
                           1173 ;	genLabel
   0228                    1174 00130$:
                           1175 ;	genCmpLt
                           1176 ;	AOP_HL for _f
                           1177 ;	AOP_HL for _offStepA
   0228 21 1C 01           1178 	ld	hl,#_f
   022B 7E                 1179 	ld	a,(hl)
   022C 21 30 01           1180 	ld	hl,#_offStepA
   022F 96                 1181 	sub	a,(hl)
   0230 D2 8F 02           1182 	jp	nc,00116$
                           1183 ;	square.c 196
                           1184 ;	genAssign
                           1185 ;	AOP_HL for _totalStepsA
                           1186 ;	AOP_HL for _x
   0233 21 28 01           1187 	ld	hl,#_totalStepsA
   0236 7E                 1188 	ld	a,(hl)
   0237 21 1D 01           1189 	ld	hl,#_x
   023A 77                 1190 	ld	(hl),a
                           1191 ;	genLabel
   023B                    1192 00126$:
                           1193 ;	genCmpGt
                           1194 ;	AOP_HL for _x
                           1195 ;	AOP_STK for _fillDrumA_sloc3_1_0
   023B 3E 00              1196 	ld	a,#0x00
   023D 21 1D 01           1197 	ld	hl,#_x
   0240 96                 1198 	sub	a,(hl)
   0241 3E 00              1199 	ld	a,#0x00
   0243 17                 1200 	rla
   0244 F8 00              1201 	lda	hl,0(sp)
   0246 77                 1202 	ld	(hl),a
                           1203 ;	genIfx
                           1204 ;	AOP_STK for _fillDrumA_sloc3_1_0
   0247 AF                 1205 	xor	a,a
   0248 B6                 1206 	or	a,(hl)
   0249 CA 80 02           1207 	jp	z,00129$
                           1208 ;	square.c 197
                           1209 ;	genPlus
                           1210 ;	AOP_HL for _x
                           1211 ;	AOP_STK for _fillDrumA_sloc2_1_0
                           1212 ;	Can't optimise plus by inc, falling back to the normal way
   024C 11 70 00           1213 	ld	de,#_drumA
   024F 21 1D 01           1214 	ld	hl,#_x
   0252 6E                 1215 	ld	l,(hl)
   0253 26 00              1216 	ld	h,#0x00
   0255 19                 1217 	add	hl,de
   0256 7D                 1218 	ld	a,l
   0257 54                 1219 	ld	d,h
   0258 F8 01              1220 	lda	hl,1(sp)
   025A 22                 1221 	ld	(hl+),a
   025B 72                 1222 	ld	(hl),d
                           1223 ;	genMinus
                           1224 ;	AOP_HL for _x
   025C 21 1D 01           1225 	ld	hl,#_x
   025F 7E                 1226 	ld	a,(hl)
   0260 C6 FF              1227 	add	a,#0xFF
   0262 47                 1228 	ld	b,a
                           1229 ;	genPlus
                           1230 ;	AOP_STK for _fillDrumA_sloc0_1_0
                           1231 ;	Can't optimise plus by inc, falling back to the normal way
   0263 11 70 00           1232 	ld	de,#_drumA
   0266 68                 1233 	ld	l,b
   0267 26 00              1234 	ld	h,#0x00
   0269 19                 1235 	add	hl,de
   026A 7D                 1236 	ld	a,l
   026B 54                 1237 	ld	d,h
   026C F8 04              1238 	lda	hl,4(sp)
                           1239 ;	genPointerGet
                           1240 ;	AOP_STK for _fillDrumA_sloc0_1_0
   026E 22                 1241 	ld	(hl+),a
   026F 72                 1242 	ld	(hl),d
   0270 5F                 1243 	ld	e,a
   0271 1A                 1244 	ld	a,(de)
                           1245 ;	genAssign (pointer)
                           1246 ;	AOP_STK for _fillDrumA_sloc2_1_0
   0272 F8 01              1247 	lda	hl,1(sp)
   0274 5E                 1248 	ld	e,(hl)
   0275 23                 1249 	inc	hl
   0276 56                 1250 	ld	d,(hl)
   0277 12                 1251 	ld	(de),a
                           1252 ;	square.c 196
                           1253 ;	genAssign
   0278 48                 1254 	ld	c,b
                           1255 ;	genAssign
                           1256 ;	AOP_HL for _x
   0279 21 1D 01           1257 	ld	hl,#_x
   027C 71                 1258 	ld	(hl),c
                           1259 ;	genGoto
   027D C3 3B 02           1260 	jp	00126$
                           1261 ;	genLabel
   0280                    1262 00129$:
                           1263 ;	square.c 199
                           1264 ;	genAssign (pointer)
                           1265 ;	AOP_HL for _last
   0280 11 70 00           1266 	ld	de,#_drumA
   0283 21 1B 01           1267 	ld	hl,#_last
   0286 7E                 1268 	ld	a,(hl)
   0287 12                 1269 	ld	(de),a
                           1270 ;	square.c 195
                           1271 ;	genPlus
                           1272 ;	AOP_HL for _f
                           1273 ;	genPlusIncr
   0288 21 1C 01           1274 	ld	hl,#_f
   028B 34                 1275 	inc	(hl)
                           1276 ;	genGoto
   028C C3 28 02           1277 	jp	00130$
                           1278 ;	genLabel
   028F                    1279 00116$:
                           1280 ;	square.c 202
                           1281 ;	genCall
                           1282 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   028F CD 14 00           1283 	call	_rand
                           1284 ;	AOP_HL for _randA
   0292 21 17 01           1285 	ld	hl,#_randA
   0295 73                 1286 	ld	(hl),e
                           1287 ;	square.c 203
                           1288 ;	genIpush
                           1289 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0296 3E 1E              1290 	ld	a,#0x1E
   0298 F5                 1291 	push	af
   0299 33                 1292 	inc	sp
                           1293 ;	genIpush
                           1294 ;	AOP_HL for _randA
   029A 21 17 01           1295 	ld	hl,#_randA
   029D 7E                 1296 	ld	a,(hl)
   029E F5                 1297 	push	af
   029F 33                 1298 	inc	sp
                           1299 ;	genCall
   02A0 CD 00 00           1300 	call	__moduchar_rrx_s
   02A3 4B                 1301 	ld	c,e
   02A4 E8 02              1302 	lda	sp,2(sp)
                           1303 ;	genPlus
                           1304 ;	AOP_HL for _delayA
                           1305 ;	AOP_HL for _xA
                           1306 ;	Can't optimise plus by inc, falling back to the normal way
   02A6 21 21 01           1307 	ld	hl,#_delayA
   02A9 7E                 1308 	ld	a,(hl)
   02AA 81                 1309 	add	a,c
   02AB 21 1E 01           1310 	ld	hl,#_xA
   02AE 77                 1311 	ld	(hl),a
                           1312 ;	genLabel
   02AF                    1313 00134$:
                           1314 ;	genEndFunction
   02AF E8 06              1315 	lda	sp,6(sp)
   02B1 C9                 1316 	ret
   02B2                    1317 ___fillDrumA_end:
                           1318 ;	square.c 207
                           1319 ;	genLabel
                           1320 ;	genFunction
                           1321 ;	---------------------------------
                           1322 ; Function fillDrumB
                           1323 ; ---------------------------------
   02B2                    1324 ___fillDrumB_start:
   02B2                    1325 _fillDrumB:
   02B2 E8 FA              1326 	lda	sp,-6(sp)
                           1327 ;	square.c 208
                           1328 ;	genAssign
                           1329 ;	AOP_HL for _bucket
   02B4 21 14 01           1330 	ld	hl,#_bucket
   02B7 36 00              1331 	ld	(hl),#0x00
                           1332 ;	square.c 209
                           1333 ;	genAssign
                           1334 ;	AOP_HL for _i
   02B9 21 15 01           1335 	ld	hl,#_i
   02BC 36 00              1336 	ld	(hl),#0x00
                           1337 ;	genLabel
   02BE                    1338 00118$:
                           1339 ;	genCmpLt
                           1340 ;	AOP_HL for _i
                           1341 ;	AOP_HL for _totalStepsB
   02BE 21 15 01           1342 	ld	hl,#_i
   02C1 7E                 1343 	ld	a,(hl)
   02C2 21 2B 01           1344 	ld	hl,#_totalStepsB
   02C5 96                 1345 	sub	a,(hl)
   02C6 D2 1F 03           1346 	jp	nc,00121$
                           1347 ;	square.c 211
                           1348 ;	genPlus
                           1349 ;	AOP_HL for _bucket
                           1350 ;	AOP_HL for _numberOfPulsesB
                           1351 ;	Can't optimise plus by inc, falling back to the normal way
   02C9 21 14 01           1352 	ld	hl,#_bucket
   02CC 7E                 1353 	ld	a,(hl)
   02CD 21 2A 01           1354 	ld	hl,#_numberOfPulsesB
   02D0 86                 1355 	add	a,(hl)
   02D1 21 14 01           1356 	ld	hl,#_bucket
   02D4 77                 1357 	ld	(hl),a
                           1358 ;	square.c 212
                           1359 ;	genMinus
                           1360 ;	AOP_HL for _totalStepsB
   02D5 21 2B 01           1361 	ld	hl,#_totalStepsB
   02D8 7E                 1362 	ld	a,(hl)
   02D9 C6 FF              1363 	add	a,#0xFF
                           1364 ;	genCmpGt
                           1365 ;	AOP_HL for _bucket
   02DB 4F                 1366 	ld	c,a
   02DC 21 14 01           1367 	ld	hl,#_bucket
   02DF 96                 1368 	sub	a,(hl)
   02E0 D2 FE 02           1369 	jp	nc,00104$
                           1370 ;	square.c 214
                           1371 ;	genMinus
                           1372 ;	AOP_HL for _bucket
                           1373 ;	AOP_HL for _totalStepsB
   02E3 7E                 1374 	ld	a,(hl)
   02E4 21 2B 01           1375 	ld	hl,#_totalStepsB
   02E7 96                 1376 	sub	a,(hl)
   02E8 21 14 01           1377 	ld	hl,#_bucket
   02EB 77                 1378 	ld	(hl),a
                           1379 ;	square.c 215
                           1380 ;	genPlus
                           1381 ;	AOP_HL for _i
                           1382 ;	Can't optimise plus by inc, falling back to the normal way
   02EC 3E 90              1383 	ld	a,#<_drumB
   02EE 21 15 01           1384 	ld	hl,#_i
   02F1 86                 1385 	add	a,(hl)
   02F2 4F                 1386 	ld	c,a
   02F3 3E 00              1387 	ld	a,#>_drumB
   02F5 CE 00              1388 	adc	a,#0x00
   02F7 47                 1389 	ld	b,a
                           1390 ;	genAssign (pointer)
   02F8 3E 01              1391 	ld	a,#0x01
   02FA 02                 1392 	ld	(bc),a
                           1393 ;	genGoto
   02FB C3 18 03           1394 	jp	00120$
                           1395 ;	genLabel
   02FE                    1396 00104$:
                           1397 ;	square.c 217
                           1398 ;	genCmpLt
                           1399 ;	AOP_HL for _bucket
                           1400 ;	AOP_HL for _totalStepsB
   02FE 21 14 01           1401 	ld	hl,#_bucket
   0301 7E                 1402 	ld	a,(hl)
   0302 21 2B 01           1403 	ld	hl,#_totalStepsB
   0305 96                 1404 	sub	a,(hl)
   0306 D2 18 03           1405 	jp	nc,00120$
                           1406 ;	square.c 219
                           1407 ;	genPlus
                           1408 ;	AOP_HL for _i
                           1409 ;	Can't optimise plus by inc, falling back to the normal way
   0309 3E 90              1410 	ld	a,#<_drumB
   030B 21 15 01           1411 	ld	hl,#_i
   030E 86                 1412 	add	a,(hl)
   030F 4F                 1413 	ld	c,a
   0310 3E 00              1414 	ld	a,#>_drumB
   0312 CE 00              1415 	adc	a,#0x00
   0314 47                 1416 	ld	b,a
                           1417 ;	genAssign (pointer)
   0315 3E 00              1418 	ld	a,#0x00
   0317 02                 1419 	ld	(bc),a
                           1420 ;	genLabel
   0318                    1421 00120$:
                           1422 ;	square.c 209
                           1423 ;	genPlus
                           1424 ;	AOP_HL for _i
                           1425 ;	genPlusIncr
   0318 21 15 01           1426 	ld	hl,#_i
   031B 34                 1427 	inc	(hl)
                           1428 ;	genGoto
   031C C3 BE 02           1429 	jp	00118$
                           1430 ;	genLabel
   031F                    1431 00121$:
                           1432 ;	square.c 222
                           1433 ;	genPointerGet
                           1434 ;	AOP_HL for _first
   031F 11 90 00           1435 	ld	de,#_drumB
   0322 1A                 1436 	ld	a,(de)
   0323 21 1A 01           1437 	ld	hl,#_first
   0326 77                 1438 	ld	(hl),a
                           1439 ;	square.c 223
                           1440 ;	genIpush
                           1441 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0327 3E 01              1442 	ld	a,#0x01
   0329 F5                 1443 	push	af
   032A 33                 1444 	inc	sp
                           1445 ;	genCall
   032B CD 00 00           1446 	call	_performantdelay
   032E E8 01              1447 	lda	sp,1(sp)
                           1448 ;	square.c 225
                           1449 ;	genCmpGt
                           1450 ;	AOP_HL for _numberOfPulsesB
                           1451 ;	AOP_STK for _fillDrumB_sloc3_1_0
   0330 3E 00              1452 	ld	a,#0x00
   0332 21 2A 01           1453 	ld	hl,#_numberOfPulsesB
   0335 96                 1454 	sub	a,(hl)
   0336 3E 00              1455 	ld	a,#0x00
   0338 17                 1456 	rla
   0339 F8 00              1457 	lda	hl,0(sp)
   033B 77                 1458 	ld	(hl),a
                           1459 ;	genIfx
                           1460 ;	AOP_STK for _fillDrumB_sloc3_1_0
   033C AF                 1461 	xor	a,a
   033D B6                 1462 	or	a,(hl)
   033E CA CE 03           1463 	jp	z,00113$
                           1464 ;	genCmpEq
                           1465 ;	AOP_HL for _first
                           1466 ; genCmpEq: left 1, right 1, result 0
   0341 21 1A 01           1467 	ld	hl,#_first
   0344 7E                 1468 	ld	a,(hl)
   0345 FE 01              1469 	cp	a,#0x01
   0347 CA CE 03           1470 	jp	z,00113$
   034A                    1471 00153$:
                           1472 ;	square.c 227
                           1473 ;	genAssign
                           1474 ;	AOP_HL for _f
   034A 21 1C 01           1475 	ld	hl,#_f
   034D 36 00              1476 	ld	(hl),#0x00
                           1477 ;	genLabel
   034F                    1478 00108$:
                           1479 ;	genCmpLt
                           1480 ;	AOP_HL for _f
                           1481 ;	AOP_HL for _totalStepsB
   034F 21 1C 01           1482 	ld	hl,#_f
   0352 7E                 1483 	ld	a,(hl)
   0353 21 2B 01           1484 	ld	hl,#_totalStepsB
   0356 96                 1485 	sub	a,(hl)
   0357 D2 CE 03           1486 	jp	nc,00113$
                           1487 ;	square.c 228
                           1488 ;	genAssign
                           1489 ;	AOP_HL for _x
   035A 21 1D 01           1490 	ld	hl,#_x
   035D 36 00              1491 	ld	(hl),#0x00
                           1492 ;	genLabel
   035F                    1493 00122$:
                           1494 ;	genCmpLt
                           1495 ;	AOP_HL for _x
                           1496 ;	AOP_HL for _totalStepsB
   035F 21 1D 01           1497 	ld	hl,#_x
   0362 7E                 1498 	ld	a,(hl)
   0363 21 2B 01           1499 	ld	hl,#_totalStepsB
   0366 96                 1500 	sub	a,(hl)
   0367 3E 00              1501 	ld	a,#0x00
   0369 17                 1502 	rla
   036A 47                 1503 	ld	b,a
                           1504 ;	genIfx
   036B AF                 1505 	xor	a,a
   036C B0                 1506 	or	a,b
   036D CA A8 03           1507 	jp	z,00125$
                           1508 ;	square.c 229
                           1509 ;	genPlus
                           1510 ;	AOP_HL for _x
                           1511 ;	AOP_STK for _fillDrumB_sloc0_1_0
                           1512 ;	Can't optimise plus by inc, falling back to the normal way
   0370 11 90 00           1513 	ld	de,#_drumB
   0373 21 1D 01           1514 	ld	hl,#_x
   0376 6E                 1515 	ld	l,(hl)
   0377 26 00              1516 	ld	h,#0x00
   0379 19                 1517 	add	hl,de
   037A 7D                 1518 	ld	a,l
   037B 54                 1519 	ld	d,h
   037C F8 04              1520 	lda	hl,4(sp)
   037E 22                 1521 	ld	(hl+),a
   037F 72                 1522 	ld	(hl),d
                           1523 ;	genPlus
                           1524 ;	AOP_HL for _x
                           1525 ;	AOP_STK for _fillDrumB_sloc1_1_0
                           1526 ;	genPlusIncr
                           1527 ;	Can't optimise plus by inc, falling back to the normal way
   0380 21 1D 01           1528 	ld	hl,#_x
   0383 7E                 1529 	ld	a,(hl)
   0384 C6 01              1530 	add	a,#0x01
   0386 F8 03              1531 	lda	hl,3(sp)
   0388 77                 1532 	ld	(hl),a
                           1533 ;	genPlus
                           1534 ;	AOP_STK for _fillDrumB_sloc1_1_0
                           1535 ;	AOP_STK for _fillDrumB_sloc2_1_0
                           1536 ;	Can't optimise plus by inc, falling back to the normal way
   0389 11 90 00           1537 	ld	de,#_drumB
   038C 6E                 1538 	ld	l,(hl)
   038D 26 00              1539 	ld	h,#0x00
   038F 19                 1540 	add	hl,de
   0390 7D                 1541 	ld	a,l
   0391 54                 1542 	ld	d,h
   0392 F8 01              1543 	lda	hl,1(sp)
                           1544 ;	genPointerGet
                           1545 ;	AOP_STK for _fillDrumB_sloc2_1_0
   0394 22                 1546 	ld	(hl+),a
   0395 72                 1547 	ld	(hl),d
   0396 5F                 1548 	ld	e,a
   0397 1A                 1549 	ld	a,(de)
                           1550 ;	genAssign (pointer)
                           1551 ;	AOP_STK for _fillDrumB_sloc0_1_0
   0398 23                 1552 	inc	hl
   0399 23                 1553 	inc	hl
   039A 5E                 1554 	ld	e,(hl)
   039B 23                 1555 	inc	hl
   039C 56                 1556 	ld	d,(hl)
   039D 12                 1557 	ld	(de),a
                           1558 ;	square.c 228
                           1559 ;	genAssign
                           1560 ;	AOP_STK for _fillDrumB_sloc1_1_0
   039E 2B                 1561 	dec	hl
   039F 2B                 1562 	dec	hl
   03A0 4E                 1563 	ld	c,(hl)
                           1564 ;	genAssign
                           1565 ;	AOP_HL for _x
   03A1 21 1D 01           1566 	ld	hl,#_x
   03A4 71                 1567 	ld	(hl),c
                           1568 ;	genGoto
   03A5 C3 5F 03           1569 	jp	00122$
                           1570 ;	genLabel
   03A8                    1571 00125$:
                           1572 ;	square.c 231
                           1573 ;	genMinus
                           1574 ;	AOP_HL for _totalStepsB
   03A8 21 2B 01           1575 	ld	hl,#_totalStepsB
   03AB 7E                 1576 	ld	a,(hl)
   03AC C6 FF              1577 	add	a,#0xFF
   03AE 4F                 1578 	ld	c,a
                           1579 ;	genPlus
                           1580 ;	Can't optimise plus by inc, falling back to the normal way
   03AF 3E 90              1581 	ld	a,#<_drumB
   03B1 81                 1582 	add	a,c
   03B2 4F                 1583 	ld	c,a
   03B3 3E 00              1584 	ld	a,#>_drumB
   03B5 CE 00              1585 	adc	a,#0x00
   03B7 47                 1586 	ld	b,a
                           1587 ;	genAssign (pointer)
                           1588 ;	AOP_HL for _first
   03B8 21 1A 01           1589 	ld	hl,#_first
   03BB 7E                 1590 	ld	a,(hl)
   03BC 02                 1591 	ld	(bc),a
                           1592 ;	square.c 232
                           1593 ;	genPointerGet
   03BD 11 90 00           1594 	ld	de,#_drumB
   03C0 1A                 1595 	ld	a,(de)
                           1596 ;	genCmpEq
                           1597 ; genCmpEq: left 1, right 1, result 0
   03C1 4F                 1598 	ld	c,a
   03C2 FE 01              1599 	cp	a,#0x01
   03C4 CA CE 03           1600 	jp	z,00113$
   03C7                    1601 00154$:
                           1602 ;	square.c 227
                           1603 ;	genPlus
                           1604 ;	AOP_HL for _f
                           1605 ;	genPlusIncr
   03C7 21 1C 01           1606 	ld	hl,#_f
   03CA 34                 1607 	inc	(hl)
                           1608 ;	genGoto
   03CB C3 4F 03           1609 	jp	00108$
                           1610 ;	genLabel
   03CE                    1611 00113$:
                           1612 ;	square.c 239
                           1613 ;	genMinus
                           1614 ;	AOP_HL for _totalStepsB
   03CE 21 2B 01           1615 	ld	hl,#_totalStepsB
   03D1 7E                 1616 	ld	a,(hl)
   03D2 C6 FF              1617 	add	a,#0xFF
   03D4 4F                 1618 	ld	c,a
                           1619 ;	genPlus
                           1620 ;	Can't optimise plus by inc, falling back to the normal way
   03D5 3E 90              1621 	ld	a,#<_drumB
   03D7 81                 1622 	add	a,c
   03D8 4F                 1623 	ld	c,a
   03D9 3E 00              1624 	ld	a,#>_drumB
   03DB CE 00              1625 	adc	a,#0x00
   03DD 47                 1626 	ld	b,a
                           1627 ;	genPointerGet
                           1628 ;	AOP_HL for _last
   03DE 0A                 1629 	ld	a,(bc)
   03DF 21 1B 01           1630 	ld	hl,#_last
   03E2 77                 1631 	ld	(hl),a
                           1632 ;	square.c 240
                           1633 ;	genIfx
                           1634 ;	AOP_STK for _fillDrumB_sloc3_1_0
   03E3 AF                 1635 	xor	a,a
   03E4 F8 00              1636 	lda	hl,0(sp)
   03E6 B6                 1637 	or	a,(hl)
   03E7 CA 5E 04           1638 	jp	z,00116$
                           1639 ;	genCmpEq
                           1640 ;	AOP_HL for _offStepB
                           1641 ; genCmpEq: left 1, right 1, result 0
   03EA 21 31 01           1642 	ld	hl,#_offStepB
   03ED 7E                 1643 	ld	a,(hl)
   03EE B7                 1644 	or	a,a
   03EF CA 5E 04           1645 	jp	z,00116$
   03F2                    1646 00155$:
                           1647 ;	square.c 242
                           1648 ;	genAssign
                           1649 ;	AOP_HL for _f
   03F2 21 1C 01           1650 	ld	hl,#_f
   03F5 36 00              1651 	ld	(hl),#0x00
                           1652 ;	genLabel
   03F7                    1653 00130$:
                           1654 ;	genCmpLt
                           1655 ;	AOP_HL for _f
                           1656 ;	AOP_HL for _offStepB
   03F7 21 1C 01           1657 	ld	hl,#_f
   03FA 7E                 1658 	ld	a,(hl)
   03FB 21 31 01           1659 	ld	hl,#_offStepB
   03FE 96                 1660 	sub	a,(hl)
   03FF D2 5E 04           1661 	jp	nc,00116$
                           1662 ;	square.c 243
                           1663 ;	genAssign
                           1664 ;	AOP_HL for _totalStepsB
                           1665 ;	AOP_HL for _x
   0402 21 2B 01           1666 	ld	hl,#_totalStepsB
   0405 7E                 1667 	ld	a,(hl)
   0406 21 1D 01           1668 	ld	hl,#_x
   0409 77                 1669 	ld	(hl),a
                           1670 ;	genLabel
   040A                    1671 00126$:
                           1672 ;	genCmpGt
                           1673 ;	AOP_HL for _x
                           1674 ;	AOP_STK for _fillDrumB_sloc3_1_0
   040A 3E 00              1675 	ld	a,#0x00
   040C 21 1D 01           1676 	ld	hl,#_x
   040F 96                 1677 	sub	a,(hl)
   0410 3E 00              1678 	ld	a,#0x00
   0412 17                 1679 	rla
   0413 F8 00              1680 	lda	hl,0(sp)
   0415 77                 1681 	ld	(hl),a
                           1682 ;	genIfx
                           1683 ;	AOP_STK for _fillDrumB_sloc3_1_0
   0416 AF                 1684 	xor	a,a
   0417 B6                 1685 	or	a,(hl)
   0418 CA 4F 04           1686 	jp	z,00129$
                           1687 ;	square.c 244
                           1688 ;	genPlus
                           1689 ;	AOP_HL for _x
                           1690 ;	AOP_STK for _fillDrumB_sloc2_1_0
                           1691 ;	Can't optimise plus by inc, falling back to the normal way
   041B 11 90 00           1692 	ld	de,#_drumB
   041E 21 1D 01           1693 	ld	hl,#_x
   0421 6E                 1694 	ld	l,(hl)
   0422 26 00              1695 	ld	h,#0x00
   0424 19                 1696 	add	hl,de
   0425 7D                 1697 	ld	a,l
   0426 54                 1698 	ld	d,h
   0427 F8 01              1699 	lda	hl,1(sp)
   0429 22                 1700 	ld	(hl+),a
   042A 72                 1701 	ld	(hl),d
                           1702 ;	genMinus
                           1703 ;	AOP_HL for _x
   042B 21 1D 01           1704 	ld	hl,#_x
   042E 7E                 1705 	ld	a,(hl)
   042F C6 FF              1706 	add	a,#0xFF
   0431 47                 1707 	ld	b,a
                           1708 ;	genPlus
                           1709 ;	AOP_STK for _fillDrumB_sloc0_1_0
                           1710 ;	Can't optimise plus by inc, falling back to the normal way
   0432 11 90 00           1711 	ld	de,#_drumB
   0435 68                 1712 	ld	l,b
   0436 26 00              1713 	ld	h,#0x00
   0438 19                 1714 	add	hl,de
   0439 7D                 1715 	ld	a,l
   043A 54                 1716 	ld	d,h
   043B F8 04              1717 	lda	hl,4(sp)
                           1718 ;	genPointerGet
                           1719 ;	AOP_STK for _fillDrumB_sloc0_1_0
   043D 22                 1720 	ld	(hl+),a
   043E 72                 1721 	ld	(hl),d
   043F 5F                 1722 	ld	e,a
   0440 1A                 1723 	ld	a,(de)
                           1724 ;	genAssign (pointer)
                           1725 ;	AOP_STK for _fillDrumB_sloc2_1_0
   0441 F8 01              1726 	lda	hl,1(sp)
   0443 5E                 1727 	ld	e,(hl)
   0444 23                 1728 	inc	hl
   0445 56                 1729 	ld	d,(hl)
   0446 12                 1730 	ld	(de),a
                           1731 ;	square.c 243
                           1732 ;	genAssign
   0447 48                 1733 	ld	c,b
                           1734 ;	genAssign
                           1735 ;	AOP_HL for _x
   0448 21 1D 01           1736 	ld	hl,#_x
   044B 71                 1737 	ld	(hl),c
                           1738 ;	genGoto
   044C C3 0A 04           1739 	jp	00126$
                           1740 ;	genLabel
   044F                    1741 00129$:
                           1742 ;	square.c 246
                           1743 ;	genAssign (pointer)
                           1744 ;	AOP_HL for _last
   044F 11 90 00           1745 	ld	de,#_drumB
   0452 21 1B 01           1746 	ld	hl,#_last
   0455 7E                 1747 	ld	a,(hl)
   0456 12                 1748 	ld	(de),a
                           1749 ;	square.c 242
                           1750 ;	genPlus
                           1751 ;	AOP_HL for _f
                           1752 ;	genPlusIncr
   0457 21 1C 01           1753 	ld	hl,#_f
   045A 34                 1754 	inc	(hl)
                           1755 ;	genGoto
   045B C3 F7 03           1756 	jp	00130$
                           1757 ;	genLabel
   045E                    1758 00116$:
                           1759 ;	square.c 249
                           1760 ;	genCall
                           1761 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   045E CD 14 00           1762 	call	_rand
                           1763 ;	AOP_HL for _randB
   0461 21 18 01           1764 	ld	hl,#_randB
   0464 73                 1765 	ld	(hl),e
                           1766 ;	square.c 250
                           1767 ;	genIpush
                           1768 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0465 3E 1E              1769 	ld	a,#0x1E
   0467 F5                 1770 	push	af
   0468 33                 1771 	inc	sp
                           1772 ;	genIpush
                           1773 ;	AOP_HL for _randB
   0469 21 18 01           1774 	ld	hl,#_randB
   046C 7E                 1775 	ld	a,(hl)
   046D F5                 1776 	push	af
   046E 33                 1777 	inc	sp
                           1778 ;	genCall
   046F CD 00 00           1779 	call	__moduchar_rrx_s
   0472 4B                 1780 	ld	c,e
   0473 E8 02              1781 	lda	sp,2(sp)
                           1782 ;	genPlus
                           1783 ;	AOP_HL for _delayB
                           1784 ;	AOP_HL for _xB
                           1785 ;	Can't optimise plus by inc, falling back to the normal way
   0475 21 22 01           1786 	ld	hl,#_delayB
   0478 7E                 1787 	ld	a,(hl)
   0479 81                 1788 	add	a,c
   047A 21 1F 01           1789 	ld	hl,#_xB
   047D 77                 1790 	ld	(hl),a
                           1791 ;	genLabel
   047E                    1792 00134$:
                           1793 ;	genEndFunction
   047E E8 06              1794 	lda	sp,6(sp)
   0480 C9                 1795 	ret
   0481                    1796 ___fillDrumB_end:
                           1797 ;	square.c 254
                           1798 ;	genLabel
                           1799 ;	genFunction
                           1800 ;	---------------------------------
                           1801 ; Function fillDrumC
                           1802 ; ---------------------------------
   0481                    1803 ___fillDrumC_start:
   0481                    1804 _fillDrumC:
   0481 E8 FA              1805 	lda	sp,-6(sp)
                           1806 ;	square.c 255
                           1807 ;	genAssign
                           1808 ;	AOP_HL for _bucket
   0483 21 14 01           1809 	ld	hl,#_bucket
   0486 36 00              1810 	ld	(hl),#0x00
                           1811 ;	square.c 256
                           1812 ;	genAssign
                           1813 ;	AOP_HL for _i
   0488 21 15 01           1814 	ld	hl,#_i
   048B 36 00              1815 	ld	(hl),#0x00
                           1816 ;	genLabel
   048D                    1817 00118$:
                           1818 ;	genCmpLt
                           1819 ;	AOP_HL for _i
                           1820 ;	AOP_HL for _totalStepsC
   048D 21 15 01           1821 	ld	hl,#_i
   0490 7E                 1822 	ld	a,(hl)
   0491 21 2E 01           1823 	ld	hl,#_totalStepsC
   0494 96                 1824 	sub	a,(hl)
   0495 D2 EE 04           1825 	jp	nc,00121$
                           1826 ;	square.c 258
                           1827 ;	genPlus
                           1828 ;	AOP_HL for _bucket
                           1829 ;	AOP_HL for _numberOfPulsesC
                           1830 ;	Can't optimise plus by inc, falling back to the normal way
   0498 21 14 01           1831 	ld	hl,#_bucket
   049B 7E                 1832 	ld	a,(hl)
   049C 21 2D 01           1833 	ld	hl,#_numberOfPulsesC
   049F 86                 1834 	add	a,(hl)
   04A0 21 14 01           1835 	ld	hl,#_bucket
   04A3 77                 1836 	ld	(hl),a
                           1837 ;	square.c 259
                           1838 ;	genMinus
                           1839 ;	AOP_HL for _totalStepsC
   04A4 21 2E 01           1840 	ld	hl,#_totalStepsC
   04A7 7E                 1841 	ld	a,(hl)
   04A8 C6 FF              1842 	add	a,#0xFF
                           1843 ;	genCmpGt
                           1844 ;	AOP_HL for _bucket
   04AA 4F                 1845 	ld	c,a
   04AB 21 14 01           1846 	ld	hl,#_bucket
   04AE 96                 1847 	sub	a,(hl)
   04AF D2 CD 04           1848 	jp	nc,00104$
                           1849 ;	square.c 261
                           1850 ;	genMinus
                           1851 ;	AOP_HL for _bucket
                           1852 ;	AOP_HL for _totalStepsC
   04B2 7E                 1853 	ld	a,(hl)
   04B3 21 2E 01           1854 	ld	hl,#_totalStepsC
   04B6 96                 1855 	sub	a,(hl)
   04B7 21 14 01           1856 	ld	hl,#_bucket
   04BA 77                 1857 	ld	(hl),a
                           1858 ;	square.c 262
                           1859 ;	genPlus
                           1860 ;	AOP_HL for _i
                           1861 ;	Can't optimise plus by inc, falling back to the normal way
   04BB 3E B0              1862 	ld	a,#<_drumC
   04BD 21 15 01           1863 	ld	hl,#_i
   04C0 86                 1864 	add	a,(hl)
   04C1 4F                 1865 	ld	c,a
   04C2 3E 00              1866 	ld	a,#>_drumC
   04C4 CE 00              1867 	adc	a,#0x00
   04C6 47                 1868 	ld	b,a
                           1869 ;	genAssign (pointer)
   04C7 3E 01              1870 	ld	a,#0x01
   04C9 02                 1871 	ld	(bc),a
                           1872 ;	genGoto
   04CA C3 E7 04           1873 	jp	00120$
                           1874 ;	genLabel
   04CD                    1875 00104$:
                           1876 ;	square.c 264
                           1877 ;	genCmpLt
                           1878 ;	AOP_HL for _bucket
                           1879 ;	AOP_HL for _totalStepsC
   04CD 21 14 01           1880 	ld	hl,#_bucket
   04D0 7E                 1881 	ld	a,(hl)
   04D1 21 2E 01           1882 	ld	hl,#_totalStepsC
   04D4 96                 1883 	sub	a,(hl)
   04D5 D2 E7 04           1884 	jp	nc,00120$
                           1885 ;	square.c 266
                           1886 ;	genPlus
                           1887 ;	AOP_HL for _i
                           1888 ;	Can't optimise plus by inc, falling back to the normal way
   04D8 3E B0              1889 	ld	a,#<_drumC
   04DA 21 15 01           1890 	ld	hl,#_i
   04DD 86                 1891 	add	a,(hl)
   04DE 4F                 1892 	ld	c,a
   04DF 3E 00              1893 	ld	a,#>_drumC
   04E1 CE 00              1894 	adc	a,#0x00
   04E3 47                 1895 	ld	b,a
                           1896 ;	genAssign (pointer)
   04E4 3E 00              1897 	ld	a,#0x00
   04E6 02                 1898 	ld	(bc),a
                           1899 ;	genLabel
   04E7                    1900 00120$:
                           1901 ;	square.c 256
                           1902 ;	genPlus
                           1903 ;	AOP_HL for _i
                           1904 ;	genPlusIncr
   04E7 21 15 01           1905 	ld	hl,#_i
   04EA 34                 1906 	inc	(hl)
                           1907 ;	genGoto
   04EB C3 8D 04           1908 	jp	00118$
                           1909 ;	genLabel
   04EE                    1910 00121$:
                           1911 ;	square.c 269
                           1912 ;	genPointerGet
                           1913 ;	AOP_HL for _first
   04EE 11 B0 00           1914 	ld	de,#_drumC
   04F1 1A                 1915 	ld	a,(de)
   04F2 21 1A 01           1916 	ld	hl,#_first
   04F5 77                 1917 	ld	(hl),a
                           1918 ;	square.c 270
                           1919 ;	genIpush
                           1920 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   04F6 3E 01              1921 	ld	a,#0x01
   04F8 F5                 1922 	push	af
   04F9 33                 1923 	inc	sp
                           1924 ;	genCall
   04FA CD 00 00           1925 	call	_performantdelay
   04FD E8 01              1926 	lda	sp,1(sp)
                           1927 ;	square.c 272
                           1928 ;	genCmpGt
                           1929 ;	AOP_HL for _numberOfPulsesC
                           1930 ;	AOP_STK for _fillDrumC_sloc3_1_0
   04FF 3E 00              1931 	ld	a,#0x00
   0501 21 2D 01           1932 	ld	hl,#_numberOfPulsesC
   0504 96                 1933 	sub	a,(hl)
   0505 3E 00              1934 	ld	a,#0x00
   0507 17                 1935 	rla
   0508 F8 00              1936 	lda	hl,0(sp)
   050A 77                 1937 	ld	(hl),a
                           1938 ;	genIfx
                           1939 ;	AOP_STK for _fillDrumC_sloc3_1_0
   050B AF                 1940 	xor	a,a
   050C B6                 1941 	or	a,(hl)
   050D CA 9D 05           1942 	jp	z,00113$
                           1943 ;	genCmpEq
                           1944 ;	AOP_HL for _first
                           1945 ; genCmpEq: left 1, right 1, result 0
   0510 21 1A 01           1946 	ld	hl,#_first
   0513 7E                 1947 	ld	a,(hl)
   0514 FE 01              1948 	cp	a,#0x01
   0516 CA 9D 05           1949 	jp	z,00113$
   0519                    1950 00153$:
                           1951 ;	square.c 274
                           1952 ;	genAssign
                           1953 ;	AOP_HL for _f
   0519 21 1C 01           1954 	ld	hl,#_f
   051C 36 00              1955 	ld	(hl),#0x00
                           1956 ;	genLabel
   051E                    1957 00108$:
                           1958 ;	genCmpLt
                           1959 ;	AOP_HL for _f
                           1960 ;	AOP_HL for _totalStepsC
   051E 21 1C 01           1961 	ld	hl,#_f
   0521 7E                 1962 	ld	a,(hl)
   0522 21 2E 01           1963 	ld	hl,#_totalStepsC
   0525 96                 1964 	sub	a,(hl)
   0526 D2 9D 05           1965 	jp	nc,00113$
                           1966 ;	square.c 275
                           1967 ;	genAssign
                           1968 ;	AOP_HL for _x
   0529 21 1D 01           1969 	ld	hl,#_x
   052C 36 00              1970 	ld	(hl),#0x00
                           1971 ;	genLabel
   052E                    1972 00122$:
                           1973 ;	genCmpLt
                           1974 ;	AOP_HL for _x
                           1975 ;	AOP_HL for _totalStepsC
   052E 21 1D 01           1976 	ld	hl,#_x
   0531 7E                 1977 	ld	a,(hl)
   0532 21 2E 01           1978 	ld	hl,#_totalStepsC
   0535 96                 1979 	sub	a,(hl)
   0536 3E 00              1980 	ld	a,#0x00
   0538 17                 1981 	rla
   0539 47                 1982 	ld	b,a
                           1983 ;	genIfx
   053A AF                 1984 	xor	a,a
   053B B0                 1985 	or	a,b
   053C CA 77 05           1986 	jp	z,00125$
                           1987 ;	square.c 276
                           1988 ;	genPlus
                           1989 ;	AOP_HL for _x
                           1990 ;	AOP_STK for _fillDrumC_sloc0_1_0
                           1991 ;	Can't optimise plus by inc, falling back to the normal way
   053F 11 B0 00           1992 	ld	de,#_drumC
   0542 21 1D 01           1993 	ld	hl,#_x
   0545 6E                 1994 	ld	l,(hl)
   0546 26 00              1995 	ld	h,#0x00
   0548 19                 1996 	add	hl,de
   0549 7D                 1997 	ld	a,l
   054A 54                 1998 	ld	d,h
   054B F8 04              1999 	lda	hl,4(sp)
   054D 22                 2000 	ld	(hl+),a
   054E 72                 2001 	ld	(hl),d
                           2002 ;	genPlus
                           2003 ;	AOP_HL for _x
                           2004 ;	AOP_STK for _fillDrumC_sloc1_1_0
                           2005 ;	genPlusIncr
                           2006 ;	Can't optimise plus by inc, falling back to the normal way
   054F 21 1D 01           2007 	ld	hl,#_x
   0552 7E                 2008 	ld	a,(hl)
   0553 C6 01              2009 	add	a,#0x01
   0555 F8 03              2010 	lda	hl,3(sp)
   0557 77                 2011 	ld	(hl),a
                           2012 ;	genPlus
                           2013 ;	AOP_STK for _fillDrumC_sloc1_1_0
                           2014 ;	AOP_STK for _fillDrumC_sloc2_1_0
                           2015 ;	Can't optimise plus by inc, falling back to the normal way
   0558 11 B0 00           2016 	ld	de,#_drumC
   055B 6E                 2017 	ld	l,(hl)
   055C 26 00              2018 	ld	h,#0x00
   055E 19                 2019 	add	hl,de
   055F 7D                 2020 	ld	a,l
   0560 54                 2021 	ld	d,h
   0561 F8 01              2022 	lda	hl,1(sp)
                           2023 ;	genPointerGet
                           2024 ;	AOP_STK for _fillDrumC_sloc2_1_0
   0563 22                 2025 	ld	(hl+),a
   0564 72                 2026 	ld	(hl),d
   0565 5F                 2027 	ld	e,a
   0566 1A                 2028 	ld	a,(de)
                           2029 ;	genAssign (pointer)
                           2030 ;	AOP_STK for _fillDrumC_sloc0_1_0
   0567 23                 2031 	inc	hl
   0568 23                 2032 	inc	hl
   0569 5E                 2033 	ld	e,(hl)
   056A 23                 2034 	inc	hl
   056B 56                 2035 	ld	d,(hl)
   056C 12                 2036 	ld	(de),a
                           2037 ;	square.c 275
                           2038 ;	genAssign
                           2039 ;	AOP_STK for _fillDrumC_sloc1_1_0
   056D 2B                 2040 	dec	hl
   056E 2B                 2041 	dec	hl
   056F 4E                 2042 	ld	c,(hl)
                           2043 ;	genAssign
                           2044 ;	AOP_HL for _x
   0570 21 1D 01           2045 	ld	hl,#_x
   0573 71                 2046 	ld	(hl),c
                           2047 ;	genGoto
   0574 C3 2E 05           2048 	jp	00122$
                           2049 ;	genLabel
   0577                    2050 00125$:
                           2051 ;	square.c 278
                           2052 ;	genMinus
                           2053 ;	AOP_HL for _totalStepsC
   0577 21 2E 01           2054 	ld	hl,#_totalStepsC
   057A 7E                 2055 	ld	a,(hl)
   057B C6 FF              2056 	add	a,#0xFF
   057D 4F                 2057 	ld	c,a
                           2058 ;	genPlus
                           2059 ;	Can't optimise plus by inc, falling back to the normal way
   057E 3E B0              2060 	ld	a,#<_drumC
   0580 81                 2061 	add	a,c
   0581 4F                 2062 	ld	c,a
   0582 3E 00              2063 	ld	a,#>_drumC
   0584 CE 00              2064 	adc	a,#0x00
   0586 47                 2065 	ld	b,a
                           2066 ;	genAssign (pointer)
                           2067 ;	AOP_HL for _first
   0587 21 1A 01           2068 	ld	hl,#_first
   058A 7E                 2069 	ld	a,(hl)
   058B 02                 2070 	ld	(bc),a
                           2071 ;	square.c 279
                           2072 ;	genPointerGet
   058C 11 B0 00           2073 	ld	de,#_drumC
   058F 1A                 2074 	ld	a,(de)
                           2075 ;	genCmpEq
                           2076 ; genCmpEq: left 1, right 1, result 0
   0590 4F                 2077 	ld	c,a
   0591 FE 01              2078 	cp	a,#0x01
   0593 CA 9D 05           2079 	jp	z,00113$
   0596                    2080 00154$:
                           2081 ;	square.c 274
                           2082 ;	genPlus
                           2083 ;	AOP_HL for _f
                           2084 ;	genPlusIncr
   0596 21 1C 01           2085 	ld	hl,#_f
   0599 34                 2086 	inc	(hl)
                           2087 ;	genGoto
   059A C3 1E 05           2088 	jp	00108$
                           2089 ;	genLabel
   059D                    2090 00113$:
                           2091 ;	square.c 285
                           2092 ;	genMinus
                           2093 ;	AOP_HL for _totalStepsC
   059D 21 2E 01           2094 	ld	hl,#_totalStepsC
   05A0 7E                 2095 	ld	a,(hl)
   05A1 C6 FF              2096 	add	a,#0xFF
   05A3 4F                 2097 	ld	c,a
                           2098 ;	genPlus
                           2099 ;	Can't optimise plus by inc, falling back to the normal way
   05A4 3E B0              2100 	ld	a,#<_drumC
   05A6 81                 2101 	add	a,c
   05A7 4F                 2102 	ld	c,a
   05A8 3E 00              2103 	ld	a,#>_drumC
   05AA CE 00              2104 	adc	a,#0x00
   05AC 47                 2105 	ld	b,a
                           2106 ;	genPointerGet
                           2107 ;	AOP_HL for _last
   05AD 0A                 2108 	ld	a,(bc)
   05AE 21 1B 01           2109 	ld	hl,#_last
   05B1 77                 2110 	ld	(hl),a
                           2111 ;	square.c 286
                           2112 ;	genIfx
                           2113 ;	AOP_STK for _fillDrumC_sloc3_1_0
   05B2 AF                 2114 	xor	a,a
   05B3 F8 00              2115 	lda	hl,0(sp)
   05B5 B6                 2116 	or	a,(hl)
   05B6 CA 2D 06           2117 	jp	z,00116$
                           2118 ;	genCmpEq
                           2119 ;	AOP_HL for _offStepC
                           2120 ; genCmpEq: left 1, right 1, result 0
   05B9 21 32 01           2121 	ld	hl,#_offStepC
   05BC 7E                 2122 	ld	a,(hl)
   05BD B7                 2123 	or	a,a
   05BE CA 2D 06           2124 	jp	z,00116$
   05C1                    2125 00155$:
                           2126 ;	square.c 288
                           2127 ;	genAssign
                           2128 ;	AOP_HL for _f
   05C1 21 1C 01           2129 	ld	hl,#_f
   05C4 36 00              2130 	ld	(hl),#0x00
                           2131 ;	genLabel
   05C6                    2132 00130$:
                           2133 ;	genCmpLt
                           2134 ;	AOP_HL for _f
                           2135 ;	AOP_HL for _offStepC
   05C6 21 1C 01           2136 	ld	hl,#_f
   05C9 7E                 2137 	ld	a,(hl)
   05CA 21 32 01           2138 	ld	hl,#_offStepC
   05CD 96                 2139 	sub	a,(hl)
   05CE D2 2D 06           2140 	jp	nc,00116$
                           2141 ;	square.c 289
                           2142 ;	genAssign
                           2143 ;	AOP_HL for _totalStepsC
                           2144 ;	AOP_HL for _x
   05D1 21 2E 01           2145 	ld	hl,#_totalStepsC
   05D4 7E                 2146 	ld	a,(hl)
   05D5 21 1D 01           2147 	ld	hl,#_x
   05D8 77                 2148 	ld	(hl),a
                           2149 ;	genLabel
   05D9                    2150 00126$:
                           2151 ;	genCmpGt
                           2152 ;	AOP_HL for _x
                           2153 ;	AOP_STK for _fillDrumC_sloc3_1_0
   05D9 3E 00              2154 	ld	a,#0x00
   05DB 21 1D 01           2155 	ld	hl,#_x
   05DE 96                 2156 	sub	a,(hl)
   05DF 3E 00              2157 	ld	a,#0x00
   05E1 17                 2158 	rla
   05E2 F8 00              2159 	lda	hl,0(sp)
   05E4 77                 2160 	ld	(hl),a
                           2161 ;	genIfx
                           2162 ;	AOP_STK for _fillDrumC_sloc3_1_0
   05E5 AF                 2163 	xor	a,a
   05E6 B6                 2164 	or	a,(hl)
   05E7 CA 1E 06           2165 	jp	z,00129$
                           2166 ;	square.c 290
                           2167 ;	genPlus
                           2168 ;	AOP_HL for _x
                           2169 ;	AOP_STK for _fillDrumC_sloc2_1_0
                           2170 ;	Can't optimise plus by inc, falling back to the normal way
   05EA 11 B0 00           2171 	ld	de,#_drumC
   05ED 21 1D 01           2172 	ld	hl,#_x
   05F0 6E                 2173 	ld	l,(hl)
   05F1 26 00              2174 	ld	h,#0x00
   05F3 19                 2175 	add	hl,de
   05F4 7D                 2176 	ld	a,l
   05F5 54                 2177 	ld	d,h
   05F6 F8 01              2178 	lda	hl,1(sp)
   05F8 22                 2179 	ld	(hl+),a
   05F9 72                 2180 	ld	(hl),d
                           2181 ;	genMinus
                           2182 ;	AOP_HL for _x
   05FA 21 1D 01           2183 	ld	hl,#_x
   05FD 7E                 2184 	ld	a,(hl)
   05FE C6 FF              2185 	add	a,#0xFF
   0600 47                 2186 	ld	b,a
                           2187 ;	genPlus
                           2188 ;	AOP_STK for _fillDrumC_sloc0_1_0
                           2189 ;	Can't optimise plus by inc, falling back to the normal way
   0601 11 B0 00           2190 	ld	de,#_drumC
   0604 68                 2191 	ld	l,b
   0605 26 00              2192 	ld	h,#0x00
   0607 19                 2193 	add	hl,de
   0608 7D                 2194 	ld	a,l
   0609 54                 2195 	ld	d,h
   060A F8 04              2196 	lda	hl,4(sp)
                           2197 ;	genPointerGet
                           2198 ;	AOP_STK for _fillDrumC_sloc0_1_0
   060C 22                 2199 	ld	(hl+),a
   060D 72                 2200 	ld	(hl),d
   060E 5F                 2201 	ld	e,a
   060F 1A                 2202 	ld	a,(de)
                           2203 ;	genAssign (pointer)
                           2204 ;	AOP_STK for _fillDrumC_sloc2_1_0
   0610 F8 01              2205 	lda	hl,1(sp)
   0612 5E                 2206 	ld	e,(hl)
   0613 23                 2207 	inc	hl
   0614 56                 2208 	ld	d,(hl)
   0615 12                 2209 	ld	(de),a
                           2210 ;	square.c 289
                           2211 ;	genAssign
   0616 48                 2212 	ld	c,b
                           2213 ;	genAssign
                           2214 ;	AOP_HL for _x
   0617 21 1D 01           2215 	ld	hl,#_x
   061A 71                 2216 	ld	(hl),c
                           2217 ;	genGoto
   061B C3 D9 05           2218 	jp	00126$
                           2219 ;	genLabel
   061E                    2220 00129$:
                           2221 ;	square.c 292
                           2222 ;	genAssign (pointer)
                           2223 ;	AOP_HL for _last
   061E 11 B0 00           2224 	ld	de,#_drumC
   0621 21 1B 01           2225 	ld	hl,#_last
   0624 7E                 2226 	ld	a,(hl)
   0625 12                 2227 	ld	(de),a
                           2228 ;	square.c 288
                           2229 ;	genPlus
                           2230 ;	AOP_HL for _f
                           2231 ;	genPlusIncr
   0626 21 1C 01           2232 	ld	hl,#_f
   0629 34                 2233 	inc	(hl)
                           2234 ;	genGoto
   062A C3 C6 05           2235 	jp	00130$
                           2236 ;	genLabel
   062D                    2237 00116$:
                           2238 ;	square.c 295
                           2239 ;	genCall
                           2240 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   062D CD 14 00           2241 	call	_rand
                           2242 ;	AOP_HL for _randC
   0630 21 19 01           2243 	ld	hl,#_randC
   0633 73                 2244 	ld	(hl),e
                           2245 ;	square.c 296
                           2246 ;	genIpush
                           2247 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0634 3E 1E              2248 	ld	a,#0x1E
   0636 F5                 2249 	push	af
   0637 33                 2250 	inc	sp
                           2251 ;	genIpush
                           2252 ;	AOP_HL for _randC
   0638 21 19 01           2253 	ld	hl,#_randC
   063B 7E                 2254 	ld	a,(hl)
   063C F5                 2255 	push	af
   063D 33                 2256 	inc	sp
                           2257 ;	genCall
   063E CD 00 00           2258 	call	__moduchar_rrx_s
   0641 4B                 2259 	ld	c,e
   0642 E8 02              2260 	lda	sp,2(sp)
                           2261 ;	genPlus
                           2262 ;	AOP_HL for _delayC
                           2263 ;	AOP_HL for _xC
                           2264 ;	Can't optimise plus by inc, falling back to the normal way
   0644 21 23 01           2265 	ld	hl,#_delayC
   0647 7E                 2266 	ld	a,(hl)
   0648 81                 2267 	add	a,c
   0649 21 20 01           2268 	ld	hl,#_xC
   064C 77                 2269 	ld	(hl),a
                           2270 ;	genLabel
   064D                    2271 00134$:
                           2272 ;	genEndFunction
   064D E8 06              2273 	lda	sp,6(sp)
   064F C9                 2274 	ret
   0650                    2275 ___fillDrumC_end:
                           2276 ;	square.c 363
                           2277 ;	genLabel
                           2278 ;	genFunction
                           2279 ;	---------------------------------
                           2280 ; Function setupDrum
                           2281 ; ---------------------------------
   0650                    2282 ___setupDrum_start:
   0650                    2283 _setupDrum:
                           2284 	
                           2285 ;	square.c 365
                           2286 ;	genCmpEq
                           2287 ;	AOP_HL for _seldrum
                           2288 ; genCmpEq: left 1, right 1, result 0
   0650 21 71 01           2289 	ld	hl,#_seldrum
   0653 7E                 2290 	ld	a,(hl)
   0654 B7                 2291 	or	a,a
   0655 CA 6D 06           2292 	jp	z,00101$
   0658                    2293 00111$:
                           2294 ;	genCmpEq
                           2295 ;	AOP_HL for _seldrum
                           2296 ; genCmpEq: left 1, right 1, result 0
   0658 21 71 01           2297 	ld	hl,#_seldrum
   065B 7E                 2298 	ld	a,(hl)
   065C FE 01              2299 	cp	a,#0x01
   065E CA 73 06           2300 	jp	z,00102$
   0661                    2301 00112$:
                           2302 ;	genCmpEq
                           2303 ;	AOP_HL for _seldrum
                           2304 ; genCmpEq: left 1, right 1, result 0
   0661 21 71 01           2305 	ld	hl,#_seldrum
   0664 7E                 2306 	ld	a,(hl)
   0665 FE 02              2307 	cp	a,#0x02
   0667 CA 79 06           2308 	jp	z,00103$
   066A                    2309 00113$:
                           2310 ;	genGoto
   066A C3 7F 06           2311 	jp	00104$
                           2312 ;	square.c 368
                           2313 ;	genLabel
   066D                    2314 00101$:
                           2315 ;	genCall
                           2316 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   066D CD E3 00           2317 	call	_fillDrumA
                           2318 ;	square.c 369
                           2319 ;	genGoto
   0670 C3 88 06           2320 	jp	00106$
                           2321 ;	square.c 371
                           2322 ;	genLabel
   0673                    2323 00102$:
                           2324 ;	genCall
                           2325 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0673 CD B2 02           2326 	call	_fillDrumB
                           2327 ;	square.c 372
                           2328 ;	genGoto
   0676 C3 88 06           2329 	jp	00106$
                           2330 ;	square.c 374
                           2331 ;	genLabel
   0679                    2332 00103$:
                           2333 ;	genCall
                           2334 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0679 CD 81 04           2335 	call	_fillDrumC
                           2336 ;	square.c 375
                           2337 ;	genGoto
   067C C3 88 06           2338 	jp	00106$
                           2339 ;	square.c 377
                           2340 ;	genLabel
   067F                    2341 00104$:
                           2342 ;	genCall
                           2343 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   067F CD E3 00           2344 	call	_fillDrumA
                           2345 ;	square.c 378
                           2346 ;	genCall
                           2347 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0682 CD B2 02           2348 	call	_fillDrumB
                           2349 ;	square.c 379
                           2350 ;	genCall
                           2351 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0685 CD 81 04           2352 	call	_fillDrumC
                           2353 ;	square.c 380
                           2354 ;	genLabel
   0688                    2355 00106$:
                           2356 ;	genEndFunction
                           2357 	
   0688 C9                 2358 	ret
   0689                    2359 ___setupDrum_end:
                           2360 ;	square.c 386
                           2361 ;	genLabel
                           2362 ;	genFunction
                           2363 ;	---------------------------------
                           2364 ; Function increaseOffStep
                           2365 ; ---------------------------------
   0689                    2366 ___increaseOffStep_start:
   0689                    2367 _increaseOffStep:
   0689 E8 FE              2368 	lda	sp,-2(sp)
                           2369 ;	square.c 388
                           2370 ;	genAssign
   068B 0E 00              2371 	ld	c,#0x00
                           2372 ;	square.c 389
                           2373 ;	genAssign
                           2374 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   068D F8 01              2375 	lda	hl,1(sp)
   068F 36 01              2376 	ld	(hl),#0x01
                           2377 ;	square.c 390
                           2378 ;	genCmpEq
                           2379 ;	AOP_HL for _seldrum
                           2380 ; genCmpEq: left 1, right 1, result 1
   0691 21 71 01           2381 	ld	hl,#_seldrum
   0694 7E                 2382 	ld	a,(hl)
   0695 B7                 2383 	or	a,a
   0696 C2 9D 06           2384 	jp	nz,00120$
   0699 3E 01              2385 	ld	a,#0x01
   069B 18 01              2386 	jr	00121$
   069D                    2387 00120$:
   069D AF                 2388 	xor	a,a
   069E                    2389 00121$:
   069E 47                 2390 	ld	b,a
                           2391 ;	genIfx
   069F AF                 2392 	xor	a,a
   06A0 B0                 2393 	or	a,b
   06A1 C2 B9 06           2394 	jp	nz,00101$
                           2395 ;	genCmpEq
                           2396 ;	AOP_HL for _seldrum
                           2397 ; genCmpEq: left 1, right 1, result 0
   06A4 21 71 01           2398 	ld	hl,#_seldrum
   06A7 7E                 2399 	ld	a,(hl)
   06A8 FE 01              2400 	cp	a,#0x01
   06AA CA C7 06           2401 	jp	z,00102$
   06AD                    2402 00122$:
                           2403 ;	genCmpEq
                           2404 ;	AOP_HL for _seldrum
                           2405 ; genCmpEq: left 1, right 1, result 0
   06AD 21 71 01           2406 	ld	hl,#_seldrum
   06B0 7E                 2407 	ld	a,(hl)
   06B1 FE 02              2408 	cp	a,#0x02
   06B3 CA D5 06           2409 	jp	z,00103$
   06B6                    2410 00123$:
                           2411 ;	genGoto
   06B6 C3 E0 06           2412 	jp	00104$
                           2413 ;	square.c 393
                           2414 ;	genLabel
   06B9                    2415 00101$:
                           2416 ;	genAssign
                           2417 ;	AOP_HL for _offStepA
   06B9 21 30 01           2418 	ld	hl,#_offStepA
   06BC 4E                 2419 	ld	c,(hl)
                           2420 ;	square.c 394
                           2421 ;	genAssign
                           2422 ;	AOP_HL for _totalStepsA
                           2423 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   06BD 21 28 01           2424 	ld	hl,#_totalStepsA
   06C0 7E                 2425 	ld	a,(hl)
   06C1 F8 01              2426 	lda	hl,1(sp)
   06C3 77                 2427 	ld	(hl),a
                           2428 ;	square.c 395
                           2429 ;	genGoto
   06C4 C3 E0 06           2430 	jp	00104$
                           2431 ;	square.c 397
                           2432 ;	genLabel
   06C7                    2433 00102$:
                           2434 ;	genAssign
                           2435 ;	AOP_HL for _offStepB
   06C7 21 31 01           2436 	ld	hl,#_offStepB
   06CA 4E                 2437 	ld	c,(hl)
                           2438 ;	square.c 398
                           2439 ;	genAssign
                           2440 ;	AOP_HL for _totalStepsB
                           2441 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   06CB 21 2B 01           2442 	ld	hl,#_totalStepsB
   06CE 7E                 2443 	ld	a,(hl)
   06CF F8 01              2444 	lda	hl,1(sp)
   06D1 77                 2445 	ld	(hl),a
                           2446 ;	square.c 399
                           2447 ;	genGoto
   06D2 C3 E0 06           2448 	jp	00104$
                           2449 ;	square.c 401
                           2450 ;	genLabel
   06D5                    2451 00103$:
                           2452 ;	genAssign
                           2453 ;	AOP_HL for _offStepC
   06D5 21 32 01           2454 	ld	hl,#_offStepC
   06D8 4E                 2455 	ld	c,(hl)
                           2456 ;	square.c 402
                           2457 ;	genAssign
                           2458 ;	AOP_HL for _totalStepsC
                           2459 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   06D9 21 2E 01           2460 	ld	hl,#_totalStepsC
   06DC 7E                 2461 	ld	a,(hl)
   06DD F8 01              2462 	lda	hl,1(sp)
   06DF 77                 2463 	ld	(hl),a
                           2464 ;	square.c 404
                           2465 ;	genLabel
   06E0                    2466 00104$:
                           2467 ;	square.c 405
                           2468 ;	genPlus
                           2469 ;	genPlusIncr
                           2470 ; Removed redundent load
   06E0 0C                 2471 	inc	c
                           2472 ;	square.c 406
                           2473 ;	genMinus
                           2474 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
                           2475 ;	AOP_STK for _increaseOffStep_sloc0_1_0
   06E1 F8 01              2476 	lda	hl,1(sp)
   06E3 7E                 2477 	ld	a,(hl)
   06E4 C6 FF              2478 	add	a,#0xFF
   06E6 2B                 2479 	dec	hl
                           2480 ;	genCmpGt
                           2481 ;	AOP_STK for _increaseOffStep_sloc0_1_0
   06E7 77                 2482 	ld      (hl),a
                           2483 ; Removed redundent load
   06E8 91                 2484 	sub	a,c
   06E9 D2 EE 06           2485 	jp	nc,00106$
                           2486 ;	square.c 408
                           2487 ;	genAssign
   06EC 0E 00              2488 	ld	c,#0x00
                           2489 ;	genLabel
   06EE                    2490 00106$:
                           2491 ;	square.c 410
                           2492 ;	genIfx
   06EE AF                 2493 	xor	a,a
   06EF B0                 2494 	or	a,b
   06F0 C2 08 07           2495 	jp	nz,00107$
                           2496 ;	genCmpEq
                           2497 ;	AOP_HL for _seldrum
                           2498 ; genCmpEq: left 1, right 1, result 0
   06F3 21 71 01           2499 	ld	hl,#_seldrum
   06F6 7E                 2500 	ld	a,(hl)
   06F7 FE 01              2501 	cp	a,#0x01
   06F9 CA 0F 07           2502 	jp	z,00108$
   06FC                    2503 00124$:
                           2504 ;	genCmpEq
                           2505 ;	AOP_HL for _seldrum
                           2506 ; genCmpEq: left 1, right 1, result 0
   06FC 21 71 01           2507 	ld	hl,#_seldrum
   06FF 7E                 2508 	ld	a,(hl)
   0700 FE 02              2509 	cp	a,#0x02
   0702 CA 16 07           2510 	jp	z,00109$
   0705                    2511 00125$:
                           2512 ;	genGoto
   0705 C3 1A 07           2513 	jp	00110$
                           2514 ;	square.c 413
                           2515 ;	genLabel
   0708                    2516 00107$:
                           2517 ;	genAssign
                           2518 ;	AOP_HL for _offStepA
   0708 21 30 01           2519 	ld	hl,#_offStepA
   070B 71                 2520 	ld	(hl),c
                           2521 ;	square.c 414
                           2522 ;	genGoto
   070C C3 1A 07           2523 	jp	00110$
                           2524 ;	square.c 416
                           2525 ;	genLabel
   070F                    2526 00108$:
                           2527 ;	genAssign
                           2528 ;	AOP_HL for _offStepB
   070F 21 31 01           2529 	ld	hl,#_offStepB
   0712 71                 2530 	ld	(hl),c
                           2531 ;	square.c 417
                           2532 ;	genGoto
   0713 C3 1A 07           2533 	jp	00110$
                           2534 ;	square.c 419
                           2535 ;	genLabel
   0716                    2536 00109$:
                           2537 ;	genAssign
                           2538 ;	AOP_HL for _offStepC
   0716 21 32 01           2539 	ld	hl,#_offStepC
   0719 71                 2540 	ld	(hl),c
                           2541 ;	square.c 421
                           2542 ;	genLabel
   071A                    2543 00110$:
                           2544 ;	square.c 422
                           2545 ;	genIpush
                           2546 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   071A C5                 2547 	push	bc
   071B 21 04 08           2548 	ld	hl,#0x0804
   071E E5                 2549 	push	hl
                           2550 ;	genCall
   071F CD 00 00           2551 	call	_set_sprite_tile
   0722 E8 02              2552 	lda	sp,2(sp)
   0724 E1                 2553 	pop	hl
   0725 4D                 2554 	ld	c,l
                           2555 ;	square.c 423
                           2556 ;	genPlus
                           2557 ;	Can't optimise plus by inc, falling back to the normal way
   0726 3E D0              2558 	ld	a,#<_dXlut
   0728 81                 2559 	add	a,c
   0729 4F                 2560 	ld	c,a
   072A 3E 00              2561 	ld	a,#>_dXlut
   072C CE 00              2562 	adc	a,#0x00
   072E 47                 2563 	ld	b,a
                           2564 ;	genPointerGet
   072F 0A                 2565 	ld	a,(bc)
                           2566 ;	genIpush
                           2567 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0730 4F                 2568 	ld	c,a
   0731 F5                 2569 	push	af
   0732 33                 2570 	inc	sp
                           2571 ;	genIpush
   0733 21 04 08           2572 	ld	hl,#0x0804
   0736 E5                 2573 	push	hl
                           2574 ;	genCall
   0737 CD 00 00           2575 	call	_move_sprite
   073A E8 03              2576 	lda	sp,3(sp)
                           2577 ;	square.c 424
                           2578 ;	genCall
                           2579 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   073C CD 00 00           2580 	call	_wait_vbl_done
                           2581 ;	square.c 425
                           2582 ;	genCall
                           2583 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   073F CD 50 06           2584 	call	_setupDrum
                           2585 ;	genLabel
   0742                    2586 00111$:
                           2587 ;	genEndFunction
   0742 E8 02              2588 	lda	sp,2(sp)
   0744 C9                 2589 	ret
   0745                    2590 ___increaseOffStep_end:
                           2591 ;	square.c 428
                           2592 ;	genLabel
                           2593 ;	genFunction
                           2594 ;	---------------------------------
                           2595 ; Function decreaseOffStep
                           2596 ; ---------------------------------
   0745                    2597 ___decreaseOffStep_start:
   0745                    2598 _decreaseOffStep:
                           2599 	
                           2600 ;	square.c 430
                           2601 ;	genAssign
   0745 0E 00              2602 	ld	c,#0x00
                           2603 ;	square.c 432
                           2604 ;	genCmpEq
                           2605 ;	AOP_HL for _seldrum
                           2606 ; genCmpEq: left 1, right 1, result 1
   0747 21 71 01           2607 	ld	hl,#_seldrum
   074A 7E                 2608 	ld	a,(hl)
   074B B7                 2609 	or	a,a
   074C C2 53 07           2610 	jp	nz,00120$
   074F 3E 01              2611 	ld	a,#0x01
   0751 18 01              2612 	jr	00121$
   0753                    2613 00120$:
   0753 AF                 2614 	xor	a,a
   0754                    2615 00121$:
   0754 47                 2616 	ld	b,a
                           2617 ;	genIfx
   0755 AF                 2618 	xor	a,a
   0756 B0                 2619 	or	a,b
   0757 C2 6F 07           2620 	jp	nz,00101$
                           2621 ;	genCmpEq
                           2622 ;	AOP_HL for _seldrum
                           2623 ; genCmpEq: left 1, right 1, result 0
   075A 21 71 01           2624 	ld	hl,#_seldrum
   075D 7E                 2625 	ld	a,(hl)
   075E FE 01              2626 	cp	a,#0x01
   0760 CA 76 07           2627 	jp	z,00102$
   0763                    2628 00122$:
                           2629 ;	genCmpEq
                           2630 ;	AOP_HL for _seldrum
                           2631 ; genCmpEq: left 1, right 1, result 0
   0763 21 71 01           2632 	ld	hl,#_seldrum
   0766 7E                 2633 	ld	a,(hl)
   0767 FE 02              2634 	cp	a,#0x02
   0769 CA 7D 07           2635 	jp	z,00103$
   076C                    2636 00123$:
                           2637 ;	genGoto
   076C C3 81 07           2638 	jp	00104$
                           2639 ;	square.c 435
                           2640 ;	genLabel
   076F                    2641 00101$:
                           2642 ;	genAssign
                           2643 ;	AOP_HL for _offStepA
   076F 21 30 01           2644 	ld	hl,#_offStepA
   0772 4E                 2645 	ld	c,(hl)
                           2646 ;	square.c 437
                           2647 ;	genGoto
   0773 C3 81 07           2648 	jp	00104$
                           2649 ;	square.c 439
                           2650 ;	genLabel
   0776                    2651 00102$:
                           2652 ;	genAssign
                           2653 ;	AOP_HL for _offStepB
   0776 21 31 01           2654 	ld	hl,#_offStepB
   0779 4E                 2655 	ld	c,(hl)
                           2656 ;	square.c 441
                           2657 ;	genGoto
   077A C3 81 07           2658 	jp	00104$
                           2659 ;	square.c 443
                           2660 ;	genLabel
   077D                    2661 00103$:
                           2662 ;	genAssign
                           2663 ;	AOP_HL for _offStepC
   077D 21 32 01           2664 	ld	hl,#_offStepC
   0780 4E                 2665 	ld	c,(hl)
                           2666 ;	square.c 446
                           2667 ;	genLabel
   0781                    2668 00104$:
                           2669 ;	square.c 448
                           2670 ;	genCmpEq
                           2671 ; genCmpEq: left 1, right 1, result 0
   0781 79                 2672 	ld	a,c
   0782 B7                 2673 	or	a,a
   0783 CA 87 07           2674 	jp	z,00106$
   0786                    2675 00124$:
                           2676 ;	square.c 450
                           2677 ;	genMinus
   0786 0D                 2678 	dec	c
                           2679 ;	genLabel
   0787                    2680 00106$:
                           2681 ;	square.c 452
                           2682 ;	genIfx
   0787 AF                 2683 	xor	a,a
   0788 B0                 2684 	or	a,b
   0789 C2 A1 07           2685 	jp	nz,00107$
                           2686 ;	genCmpEq
                           2687 ;	AOP_HL for _seldrum
                           2688 ; genCmpEq: left 1, right 1, result 0
   078C 21 71 01           2689 	ld	hl,#_seldrum
   078F 7E                 2690 	ld	a,(hl)
   0790 FE 01              2691 	cp	a,#0x01
   0792 CA A8 07           2692 	jp	z,00108$
   0795                    2693 00125$:
                           2694 ;	genCmpEq
                           2695 ;	AOP_HL for _seldrum
                           2696 ; genCmpEq: left 1, right 1, result 0
   0795 21 71 01           2697 	ld	hl,#_seldrum
   0798 7E                 2698 	ld	a,(hl)
   0799 FE 02              2699 	cp	a,#0x02
   079B CA AF 07           2700 	jp	z,00109$
   079E                    2701 00126$:
                           2702 ;	genGoto
   079E C3 B3 07           2703 	jp	00110$
                           2704 ;	square.c 455
                           2705 ;	genLabel
   07A1                    2706 00107$:
                           2707 ;	genAssign
                           2708 ;	AOP_HL for _offStepA
   07A1 21 30 01           2709 	ld	hl,#_offStepA
   07A4 71                 2710 	ld	(hl),c
                           2711 ;	square.c 456
                           2712 ;	genGoto
   07A5 C3 B3 07           2713 	jp	00110$
                           2714 ;	square.c 458
                           2715 ;	genLabel
   07A8                    2716 00108$:
                           2717 ;	genAssign
                           2718 ;	AOP_HL for _offStepB
   07A8 21 31 01           2719 	ld	hl,#_offStepB
   07AB 71                 2720 	ld	(hl),c
                           2721 ;	square.c 459
                           2722 ;	genGoto
   07AC C3 B3 07           2723 	jp	00110$
                           2724 ;	square.c 461
                           2725 ;	genLabel
   07AF                    2726 00109$:
                           2727 ;	genAssign
                           2728 ;	AOP_HL for _offStepC
   07AF 21 32 01           2729 	ld	hl,#_offStepC
   07B2 71                 2730 	ld	(hl),c
                           2731 ;	square.c 463
                           2732 ;	genLabel
   07B3                    2733 00110$:
                           2734 ;	square.c 464
                           2735 ;	genIpush
                           2736 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   07B3 C5                 2737 	push	bc
   07B4 21 04 08           2738 	ld	hl,#0x0804
   07B7 E5                 2739 	push	hl
                           2740 ;	genCall
   07B8 CD 00 00           2741 	call	_set_sprite_tile
   07BB E8 02              2742 	lda	sp,2(sp)
   07BD E1                 2743 	pop	hl
   07BE 4D                 2744 	ld	c,l
                           2745 ;	square.c 465
                           2746 ;	genPlus
                           2747 ;	Can't optimise plus by inc, falling back to the normal way
   07BF 3E D0              2748 	ld	a,#<_dXlut
   07C1 81                 2749 	add	a,c
   07C2 4F                 2750 	ld	c,a
   07C3 3E 00              2751 	ld	a,#>_dXlut
   07C5 CE 00              2752 	adc	a,#0x00
   07C7 47                 2753 	ld	b,a
                           2754 ;	genPointerGet
   07C8 0A                 2755 	ld	a,(bc)
                           2756 ;	genIpush
                           2757 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07C9 4F                 2758 	ld	c,a
   07CA F5                 2759 	push	af
   07CB 33                 2760 	inc	sp
                           2761 ;	genIpush
   07CC 21 04 08           2762 	ld	hl,#0x0804
   07CF E5                 2763 	push	hl
                           2764 ;	genCall
   07D0 CD 00 00           2765 	call	_move_sprite
   07D3 E8 03              2766 	lda	sp,3(sp)
                           2767 ;	square.c 466
                           2768 ;	genCall
                           2769 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07D5 CD 00 00           2770 	call	_wait_vbl_done
                           2771 ;	square.c 467
                           2772 ;	genCall
                           2773 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07D8 CD 50 06           2774 	call	_setupDrum
                           2775 ;	genLabel
   07DB                    2776 00111$:
                           2777 ;	genEndFunction
                           2778 	
   07DB C9                 2779 	ret
   07DC                    2780 ___decreaseOffStep_end:
                           2781 ;	square.c 470
                           2782 ;	genLabel
                           2783 ;	genFunction
                           2784 ;	---------------------------------
                           2785 ; Function increaseSteps
                           2786 ; ---------------------------------
   07DC                    2787 ___increaseSteps_start:
   07DC                    2788 _increaseSteps:
   07DC E8 FD              2789 	lda	sp,-3(sp)
                           2790 ;	square.c 472
                           2791 ;	genAssign
   07DE 0E 01              2792 	ld	c,#0x01
                           2793 ;	square.c 473
                           2794 ;	genAssign
                           2795 ;	AOP_STK for _increaseSteps_currentPulses_1_1
   07E0 F8 02              2796 	lda	hl,2(sp)
   07E2 36 01              2797 	ld	(hl),#0x01
                           2798 ;	square.c 474
                           2799 ;	genCmpEq
                           2800 ;	AOP_HL for _seldrum
                           2801 ; genCmpEq: left 1, right 1, result 1
   07E4 21 71 01           2802 	ld	hl,#_seldrum
   07E7 7E                 2803 	ld	a,(hl)
   07E8 B7                 2804 	or	a,a
   07E9 C2 F0 07           2805 	jp	nz,00120$
   07EC 3E 01              2806 	ld	a,#0x01
   07EE 18 01              2807 	jr	00121$
   07F0                    2808 00120$:
   07F0 AF                 2809 	xor	a,a
   07F1                    2810 00121$:
   07F1 47                 2811 	ld	b,a
                           2812 ;	genIfx
   07F2 AF                 2813 	xor	a,a
   07F3 B0                 2814 	or	a,b
   07F4 C2 0C 08           2815 	jp	nz,00101$
                           2816 ;	genCmpEq
                           2817 ;	AOP_HL for _seldrum
                           2818 ; genCmpEq: left 1, right 1, result 0
   07F7 21 71 01           2819 	ld	hl,#_seldrum
   07FA 7E                 2820 	ld	a,(hl)
   07FB FE 01              2821 	cp	a,#0x01
   07FD CA 25 08           2822 	jp	z,00102$
   0800                    2823 00122$:
                           2824 ;	genCmpEq
                           2825 ;	AOP_HL for _seldrum
                           2826 ; genCmpEq: left 1, right 1, result 0
   0800 21 71 01           2827 	ld	hl,#_seldrum
   0803 7E                 2828 	ld	a,(hl)
   0804 FE 02              2829 	cp	a,#0x02
   0806 CA 3E 08           2830 	jp	z,00103$
   0809                    2831 00123$:
                           2832 ;	genGoto
   0809 C3 54 08           2833 	jp	00104$
                           2834 ;	square.c 477
                           2835 ;	genLabel
   080C                    2836 00101$:
                           2837 ;	genAssign
                           2838 ;	AOP_HL for _totalStepsA
   080C 21 28 01           2839 	ld	hl,#_totalStepsA
   080F 4E                 2840 	ld	c,(hl)
                           2841 ;	square.c 478
                           2842 ;	genAssign
                           2843 ;	AOP_HL for _numberOfPulsesA
                           2844 ;	AOP_STK for _increaseSteps_currentPulses_1_1
   0810 21 27 01           2845 	ld	hl,#_numberOfPulsesA
   0813 7E                 2846 	ld	a,(hl)
   0814 F8 02              2847 	lda	hl,2(sp)
   0816 77                 2848 	ld	(hl),a
                           2849 ;	square.c 479
                           2850 ;	genIpush
                           2851 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0817 C5                 2852 	push	bc
   0818 21 00 00           2853 	ld	hl,#0x0000
   081B E5                 2854 	push	hl
                           2855 ;	genCall
   081C CD 00 00           2856 	call	_set_sprite_tile
   081F E8 02              2857 	lda	sp,2(sp)
   0821 C1                 2858 	pop	bc
                           2859 ;	square.c 480
                           2860 ;	genGoto
   0822 C3 54 08           2861 	jp	00104$
                           2862 ;	square.c 482
                           2863 ;	genLabel
   0825                    2864 00102$:
                           2865 ;	genAssign
                           2866 ;	AOP_HL for _totalStepsB
   0825 21 2B 01           2867 	ld	hl,#_totalStepsB
   0828 4E                 2868 	ld	c,(hl)
                           2869 ;	square.c 483
                           2870 ;	genAssign
                           2871 ;	AOP_HL for _numberOfPulsesB
                           2872 ;	AOP_STK for _increaseSteps_currentPulses_1_1
   0829 21 2A 01           2873 	ld	hl,#_numberOfPulsesB
   082C 7E                 2874 	ld	a,(hl)
   082D F8 02              2875 	lda	hl,2(sp)
   082F 77                 2876 	ld	(hl),a
                           2877 ;	square.c 484
                           2878 ;	genIpush
                           2879 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0830 C5                 2880 	push	bc
   0831 21 01 02           2881 	ld	hl,#0x0201
   0834 E5                 2882 	push	hl
                           2883 ;	genCall
   0835 CD 00 00           2884 	call	_set_sprite_tile
   0838 E8 02              2885 	lda	sp,2(sp)
   083A C1                 2886 	pop	bc
                           2887 ;	square.c 485
                           2888 ;	genGoto
   083B C3 54 08           2889 	jp	00104$
                           2890 ;	square.c 487
                           2891 ;	genLabel
   083E                    2892 00103$:
                           2893 ;	genAssign
                           2894 ;	AOP_HL for _totalStepsC
   083E 21 2E 01           2895 	ld	hl,#_totalStepsC
   0841 4E                 2896 	ld	c,(hl)
                           2897 ;	square.c 488
                           2898 ;	genAssign
                           2899 ;	AOP_HL for _numberOfPulsesC
                           2900 ;	AOP_STK for _increaseSteps_currentPulses_1_1
   0842 21 2D 01           2901 	ld	hl,#_numberOfPulsesC
   0845 7E                 2902 	ld	a,(hl)
   0846 F8 02              2903 	lda	hl,2(sp)
   0848 77                 2904 	ld	(hl),a
                           2905 ;	square.c 489
                           2906 ;	genIpush
                           2907 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0849 C5                 2908 	push	bc
   084A 21 03 06           2909 	ld	hl,#0x0603
   084D E5                 2910 	push	hl
                           2911 ;	genCall
   084E CD 00 00           2912 	call	_set_sprite_tile
   0851 E8 02              2913 	lda	sp,2(sp)
   0853 C1                 2914 	pop	bc
                           2915 ;	square.c 491
                           2916 ;	genLabel
   0854                    2917 00104$:
                           2918 ;	square.c 492
                           2919 ;	genPlus
                           2920 ;	genPlusIncr
                           2921 ; Removed redundent load
   0854 0C                 2922 	inc	c
                           2923 ;	square.c 493
                           2924 ;	genCmpGt
   0855 3E 20              2925 	ld	a,#0x20
   0857 91                 2926 	sub	a,c
   0858 D2 5D 08           2927 	jp	nc,00106$
                           2928 ;	square.c 495
                           2929 ;	genAssign
   085B 0E 01              2930 	ld	c,#0x01
                           2931 ;	genLabel
   085D                    2932 00106$:
                           2933 ;	square.c 497
                           2934 ;	genIfx
   085D AF                 2935 	xor	a,a
   085E B0                 2936 	or	a,b
   085F C2 77 08           2937 	jp	nz,00107$
                           2938 ;	genCmpEq
                           2939 ;	AOP_HL for _seldrum
                           2940 ; genCmpEq: left 1, right 1, result 0
   0862 21 71 01           2941 	ld	hl,#_seldrum
   0865 7E                 2942 	ld	a,(hl)
   0866 FE 01              2943 	cp	a,#0x01
   0868 CA 7E 08           2944 	jp	z,00108$
   086B                    2945 00124$:
                           2946 ;	genCmpEq
                           2947 ;	AOP_HL for _seldrum
                           2948 ; genCmpEq: left 1, right 1, result 0
   086B 21 71 01           2949 	ld	hl,#_seldrum
   086E 7E                 2950 	ld	a,(hl)
   086F FE 02              2951 	cp	a,#0x02
   0871 CA 85 08           2952 	jp	z,00109$
   0874                    2953 00125$:
                           2954 ;	genGoto
   0874 C3 89 08           2955 	jp	00110$
                           2956 ;	square.c 500
                           2957 ;	genLabel
   0877                    2958 00107$:
                           2959 ;	genAssign
                           2960 ;	AOP_HL for _totalStepsA
   0877 21 28 01           2961 	ld	hl,#_totalStepsA
   087A 71                 2962 	ld	(hl),c
                           2963 ;	square.c 501
                           2964 ;	genGoto
   087B C3 89 08           2965 	jp	00110$
                           2966 ;	square.c 503
                           2967 ;	genLabel
   087E                    2968 00108$:
                           2969 ;	genAssign
                           2970 ;	AOP_HL for _totalStepsB
   087E 21 2B 01           2971 	ld	hl,#_totalStepsB
   0881 71                 2972 	ld	(hl),c
                           2973 ;	square.c 504
                           2974 ;	genGoto
   0882 C3 89 08           2975 	jp	00110$
                           2976 ;	square.c 506
                           2977 ;	genLabel
   0885                    2978 00109$:
                           2979 ;	genAssign
                           2980 ;	AOP_HL for _totalStepsC
   0885 21 2E 01           2981 	ld	hl,#_totalStepsC
   0888 71                 2982 	ld	(hl),c
                           2983 ;	square.c 508
                           2984 ;	genLabel
   0889                    2985 00110$:
                           2986 ;	square.c 509
                           2987 ;	genMinus
   0889 0D                 2988 	dec	c
                           2989 ;	genPlus
                           2990 ;	Can't optimise plus by inc, falling back to the normal way
   088A 3E D0              2991 	ld	a,#<_dXlut
   088C 81                 2992 	add	a,c
   088D 4F                 2993 	ld	c,a
   088E 3E 00              2994 	ld	a,#>_dXlut
   0890 CE 00              2995 	adc	a,#0x00
   0892 47                 2996 	ld	b,a
                           2997 ;	genPointerGet
   0893 0A                 2998 	ld	a,(bc)
   0894 4F                 2999 	ld	c,a
                           3000 ;	genMinus
                           3001 ;	AOP_STK for _increaseSteps_currentPulses_1_1
   0895 F8 02              3002 	lda	hl,2(sp)
   0897 7E                 3003 	ld	a,(hl)
   0898 C6 FF              3004 	add	a,#0xFF
   089A 47                 3005 	ld	b,a
                           3006 ;	genPlus
                           3007 ;	AOP_STK for _increaseSteps_sloc0_1_0
                           3008 ;	Can't optimise plus by inc, falling back to the normal way
   089B 11 F0 00           3009 	ld	de,#_dYlut
   089E 68                 3010 	ld	l,b
   089F 26 00              3011 	ld	h,#0x00
   08A1 19                 3012 	add	hl,de
   08A2 7D                 3013 	ld	a,l
   08A3 54                 3014 	ld	d,h
   08A4 F8 00              3015 	lda	hl,0(sp)
                           3016 ;	genPointerGet
                           3017 ;	AOP_STK for _increaseSteps_sloc0_1_0
   08A6 22                 3018 	ld	(hl+),a
   08A7 72                 3019 	ld	(hl),d
   08A8 5F                 3020 	ld	e,a
   08A9 1A                 3021 	ld	a,(de)
   08AA 47                 3022 	ld	b,a
                           3023 ;	genIpush
                           3024 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08AB 79                 3025 	ld	a,c
   08AC F5                 3026 	push	af
   08AD 33                 3027 	inc	sp
                           3028 ;	genIpush
   08AE 78                 3029 	ld	a,b
   08AF F5                 3030 	push	af
   08B0 33                 3031 	inc	sp
                           3032 ;	genIpush
                           3033 ;	AOP_HL for _seldrum
   08B1 21 71 01           3034 	ld	hl,#_seldrum
   08B4 7E                 3035 	ld	a,(hl)
   08B5 F5                 3036 	push	af
   08B6 33                 3037 	inc	sp
                           3038 ;	genCall
   08B7 CD 00 00           3039 	call	_move_sprite
   08BA E8 03              3040 	lda	sp,3(sp)
                           3041 ;	square.c 510
                           3042 ;	genCall
                           3043 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08BC CD 00 00           3044 	call	_wait_vbl_done
                           3045 ;	square.c 511
                           3046 ;	genCall
                           3047 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08BF CD 50 06           3048 	call	_setupDrum
                           3049 ;	genLabel
   08C2                    3050 00111$:
                           3051 ;	genEndFunction
   08C2 E8 03              3052 	lda	sp,3(sp)
   08C4 C9                 3053 	ret
   08C5                    3054 ___increaseSteps_end:
                           3055 ;	square.c 514
                           3056 ;	genLabel
                           3057 ;	genFunction
                           3058 ;	---------------------------------
                           3059 ; Function decreaseSteps
                           3060 ; ---------------------------------
   08C5                    3061 ___decreaseSteps_start:
   08C5                    3062 _decreaseSteps:
   08C5 E8 FD              3063 	lda	sp,-3(sp)
                           3064 ;	square.c 516
                           3065 ;	genAssign
   08C7 0E 01              3066 	ld	c,#0x01
                           3067 ;	square.c 517
                           3068 ;	genAssign
                           3069 ;	AOP_STK for _decreaseSteps_currentPulses_1_1
   08C9 F8 02              3070 	lda	hl,2(sp)
   08CB 36 01              3071 	ld	(hl),#0x01
                           3072 ;	square.c 518
                           3073 ;	genCmpEq
                           3074 ;	AOP_HL for _seldrum
                           3075 ; genCmpEq: left 1, right 1, result 1
   08CD 21 71 01           3076 	ld	hl,#_seldrum
   08D0 7E                 3077 	ld	a,(hl)
   08D1 B7                 3078 	or	a,a
   08D2 C2 D9 08           3079 	jp	nz,00120$
   08D5 3E 01              3080 	ld	a,#0x01
   08D7 18 01              3081 	jr	00121$
   08D9                    3082 00120$:
   08D9 AF                 3083 	xor	a,a
   08DA                    3084 00121$:
   08DA 47                 3085 	ld	b,a
                           3086 ;	genIfx
   08DB AF                 3087 	xor	a,a
   08DC B0                 3088 	or	a,b
   08DD C2 F5 08           3089 	jp	nz,00101$
                           3090 ;	genCmpEq
                           3091 ;	AOP_HL for _seldrum
                           3092 ; genCmpEq: left 1, right 1, result 0
   08E0 21 71 01           3093 	ld	hl,#_seldrum
   08E3 7E                 3094 	ld	a,(hl)
   08E4 FE 01              3095 	cp	a,#0x01
   08E6 CA 0E 09           3096 	jp	z,00102$
   08E9                    3097 00122$:
                           3098 ;	genCmpEq
                           3099 ;	AOP_HL for _seldrum
                           3100 ; genCmpEq: left 1, right 1, result 0
   08E9 21 71 01           3101 	ld	hl,#_seldrum
   08EC 7E                 3102 	ld	a,(hl)
   08ED FE 02              3103 	cp	a,#0x02
   08EF CA 27 09           3104 	jp	z,00103$
   08F2                    3105 00123$:
                           3106 ;	genGoto
   08F2 C3 3D 09           3107 	jp	00104$
                           3108 ;	square.c 521
                           3109 ;	genLabel
   08F5                    3110 00101$:
                           3111 ;	genAssign
                           3112 ;	AOP_HL for _totalStepsA
   08F5 21 28 01           3113 	ld	hl,#_totalStepsA
   08F8 4E                 3114 	ld	c,(hl)
                           3115 ;	square.c 522
                           3116 ;	genAssign
                           3117 ;	AOP_HL for _numberOfPulsesA
                           3118 ;	AOP_STK for _decreaseSteps_currentPulses_1_1
   08F9 21 27 01           3119 	ld	hl,#_numberOfPulsesA
   08FC 7E                 3120 	ld	a,(hl)
   08FD F8 02              3121 	lda	hl,2(sp)
   08FF 77                 3122 	ld	(hl),a
                           3123 ;	square.c 523
                           3124 ;	genIpush
                           3125 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0900 C5                 3126 	push	bc
   0901 21 00 00           3127 	ld	hl,#0x0000
   0904 E5                 3128 	push	hl
                           3129 ;	genCall
   0905 CD 00 00           3130 	call	_set_sprite_tile
   0908 E8 02              3131 	lda	sp,2(sp)
   090A C1                 3132 	pop	bc
                           3133 ;	square.c 524
                           3134 ;	genGoto
   090B C3 3D 09           3135 	jp	00104$
                           3136 ;	square.c 526
                           3137 ;	genLabel
   090E                    3138 00102$:
                           3139 ;	genAssign
                           3140 ;	AOP_HL for _totalStepsB
   090E 21 2B 01           3141 	ld	hl,#_totalStepsB
   0911 4E                 3142 	ld	c,(hl)
                           3143 ;	square.c 527
                           3144 ;	genAssign
                           3145 ;	AOP_HL for _numberOfPulsesB
                           3146 ;	AOP_STK for _decreaseSteps_currentPulses_1_1
   0912 21 2A 01           3147 	ld	hl,#_numberOfPulsesB
   0915 7E                 3148 	ld	a,(hl)
   0916 F8 02              3149 	lda	hl,2(sp)
   0918 77                 3150 	ld	(hl),a
                           3151 ;	square.c 528
                           3152 ;	genIpush
                           3153 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0919 C5                 3154 	push	bc
   091A 21 01 02           3155 	ld	hl,#0x0201
   091D E5                 3156 	push	hl
                           3157 ;	genCall
   091E CD 00 00           3158 	call	_set_sprite_tile
   0921 E8 02              3159 	lda	sp,2(sp)
   0923 C1                 3160 	pop	bc
                           3161 ;	square.c 529
                           3162 ;	genGoto
   0924 C3 3D 09           3163 	jp	00104$
                           3164 ;	square.c 531
                           3165 ;	genLabel
   0927                    3166 00103$:
                           3167 ;	genAssign
                           3168 ;	AOP_HL for _totalStepsC
   0927 21 2E 01           3169 	ld	hl,#_totalStepsC
   092A 4E                 3170 	ld	c,(hl)
                           3171 ;	square.c 532
                           3172 ;	genAssign
                           3173 ;	AOP_HL for _numberOfPulsesC
                           3174 ;	AOP_STK for _decreaseSteps_currentPulses_1_1
   092B 21 2D 01           3175 	ld	hl,#_numberOfPulsesC
   092E 7E                 3176 	ld	a,(hl)
   092F F8 02              3177 	lda	hl,2(sp)
   0931 77                 3178 	ld	(hl),a
                           3179 ;	square.c 533
                           3180 ;	genIpush
                           3181 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0932 C5                 3182 	push	bc
   0933 21 03 06           3183 	ld	hl,#0x0603
   0936 E5                 3184 	push	hl
                           3185 ;	genCall
   0937 CD 00 00           3186 	call	_set_sprite_tile
   093A E8 02              3187 	lda	sp,2(sp)
   093C C1                 3188 	pop	bc
                           3189 ;	square.c 535
                           3190 ;	genLabel
   093D                    3191 00104$:
                           3192 ;	square.c 536
                           3193 ;	genMinus
   093D 0D                 3194 	dec	c
                           3195 ;	square.c 537
                           3196 ;	genCmpLt
   093E 79                 3197 	ld	a,c
   093F FE 01              3198 	cp	#0x01
   0941 D2 46 09           3199 	jp	nc,00106$
                           3200 ;	square.c 539
                           3201 ;	genAssign
   0944 0E 20              3202 	ld	c,#0x20
                           3203 ;	genLabel
   0946                    3204 00106$:
                           3205 ;	square.c 541
                           3206 ;	genIfx
   0946 AF                 3207 	xor	a,a
   0947 B0                 3208 	or	a,b
   0948 C2 60 09           3209 	jp	nz,00107$
                           3210 ;	genCmpEq
                           3211 ;	AOP_HL for _seldrum
                           3212 ; genCmpEq: left 1, right 1, result 0
   094B 21 71 01           3213 	ld	hl,#_seldrum
   094E 7E                 3214 	ld	a,(hl)
   094F FE 01              3215 	cp	a,#0x01
   0951 CA 67 09           3216 	jp	z,00108$
   0954                    3217 00124$:
                           3218 ;	genCmpEq
                           3219 ;	AOP_HL for _seldrum
                           3220 ; genCmpEq: left 1, right 1, result 0
   0954 21 71 01           3221 	ld	hl,#_seldrum
   0957 7E                 3222 	ld	a,(hl)
   0958 FE 02              3223 	cp	a,#0x02
   095A CA 6E 09           3224 	jp	z,00109$
   095D                    3225 00125$:
                           3226 ;	genGoto
   095D C3 72 09           3227 	jp	00110$
                           3228 ;	square.c 544
                           3229 ;	genLabel
   0960                    3230 00107$:
                           3231 ;	genAssign
                           3232 ;	AOP_HL for _totalStepsA
   0960 21 28 01           3233 	ld	hl,#_totalStepsA
   0963 71                 3234 	ld	(hl),c
                           3235 ;	square.c 545
                           3236 ;	genGoto
   0964 C3 72 09           3237 	jp	00110$
                           3238 ;	square.c 547
                           3239 ;	genLabel
   0967                    3240 00108$:
                           3241 ;	genAssign
                           3242 ;	AOP_HL for _totalStepsB
   0967 21 2B 01           3243 	ld	hl,#_totalStepsB
   096A 71                 3244 	ld	(hl),c
                           3245 ;	square.c 548
                           3246 ;	genGoto
   096B C3 72 09           3247 	jp	00110$
                           3248 ;	square.c 550
                           3249 ;	genLabel
   096E                    3250 00109$:
                           3251 ;	genAssign
                           3252 ;	AOP_HL for _totalStepsC
   096E 21 2E 01           3253 	ld	hl,#_totalStepsC
   0971 71                 3254 	ld	(hl),c
                           3255 ;	square.c 552
                           3256 ;	genLabel
   0972                    3257 00110$:
                           3258 ;	square.c 553
                           3259 ;	genMinus
   0972 0D                 3260 	dec	c
                           3261 ;	genPlus
                           3262 ;	Can't optimise plus by inc, falling back to the normal way
   0973 3E D0              3263 	ld	a,#<_dXlut
   0975 81                 3264 	add	a,c
   0976 4F                 3265 	ld	c,a
   0977 3E 00              3266 	ld	a,#>_dXlut
   0979 CE 00              3267 	adc	a,#0x00
   097B 47                 3268 	ld	b,a
                           3269 ;	genPointerGet
   097C 0A                 3270 	ld	a,(bc)
   097D 4F                 3271 	ld	c,a
                           3272 ;	genMinus
                           3273 ;	AOP_STK for _decreaseSteps_currentPulses_1_1
   097E F8 02              3274 	lda	hl,2(sp)
   0980 7E                 3275 	ld	a,(hl)
   0981 C6 FF              3276 	add	a,#0xFF
   0983 47                 3277 	ld	b,a
                           3278 ;	genPlus
                           3279 ;	AOP_STK for _decreaseSteps_sloc0_1_0
                           3280 ;	Can't optimise plus by inc, falling back to the normal way
   0984 11 F0 00           3281 	ld	de,#_dYlut
   0987 68                 3282 	ld	l,b
   0988 26 00              3283 	ld	h,#0x00
   098A 19                 3284 	add	hl,de
   098B 7D                 3285 	ld	a,l
   098C 54                 3286 	ld	d,h
   098D F8 00              3287 	lda	hl,0(sp)
                           3288 ;	genPointerGet
                           3289 ;	AOP_STK for _decreaseSteps_sloc0_1_0
   098F 22                 3290 	ld	(hl+),a
   0990 72                 3291 	ld	(hl),d
   0991 5F                 3292 	ld	e,a
   0992 1A                 3293 	ld	a,(de)
   0993 47                 3294 	ld	b,a
                           3295 ;	genIpush
                           3296 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0994 79                 3297 	ld	a,c
   0995 F5                 3298 	push	af
   0996 33                 3299 	inc	sp
                           3300 ;	genIpush
   0997 78                 3301 	ld	a,b
   0998 F5                 3302 	push	af
   0999 33                 3303 	inc	sp
                           3304 ;	genIpush
                           3305 ;	AOP_HL for _seldrum
   099A 21 71 01           3306 	ld	hl,#_seldrum
   099D 7E                 3307 	ld	a,(hl)
   099E F5                 3308 	push	af
   099F 33                 3309 	inc	sp
                           3310 ;	genCall
   09A0 CD 00 00           3311 	call	_move_sprite
   09A3 E8 03              3312 	lda	sp,3(sp)
                           3313 ;	square.c 554
                           3314 ;	genCall
                           3315 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   09A5 CD 00 00           3316 	call	_wait_vbl_done
                           3317 ;	square.c 555
                           3318 ;	genCall
                           3319 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   09A8 CD 50 06           3320 	call	_setupDrum
                           3321 ;	genLabel
   09AB                    3322 00111$:
                           3323 ;	genEndFunction
   09AB E8 03              3324 	lda	sp,3(sp)
   09AD C9                 3325 	ret
   09AE                    3326 ___decreaseSteps_end:
                           3327 ;	square.c 558
                           3328 ;	genLabel
                           3329 ;	genFunction
                           3330 ;	---------------------------------
                           3331 ; Function increasePulses
                           3332 ; ---------------------------------
   09AE                    3333 ___increasePulses_start:
   09AE                    3334 _increasePulses:
   09AE E8 FC              3335 	lda	sp,-4(sp)
                           3336 ;	square.c 560
                           3337 ;	genAssign
                           3338 ;	AOP_STK for _increasePulses_currentSteps_1_1
   09B0 F8 03              3339 	lda	hl,3(sp)
   09B2 36 01              3340 	ld	(hl),#0x01
                           3341 ;	square.c 561
                           3342 ;	genAssign
                           3343 ;	AOP_STK for _increasePulses_currentPulses_1_1
   09B4 2B                 3344 	dec	hl
   09B5 36 01              3345 	ld	(hl),#0x01
                           3346 ;	square.c 562
                           3347 ;	genCmpEq
                           3348 ;	AOP_HL for _seldrum
                           3349 ; genCmpEq: left 1, right 1, result 1
   09B7 21 71 01           3350 	ld	hl,#_seldrum
   09BA 7E                 3351 	ld	a,(hl)
   09BB B7                 3352 	or	a,a
   09BC C2 C3 09           3353 	jp	nz,00120$
   09BF 3E 01              3354 	ld	a,#0x01
   09C1 18 01              3355 	jr	00121$
   09C3                    3356 00120$:
   09C3 AF                 3357 	xor	a,a
   09C4                    3358 00121$:
   09C4 4F                 3359 	ld	c,a
                           3360 ;	genIfx
   09C5 AF                 3361 	xor	a,a
   09C6 B1                 3362 	or	a,c
   09C7 C2 DF 09           3363 	jp	nz,00101$
                           3364 ;	genCmpEq
                           3365 ;	AOP_HL for _seldrum
                           3366 ; genCmpEq: left 1, right 1, result 0
   09CA 21 71 01           3367 	ld	hl,#_seldrum
   09CD 7E                 3368 	ld	a,(hl)
   09CE FE 01              3369 	cp	a,#0x01
   09D0 CA FC 09           3370 	jp	z,00102$
   09D3                    3371 00122$:
                           3372 ;	genCmpEq
                           3373 ;	AOP_HL for _seldrum
                           3374 ; genCmpEq: left 1, right 1, result 0
   09D3 21 71 01           3375 	ld	hl,#_seldrum
   09D6 7E                 3376 	ld	a,(hl)
   09D7 FE 02              3377 	cp	a,#0x02
   09D9 CA 19 0A           3378 	jp	z,00103$
   09DC                    3379 00123$:
                           3380 ;	genGoto
   09DC C3 33 0A           3381 	jp	00104$
                           3382 ;	square.c 565
                           3383 ;	genLabel
   09DF                    3384 00101$:
                           3385 ;	genAssign
                           3386 ;	AOP_HL for _totalStepsA
                           3387 ;	AOP_STK for _increasePulses_currentSteps_1_1
   09DF 21 28 01           3388 	ld	hl,#_totalStepsA
   09E2 7E                 3389 	ld	a,(hl)
   09E3 F8 03              3390 	lda	hl,3(sp)
   09E5 77                 3391 	ld	(hl),a
                           3392 ;	square.c 566
                           3393 ;	genAssign
                           3394 ;	AOP_HL for _numberOfPulsesA
                           3395 ;	AOP_STK for _increasePulses_currentPulses_1_1
   09E6 21 27 01           3396 	ld	hl,#_numberOfPulsesA
   09E9 7E                 3397 	ld	a,(hl)
   09EA F8 02              3398 	lda	hl,2(sp)
   09EC 77                 3399 	ld	(hl),a
                           3400 ;	square.c 567
                           3401 ;	genIpush
                           3402 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   09ED C5                 3403 	push	bc
   09EE 21 00 00           3404 	ld	hl,#0x0000
   09F1 E5                 3405 	push	hl
                           3406 ;	genCall
   09F2 CD 00 00           3407 	call	_set_sprite_tile
   09F5 E8 02              3408 	lda	sp,2(sp)
   09F7 E1                 3409 	pop	hl
   09F8 4D                 3410 	ld	c,l
                           3411 ;	square.c 568
                           3412 ;	genGoto
   09F9 C3 33 0A           3413 	jp	00104$
                           3414 ;	square.c 570
                           3415 ;	genLabel
   09FC                    3416 00102$:
                           3417 ;	genAssign
                           3418 ;	AOP_HL for _totalStepsB
                           3419 ;	AOP_STK for _increasePulses_currentSteps_1_1
   09FC 21 2B 01           3420 	ld	hl,#_totalStepsB
   09FF 7E                 3421 	ld	a,(hl)
   0A00 F8 03              3422 	lda	hl,3(sp)
   0A02 77                 3423 	ld	(hl),a
                           3424 ;	square.c 571
                           3425 ;	genAssign
                           3426 ;	AOP_HL for _numberOfPulsesB
                           3427 ;	AOP_STK for _increasePulses_currentPulses_1_1
   0A03 21 2A 01           3428 	ld	hl,#_numberOfPulsesB
   0A06 7E                 3429 	ld	a,(hl)
   0A07 F8 02              3430 	lda	hl,2(sp)
   0A09 77                 3431 	ld	(hl),a
                           3432 ;	square.c 572
                           3433 ;	genIpush
                           3434 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A0A C5                 3435 	push	bc
   0A0B 21 01 02           3436 	ld	hl,#0x0201
   0A0E E5                 3437 	push	hl
                           3438 ;	genCall
   0A0F CD 00 00           3439 	call	_set_sprite_tile
   0A12 E8 02              3440 	lda	sp,2(sp)
   0A14 E1                 3441 	pop	hl
   0A15 4D                 3442 	ld	c,l
                           3443 ;	square.c 573
                           3444 ;	genGoto
   0A16 C3 33 0A           3445 	jp	00104$
                           3446 ;	square.c 575
                           3447 ;	genLabel
   0A19                    3448 00103$:
                           3449 ;	genAssign
                           3450 ;	AOP_HL for _totalStepsC
                           3451 ;	AOP_STK for _increasePulses_currentSteps_1_1
   0A19 21 2E 01           3452 	ld	hl,#_totalStepsC
   0A1C 7E                 3453 	ld	a,(hl)
   0A1D F8 03              3454 	lda	hl,3(sp)
   0A1F 77                 3455 	ld	(hl),a
                           3456 ;	square.c 576
                           3457 ;	genAssign
                           3458 ;	AOP_HL for _numberOfPulsesC
                           3459 ;	AOP_STK for _increasePulses_currentPulses_1_1
   0A20 21 2D 01           3460 	ld	hl,#_numberOfPulsesC
   0A23 7E                 3461 	ld	a,(hl)
   0A24 F8 02              3462 	lda	hl,2(sp)
   0A26 77                 3463 	ld	(hl),a
                           3464 ;	square.c 577
                           3465 ;	genIpush
                           3466 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A27 C5                 3467 	push	bc
   0A28 21 03 06           3468 	ld	hl,#0x0603
   0A2B E5                 3469 	push	hl
                           3470 ;	genCall
   0A2C CD 00 00           3471 	call	_set_sprite_tile
   0A2F E8 02              3472 	lda	sp,2(sp)
   0A31 E1                 3473 	pop	hl
   0A32 4D                 3474 	ld	c,l
                           3475 ;	square.c 579
                           3476 ;	genLabel
   0A33                    3477 00104$:
                           3478 ;	square.c 580
                           3479 ;	genPlus
                           3480 ;	AOP_STK for _increasePulses_currentPulses_1_1
                           3481 ;	genPlusIncr
   0A33 F8 02              3482 	lda	hl,2(sp)
   0A35 34                 3483 	inc	(hl)
                           3484 ;	square.c 581
                           3485 ;	genCmpGt
                           3486 ;	AOP_STK for _increasePulses_currentPulses_1_1
   0A36 3E 20              3487 	ld	a,#0x20
   0A38 96                 3488 	sub	a,(hl)
   0A39 D2 3E 0A           3489 	jp	nc,00106$
                           3490 ;	square.c 583
                           3491 ;	genAssign
                           3492 ;	AOP_STK for _increasePulses_currentPulses_1_1
   0A3C 36 01              3493 	ld	(hl),#0x01
                           3494 ;	genLabel
   0A3E                    3495 00106$:
                           3496 ;	square.c 585
                           3497 ;	genIfx
   0A3E AF                 3498 	xor	a,a
   0A3F B1                 3499 	or	a,c
   0A40 C2 58 0A           3500 	jp	nz,00107$
                           3501 ;	genCmpEq
                           3502 ;	AOP_HL for _seldrum
                           3503 ; genCmpEq: left 1, right 1, result 0
   0A43 21 71 01           3504 	ld	hl,#_seldrum
   0A46 7E                 3505 	ld	a,(hl)
   0A47 FE 01              3506 	cp	a,#0x01
   0A49 CA 62 0A           3507 	jp	z,00108$
   0A4C                    3508 00124$:
                           3509 ;	genCmpEq
                           3510 ;	AOP_HL for _seldrum
                           3511 ; genCmpEq: left 1, right 1, result 0
   0A4C 21 71 01           3512 	ld	hl,#_seldrum
   0A4F 7E                 3513 	ld	a,(hl)
   0A50 FE 02              3514 	cp	a,#0x02
   0A52 CA 6C 0A           3515 	jp	z,00109$
   0A55                    3516 00125$:
                           3517 ;	genGoto
   0A55 C3 73 0A           3518 	jp	00110$
                           3519 ;	square.c 588
                           3520 ;	genLabel
   0A58                    3521 00107$:
                           3522 ;	genAssign
                           3523 ;	AOP_STK for _increasePulses_currentPulses_1_1
                           3524 ;	AOP_HL for _numberOfPulsesA
   0A58 F8 02              3525 	lda	hl,2(sp)
   0A5A 7E                 3526 	ld	a,(hl)
   0A5B 21 27 01           3527 	ld	hl,#_numberOfPulsesA
   0A5E 77                 3528 	ld	(hl),a
                           3529 ;	square.c 589
                           3530 ;	genGoto
   0A5F C3 73 0A           3531 	jp	00110$
                           3532 ;	square.c 591
                           3533 ;	genLabel
   0A62                    3534 00108$:
                           3535 ;	genAssign
                           3536 ;	AOP_STK for _increasePulses_currentPulses_1_1
                           3537 ;	AOP_HL for _numberOfPulsesB
   0A62 F8 02              3538 	lda	hl,2(sp)
   0A64 7E                 3539 	ld	a,(hl)
   0A65 21 2A 01           3540 	ld	hl,#_numberOfPulsesB
   0A68 77                 3541 	ld	(hl),a
                           3542 ;	square.c 592
                           3543 ;	genGoto
   0A69 C3 73 0A           3544 	jp	00110$
                           3545 ;	square.c 594
                           3546 ;	genLabel
   0A6C                    3547 00109$:
                           3548 ;	genAssign
                           3549 ;	AOP_STK for _increasePulses_currentPulses_1_1
                           3550 ;	AOP_HL for _numberOfPulsesC
   0A6C F8 02              3551 	lda	hl,2(sp)
   0A6E 7E                 3552 	ld	a,(hl)
   0A6F 21 2D 01           3553 	ld	hl,#_numberOfPulsesC
   0A72 77                 3554 	ld	(hl),a
                           3555 ;	square.c 596
                           3556 ;	genLabel
   0A73                    3557 00110$:
                           3558 ;	square.c 597
                           3559 ;	genMinus
                           3560 ;	AOP_STK for _increasePulses_currentSteps_1_1
   0A73 F8 03              3561 	lda	hl,3(sp)
   0A75 7E                 3562 	ld	a,(hl)
   0A76 C6 FF              3563 	add	a,#0xFF
   0A78 4F                 3564 	ld	c,a
                           3565 ;	genPlus
                           3566 ;	Can't optimise plus by inc, falling back to the normal way
   0A79 3E D0              3567 	ld	a,#<_dXlut
   0A7B 81                 3568 	add	a,c
   0A7C 4F                 3569 	ld	c,a
   0A7D 3E 00              3570 	ld	a,#>_dXlut
   0A7F CE 00              3571 	adc	a,#0x00
   0A81 47                 3572 	ld	b,a
                           3573 ;	genPointerGet
   0A82 0A                 3574 	ld	a,(bc)
   0A83 4F                 3575 	ld	c,a
                           3576 ;	genMinus
                           3577 ;	AOP_STK for _increasePulses_currentPulses_1_1
   0A84 2B                 3578 	dec	hl
   0A85 7E                 3579 	ld	a,(hl)
   0A86 C6 FF              3580 	add	a,#0xFF
   0A88 47                 3581 	ld	b,a
                           3582 ;	genPlus
                           3583 ;	AOP_STK for _increasePulses_sloc0_1_0
                           3584 ;	Can't optimise plus by inc, falling back to the normal way
   0A89 11 F0 00           3585 	ld	de,#_dYlut
   0A8C 68                 3586 	ld	l,b
   0A8D 26 00              3587 	ld	h,#0x00
   0A8F 19                 3588 	add	hl,de
   0A90 7D                 3589 	ld	a,l
   0A91 54                 3590 	ld	d,h
   0A92 F8 00              3591 	lda	hl,0(sp)
                           3592 ;	genPointerGet
                           3593 ;	AOP_STK for _increasePulses_sloc0_1_0
   0A94 22                 3594 	ld	(hl+),a
   0A95 72                 3595 	ld	(hl),d
   0A96 5F                 3596 	ld	e,a
   0A97 1A                 3597 	ld	a,(de)
   0A98 47                 3598 	ld	b,a
                           3599 ;	genIpush
                           3600 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A99 79                 3601 	ld	a,c
   0A9A F5                 3602 	push	af
   0A9B 33                 3603 	inc	sp
                           3604 ;	genIpush
   0A9C 78                 3605 	ld	a,b
   0A9D F5                 3606 	push	af
   0A9E 33                 3607 	inc	sp
                           3608 ;	genIpush
                           3609 ;	AOP_HL for _seldrum
   0A9F 21 71 01           3610 	ld	hl,#_seldrum
   0AA2 7E                 3611 	ld	a,(hl)
   0AA3 F5                 3612 	push	af
   0AA4 33                 3613 	inc	sp
                           3614 ;	genCall
   0AA5 CD 00 00           3615 	call	_move_sprite
   0AA8 E8 03              3616 	lda	sp,3(sp)
                           3617 ;	square.c 598
                           3618 ;	genCall
                           3619 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AAA CD 00 00           3620 	call	_wait_vbl_done
                           3621 ;	square.c 599
                           3622 ;	genCall
                           3623 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AAD CD 50 06           3624 	call	_setupDrum
                           3625 ;	genLabel
   0AB0                    3626 00111$:
                           3627 ;	genEndFunction
   0AB0 E8 04              3628 	lda	sp,4(sp)
   0AB2 C9                 3629 	ret
   0AB3                    3630 ___increasePulses_end:
                           3631 ;	square.c 602
                           3632 ;	genLabel
                           3633 ;	genFunction
                           3634 ;	---------------------------------
                           3635 ; Function decreasePulses
                           3636 ; ---------------------------------
   0AB3                    3637 ___decreasePulses_start:
   0AB3                    3638 _decreasePulses:
   0AB3 E8 FC              3639 	lda	sp,-4(sp)
                           3640 ;	square.c 604
                           3641 ;	genAssign
                           3642 ;	AOP_STK for _decreasePulses_currentSteps_1_1
   0AB5 F8 03              3643 	lda	hl,3(sp)
   0AB7 36 01              3644 	ld	(hl),#0x01
                           3645 ;	square.c 605
                           3646 ;	genAssign
                           3647 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0AB9 2B                 3648 	dec	hl
   0ABA 36 01              3649 	ld	(hl),#0x01
                           3650 ;	square.c 606
                           3651 ;	genCmpEq
                           3652 ;	AOP_HL for _seldrum
                           3653 ; genCmpEq: left 1, right 1, result 1
   0ABC 21 71 01           3654 	ld	hl,#_seldrum
   0ABF 7E                 3655 	ld	a,(hl)
   0AC0 B7                 3656 	or	a,a
   0AC1 C2 C8 0A           3657 	jp	nz,00120$
   0AC4 3E 01              3658 	ld	a,#0x01
   0AC6 18 01              3659 	jr	00121$
   0AC8                    3660 00120$:
   0AC8 AF                 3661 	xor	a,a
   0AC9                    3662 00121$:
   0AC9 4F                 3663 	ld	c,a
                           3664 ;	genIfx
   0ACA AF                 3665 	xor	a,a
   0ACB B1                 3666 	or	a,c
   0ACC C2 E4 0A           3667 	jp	nz,00101$
                           3668 ;	genCmpEq
                           3669 ;	AOP_HL for _seldrum
                           3670 ; genCmpEq: left 1, right 1, result 0
   0ACF 21 71 01           3671 	ld	hl,#_seldrum
   0AD2 7E                 3672 	ld	a,(hl)
   0AD3 FE 01              3673 	cp	a,#0x01
   0AD5 CA 01 0B           3674 	jp	z,00102$
   0AD8                    3675 00122$:
                           3676 ;	genCmpEq
                           3677 ;	AOP_HL for _seldrum
                           3678 ; genCmpEq: left 1, right 1, result 0
   0AD8 21 71 01           3679 	ld	hl,#_seldrum
   0ADB 7E                 3680 	ld	a,(hl)
   0ADC FE 02              3681 	cp	a,#0x02
   0ADE CA 1E 0B           3682 	jp	z,00103$
   0AE1                    3683 00123$:
                           3684 ;	genGoto
   0AE1 C3 38 0B           3685 	jp	00104$
                           3686 ;	square.c 609
                           3687 ;	genLabel
   0AE4                    3688 00101$:
                           3689 ;	genAssign
                           3690 ;	AOP_HL for _totalStepsA
                           3691 ;	AOP_STK for _decreasePulses_currentSteps_1_1
   0AE4 21 28 01           3692 	ld	hl,#_totalStepsA
   0AE7 7E                 3693 	ld	a,(hl)
   0AE8 F8 03              3694 	lda	hl,3(sp)
   0AEA 77                 3695 	ld	(hl),a
                           3696 ;	square.c 610
                           3697 ;	genAssign
                           3698 ;	AOP_HL for _numberOfPulsesA
                           3699 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0AEB 21 27 01           3700 	ld	hl,#_numberOfPulsesA
   0AEE 7E                 3701 	ld	a,(hl)
   0AEF F8 02              3702 	lda	hl,2(sp)
   0AF1 77                 3703 	ld	(hl),a
                           3704 ;	square.c 611
                           3705 ;	genIpush
                           3706 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0AF2 C5                 3707 	push	bc
   0AF3 21 00 00           3708 	ld	hl,#0x0000
   0AF6 E5                 3709 	push	hl
                           3710 ;	genCall
   0AF7 CD 00 00           3711 	call	_set_sprite_tile
   0AFA E8 02              3712 	lda	sp,2(sp)
   0AFC E1                 3713 	pop	hl
   0AFD 4D                 3714 	ld	c,l
                           3715 ;	square.c 612
                           3716 ;	genGoto
   0AFE C3 38 0B           3717 	jp	00104$
                           3718 ;	square.c 614
                           3719 ;	genLabel
   0B01                    3720 00102$:
                           3721 ;	genAssign
                           3722 ;	AOP_HL for _totalStepsB
                           3723 ;	AOP_STK for _decreasePulses_currentSteps_1_1
   0B01 21 2B 01           3724 	ld	hl,#_totalStepsB
   0B04 7E                 3725 	ld	a,(hl)
   0B05 F8 03              3726 	lda	hl,3(sp)
   0B07 77                 3727 	ld	(hl),a
                           3728 ;	square.c 615
                           3729 ;	genAssign
                           3730 ;	AOP_HL for _numberOfPulsesB
                           3731 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0B08 21 2A 01           3732 	ld	hl,#_numberOfPulsesB
   0B0B 7E                 3733 	ld	a,(hl)
   0B0C F8 02              3734 	lda	hl,2(sp)
   0B0E 77                 3735 	ld	(hl),a
                           3736 ;	square.c 616
                           3737 ;	genIpush
                           3738 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B0F C5                 3739 	push	bc
   0B10 21 01 02           3740 	ld	hl,#0x0201
   0B13 E5                 3741 	push	hl
                           3742 ;	genCall
   0B14 CD 00 00           3743 	call	_set_sprite_tile
   0B17 E8 02              3744 	lda	sp,2(sp)
   0B19 E1                 3745 	pop	hl
   0B1A 4D                 3746 	ld	c,l
                           3747 ;	square.c 617
                           3748 ;	genGoto
   0B1B C3 38 0B           3749 	jp	00104$
                           3750 ;	square.c 619
                           3751 ;	genLabel
   0B1E                    3752 00103$:
                           3753 ;	genAssign
                           3754 ;	AOP_HL for _totalStepsC
                           3755 ;	AOP_STK for _decreasePulses_currentSteps_1_1
   0B1E 21 2E 01           3756 	ld	hl,#_totalStepsC
   0B21 7E                 3757 	ld	a,(hl)
   0B22 F8 03              3758 	lda	hl,3(sp)
   0B24 77                 3759 	ld	(hl),a
                           3760 ;	square.c 620
                           3761 ;	genAssign
                           3762 ;	AOP_HL for _numberOfPulsesC
                           3763 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0B25 21 2D 01           3764 	ld	hl,#_numberOfPulsesC
   0B28 7E                 3765 	ld	a,(hl)
   0B29 F8 02              3766 	lda	hl,2(sp)
   0B2B 77                 3767 	ld	(hl),a
                           3768 ;	square.c 621
                           3769 ;	genIpush
                           3770 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B2C C5                 3771 	push	bc
   0B2D 21 03 06           3772 	ld	hl,#0x0603
   0B30 E5                 3773 	push	hl
                           3774 ;	genCall
   0B31 CD 00 00           3775 	call	_set_sprite_tile
   0B34 E8 02              3776 	lda	sp,2(sp)
   0B36 E1                 3777 	pop	hl
   0B37 4D                 3778 	ld	c,l
                           3779 ;	square.c 623
                           3780 ;	genLabel
   0B38                    3781 00104$:
                           3782 ;	square.c 624
                           3783 ;	genMinus
                           3784 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0B38 F8 02              3785 	lda	hl,2(sp)
   0B3A 35                 3786 	dec	(hl)
                           3787 ;	square.c 625
                           3788 ;	genCmpLt
                           3789 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0B3B 7E                 3790 	ld	a,(hl)
   0B3C FE 01              3791 	cp	#0x01
   0B3E D2 43 0B           3792 	jp	nc,00106$
                           3793 ;	square.c 627
                           3794 ;	genAssign
                           3795 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0B41 36 20              3796 	ld	(hl),#0x20
                           3797 ;	genLabel
   0B43                    3798 00106$:
                           3799 ;	square.c 629
                           3800 ;	genIfx
   0B43 AF                 3801 	xor	a,a
   0B44 B1                 3802 	or	a,c
   0B45 C2 5D 0B           3803 	jp	nz,00107$
                           3804 ;	genCmpEq
                           3805 ;	AOP_HL for _seldrum
                           3806 ; genCmpEq: left 1, right 1, result 0
   0B48 21 71 01           3807 	ld	hl,#_seldrum
   0B4B 7E                 3808 	ld	a,(hl)
   0B4C FE 01              3809 	cp	a,#0x01
   0B4E CA 67 0B           3810 	jp	z,00108$
   0B51                    3811 00124$:
                           3812 ;	genCmpEq
                           3813 ;	AOP_HL for _seldrum
                           3814 ; genCmpEq: left 1, right 1, result 0
   0B51 21 71 01           3815 	ld	hl,#_seldrum
   0B54 7E                 3816 	ld	a,(hl)
   0B55 FE 02              3817 	cp	a,#0x02
   0B57 CA 71 0B           3818 	jp	z,00109$
   0B5A                    3819 00125$:
                           3820 ;	genGoto
   0B5A C3 78 0B           3821 	jp	00110$
                           3822 ;	square.c 632
                           3823 ;	genLabel
   0B5D                    3824 00107$:
                           3825 ;	genAssign
                           3826 ;	AOP_STK for _decreasePulses_currentPulses_1_1
                           3827 ;	AOP_HL for _numberOfPulsesA
   0B5D F8 02              3828 	lda	hl,2(sp)
   0B5F 7E                 3829 	ld	a,(hl)
   0B60 21 27 01           3830 	ld	hl,#_numberOfPulsesA
   0B63 77                 3831 	ld	(hl),a
                           3832 ;	square.c 633
                           3833 ;	genGoto
   0B64 C3 78 0B           3834 	jp	00110$
                           3835 ;	square.c 635
                           3836 ;	genLabel
   0B67                    3837 00108$:
                           3838 ;	genAssign
                           3839 ;	AOP_STK for _decreasePulses_currentPulses_1_1
                           3840 ;	AOP_HL for _numberOfPulsesB
   0B67 F8 02              3841 	lda	hl,2(sp)
   0B69 7E                 3842 	ld	a,(hl)
   0B6A 21 2A 01           3843 	ld	hl,#_numberOfPulsesB
   0B6D 77                 3844 	ld	(hl),a
                           3845 ;	square.c 636
                           3846 ;	genGoto
   0B6E C3 78 0B           3847 	jp	00110$
                           3848 ;	square.c 638
                           3849 ;	genLabel
   0B71                    3850 00109$:
                           3851 ;	genAssign
                           3852 ;	AOP_STK for _decreasePulses_currentPulses_1_1
                           3853 ;	AOP_HL for _numberOfPulsesC
   0B71 F8 02              3854 	lda	hl,2(sp)
   0B73 7E                 3855 	ld	a,(hl)
   0B74 21 2D 01           3856 	ld	hl,#_numberOfPulsesC
   0B77 77                 3857 	ld	(hl),a
                           3858 ;	square.c 640
                           3859 ;	genLabel
   0B78                    3860 00110$:
                           3861 ;	square.c 641
                           3862 ;	genMinus
                           3863 ;	AOP_STK for _decreasePulses_currentSteps_1_1
   0B78 F8 03              3864 	lda	hl,3(sp)
   0B7A 7E                 3865 	ld	a,(hl)
   0B7B C6 FF              3866 	add	a,#0xFF
   0B7D 4F                 3867 	ld	c,a
                           3868 ;	genPlus
                           3869 ;	Can't optimise plus by inc, falling back to the normal way
   0B7E 3E D0              3870 	ld	a,#<_dXlut
   0B80 81                 3871 	add	a,c
   0B81 4F                 3872 	ld	c,a
   0B82 3E 00              3873 	ld	a,#>_dXlut
   0B84 CE 00              3874 	adc	a,#0x00
   0B86 47                 3875 	ld	b,a
                           3876 ;	genPointerGet
   0B87 0A                 3877 	ld	a,(bc)
   0B88 4F                 3878 	ld	c,a
                           3879 ;	genMinus
                           3880 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0B89 2B                 3881 	dec	hl
   0B8A 7E                 3882 	ld	a,(hl)
   0B8B C6 FF              3883 	add	a,#0xFF
   0B8D 47                 3884 	ld	b,a
                           3885 ;	genPlus
                           3886 ;	AOP_STK for _decreasePulses_sloc0_1_0
                           3887 ;	Can't optimise plus by inc, falling back to the normal way
   0B8E 11 F0 00           3888 	ld	de,#_dYlut
   0B91 68                 3889 	ld	l,b
   0B92 26 00              3890 	ld	h,#0x00
   0B94 19                 3891 	add	hl,de
   0B95 7D                 3892 	ld	a,l
   0B96 54                 3893 	ld	d,h
   0B97 F8 00              3894 	lda	hl,0(sp)
                           3895 ;	genPointerGet
                           3896 ;	AOP_STK for _decreasePulses_sloc0_1_0
   0B99 22                 3897 	ld	(hl+),a
   0B9A 72                 3898 	ld	(hl),d
   0B9B 5F                 3899 	ld	e,a
   0B9C 1A                 3900 	ld	a,(de)
   0B9D 47                 3901 	ld	b,a
                           3902 ;	genIpush
                           3903 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B9E 79                 3904 	ld	a,c
   0B9F F5                 3905 	push	af
   0BA0 33                 3906 	inc	sp
                           3907 ;	genIpush
   0BA1 78                 3908 	ld	a,b
   0BA2 F5                 3909 	push	af
   0BA3 33                 3910 	inc	sp
                           3911 ;	genIpush
                           3912 ;	AOP_HL for _seldrum
   0BA4 21 71 01           3913 	ld	hl,#_seldrum
   0BA7 7E                 3914 	ld	a,(hl)
   0BA8 F5                 3915 	push	af
   0BA9 33                 3916 	inc	sp
                           3917 ;	genCall
   0BAA CD 00 00           3918 	call	_move_sprite
   0BAD E8 03              3919 	lda	sp,3(sp)
                           3920 ;	square.c 642
                           3921 ;	genCall
                           3922 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0BAF CD 00 00           3923 	call	_wait_vbl_done
                           3924 ;	square.c 643
                           3925 ;	genCall
                           3926 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0BB2 CD 50 06           3927 	call	_setupDrum
                           3928 ;	genLabel
   0BB5                    3929 00111$:
                           3930 ;	genEndFunction
   0BB5 E8 04              3931 	lda	sp,4(sp)
   0BB7 C9                 3932 	ret
   0BB8                    3933 ___decreasePulses_end:
                           3934 ;	square.c 647
                           3935 ;	genLabel
                           3936 ;	genFunction
                           3937 ;	---------------------------------
                           3938 ; Function increaseSwing
                           3939 ; ---------------------------------
   0BB8                    3940 ___increaseSwing_start:
   0BB8                    3941 _increaseSwing:
                           3942 	
                           3943 ;	square.c 649
                           3944 ;	genAssign
   0BB8 0E 00              3945 	ld	c,#0x00
                           3946 ;	square.c 650
                           3947 ;	genCmpEq
                           3948 ;	AOP_HL for _seldrum
                           3949 ; genCmpEq: left 1, right 1, result 1
   0BBA 21 71 01           3950 	ld	hl,#_seldrum
   0BBD 7E                 3951 	ld	a,(hl)
   0BBE B7                 3952 	or	a,a
   0BBF C2 C6 0B           3953 	jp	nz,00117$
   0BC2 3E 01              3954 	ld	a,#0x01
   0BC4 18 01              3955 	jr	00118$
   0BC6                    3956 00117$:
   0BC6 AF                 3957 	xor	a,a
   0BC7                    3958 00118$:
   0BC7 47                 3959 	ld	b,a
                           3960 ;	genIfx
   0BC8 AF                 3961 	xor	a,a
   0BC9 B0                 3962 	or	a,b
   0BCA C2 E2 0B           3963 	jp	nz,00101$
                           3964 ;	genCmpEq
                           3965 ;	AOP_HL for _seldrum
                           3966 ; genCmpEq: left 1, right 1, result 0
   0BCD 21 71 01           3967 	ld	hl,#_seldrum
   0BD0 7E                 3968 	ld	a,(hl)
   0BD1 FE 01              3969 	cp	a,#0x01
   0BD3 CA E9 0B           3970 	jp	z,00102$
   0BD6                    3971 00119$:
                           3972 ;	genCmpEq
                           3973 ;	AOP_HL for _seldrum
                           3974 ; genCmpEq: left 1, right 1, result 0
   0BD6 21 71 01           3975 	ld	hl,#_seldrum
   0BD9 7E                 3976 	ld	a,(hl)
   0BDA FE 02              3977 	cp	a,#0x02
   0BDC CA F0 0B           3978 	jp	z,00103$
   0BDF                    3979 00120$:
                           3980 ;	genGoto
   0BDF C3 F4 0B           3981 	jp	00104$
                           3982 ;	square.c 653
                           3983 ;	genLabel
   0BE2                    3984 00101$:
                           3985 ;	genAssign
                           3986 ;	AOP_HL for _delayA
   0BE2 21 21 01           3987 	ld	hl,#_delayA
   0BE5 4E                 3988 	ld	c,(hl)
                           3989 ;	square.c 654
                           3990 ;	genGoto
   0BE6 C3 F4 0B           3991 	jp	00104$
                           3992 ;	square.c 656
                           3993 ;	genLabel
   0BE9                    3994 00102$:
                           3995 ;	genAssign
                           3996 ;	AOP_HL for _delayB
   0BE9 21 22 01           3997 	ld	hl,#_delayB
   0BEC 4E                 3998 	ld	c,(hl)
                           3999 ;	square.c 657
                           4000 ;	genGoto
   0BED C3 F4 0B           4001 	jp	00104$
                           4002 ;	square.c 659
                           4003 ;	genLabel
   0BF0                    4004 00103$:
                           4005 ;	genAssign
                           4006 ;	AOP_HL for _delayC
   0BF0 21 23 01           4007 	ld	hl,#_delayC
   0BF3 4E                 4008 	ld	c,(hl)
                           4009 ;	square.c 661
                           4010 ;	genLabel
   0BF4                    4011 00104$:
                           4012 ;	square.c 662
                           4013 ;	genPlus
                           4014 ;	genPlusIncr
                           4015 ; Removed redundent load
   0BF4 0C                 4016 	inc	c
                           4017 ;	square.c 663
                           4018 ;	genIfx
   0BF5 AF                 4019 	xor	a,a
   0BF6 B0                 4020 	or	a,b
   0BF7 C2 0F 0C           4021 	jp	nz,00105$
                           4022 ;	genCmpEq
                           4023 ;	AOP_HL for _seldrum
                           4024 ; genCmpEq: left 1, right 1, result 0
   0BFA 21 71 01           4025 	ld	hl,#_seldrum
   0BFD 7E                 4026 	ld	a,(hl)
   0BFE FE 01              4027 	cp	a,#0x01
   0C00 CA 16 0C           4028 	jp	z,00106$
   0C03                    4029 00121$:
                           4030 ;	genCmpEq
                           4031 ;	AOP_HL for _seldrum
                           4032 ; genCmpEq: left 1, right 1, result 0
   0C03 21 71 01           4033 	ld	hl,#_seldrum
   0C06 7E                 4034 	ld	a,(hl)
   0C07 FE 02              4035 	cp	a,#0x02
   0C09 CA 1D 0C           4036 	jp	z,00107$
   0C0C                    4037 00122$:
                           4038 ;	genGoto
   0C0C C3 21 0C           4039 	jp	00108$
                           4040 ;	square.c 666
                           4041 ;	genLabel
   0C0F                    4042 00105$:
                           4043 ;	genAssign
                           4044 ;	AOP_HL for _delayA
   0C0F 21 21 01           4045 	ld	hl,#_delayA
   0C12 71                 4046 	ld	(hl),c
                           4047 ;	square.c 667
                           4048 ;	genGoto
   0C13 C3 21 0C           4049 	jp	00108$
                           4050 ;	square.c 669
                           4051 ;	genLabel
   0C16                    4052 00106$:
                           4053 ;	genAssign
                           4054 ;	AOP_HL for _delayB
   0C16 21 22 01           4055 	ld	hl,#_delayB
   0C19 71                 4056 	ld	(hl),c
                           4057 ;	square.c 670
                           4058 ;	genGoto
   0C1A C3 21 0C           4059 	jp	00108$
                           4060 ;	square.c 672
                           4061 ;	genLabel
   0C1D                    4062 00107$:
                           4063 ;	genAssign
                           4064 ;	AOP_HL for _delayC
   0C1D 21 23 01           4065 	ld	hl,#_delayC
   0C20 71                 4066 	ld	(hl),c
                           4067 ;	square.c 674
                           4068 ;	genLabel
   0C21                    4069 00108$:
                           4070 ;	square.c 675
                           4071 ;	genIpush
                           4072 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0C21 C5                 4073 	push	bc
   0C22 21 05 0A           4074 	ld	hl,#0x0A05
   0C25 E5                 4075 	push	hl
                           4076 ;	genCall
   0C26 CD 00 00           4077 	call	_set_sprite_tile
   0C29 E8 02              4078 	lda	sp,2(sp)
   0C2B E1                 4079 	pop	hl
   0C2C 4D                 4080 	ld	c,l
                           4081 ;	square.c 676
                           4082 ;	genPlus
                           4083 ;	genPlusIncr
                           4084 ;	Can't optimise plus by inc, falling back to the normal way
   0C2D 79                 4085 	ld	a,c
   0C2E C6 08              4086 	add	a,#0x08
   0C30 4F                 4087 	ld	c,a
                           4088 ;	genIpush
                           4089 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C31 3E 98              4090 	ld	a,#0x98
   0C33 F5                 4091 	push	af
   0C34 33                 4092 	inc	sp
                           4093 ;	genIpush
   0C35 79                 4094 	ld	a,c
   0C36 F5                 4095 	push	af
   0C37 33                 4096 	inc	sp
                           4097 ;	genIpush
   0C38 3E 05              4098 	ld	a,#0x05
   0C3A F5                 4099 	push	af
   0C3B 33                 4100 	inc	sp
                           4101 ;	genCall
   0C3C CD 00 00           4102 	call	_move_sprite
   0C3F E8 03              4103 	lda	sp,3(sp)
                           4104 ;	square.c 677
                           4105 ;	genCall
                           4106 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C41 CD 00 00           4107 	call	_wait_vbl_done
                           4108 ;	square.c 678
                           4109 ;	genCall
                           4110 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C44 CD 50 06           4111 	call	_setupDrum
                           4112 ;	genLabel
   0C47                    4113 00109$:
                           4114 ;	genEndFunction
                           4115 	
   0C47 C9                 4116 	ret
   0C48                    4117 ___increaseSwing_end:
                           4118 ;	square.c 681
                           4119 ;	genLabel
                           4120 ;	genFunction
                           4121 ;	---------------------------------
                           4122 ; Function decreaseSwing
                           4123 ; ---------------------------------
   0C48                    4124 ___decreaseSwing_start:
   0C48                    4125 _decreaseSwing:
                           4126 	
                           4127 ;	square.c 683
                           4128 ;	genAssign
   0C48 0E 00              4129 	ld	c,#0x00
                           4130 ;	square.c 684
                           4131 ;	genCmpEq
                           4132 ;	AOP_HL for _seldrum
                           4133 ; genCmpEq: left 1, right 1, result 1
   0C4A 21 71 01           4134 	ld	hl,#_seldrum
   0C4D 7E                 4135 	ld	a,(hl)
   0C4E B7                 4136 	or	a,a
   0C4F C2 56 0C           4137 	jp	nz,00120$
   0C52 3E 01              4138 	ld	a,#0x01
   0C54 18 01              4139 	jr	00121$
   0C56                    4140 00120$:
   0C56 AF                 4141 	xor	a,a
   0C57                    4142 00121$:
   0C57 47                 4143 	ld	b,a
                           4144 ;	genIfx
   0C58 AF                 4145 	xor	a,a
   0C59 B0                 4146 	or	a,b
   0C5A C2 72 0C           4147 	jp	nz,00101$
                           4148 ;	genCmpEq
                           4149 ;	AOP_HL for _seldrum
                           4150 ; genCmpEq: left 1, right 1, result 0
   0C5D 21 71 01           4151 	ld	hl,#_seldrum
   0C60 7E                 4152 	ld	a,(hl)
   0C61 FE 01              4153 	cp	a,#0x01
   0C63 CA 79 0C           4154 	jp	z,00102$
   0C66                    4155 00122$:
                           4156 ;	genCmpEq
                           4157 ;	AOP_HL for _seldrum
                           4158 ; genCmpEq: left 1, right 1, result 0
   0C66 21 71 01           4159 	ld	hl,#_seldrum
   0C69 7E                 4160 	ld	a,(hl)
   0C6A FE 02              4161 	cp	a,#0x02
   0C6C CA 80 0C           4162 	jp	z,00103$
   0C6F                    4163 00123$:
                           4164 ;	genGoto
   0C6F C3 84 0C           4165 	jp	00104$
                           4166 ;	square.c 687
                           4167 ;	genLabel
   0C72                    4168 00101$:
                           4169 ;	genAssign
                           4170 ;	AOP_HL for _delayA
   0C72 21 21 01           4171 	ld	hl,#_delayA
   0C75 4E                 4172 	ld	c,(hl)
                           4173 ;	square.c 688
                           4174 ;	genGoto
   0C76 C3 84 0C           4175 	jp	00104$
                           4176 ;	square.c 690
                           4177 ;	genLabel
   0C79                    4178 00102$:
                           4179 ;	genAssign
                           4180 ;	AOP_HL for _delayB
   0C79 21 22 01           4181 	ld	hl,#_delayB
   0C7C 4E                 4182 	ld	c,(hl)
                           4183 ;	square.c 691
                           4184 ;	genGoto
   0C7D C3 84 0C           4185 	jp	00104$
                           4186 ;	square.c 693
                           4187 ;	genLabel
   0C80                    4188 00103$:
                           4189 ;	genAssign
                           4190 ;	AOP_HL for _delayC
   0C80 21 23 01           4191 	ld	hl,#_delayC
   0C83 4E                 4192 	ld	c,(hl)
                           4193 ;	square.c 695
                           4194 ;	genLabel
   0C84                    4195 00104$:
                           4196 ;	square.c 696
                           4197 ;	genCmpEq
                           4198 ; genCmpEq: left 1, right 1, result 0
   0C84 79                 4199 	ld	a,c
   0C85 B7                 4200 	or	a,a
   0C86 CA 8A 0C           4201 	jp	z,00106$
   0C89                    4202 00124$:
                           4203 ;	square.c 698
                           4204 ;	genMinus
   0C89 0D                 4205 	dec	c
                           4206 ;	genLabel
   0C8A                    4207 00106$:
                           4208 ;	square.c 700
                           4209 ;	genIfx
   0C8A AF                 4210 	xor	a,a
   0C8B B0                 4211 	or	a,b
   0C8C C2 A4 0C           4212 	jp	nz,00107$
                           4213 ;	genCmpEq
                           4214 ;	AOP_HL for _seldrum
                           4215 ; genCmpEq: left 1, right 1, result 0
   0C8F 21 71 01           4216 	ld	hl,#_seldrum
   0C92 7E                 4217 	ld	a,(hl)
   0C93 FE 01              4218 	cp	a,#0x01
   0C95 CA AB 0C           4219 	jp	z,00108$
   0C98                    4220 00125$:
                           4221 ;	genCmpEq
                           4222 ;	AOP_HL for _seldrum
                           4223 ; genCmpEq: left 1, right 1, result 0
   0C98 21 71 01           4224 	ld	hl,#_seldrum
   0C9B 7E                 4225 	ld	a,(hl)
   0C9C FE 02              4226 	cp	a,#0x02
   0C9E CA B2 0C           4227 	jp	z,00109$
   0CA1                    4228 00126$:
                           4229 ;	genGoto
   0CA1 C3 B6 0C           4230 	jp	00110$
                           4231 ;	square.c 703
                           4232 ;	genLabel
   0CA4                    4233 00107$:
                           4234 ;	genAssign
                           4235 ;	AOP_HL for _delayA
   0CA4 21 21 01           4236 	ld	hl,#_delayA
   0CA7 71                 4237 	ld	(hl),c
                           4238 ;	square.c 704
                           4239 ;	genGoto
   0CA8 C3 B6 0C           4240 	jp	00110$
                           4241 ;	square.c 706
                           4242 ;	genLabel
   0CAB                    4243 00108$:
                           4244 ;	genAssign
                           4245 ;	AOP_HL for _delayB
   0CAB 21 22 01           4246 	ld	hl,#_delayB
   0CAE 71                 4247 	ld	(hl),c
                           4248 ;	square.c 707
                           4249 ;	genGoto
   0CAF C3 B6 0C           4250 	jp	00110$
                           4251 ;	square.c 709
                           4252 ;	genLabel
   0CB2                    4253 00109$:
                           4254 ;	genAssign
                           4255 ;	AOP_HL for _delayC
   0CB2 21 23 01           4256 	ld	hl,#_delayC
   0CB5 71                 4257 	ld	(hl),c
                           4258 ;	square.c 711
                           4259 ;	genLabel
   0CB6                    4260 00110$:
                           4261 ;	square.c 712
                           4262 ;	genIpush
                           4263 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0CB6 C5                 4264 	push	bc
   0CB7 21 05 0A           4265 	ld	hl,#0x0A05
   0CBA E5                 4266 	push	hl
                           4267 ;	genCall
   0CBB CD 00 00           4268 	call	_set_sprite_tile
   0CBE E8 02              4269 	lda	sp,2(sp)
   0CC0 E1                 4270 	pop	hl
   0CC1 4D                 4271 	ld	c,l
                           4272 ;	square.c 713
                           4273 ;	genPlus
                           4274 ;	genPlusIncr
                           4275 ;	Can't optimise plus by inc, falling back to the normal way
   0CC2 79                 4276 	ld	a,c
   0CC3 C6 08              4277 	add	a,#0x08
   0CC5 4F                 4278 	ld	c,a
                           4279 ;	genIpush
                           4280 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CC6 3E 98              4281 	ld	a,#0x98
   0CC8 F5                 4282 	push	af
   0CC9 33                 4283 	inc	sp
                           4284 ;	genIpush
   0CCA 79                 4285 	ld	a,c
   0CCB F5                 4286 	push	af
   0CCC 33                 4287 	inc	sp
                           4288 ;	genIpush
   0CCD 3E 05              4289 	ld	a,#0x05
   0CCF F5                 4290 	push	af
   0CD0 33                 4291 	inc	sp
                           4292 ;	genCall
   0CD1 CD 00 00           4293 	call	_move_sprite
   0CD4 E8 03              4294 	lda	sp,3(sp)
                           4295 ;	square.c 714
                           4296 ;	genCall
                           4297 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CD6 CD 00 00           4298 	call	_wait_vbl_done
                           4299 ;	square.c 715
                           4300 ;	genCall
                           4301 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CD9 CD 50 06           4302 	call	_setupDrum
                           4303 ;	genLabel
   0CDC                    4304 00111$:
                           4305 ;	genEndFunction
                           4306 	
   0CDC C9                 4307 	ret
   0CDD                    4308 ___decreaseSwing_end:
                           4309 ;	square.c 718
                           4310 ;	genLabel
                           4311 ;	genFunction
                           4312 ;	---------------------------------
                           4313 ; Function tick
                           4314 ; ---------------------------------
   0CDD                    4315 ___tick_start:
   0CDD                    4316 _tick:
                           4317 	
                           4318 ;	square.c 721
                           4319 ;	genMinus
                           4320 ;	AOP_HL for _totalStepsA
   0CDD 21 28 01           4321 	ld	hl,#_totalStepsA
   0CE0 7E                 4322 	ld	a,(hl)
   0CE1 C6 FF              4323 	add	a,#0xFF
                           4324 ;	genCmpGt
                           4325 ;	AOP_HL for _clkA
   0CE3 4F                 4326 	ld	c,a
   0CE4 21 29 01           4327 	ld	hl,#_clkA
   0CE7 96                 4328 	sub	a,(hl)
   0CE8 D2 ED 0C           4329 	jp	nc,00102$
                           4330 ;	square.c 723
                           4331 ;	genAssign
                           4332 ;	AOP_HL for _clkA
   0CEB 36 00              4333 	ld	(hl),#0x00
                           4334 ;	genLabel
   0CED                    4335 00102$:
                           4336 ;	square.c 725
                           4337 ;	genMinus
                           4338 ;	AOP_HL for _totalStepsB
   0CED 21 2B 01           4339 	ld	hl,#_totalStepsB
   0CF0 7E                 4340 	ld	a,(hl)
   0CF1 C6 FF              4341 	add	a,#0xFF
                           4342 ;	genCmpGt
                           4343 ;	AOP_HL for _clkB
   0CF3 4F                 4344 	ld	c,a
   0CF4 21 2C 01           4345 	ld	hl,#_clkB
   0CF7 96                 4346 	sub	a,(hl)
   0CF8 D2 FD 0C           4347 	jp	nc,00104$
                           4348 ;	square.c 727
                           4349 ;	genAssign
                           4350 ;	AOP_HL for _clkB
   0CFB 36 00              4351 	ld	(hl),#0x00
                           4352 ;	genLabel
   0CFD                    4353 00104$:
                           4354 ;	square.c 729
                           4355 ;	genMinus
                           4356 ;	AOP_HL for _totalStepsC
   0CFD 21 2E 01           4357 	ld	hl,#_totalStepsC
   0D00 7E                 4358 	ld	a,(hl)
   0D01 C6 FF              4359 	add	a,#0xFF
                           4360 ;	genCmpGt
                           4361 ;	AOP_HL for _clkC
   0D03 4F                 4362 	ld	c,a
   0D04 21 2F 01           4363 	ld	hl,#_clkC
   0D07 96                 4364 	sub	a,(hl)
   0D08 D2 0D 0D           4365 	jp	nc,00106$
                           4366 ;	square.c 731
                           4367 ;	genAssign
                           4368 ;	AOP_HL for _clkC
   0D0B 36 00              4369 	ld	(hl),#0x00
                           4370 ;	genLabel
   0D0D                    4371 00106$:
                           4372 ;	square.c 734
                           4373 ;	genCmpEq
                           4374 ;	AOP_HL for _syncToDrum
                           4375 ; genCmpEq: left 1, right 1, result 0
   0D0D 21 25 01           4376 	ld	hl,#_syncToDrum
   0D10 7E                 4377 	ld	a,(hl)
   0D11 FE 01              4378 	cp	a,#0x01
   0D13 C2 77 0D           4379 	jp	nz,00114$
   0D16 18 03              4380 	jr	00144$
   0D18                    4381 00143$:
   0D18 C3 77 0D           4382 	jp	00114$
   0D1B                    4383 00144$:
                           4384 ;	square.c 736
                           4385 ;	genCmpEq
                           4386 ;	AOP_HL for _seldrum
                           4387 ; genCmpEq: left 1, right 1, result 0
   0D1B 21 71 01           4388 	ld	hl,#_seldrum
   0D1E 7E                 4389 	ld	a,(hl)
   0D1F B7                 4390 	or	a,a
   0D20 CA 38 0D           4391 	jp	z,00107$
   0D23                    4392 00145$:
                           4393 ;	genCmpEq
                           4394 ;	AOP_HL for _seldrum
                           4395 ; genCmpEq: left 1, right 1, result 0
   0D23 21 71 01           4396 	ld	hl,#_seldrum
   0D26 7E                 4397 	ld	a,(hl)
   0D27 FE 01              4398 	cp	a,#0x01
   0D29 CA 43 0D           4399 	jp	z,00108$
   0D2C                    4400 00146$:
                           4401 ;	genCmpEq
                           4402 ;	AOP_HL for _seldrum
                           4403 ; genCmpEq: left 1, right 1, result 0
   0D2C 21 71 01           4404 	ld	hl,#_seldrum
   0D2F 7E                 4405 	ld	a,(hl)
   0D30 FE 02              4406 	cp	a,#0x02
   0D32 CA 4E 0D           4407 	jp	z,00109$
   0D35                    4408 00147$:
                           4409 ;	genGoto
   0D35 C3 56 0D           4410 	jp	00110$
                           4411 ;	square.c 739
                           4412 ;	genLabel
   0D38                    4413 00107$:
                           4414 ;	genAssign
                           4415 ;	AOP_HL for _clkA
                           4416 ;	AOP_HL for _clockToSync
   0D38 21 29 01           4417 	ld	hl,#_clkA
   0D3B 7E                 4418 	ld	a,(hl)
   0D3C 21 26 01           4419 	ld	hl,#_clockToSync
   0D3F 77                 4420 	ld	(hl),a
                           4421 ;	square.c 740
                           4422 ;	genGoto
   0D40 C3 56 0D           4423 	jp	00110$
                           4424 ;	square.c 742
                           4425 ;	genLabel
   0D43                    4426 00108$:
                           4427 ;	genAssign
                           4428 ;	AOP_HL for _clkB
                           4429 ;	AOP_HL for _clockToSync
   0D43 21 2C 01           4430 	ld	hl,#_clkB
   0D46 7E                 4431 	ld	a,(hl)
   0D47 21 26 01           4432 	ld	hl,#_clockToSync
   0D4A 77                 4433 	ld	(hl),a
                           4434 ;	square.c 743
                           4435 ;	genGoto
   0D4B C3 56 0D           4436 	jp	00110$
                           4437 ;	square.c 745
                           4438 ;	genLabel
   0D4E                    4439 00109$:
                           4440 ;	genAssign
                           4441 ;	AOP_HL for _clkC
                           4442 ;	AOP_HL for _clockToSync
   0D4E 21 2F 01           4443 	ld	hl,#_clkC
   0D51 7E                 4444 	ld	a,(hl)
   0D52 21 26 01           4445 	ld	hl,#_clockToSync
   0D55 77                 4446 	ld	(hl),a
                           4447 ;	square.c 747
                           4448 ;	genLabel
   0D56                    4449 00110$:
                           4450 ;	square.c 749
                           4451 ;	genCmpEq
                           4452 ;	AOP_HL for _clockToSync
                           4453 ; genCmpEq: left 1, right 1, result 0
   0D56 21 26 01           4454 	ld	hl,#_clockToSync
   0D59 7E                 4455 	ld	a,(hl)
   0D5A B7                 4456 	or	a,a
   0D5B C2 77 0D           4457 	jp	nz,00114$
   0D5E 18 03              4458 	jr	00149$
   0D60                    4459 00148$:
   0D60 C3 77 0D           4460 	jp	00114$
   0D63                    4461 00149$:
                           4462 ;	square.c 751
                           4463 ;	genAssign
                           4464 ;	AOP_HL for _clkA
   0D63 21 29 01           4465 	ld	hl,#_clkA
   0D66 36 00              4466 	ld	(hl),#0x00
                           4467 ;	square.c 752
                           4468 ;	genAssign
                           4469 ;	AOP_HL for _clkB
   0D68 21 2C 01           4470 	ld	hl,#_clkB
   0D6B 36 00              4471 	ld	(hl),#0x00
                           4472 ;	square.c 753
                           4473 ;	genAssign
                           4474 ;	AOP_HL for _clkC
   0D6D 21 2F 01           4475 	ld	hl,#_clkC
   0D70 36 00              4476 	ld	(hl),#0x00
                           4477 ;	square.c 754
                           4478 ;	genAssign
                           4479 ;	AOP_HL for _syncToDrum
   0D72 21 25 01           4480 	ld	hl,#_syncToDrum
   0D75 36 00              4481 	ld	(hl),#0x00
                           4482 ;	genLabel
   0D77                    4483 00114$:
                           4484 ;	square.c 759
                           4485 ;	genPlus
                           4486 ;	AOP_HL for _clkA
                           4487 ;	Can't optimise plus by inc, falling back to the normal way
   0D77 3E 70              4488 	ld	a,#<_drumA
   0D79 21 29 01           4489 	ld	hl,#_clkA
   0D7C 86                 4490 	add	a,(hl)
   0D7D 4F                 4491 	ld	c,a
   0D7E 3E 00              4492 	ld	a,#>_drumA
   0D80 CE 00              4493 	adc	a,#0x00
   0D82 47                 4494 	ld	b,a
                           4495 ;	genPointerGet
   0D83 0A                 4496 	ld	a,(bc)
                           4497 ;	genCmpEq
                           4498 ; genCmpEq: left 1, right 1, result 0
   0D84 4F                 4499 	ld	c,a
   0D85 FE 01              4500 	cp	a,#0x01
   0D87 C2 A6 0D           4501 	jp	nz,00118$
   0D8A 18 03              4502 	jr	00151$
   0D8C                    4503 00150$:
   0D8C C3 A6 0D           4504 	jp	00118$
   0D8F                    4505 00151$:
                           4506 ;	square.c 761
                           4507 ;	genCmpEq
                           4508 ;	AOP_HL for _xA
                           4509 ; genCmpEq: left 1, right 1, result 0
   0D8F 21 1E 01           4510 	ld	hl,#_xA
   0D92 7E                 4511 	ld	a,(hl)
   0D93 B7                 4512 	or	a,a
   0D94 CA A3 0D           4513 	jp	z,00116$
   0D97                    4514 00152$:
                           4515 ;	square.c 762
                           4516 ;	genCast
                           4517 ;	AOP_HL for _xA
   0D97 21 1E 01           4518 	ld	hl,#_xA
   0D9A 4E                 4519 	ld	c,(hl)
   0D9B 06 00              4520 	ld	b,#0x00
                           4521 ;	genIpush
                           4522 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D9D C5                 4523 	push	bc
                           4524 ;	genCall
   0D9E CD 00 00           4525 	call	_delay
   0DA1 E8 02              4526 	lda	sp,2(sp)
                           4527 ;	genLabel
   0DA3                    4528 00116$:
                           4529 ;	square.c 763
                           4530 ;	genCall
                           4531 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DA3 CD 44 00           4532 	call	_makeASound
                           4533 ;	genLabel
   0DA6                    4534 00118$:
                           4535 ;	square.c 765
                           4536 ;	genPlus
                           4537 ;	AOP_HL for _clkB
                           4538 ;	Can't optimise plus by inc, falling back to the normal way
   0DA6 3E 90              4539 	ld	a,#<_drumB
   0DA8 21 2C 01           4540 	ld	hl,#_clkB
   0DAB 86                 4541 	add	a,(hl)
   0DAC 4F                 4542 	ld	c,a
   0DAD 3E 00              4543 	ld	a,#>_drumB
   0DAF CE 00              4544 	adc	a,#0x00
   0DB1 47                 4545 	ld	b,a
                           4546 ;	genPointerGet
   0DB2 0A                 4547 	ld	a,(bc)
                           4548 ;	genCmpEq
                           4549 ; genCmpEq: left 1, right 1, result 0
   0DB3 4F                 4550 	ld	c,a
   0DB4 FE 01              4551 	cp	a,#0x01
   0DB6 C2 D5 0D           4552 	jp	nz,00122$
   0DB9 18 03              4553 	jr	00154$
   0DBB                    4554 00153$:
   0DBB C3 D5 0D           4555 	jp	00122$
   0DBE                    4556 00154$:
                           4557 ;	square.c 767
                           4558 ;	genCmpEq
                           4559 ;	AOP_HL for _xB
                           4560 ; genCmpEq: left 1, right 1, result 0
   0DBE 21 1F 01           4561 	ld	hl,#_xB
   0DC1 7E                 4562 	ld	a,(hl)
   0DC2 B7                 4563 	or	a,a
   0DC3 CA D2 0D           4564 	jp	z,00120$
   0DC6                    4565 00155$:
                           4566 ;	square.c 768
                           4567 ;	genCast
                           4568 ;	AOP_HL for _xB
   0DC6 21 1F 01           4569 	ld	hl,#_xB
   0DC9 4E                 4570 	ld	c,(hl)
   0DCA 06 00              4571 	ld	b,#0x00
                           4572 ;	genIpush
                           4573 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DCC C5                 4574 	push	bc
                           4575 ;	genCall
   0DCD CD 00 00           4576 	call	_delay
   0DD0 E8 02              4577 	lda	sp,2(sp)
                           4578 ;	genLabel
   0DD2                    4579 00120$:
                           4580 ;	square.c 769
                           4581 ;	genCall
                           4582 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DD2 CD 7D 00           4583 	call	_makeBSound
                           4584 ;	genLabel
   0DD5                    4585 00122$:
                           4586 ;	square.c 771
                           4587 ;	genPlus
                           4588 ;	AOP_HL for _clkC
                           4589 ;	Can't optimise plus by inc, falling back to the normal way
   0DD5 3E B0              4590 	ld	a,#<_drumC
   0DD7 21 2F 01           4591 	ld	hl,#_clkC
   0DDA 86                 4592 	add	a,(hl)
   0DDB 4F                 4593 	ld	c,a
   0DDC 3E 00              4594 	ld	a,#>_drumC
   0DDE CE 00              4595 	adc	a,#0x00
   0DE0 47                 4596 	ld	b,a
                           4597 ;	genPointerGet
   0DE1 0A                 4598 	ld	a,(bc)
                           4599 ;	genCmpEq
                           4600 ; genCmpEq: left 1, right 1, result 0
   0DE2 4F                 4601 	ld	c,a
   0DE3 FE 01              4602 	cp	a,#0x01
   0DE5 C2 04 0E           4603 	jp	nz,00126$
   0DE8 18 03              4604 	jr	00157$
   0DEA                    4605 00156$:
   0DEA C3 04 0E           4606 	jp	00126$
   0DED                    4607 00157$:
                           4608 ;	square.c 773
                           4609 ;	genCmpEq
                           4610 ;	AOP_HL for _xC
                           4611 ; genCmpEq: left 1, right 1, result 0
   0DED 21 20 01           4612 	ld	hl,#_xC
   0DF0 7E                 4613 	ld	a,(hl)
   0DF1 B7                 4614 	or	a,a
   0DF2 CA 01 0E           4615 	jp	z,00124$
   0DF5                    4616 00158$:
                           4617 ;	square.c 774
                           4618 ;	genCast
                           4619 ;	AOP_HL for _xC
   0DF5 21 20 01           4620 	ld	hl,#_xC
   0DF8 4E                 4621 	ld	c,(hl)
   0DF9 06 00              4622 	ld	b,#0x00
                           4623 ;	genIpush
                           4624 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DFB C5                 4625 	push	bc
                           4626 ;	genCall
   0DFC CD 00 00           4627 	call	_delay
   0DFF E8 02              4628 	lda	sp,2(sp)
                           4629 ;	genLabel
   0E01                    4630 00124$:
                           4631 ;	square.c 775
                           4632 ;	genCall
                           4633 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E01 CD B0 00           4634 	call	_makeCSound
                           4635 ;	genLabel
   0E04                    4636 00126$:
                           4637 ;	square.c 778
                           4638 ;	genPlus
                           4639 ;	AOP_HL for _clkA
                           4640 ;	genPlusIncr
   0E04 21 29 01           4641 	ld	hl,#_clkA
   0E07 34                 4642 	inc	(hl)
                           4643 ;	square.c 779
                           4644 ;	genPlus
                           4645 ;	AOP_HL for _clkB
                           4646 ;	genPlusIncr
   0E08 21 2C 01           4647 	ld	hl,#_clkB
   0E0B 34                 4648 	inc	(hl)
                           4649 ;	square.c 780
                           4650 ;	genPlus
                           4651 ;	AOP_HL for _clkC
                           4652 ;	genPlusIncr
   0E0C 21 2F 01           4653 	ld	hl,#_clkC
   0E0F 34                 4654 	inc	(hl)
                           4655 ;	genLabel
   0E10                    4656 00127$:
                           4657 ;	genEndFunction
                           4658 	
   0E10 C9                 4659 	ret
   0E11                    4660 ___tick_end:
                           4661 ;	square.c 785
                           4662 ;	genLabel
                           4663 ;	genFunction
                           4664 ;	---------------------------------
                           4665 ; Function sync
                           4666 ; ---------------------------------
   0E11                    4667 ___sync_start:
   0E11                    4668 _sync:
                           4669 	
                           4670 ;	square.c 787
                           4671 ;	genAssign
                           4672 ;	AOP_HL for _pop
                           4673 ;	AOP_HL for _bob
   0E11 21 6C 01           4674 	ld	hl,#_pop
   0E14 7E                 4675 	ld	a,(hl)
   0E15 21 6A 01           4676 	ld	hl,#_bob
   0E18 77                 4677 	ld	(hl),a
                           4678 ;	square.c 788
                           4679 ;	genAssign
   0E19 01 02 FF           4680 	ld	bc,#0xFF02
                           4681 ;	genAssign (pointer)
   0E1C 3E 80              4682 	ld	a,#0x80
   0E1E 02                 4683 	ld	(bc),a
                           4684 ;	square.c 789
                           4685 ;	genPointerGet
                           4686 ;	AOP_HL for _todd
   0E1F 11 01 FF           4687 	ld	de,#0xFF01
   0E22 1A                 4688 	ld	a,(de)
   0E23 21 6B 01           4689 	ld	hl,#_todd
                           4690 ;	square.c 790
                           4691 ;	genCmpEq
                           4692 ;	AOP_HL for _todd
                           4693 ; genCmpEq: left 1, right 1, result 0
   0E26 77                 4694 	ld      (hl),a
                           4695 ; Removed redundent load
   0E27 B7                 4696 	or	a,a
   0E28 C2 38 0E           4697 	jp	nz,00102$
   0E2B 18 03              4698 	jr	00111$
   0E2D                    4699 00110$:
   0E2D C3 38 0E           4700 	jp	00102$
   0E30                    4701 00111$:
                           4702 ;	square.c 791
                           4703 ;	genAssign
                           4704 ;	AOP_HL for _pop
   0E30 21 6C 01           4705 	ld	hl,#_pop
   0E33 36 00              4706 	ld	(hl),#0x00
                           4707 ;	genGoto
   0E35 C3 3D 0E           4708 	jp	00103$
                           4709 ;	genLabel
   0E38                    4710 00102$:
                           4711 ;	square.c 793
                           4712 ;	genAssign
                           4713 ;	AOP_HL for _pop
   0E38 21 6C 01           4714 	ld	hl,#_pop
   0E3B 36 01              4715 	ld	(hl),#0x01
                           4716 ;	genLabel
   0E3D                    4717 00103$:
                           4718 ;	square.c 794
                           4719 ;	genCmpEq
                           4720 ;	AOP_HL for _bob
                           4721 ;	AOP_HL for _pop
                           4722 ; genCmpEq: left 1, right 1, result 0
   0E3D 21 6C 01           4723 	ld	hl,#_pop
   0E40 7E                 4724 	ld	a,(hl)
   0E41 21 6A 01           4725 	ld	hl,#_bob
   0E44 BE                 4726 	cp	(hl)
   0E45 20 03              4727 	jr	nz,00112$
   0E47 C3 4D 0E           4728 	jp	00106$
   0E4A                    4729 00112$:
                           4730 ;	square.c 796
                           4731 ;	genCall
                           4732 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E4A CD DD 0C           4733 	call	_tick
                           4734 ;	genLabel
   0E4D                    4735 00106$:
                           4736 ;	genEndFunction
                           4737 	
   0E4D C9                 4738 	ret
   0E4E                    4739 ___sync_end:
                           4740 ;	square.c 802
                           4741 ;	genLabel
                           4742 ;	genFunction
                           4743 ;	---------------------------------
                           4744 ; Function master
                           4745 ; ---------------------------------
   0E4E                    4746 ___master_start:
   0E4E                    4747 _master:
                           4748 	
                           4749 ;	square.c 804
                           4750 ;	genPlus
                           4751 ;	AOP_HL for _watch
                           4752 ;	genPlusIncr
   0E4E 21 69 01           4753 	ld	hl,#_watch
   0E51 34                 4754 	inc	(hl)
                           4755 ;	square.c 805
                           4756 ;	genCmpGt
                           4757 ;	AOP_HL for _watch
                           4758 ;	AOP_HL for _tempo
   0E52 21 68 01           4759 	ld	hl,#_tempo
   0E55 7E                 4760 	ld	a,(hl)
   0E56 21 69 01           4761 	ld	hl,#_watch
   0E59 96                 4762 	sub	a,(hl)
   0E5A D2 62 0E           4763 	jp	nc,00103$
                           4764 ;	square.c 807
                           4765 ;	genAssign
                           4766 ;	AOP_HL for _watch
   0E5D 36 00              4767 	ld	(hl),#0x00
                           4768 ;	square.c 808
                           4769 ;	genCall
                           4770 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E5F CD DD 0C           4771 	call	_tick
                           4772 ;	genLabel
   0E62                    4773 00103$:
                           4774 ;	genEndFunction
                           4775 	
   0E62 C9                 4776 	ret
   0E63                    4777 ___master_end:
                           4778 ;	square.c 812
                           4779 ;	genLabel
                           4780 ;	genFunction
                           4781 ;	---------------------------------
                           4782 ; Function player
                           4783 ; ---------------------------------
   0E63                    4784 ___player_start:
   0E63                    4785 _player:
                           4786 	
                           4787 ;	square.c 814
                           4788 ;	genCmpEq
                           4789 ;	AOP_HL for _modus
                           4790 ; genCmpEq: left 1, right 1, result 0
   0E63 21 6D 01           4791 	ld	hl,#_modus
   0E66 7E                 4792 	ld	a,(hl)
   0E67 B7                 4793 	or	a,a
   0E68 C2 76 0E           4794 	jp	nz,00102$
   0E6B 18 03              4795 	jr	00108$
   0E6D                    4796 00107$:
   0E6D C3 76 0E           4797 	jp	00102$
   0E70                    4798 00108$:
                           4799 ;	square.c 816
                           4800 ;	genCall
                           4801 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E70 CD 4E 0E           4802 	call	_master
                           4803 ;	genGoto
   0E73 C3 79 0E           4804 	jp	00104$
                           4805 ;	genLabel
   0E76                    4806 00102$:
                           4807 ;	square.c 819
                           4808 ;	genCall
                           4809 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E76 CD 11 0E           4810 	call	_sync
                           4811 ;	genLabel
   0E79                    4812 00104$:
                           4813 ;	genEndFunction
                           4814 	
   0E79 C9                 4815 	ret
   0E7A                    4816 ___player_end:
                           4817 ;	square.c 823
                           4818 ;	genLabel
                           4819 ;	genFunction
                           4820 ;	---------------------------------
                           4821 ; Function tim
                           4822 ; ---------------------------------
   0E7A                    4823 ___tim_start:
   0E7A                    4824 _tim:
                           4825 	
                           4826 ;	square.c 825
                           4827 ;	genCall
                           4828 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E7A CD 63 0E           4829 	call	_player
                           4830 ;	genLabel
   0E7D                    4831 00101$:
                           4832 ;	genEndFunction
                           4833 	
   0E7D C9                 4834 	ret
   0E7E                    4835 ___tim_end:
                           4836 ;	square.c 830
                           4837 ;	genLabel
                           4838 ;	genFunction
                           4839 ;	---------------------------------
                           4840 ; Function loadA
                           4841 ; ---------------------------------
   0E7E                    4842 ___loadA_start:
   0E7E                    4843 _loadA:
   0E7E E8 FE              4844 	lda	sp,-2(sp)
                           4845 ;	square.c 832
                           4846 ;	genAssign
                           4847 ;	AOP_HL for _storeAPA
                           4848 ;	AOP_HL for _numberOfPulsesA
   0E80 21 36 01           4849 	ld	hl,#_storeAPA
   0E83 7E                 4850 	ld	a,(hl)
   0E84 21 27 01           4851 	ld	hl,#_numberOfPulsesA
   0E87 77                 4852 	ld	(hl),a
                           4853 ;	square.c 833
                           4854 ;	genAssign
                           4855 ;	AOP_HL for _storeASA
                           4856 ;	AOP_HL for _totalStepsA
   0E88 21 37 01           4857 	ld	hl,#_storeASA
   0E8B 7E                 4858 	ld	a,(hl)
   0E8C 21 28 01           4859 	ld	hl,#_totalStepsA
   0E8F 77                 4860 	ld	(hl),a
                           4861 ;	square.c 834
                           4862 ;	genAssign
                           4863 ;	AOP_HL for _storeAPB
                           4864 ;	AOP_HL for _numberOfPulsesB
   0E90 21 38 01           4865 	ld	hl,#_storeAPB
   0E93 7E                 4866 	ld	a,(hl)
   0E94 21 2A 01           4867 	ld	hl,#_numberOfPulsesB
   0E97 77                 4868 	ld	(hl),a
                           4869 ;	square.c 835
                           4870 ;	genAssign
                           4871 ;	AOP_HL for _storeASB
                           4872 ;	AOP_HL for _totalStepsB
   0E98 21 39 01           4873 	ld	hl,#_storeASB
   0E9B 7E                 4874 	ld	a,(hl)
   0E9C 21 2B 01           4875 	ld	hl,#_totalStepsB
   0E9F 77                 4876 	ld	(hl),a
                           4877 ;	square.c 836
                           4878 ;	genAssign
                           4879 ;	AOP_HL for _storeAPC
                           4880 ;	AOP_HL for _numberOfPulsesC
   0EA0 21 3A 01           4881 	ld	hl,#_storeAPC
   0EA3 7E                 4882 	ld	a,(hl)
   0EA4 21 2D 01           4883 	ld	hl,#_numberOfPulsesC
   0EA7 77                 4884 	ld	(hl),a
                           4885 ;	square.c 837
                           4886 ;	genAssign
                           4887 ;	AOP_HL for _storeASC
                           4888 ;	AOP_HL for _totalStepsC
   0EA8 21 3B 01           4889 	ld	hl,#_storeASC
   0EAB 7E                 4890 	ld	a,(hl)
   0EAC 21 2E 01           4891 	ld	hl,#_totalStepsC
   0EAF 77                 4892 	ld	(hl),a
                           4893 ;	square.c 838
                           4894 ;	genAssign
                           4895 ;	AOP_HL for _storeAOA
                           4896 ;	AOP_HL for _offStepA
   0EB0 21 3C 01           4897 	ld	hl,#_storeAOA
   0EB3 7E                 4898 	ld	a,(hl)
   0EB4 21 30 01           4899 	ld	hl,#_offStepA
   0EB7 77                 4900 	ld	(hl),a
                           4901 ;	square.c 839
                           4902 ;	genAssign
                           4903 ;	AOP_HL for _storeAOB
                           4904 ;	AOP_HL for _offStepB
   0EB8 21 3D 01           4905 	ld	hl,#_storeAOB
   0EBB 7E                 4906 	ld	a,(hl)
   0EBC 21 31 01           4907 	ld	hl,#_offStepB
   0EBF 77                 4908 	ld	(hl),a
                           4909 ;	square.c 840
                           4910 ;	genAssign
                           4911 ;	AOP_HL for _storeAOC
                           4912 ;	AOP_HL for _offStepC
   0EC0 21 3E 01           4913 	ld	hl,#_storeAOC
   0EC3 7E                 4914 	ld	a,(hl)
   0EC4 21 32 01           4915 	ld	hl,#_offStepC
   0EC7 77                 4916 	ld	(hl),a
                           4917 ;	square.c 841
                           4918 ;	genAssign
                           4919 ;	AOP_HL for _storeADA
                           4920 ;	AOP_HL for _delayA
   0EC8 21 3F 01           4921 	ld	hl,#_storeADA
   0ECB 7E                 4922 	ld	a,(hl)
   0ECC 21 21 01           4923 	ld	hl,#_delayA
   0ECF 77                 4924 	ld	(hl),a
                           4925 ;	square.c 842
                           4926 ;	genAssign
                           4927 ;	AOP_HL for _storeADB
                           4928 ;	AOP_HL for _delayB
   0ED0 21 40 01           4929 	ld	hl,#_storeADB
   0ED3 7E                 4930 	ld	a,(hl)
   0ED4 21 22 01           4931 	ld	hl,#_delayB
   0ED7 77                 4932 	ld	(hl),a
                           4933 ;	square.c 843
                           4934 ;	genAssign
                           4935 ;	AOP_HL for _storeADC
                           4936 ;	AOP_HL for _delayC
   0ED8 21 41 01           4937 	ld	hl,#_storeADC
   0EDB 7E                 4938 	ld	a,(hl)
   0EDC 21 23 01           4939 	ld	hl,#_delayC
   0EDF 77                 4940 	ld	(hl),a
                           4941 ;	square.c 844
                           4942 ;	genIpush
                           4943 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EE0 21 00 00           4944 	ld	hl,#0x0000
   0EE3 E5                 4945 	push	hl
                           4946 ;	genCall
   0EE4 CD 00 00           4947 	call	_set_sprite_tile
   0EE7 E8 02              4948 	lda	sp,2(sp)
                           4949 ;	square.c 845
                           4950 ;	genMinus
                           4951 ;	AOP_HL for _totalStepsA
   0EE9 21 28 01           4952 	ld	hl,#_totalStepsA
   0EEC 7E                 4953 	ld	a,(hl)
   0EED C6 FF              4954 	add	a,#0xFF
   0EEF 4F                 4955 	ld	c,a
                           4956 ;	genPlus
                           4957 ;	Can't optimise plus by inc, falling back to the normal way
   0EF0 3E D0              4958 	ld	a,#<_dXlut
   0EF2 81                 4959 	add	a,c
   0EF3 4F                 4960 	ld	c,a
   0EF4 3E 00              4961 	ld	a,#>_dXlut
   0EF6 CE 00              4962 	adc	a,#0x00
   0EF8 47                 4963 	ld	b,a
                           4964 ;	genPointerGet
   0EF9 0A                 4965 	ld	a,(bc)
   0EFA 4F                 4966 	ld	c,a
                           4967 ;	genMinus
                           4968 ;	AOP_HL for _numberOfPulsesA
   0EFB 21 27 01           4969 	ld	hl,#_numberOfPulsesA
   0EFE 7E                 4970 	ld	a,(hl)
   0EFF C6 FF              4971 	add	a,#0xFF
   0F01 47                 4972 	ld	b,a
                           4973 ;	genPlus
                           4974 ;	AOP_STK for _loadA_sloc0_1_0
                           4975 ;	Can't optimise plus by inc, falling back to the normal way
   0F02 11 F0 00           4976 	ld	de,#_dYlut
   0F05 68                 4977 	ld	l,b
   0F06 26 00              4978 	ld	h,#0x00
   0F08 19                 4979 	add	hl,de
   0F09 7D                 4980 	ld	a,l
   0F0A 54                 4981 	ld	d,h
   0F0B F8 00              4982 	lda	hl,0(sp)
                           4983 ;	genPointerGet
                           4984 ;	AOP_STK for _loadA_sloc0_1_0
   0F0D 22                 4985 	ld	(hl+),a
   0F0E 72                 4986 	ld	(hl),d
   0F0F 5F                 4987 	ld	e,a
   0F10 1A                 4988 	ld	a,(de)
   0F11 47                 4989 	ld	b,a
                           4990 ;	genIpush
                           4991 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F12 79                 4992 	ld	a,c
   0F13 F5                 4993 	push	af
   0F14 33                 4994 	inc	sp
                           4995 ;	genIpush
   0F15 78                 4996 	ld	a,b
   0F16 F5                 4997 	push	af
   0F17 33                 4998 	inc	sp
                           4999 ;	genIpush
   0F18 3E 00              5000 	ld	a,#0x00
   0F1A F5                 5001 	push	af
   0F1B 33                 5002 	inc	sp
                           5003 ;	genCall
   0F1C CD 00 00           5004 	call	_move_sprite
   0F1F E8 03              5005 	lda	sp,3(sp)
                           5006 ;	square.c 846
                           5007 ;	genIpush
                           5008 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F21 21 01 02           5009 	ld	hl,#0x0201
   0F24 E5                 5010 	push	hl
                           5011 ;	genCall
   0F25 CD 00 00           5012 	call	_set_sprite_tile
   0F28 E8 02              5013 	lda	sp,2(sp)
                           5014 ;	square.c 847
                           5015 ;	genMinus
                           5016 ;	AOP_HL for _totalStepsB
   0F2A 21 2B 01           5017 	ld	hl,#_totalStepsB
   0F2D 7E                 5018 	ld	a,(hl)
   0F2E C6 FF              5019 	add	a,#0xFF
   0F30 4F                 5020 	ld	c,a
                           5021 ;	genPlus
                           5022 ;	Can't optimise plus by inc, falling back to the normal way
   0F31 3E D0              5023 	ld	a,#<_dXlut
   0F33 81                 5024 	add	a,c
   0F34 4F                 5025 	ld	c,a
   0F35 3E 00              5026 	ld	a,#>_dXlut
   0F37 CE 00              5027 	adc	a,#0x00
   0F39 47                 5028 	ld	b,a
                           5029 ;	genPointerGet
   0F3A 0A                 5030 	ld	a,(bc)
   0F3B 4F                 5031 	ld	c,a
                           5032 ;	genMinus
                           5033 ;	AOP_HL for _numberOfPulsesB
   0F3C 21 2A 01           5034 	ld	hl,#_numberOfPulsesB
   0F3F 7E                 5035 	ld	a,(hl)
   0F40 C6 FF              5036 	add	a,#0xFF
   0F42 47                 5037 	ld	b,a
                           5038 ;	genPlus
                           5039 ;	AOP_STK for _loadA_sloc0_1_0
                           5040 ;	Can't optimise plus by inc, falling back to the normal way
   0F43 11 F0 00           5041 	ld	de,#_dYlut
   0F46 68                 5042 	ld	l,b
   0F47 26 00              5043 	ld	h,#0x00
   0F49 19                 5044 	add	hl,de
   0F4A 7D                 5045 	ld	a,l
   0F4B 54                 5046 	ld	d,h
   0F4C F8 00              5047 	lda	hl,0(sp)
                           5048 ;	genPointerGet
                           5049 ;	AOP_STK for _loadA_sloc0_1_0
   0F4E 22                 5050 	ld	(hl+),a
   0F4F 72                 5051 	ld	(hl),d
   0F50 5F                 5052 	ld	e,a
   0F51 1A                 5053 	ld	a,(de)
   0F52 47                 5054 	ld	b,a
                           5055 ;	genIpush
                           5056 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F53 79                 5057 	ld	a,c
   0F54 F5                 5058 	push	af
   0F55 33                 5059 	inc	sp
                           5060 ;	genIpush
   0F56 78                 5061 	ld	a,b
   0F57 F5                 5062 	push	af
   0F58 33                 5063 	inc	sp
                           5064 ;	genIpush
   0F59 3E 01              5065 	ld	a,#0x01
   0F5B F5                 5066 	push	af
   0F5C 33                 5067 	inc	sp
                           5068 ;	genCall
   0F5D CD 00 00           5069 	call	_move_sprite
   0F60 E8 03              5070 	lda	sp,3(sp)
                           5071 ;	square.c 848
                           5072 ;	genIpush
                           5073 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F62 21 02 04           5074 	ld	hl,#0x0402
   0F65 E5                 5075 	push	hl
                           5076 ;	genCall
   0F66 CD 00 00           5077 	call	_set_sprite_tile
   0F69 E8 02              5078 	lda	sp,2(sp)
                           5079 ;	square.c 849
                           5080 ;	genMinus
                           5081 ;	AOP_HL for _totalStepsC
   0F6B 21 2E 01           5082 	ld	hl,#_totalStepsC
   0F6E 7E                 5083 	ld	a,(hl)
   0F6F C6 FF              5084 	add	a,#0xFF
   0F71 4F                 5085 	ld	c,a
                           5086 ;	genPlus
                           5087 ;	Can't optimise plus by inc, falling back to the normal way
   0F72 3E D0              5088 	ld	a,#<_dXlut
   0F74 81                 5089 	add	a,c
   0F75 4F                 5090 	ld	c,a
   0F76 3E 00              5091 	ld	a,#>_dXlut
   0F78 CE 00              5092 	adc	a,#0x00
   0F7A 47                 5093 	ld	b,a
                           5094 ;	genPointerGet
   0F7B 0A                 5095 	ld	a,(bc)
   0F7C 4F                 5096 	ld	c,a
                           5097 ;	genMinus
                           5098 ;	AOP_HL for _numberOfPulsesC
   0F7D 21 2D 01           5099 	ld	hl,#_numberOfPulsesC
   0F80 7E                 5100 	ld	a,(hl)
   0F81 C6 FF              5101 	add	a,#0xFF
   0F83 47                 5102 	ld	b,a
                           5103 ;	genPlus
                           5104 ;	AOP_STK for _loadA_sloc0_1_0
                           5105 ;	Can't optimise plus by inc, falling back to the normal way
   0F84 11 F0 00           5106 	ld	de,#_dYlut
   0F87 68                 5107 	ld	l,b
   0F88 26 00              5108 	ld	h,#0x00
   0F8A 19                 5109 	add	hl,de
   0F8B 7D                 5110 	ld	a,l
   0F8C 54                 5111 	ld	d,h
   0F8D F8 00              5112 	lda	hl,0(sp)
                           5113 ;	genPointerGet
                           5114 ;	AOP_STK for _loadA_sloc0_1_0
   0F8F 22                 5115 	ld	(hl+),a
   0F90 72                 5116 	ld	(hl),d
   0F91 5F                 5117 	ld	e,a
   0F92 1A                 5118 	ld	a,(de)
   0F93 47                 5119 	ld	b,a
                           5120 ;	genIpush
                           5121 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F94 79                 5122 	ld	a,c
   0F95 F5                 5123 	push	af
   0F96 33                 5124 	inc	sp
                           5125 ;	genIpush
   0F97 78                 5126 	ld	a,b
   0F98 F5                 5127 	push	af
   0F99 33                 5128 	inc	sp
                           5129 ;	genIpush
   0F9A 3E 02              5130 	ld	a,#0x02
   0F9C F5                 5131 	push	af
   0F9D 33                 5132 	inc	sp
                           5133 ;	genCall
   0F9E CD 00 00           5134 	call	_move_sprite
   0FA1 E8 03              5135 	lda	sp,3(sp)
                           5136 ;	square.c 850
                           5137 ;	genCall
                           5138 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FA3 CD 00 00           5139 	call	_disable_interrupts
                           5140 ;	square.c 851
                           5141 ;	genCall
                           5142 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FA6 CD E3 00           5143 	call	_fillDrumA
                           5144 ;	square.c 852
                           5145 ;	genCall
                           5146 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FA9 CD B2 02           5147 	call	_fillDrumB
                           5148 ;	square.c 853
                           5149 ;	genCall
                           5150 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FAC CD 81 04           5151 	call	_fillDrumC
                           5152 ;	square.c 854
                           5153 ;	genAssign
                           5154 ;	AOP_HL for _clkA
   0FAF 21 29 01           5155 	ld	hl,#_clkA
   0FB2 36 00              5156 	ld	(hl),#0x00
                           5157 ;	square.c 855
                           5158 ;	genAssign
                           5159 ;	AOP_HL for _clkB
   0FB4 21 2C 01           5160 	ld	hl,#_clkB
   0FB7 36 00              5161 	ld	(hl),#0x00
                           5162 ;	square.c 856
                           5163 ;	genAssign
                           5164 ;	AOP_HL for _clkC
   0FB9 21 2F 01           5165 	ld	hl,#_clkC
   0FBC 36 00              5166 	ld	(hl),#0x00
                           5167 ;	square.c 857
                           5168 ;	genCall
                           5169 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FBE CD 00 00           5170 	call	_enable_interrupts
                           5171 ;	square.c 858
                           5172 ;	genCall
                           5173 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FC1 CD 00 00           5174 	call	_wait_vbl_done
                           5175 ;	genLabel
   0FC4                    5176 00101$:
                           5177 ;	genEndFunction
   0FC4 E8 02              5178 	lda	sp,2(sp)
   0FC6 C9                 5179 	ret
   0FC7                    5180 ___loadA_end:
                           5181 ;	square.c 861
                           5182 ;	genLabel
                           5183 ;	genFunction
                           5184 ;	---------------------------------
                           5185 ; Function loadB
                           5186 ; ---------------------------------
   0FC7                    5187 ___loadB_start:
   0FC7                    5188 _loadB:
   0FC7 E8 FE              5189 	lda	sp,-2(sp)
                           5190 ;	square.c 863
                           5191 ;	genAssign
                           5192 ;	AOP_HL for _storeBPA
                           5193 ;	AOP_HL for _numberOfPulsesA
   0FC9 21 42 01           5194 	ld	hl,#_storeBPA
   0FCC 7E                 5195 	ld	a,(hl)
   0FCD 21 27 01           5196 	ld	hl,#_numberOfPulsesA
   0FD0 77                 5197 	ld	(hl),a
                           5198 ;	square.c 864
                           5199 ;	genAssign
                           5200 ;	AOP_HL for _storeBSA
                           5201 ;	AOP_HL for _totalStepsA
   0FD1 21 43 01           5202 	ld	hl,#_storeBSA
   0FD4 7E                 5203 	ld	a,(hl)
   0FD5 21 28 01           5204 	ld	hl,#_totalStepsA
   0FD8 77                 5205 	ld	(hl),a
                           5206 ;	square.c 865
                           5207 ;	genAssign
                           5208 ;	AOP_HL for _storeBPB
                           5209 ;	AOP_HL for _numberOfPulsesB
   0FD9 21 44 01           5210 	ld	hl,#_storeBPB
   0FDC 7E                 5211 	ld	a,(hl)
   0FDD 21 2A 01           5212 	ld	hl,#_numberOfPulsesB
   0FE0 77                 5213 	ld	(hl),a
                           5214 ;	square.c 866
                           5215 ;	genAssign
                           5216 ;	AOP_HL for _storeBSB
                           5217 ;	AOP_HL for _totalStepsB
   0FE1 21 45 01           5218 	ld	hl,#_storeBSB
   0FE4 7E                 5219 	ld	a,(hl)
   0FE5 21 2B 01           5220 	ld	hl,#_totalStepsB
   0FE8 77                 5221 	ld	(hl),a
                           5222 ;	square.c 867
                           5223 ;	genAssign
                           5224 ;	AOP_HL for _storeBPC
                           5225 ;	AOP_HL for _numberOfPulsesC
   0FE9 21 46 01           5226 	ld	hl,#_storeBPC
   0FEC 7E                 5227 	ld	a,(hl)
   0FED 21 2D 01           5228 	ld	hl,#_numberOfPulsesC
   0FF0 77                 5229 	ld	(hl),a
                           5230 ;	square.c 868
                           5231 ;	genAssign
                           5232 ;	AOP_HL for _storeBSC
                           5233 ;	AOP_HL for _totalStepsC
   0FF1 21 47 01           5234 	ld	hl,#_storeBSC
   0FF4 7E                 5235 	ld	a,(hl)
   0FF5 21 2E 01           5236 	ld	hl,#_totalStepsC
   0FF8 77                 5237 	ld	(hl),a
                           5238 ;	square.c 869
                           5239 ;	genAssign
                           5240 ;	AOP_HL for _storeBOA
                           5241 ;	AOP_HL for _offStepA
   0FF9 21 48 01           5242 	ld	hl,#_storeBOA
   0FFC 7E                 5243 	ld	a,(hl)
   0FFD 21 30 01           5244 	ld	hl,#_offStepA
   1000 77                 5245 	ld	(hl),a
                           5246 ;	square.c 870
                           5247 ;	genAssign
                           5248 ;	AOP_HL for _storeBOB
                           5249 ;	AOP_HL for _offStepB
   1001 21 49 01           5250 	ld	hl,#_storeBOB
   1004 7E                 5251 	ld	a,(hl)
   1005 21 31 01           5252 	ld	hl,#_offStepB
   1008 77                 5253 	ld	(hl),a
                           5254 ;	square.c 871
                           5255 ;	genAssign
                           5256 ;	AOP_HL for _storeBOC
                           5257 ;	AOP_HL for _offStepC
   1009 21 4A 01           5258 	ld	hl,#_storeBOC
   100C 7E                 5259 	ld	a,(hl)
   100D 21 32 01           5260 	ld	hl,#_offStepC
   1010 77                 5261 	ld	(hl),a
                           5262 ;	square.c 872
                           5263 ;	genAssign
                           5264 ;	AOP_HL for _storeBDA
                           5265 ;	AOP_HL for _delayA
   1011 21 4B 01           5266 	ld	hl,#_storeBDA
   1014 7E                 5267 	ld	a,(hl)
   1015 21 21 01           5268 	ld	hl,#_delayA
   1018 77                 5269 	ld	(hl),a
                           5270 ;	square.c 873
                           5271 ;	genAssign
                           5272 ;	AOP_HL for _storeBDB
                           5273 ;	AOP_HL for _delayB
   1019 21 4C 01           5274 	ld	hl,#_storeBDB
   101C 7E                 5275 	ld	a,(hl)
   101D 21 22 01           5276 	ld	hl,#_delayB
   1020 77                 5277 	ld	(hl),a
                           5278 ;	square.c 874
                           5279 ;	genAssign
                           5280 ;	AOP_HL for _storeBDC
                           5281 ;	AOP_HL for _delayC
   1021 21 4D 01           5282 	ld	hl,#_storeBDC
   1024 7E                 5283 	ld	a,(hl)
   1025 21 23 01           5284 	ld	hl,#_delayC
   1028 77                 5285 	ld	(hl),a
                           5286 ;	square.c 875
                           5287 ;	genIpush
                           5288 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1029 21 00 00           5289 	ld	hl,#0x0000
   102C E5                 5290 	push	hl
                           5291 ;	genCall
   102D CD 00 00           5292 	call	_set_sprite_tile
   1030 E8 02              5293 	lda	sp,2(sp)
                           5294 ;	square.c 876
                           5295 ;	genMinus
                           5296 ;	AOP_HL for _totalStepsA
   1032 21 28 01           5297 	ld	hl,#_totalStepsA
   1035 7E                 5298 	ld	a,(hl)
   1036 C6 FF              5299 	add	a,#0xFF
   1038 4F                 5300 	ld	c,a
                           5301 ;	genPlus
                           5302 ;	Can't optimise plus by inc, falling back to the normal way
   1039 3E D0              5303 	ld	a,#<_dXlut
   103B 81                 5304 	add	a,c
   103C 4F                 5305 	ld	c,a
   103D 3E 00              5306 	ld	a,#>_dXlut
   103F CE 00              5307 	adc	a,#0x00
   1041 47                 5308 	ld	b,a
                           5309 ;	genPointerGet
   1042 0A                 5310 	ld	a,(bc)
   1043 4F                 5311 	ld	c,a
                           5312 ;	genMinus
                           5313 ;	AOP_HL for _numberOfPulsesA
   1044 21 27 01           5314 	ld	hl,#_numberOfPulsesA
   1047 7E                 5315 	ld	a,(hl)
   1048 C6 FF              5316 	add	a,#0xFF
   104A 47                 5317 	ld	b,a
                           5318 ;	genPlus
                           5319 ;	AOP_STK for _loadB_sloc0_1_0
                           5320 ;	Can't optimise plus by inc, falling back to the normal way
   104B 11 F0 00           5321 	ld	de,#_dYlut
   104E 68                 5322 	ld	l,b
   104F 26 00              5323 	ld	h,#0x00
   1051 19                 5324 	add	hl,de
   1052 7D                 5325 	ld	a,l
   1053 54                 5326 	ld	d,h
   1054 F8 00              5327 	lda	hl,0(sp)
                           5328 ;	genPointerGet
                           5329 ;	AOP_STK for _loadB_sloc0_1_0
   1056 22                 5330 	ld	(hl+),a
   1057 72                 5331 	ld	(hl),d
   1058 5F                 5332 	ld	e,a
   1059 1A                 5333 	ld	a,(de)
   105A 47                 5334 	ld	b,a
                           5335 ;	genIpush
                           5336 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   105B 79                 5337 	ld	a,c
   105C F5                 5338 	push	af
   105D 33                 5339 	inc	sp
                           5340 ;	genIpush
   105E 78                 5341 	ld	a,b
   105F F5                 5342 	push	af
   1060 33                 5343 	inc	sp
                           5344 ;	genIpush
   1061 3E 00              5345 	ld	a,#0x00
   1063 F5                 5346 	push	af
   1064 33                 5347 	inc	sp
                           5348 ;	genCall
   1065 CD 00 00           5349 	call	_move_sprite
   1068 E8 03              5350 	lda	sp,3(sp)
                           5351 ;	square.c 877
                           5352 ;	genIpush
                           5353 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   106A 21 01 02           5354 	ld	hl,#0x0201
   106D E5                 5355 	push	hl
                           5356 ;	genCall
   106E CD 00 00           5357 	call	_set_sprite_tile
   1071 E8 02              5358 	lda	sp,2(sp)
                           5359 ;	square.c 878
                           5360 ;	genMinus
                           5361 ;	AOP_HL for _totalStepsB
   1073 21 2B 01           5362 	ld	hl,#_totalStepsB
   1076 7E                 5363 	ld	a,(hl)
   1077 C6 FF              5364 	add	a,#0xFF
   1079 4F                 5365 	ld	c,a
                           5366 ;	genPlus
                           5367 ;	Can't optimise plus by inc, falling back to the normal way
   107A 3E D0              5368 	ld	a,#<_dXlut
   107C 81                 5369 	add	a,c
   107D 4F                 5370 	ld	c,a
   107E 3E 00              5371 	ld	a,#>_dXlut
   1080 CE 00              5372 	adc	a,#0x00
   1082 47                 5373 	ld	b,a
                           5374 ;	genPointerGet
   1083 0A                 5375 	ld	a,(bc)
   1084 4F                 5376 	ld	c,a
                           5377 ;	genMinus
                           5378 ;	AOP_HL for _numberOfPulsesB
   1085 21 2A 01           5379 	ld	hl,#_numberOfPulsesB
   1088 7E                 5380 	ld	a,(hl)
   1089 C6 FF              5381 	add	a,#0xFF
   108B 47                 5382 	ld	b,a
                           5383 ;	genPlus
                           5384 ;	AOP_STK for _loadB_sloc0_1_0
                           5385 ;	Can't optimise plus by inc, falling back to the normal way
   108C 11 F0 00           5386 	ld	de,#_dYlut
   108F 68                 5387 	ld	l,b
   1090 26 00              5388 	ld	h,#0x00
   1092 19                 5389 	add	hl,de
   1093 7D                 5390 	ld	a,l
   1094 54                 5391 	ld	d,h
   1095 F8 00              5392 	lda	hl,0(sp)
                           5393 ;	genPointerGet
                           5394 ;	AOP_STK for _loadB_sloc0_1_0
   1097 22                 5395 	ld	(hl+),a
   1098 72                 5396 	ld	(hl),d
   1099 5F                 5397 	ld	e,a
   109A 1A                 5398 	ld	a,(de)
   109B 47                 5399 	ld	b,a
                           5400 ;	genIpush
                           5401 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   109C 79                 5402 	ld	a,c
   109D F5                 5403 	push	af
   109E 33                 5404 	inc	sp
                           5405 ;	genIpush
   109F 78                 5406 	ld	a,b
   10A0 F5                 5407 	push	af
   10A1 33                 5408 	inc	sp
                           5409 ;	genIpush
   10A2 3E 01              5410 	ld	a,#0x01
   10A4 F5                 5411 	push	af
   10A5 33                 5412 	inc	sp
                           5413 ;	genCall
   10A6 CD 00 00           5414 	call	_move_sprite
   10A9 E8 03              5415 	lda	sp,3(sp)
                           5416 ;	square.c 879
                           5417 ;	genIpush
                           5418 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10AB 21 02 04           5419 	ld	hl,#0x0402
   10AE E5                 5420 	push	hl
                           5421 ;	genCall
   10AF CD 00 00           5422 	call	_set_sprite_tile
   10B2 E8 02              5423 	lda	sp,2(sp)
                           5424 ;	square.c 880
                           5425 ;	genMinus
                           5426 ;	AOP_HL for _totalStepsC
   10B4 21 2E 01           5427 	ld	hl,#_totalStepsC
   10B7 7E                 5428 	ld	a,(hl)
   10B8 C6 FF              5429 	add	a,#0xFF
   10BA 4F                 5430 	ld	c,a
                           5431 ;	genPlus
                           5432 ;	Can't optimise plus by inc, falling back to the normal way
   10BB 3E D0              5433 	ld	a,#<_dXlut
   10BD 81                 5434 	add	a,c
   10BE 4F                 5435 	ld	c,a
   10BF 3E 00              5436 	ld	a,#>_dXlut
   10C1 CE 00              5437 	adc	a,#0x00
   10C3 47                 5438 	ld	b,a
                           5439 ;	genPointerGet
   10C4 0A                 5440 	ld	a,(bc)
   10C5 4F                 5441 	ld	c,a
                           5442 ;	genMinus
                           5443 ;	AOP_HL for _numberOfPulsesC
   10C6 21 2D 01           5444 	ld	hl,#_numberOfPulsesC
   10C9 7E                 5445 	ld	a,(hl)
   10CA C6 FF              5446 	add	a,#0xFF
   10CC 47                 5447 	ld	b,a
                           5448 ;	genPlus
                           5449 ;	AOP_STK for _loadB_sloc0_1_0
                           5450 ;	Can't optimise plus by inc, falling back to the normal way
   10CD 11 F0 00           5451 	ld	de,#_dYlut
   10D0 68                 5452 	ld	l,b
   10D1 26 00              5453 	ld	h,#0x00
   10D3 19                 5454 	add	hl,de
   10D4 7D                 5455 	ld	a,l
   10D5 54                 5456 	ld	d,h
   10D6 F8 00              5457 	lda	hl,0(sp)
                           5458 ;	genPointerGet
                           5459 ;	AOP_STK for _loadB_sloc0_1_0
   10D8 22                 5460 	ld	(hl+),a
   10D9 72                 5461 	ld	(hl),d
   10DA 5F                 5462 	ld	e,a
   10DB 1A                 5463 	ld	a,(de)
   10DC 47                 5464 	ld	b,a
                           5465 ;	genIpush
                           5466 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10DD 79                 5467 	ld	a,c
   10DE F5                 5468 	push	af
   10DF 33                 5469 	inc	sp
                           5470 ;	genIpush
   10E0 78                 5471 	ld	a,b
   10E1 F5                 5472 	push	af
   10E2 33                 5473 	inc	sp
                           5474 ;	genIpush
   10E3 3E 02              5475 	ld	a,#0x02
   10E5 F5                 5476 	push	af
   10E6 33                 5477 	inc	sp
                           5478 ;	genCall
   10E7 CD 00 00           5479 	call	_move_sprite
   10EA E8 03              5480 	lda	sp,3(sp)
                           5481 ;	square.c 881
                           5482 ;	genCall
                           5483 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10EC CD 00 00           5484 	call	_disable_interrupts
                           5485 ;	square.c 882
                           5486 ;	genCall
                           5487 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10EF CD E3 00           5488 	call	_fillDrumA
                           5489 ;	square.c 883
                           5490 ;	genCall
                           5491 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10F2 CD B2 02           5492 	call	_fillDrumB
                           5493 ;	square.c 884
                           5494 ;	genCall
                           5495 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10F5 CD 81 04           5496 	call	_fillDrumC
                           5497 ;	square.c 885
                           5498 ;	genAssign
                           5499 ;	AOP_HL for _clkA
   10F8 21 29 01           5500 	ld	hl,#_clkA
   10FB 36 00              5501 	ld	(hl),#0x00
                           5502 ;	square.c 886
                           5503 ;	genAssign
                           5504 ;	AOP_HL for _clkB
   10FD 21 2C 01           5505 	ld	hl,#_clkB
   1100 36 00              5506 	ld	(hl),#0x00
                           5507 ;	square.c 887
                           5508 ;	genAssign
                           5509 ;	AOP_HL for _clkC
   1102 21 2F 01           5510 	ld	hl,#_clkC
   1105 36 00              5511 	ld	(hl),#0x00
                           5512 ;	square.c 888
                           5513 ;	genCall
                           5514 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1107 CD 00 00           5515 	call	_enable_interrupts
                           5516 ;	square.c 889
                           5517 ;	genCall
                           5518 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   110A CD 00 00           5519 	call	_wait_vbl_done
                           5520 ;	genLabel
   110D                    5521 00101$:
                           5522 ;	genEndFunction
   110D E8 02              5523 	lda	sp,2(sp)
   110F C9                 5524 	ret
   1110                    5525 ___loadB_end:
                           5526 ;	square.c 892
                           5527 ;	genLabel
                           5528 ;	genFunction
                           5529 ;	---------------------------------
                           5530 ; Function loadC
                           5531 ; ---------------------------------
   1110                    5532 ___loadC_start:
   1110                    5533 _loadC:
   1110 E8 FE              5534 	lda	sp,-2(sp)
                           5535 ;	square.c 894
                           5536 ;	genAssign
                           5537 ;	AOP_HL for _storeCPA
                           5538 ;	AOP_HL for _numberOfPulsesA
   1112 21 4E 01           5539 	ld	hl,#_storeCPA
   1115 7E                 5540 	ld	a,(hl)
   1116 21 27 01           5541 	ld	hl,#_numberOfPulsesA
   1119 77                 5542 	ld	(hl),a
                           5543 ;	square.c 895
                           5544 ;	genAssign
                           5545 ;	AOP_HL for _storeCSA
                           5546 ;	AOP_HL for _totalStepsA
   111A 21 4F 01           5547 	ld	hl,#_storeCSA
   111D 7E                 5548 	ld	a,(hl)
   111E 21 28 01           5549 	ld	hl,#_totalStepsA
   1121 77                 5550 	ld	(hl),a
                           5551 ;	square.c 896
                           5552 ;	genAssign
                           5553 ;	AOP_HL for _storeCPB
                           5554 ;	AOP_HL for _numberOfPulsesB
   1122 21 50 01           5555 	ld	hl,#_storeCPB
   1125 7E                 5556 	ld	a,(hl)
   1126 21 2A 01           5557 	ld	hl,#_numberOfPulsesB
   1129 77                 5558 	ld	(hl),a
                           5559 ;	square.c 897
                           5560 ;	genAssign
                           5561 ;	AOP_HL for _storeCSB
                           5562 ;	AOP_HL for _totalStepsB
   112A 21 51 01           5563 	ld	hl,#_storeCSB
   112D 7E                 5564 	ld	a,(hl)
   112E 21 2B 01           5565 	ld	hl,#_totalStepsB
   1131 77                 5566 	ld	(hl),a
                           5567 ;	square.c 898
                           5568 ;	genAssign
                           5569 ;	AOP_HL for _storeCPC
                           5570 ;	AOP_HL for _numberOfPulsesC
   1132 21 52 01           5571 	ld	hl,#_storeCPC
   1135 7E                 5572 	ld	a,(hl)
   1136 21 2D 01           5573 	ld	hl,#_numberOfPulsesC
   1139 77                 5574 	ld	(hl),a
                           5575 ;	square.c 899
                           5576 ;	genAssign
                           5577 ;	AOP_HL for _storeCSC
                           5578 ;	AOP_HL for _totalStepsC
   113A 21 53 01           5579 	ld	hl,#_storeCSC
   113D 7E                 5580 	ld	a,(hl)
   113E 21 2E 01           5581 	ld	hl,#_totalStepsC
   1141 77                 5582 	ld	(hl),a
                           5583 ;	square.c 900
                           5584 ;	genAssign
                           5585 ;	AOP_HL for _storeCOA
                           5586 ;	AOP_HL for _offStepA
   1142 21 54 01           5587 	ld	hl,#_storeCOA
   1145 7E                 5588 	ld	a,(hl)
   1146 21 30 01           5589 	ld	hl,#_offStepA
   1149 77                 5590 	ld	(hl),a
                           5591 ;	square.c 901
                           5592 ;	genAssign
                           5593 ;	AOP_HL for _storeCOB
                           5594 ;	AOP_HL for _offStepB
   114A 21 55 01           5595 	ld	hl,#_storeCOB
   114D 7E                 5596 	ld	a,(hl)
   114E 21 31 01           5597 	ld	hl,#_offStepB
   1151 77                 5598 	ld	(hl),a
                           5599 ;	square.c 902
                           5600 ;	genAssign
                           5601 ;	AOP_HL for _storeCOC
                           5602 ;	AOP_HL for _offStepC
   1152 21 56 01           5603 	ld	hl,#_storeCOC
   1155 7E                 5604 	ld	a,(hl)
   1156 21 32 01           5605 	ld	hl,#_offStepC
   1159 77                 5606 	ld	(hl),a
                           5607 ;	square.c 903
                           5608 ;	genAssign
                           5609 ;	AOP_HL for _storeCDA
                           5610 ;	AOP_HL for _delayA
   115A 21 57 01           5611 	ld	hl,#_storeCDA
   115D 7E                 5612 	ld	a,(hl)
   115E 21 21 01           5613 	ld	hl,#_delayA
   1161 77                 5614 	ld	(hl),a
                           5615 ;	square.c 904
                           5616 ;	genAssign
                           5617 ;	AOP_HL for _storeCDB
                           5618 ;	AOP_HL for _delayB
   1162 21 58 01           5619 	ld	hl,#_storeCDB
   1165 7E                 5620 	ld	a,(hl)
   1166 21 22 01           5621 	ld	hl,#_delayB
   1169 77                 5622 	ld	(hl),a
                           5623 ;	square.c 905
                           5624 ;	genAssign
                           5625 ;	AOP_HL for _storeCDC
                           5626 ;	AOP_HL for _delayC
   116A 21 59 01           5627 	ld	hl,#_storeCDC
   116D 7E                 5628 	ld	a,(hl)
   116E 21 23 01           5629 	ld	hl,#_delayC
   1171 77                 5630 	ld	(hl),a
                           5631 ;	square.c 906
                           5632 ;	genIpush
                           5633 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1172 21 00 00           5634 	ld	hl,#0x0000
   1175 E5                 5635 	push	hl
                           5636 ;	genCall
   1176 CD 00 00           5637 	call	_set_sprite_tile
   1179 E8 02              5638 	lda	sp,2(sp)
                           5639 ;	square.c 907
                           5640 ;	genMinus
                           5641 ;	AOP_HL for _totalStepsA
   117B 21 28 01           5642 	ld	hl,#_totalStepsA
   117E 7E                 5643 	ld	a,(hl)
   117F C6 FF              5644 	add	a,#0xFF
   1181 4F                 5645 	ld	c,a
                           5646 ;	genPlus
                           5647 ;	Can't optimise plus by inc, falling back to the normal way
   1182 3E D0              5648 	ld	a,#<_dXlut
   1184 81                 5649 	add	a,c
   1185 4F                 5650 	ld	c,a
   1186 3E 00              5651 	ld	a,#>_dXlut
   1188 CE 00              5652 	adc	a,#0x00
   118A 47                 5653 	ld	b,a
                           5654 ;	genPointerGet
   118B 0A                 5655 	ld	a,(bc)
   118C 4F                 5656 	ld	c,a
                           5657 ;	genMinus
                           5658 ;	AOP_HL for _numberOfPulsesA
   118D 21 27 01           5659 	ld	hl,#_numberOfPulsesA
   1190 7E                 5660 	ld	a,(hl)
   1191 C6 FF              5661 	add	a,#0xFF
   1193 47                 5662 	ld	b,a
                           5663 ;	genPlus
                           5664 ;	AOP_STK for _loadC_sloc0_1_0
                           5665 ;	Can't optimise plus by inc, falling back to the normal way
   1194 11 F0 00           5666 	ld	de,#_dYlut
   1197 68                 5667 	ld	l,b
   1198 26 00              5668 	ld	h,#0x00
   119A 19                 5669 	add	hl,de
   119B 7D                 5670 	ld	a,l
   119C 54                 5671 	ld	d,h
   119D F8 00              5672 	lda	hl,0(sp)
                           5673 ;	genPointerGet
                           5674 ;	AOP_STK for _loadC_sloc0_1_0
   119F 22                 5675 	ld	(hl+),a
   11A0 72                 5676 	ld	(hl),d
   11A1 5F                 5677 	ld	e,a
   11A2 1A                 5678 	ld	a,(de)
   11A3 47                 5679 	ld	b,a
                           5680 ;	genIpush
                           5681 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11A4 79                 5682 	ld	a,c
   11A5 F5                 5683 	push	af
   11A6 33                 5684 	inc	sp
                           5685 ;	genIpush
   11A7 78                 5686 	ld	a,b
   11A8 F5                 5687 	push	af
   11A9 33                 5688 	inc	sp
                           5689 ;	genIpush
   11AA 3E 00              5690 	ld	a,#0x00
   11AC F5                 5691 	push	af
   11AD 33                 5692 	inc	sp
                           5693 ;	genCall
   11AE CD 00 00           5694 	call	_move_sprite
   11B1 E8 03              5695 	lda	sp,3(sp)
                           5696 ;	square.c 908
                           5697 ;	genIpush
                           5698 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11B3 21 01 02           5699 	ld	hl,#0x0201
   11B6 E5                 5700 	push	hl
                           5701 ;	genCall
   11B7 CD 00 00           5702 	call	_set_sprite_tile
   11BA E8 02              5703 	lda	sp,2(sp)
                           5704 ;	square.c 909
                           5705 ;	genMinus
                           5706 ;	AOP_HL for _totalStepsB
   11BC 21 2B 01           5707 	ld	hl,#_totalStepsB
   11BF 7E                 5708 	ld	a,(hl)
   11C0 C6 FF              5709 	add	a,#0xFF
   11C2 4F                 5710 	ld	c,a
                           5711 ;	genPlus
                           5712 ;	Can't optimise plus by inc, falling back to the normal way
   11C3 3E D0              5713 	ld	a,#<_dXlut
   11C5 81                 5714 	add	a,c
   11C6 4F                 5715 	ld	c,a
   11C7 3E 00              5716 	ld	a,#>_dXlut
   11C9 CE 00              5717 	adc	a,#0x00
   11CB 47                 5718 	ld	b,a
                           5719 ;	genPointerGet
   11CC 0A                 5720 	ld	a,(bc)
   11CD 4F                 5721 	ld	c,a
                           5722 ;	genMinus
                           5723 ;	AOP_HL for _numberOfPulsesB
   11CE 21 2A 01           5724 	ld	hl,#_numberOfPulsesB
   11D1 7E                 5725 	ld	a,(hl)
   11D2 C6 FF              5726 	add	a,#0xFF
   11D4 47                 5727 	ld	b,a
                           5728 ;	genPlus
                           5729 ;	AOP_STK for _loadC_sloc0_1_0
                           5730 ;	Can't optimise plus by inc, falling back to the normal way
   11D5 11 F0 00           5731 	ld	de,#_dYlut
   11D8 68                 5732 	ld	l,b
   11D9 26 00              5733 	ld	h,#0x00
   11DB 19                 5734 	add	hl,de
   11DC 7D                 5735 	ld	a,l
   11DD 54                 5736 	ld	d,h
   11DE F8 00              5737 	lda	hl,0(sp)
                           5738 ;	genPointerGet
                           5739 ;	AOP_STK for _loadC_sloc0_1_0
   11E0 22                 5740 	ld	(hl+),a
   11E1 72                 5741 	ld	(hl),d
   11E2 5F                 5742 	ld	e,a
   11E3 1A                 5743 	ld	a,(de)
   11E4 47                 5744 	ld	b,a
                           5745 ;	genIpush
                           5746 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11E5 79                 5747 	ld	a,c
   11E6 F5                 5748 	push	af
   11E7 33                 5749 	inc	sp
                           5750 ;	genIpush
   11E8 78                 5751 	ld	a,b
   11E9 F5                 5752 	push	af
   11EA 33                 5753 	inc	sp
                           5754 ;	genIpush
   11EB 3E 01              5755 	ld	a,#0x01
   11ED F5                 5756 	push	af
   11EE 33                 5757 	inc	sp
                           5758 ;	genCall
   11EF CD 00 00           5759 	call	_move_sprite
   11F2 E8 03              5760 	lda	sp,3(sp)
                           5761 ;	square.c 910
                           5762 ;	genIpush
                           5763 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11F4 21 02 04           5764 	ld	hl,#0x0402
   11F7 E5                 5765 	push	hl
                           5766 ;	genCall
   11F8 CD 00 00           5767 	call	_set_sprite_tile
   11FB E8 02              5768 	lda	sp,2(sp)
                           5769 ;	square.c 911
                           5770 ;	genMinus
                           5771 ;	AOP_HL for _totalStepsC
   11FD 21 2E 01           5772 	ld	hl,#_totalStepsC
   1200 7E                 5773 	ld	a,(hl)
   1201 C6 FF              5774 	add	a,#0xFF
   1203 4F                 5775 	ld	c,a
                           5776 ;	genPlus
                           5777 ;	Can't optimise plus by inc, falling back to the normal way
   1204 3E D0              5778 	ld	a,#<_dXlut
   1206 81                 5779 	add	a,c
   1207 4F                 5780 	ld	c,a
   1208 3E 00              5781 	ld	a,#>_dXlut
   120A CE 00              5782 	adc	a,#0x00
   120C 47                 5783 	ld	b,a
                           5784 ;	genPointerGet
   120D 0A                 5785 	ld	a,(bc)
   120E 4F                 5786 	ld	c,a
                           5787 ;	genMinus
                           5788 ;	AOP_HL for _numberOfPulsesC
   120F 21 2D 01           5789 	ld	hl,#_numberOfPulsesC
   1212 7E                 5790 	ld	a,(hl)
   1213 C6 FF              5791 	add	a,#0xFF
   1215 47                 5792 	ld	b,a
                           5793 ;	genPlus
                           5794 ;	AOP_STK for _loadC_sloc0_1_0
                           5795 ;	Can't optimise plus by inc, falling back to the normal way
   1216 11 F0 00           5796 	ld	de,#_dYlut
   1219 68                 5797 	ld	l,b
   121A 26 00              5798 	ld	h,#0x00
   121C 19                 5799 	add	hl,de
   121D 7D                 5800 	ld	a,l
   121E 54                 5801 	ld	d,h
   121F F8 00              5802 	lda	hl,0(sp)
                           5803 ;	genPointerGet
                           5804 ;	AOP_STK for _loadC_sloc0_1_0
   1221 22                 5805 	ld	(hl+),a
   1222 72                 5806 	ld	(hl),d
   1223 5F                 5807 	ld	e,a
   1224 1A                 5808 	ld	a,(de)
   1225 47                 5809 	ld	b,a
                           5810 ;	genIpush
                           5811 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1226 79                 5812 	ld	a,c
   1227 F5                 5813 	push	af
   1228 33                 5814 	inc	sp
                           5815 ;	genIpush
   1229 78                 5816 	ld	a,b
   122A F5                 5817 	push	af
   122B 33                 5818 	inc	sp
                           5819 ;	genIpush
   122C 3E 02              5820 	ld	a,#0x02
   122E F5                 5821 	push	af
   122F 33                 5822 	inc	sp
                           5823 ;	genCall
   1230 CD 00 00           5824 	call	_move_sprite
   1233 E8 03              5825 	lda	sp,3(sp)
                           5826 ;	square.c 912
                           5827 ;	genCall
                           5828 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1235 CD 00 00           5829 	call	_disable_interrupts
                           5830 ;	square.c 913
                           5831 ;	genCall
                           5832 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1238 CD E3 00           5833 	call	_fillDrumA
                           5834 ;	square.c 914
                           5835 ;	genCall
                           5836 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   123B CD B2 02           5837 	call	_fillDrumB
                           5838 ;	square.c 915
                           5839 ;	genCall
                           5840 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   123E CD 81 04           5841 	call	_fillDrumC
                           5842 ;	square.c 916
                           5843 ;	genAssign
                           5844 ;	AOP_HL for _clkA
   1241 21 29 01           5845 	ld	hl,#_clkA
   1244 36 00              5846 	ld	(hl),#0x00
                           5847 ;	square.c 917
                           5848 ;	genAssign
                           5849 ;	AOP_HL for _clkB
   1246 21 2C 01           5850 	ld	hl,#_clkB
   1249 36 00              5851 	ld	(hl),#0x00
                           5852 ;	square.c 918
                           5853 ;	genAssign
                           5854 ;	AOP_HL for _clkC
   124B 21 2F 01           5855 	ld	hl,#_clkC
   124E 36 00              5856 	ld	(hl),#0x00
                           5857 ;	square.c 919
                           5858 ;	genCall
                           5859 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1250 CD 00 00           5860 	call	_enable_interrupts
                           5861 ;	square.c 920
                           5862 ;	genCall
                           5863 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1253 CD 00 00           5864 	call	_wait_vbl_done
                           5865 ;	genLabel
   1256                    5866 00101$:
                           5867 ;	genEndFunction
   1256 E8 02              5868 	lda	sp,2(sp)
   1258 C9                 5869 	ret
   1259                    5870 ___loadC_end:
                           5871 ;	square.c 923
                           5872 ;	genLabel
                           5873 ;	genFunction
                           5874 ;	---------------------------------
                           5875 ; Function loadD
                           5876 ; ---------------------------------
   1259                    5877 ___loadD_start:
   1259                    5878 _loadD:
   1259 E8 FE              5879 	lda	sp,-2(sp)
                           5880 ;	square.c 925
                           5881 ;	genAssign
                           5882 ;	AOP_HL for _storeDPA
                           5883 ;	AOP_HL for _numberOfPulsesA
   125B 21 5A 01           5884 	ld	hl,#_storeDPA
   125E 7E                 5885 	ld	a,(hl)
   125F 21 27 01           5886 	ld	hl,#_numberOfPulsesA
   1262 77                 5887 	ld	(hl),a
                           5888 ;	square.c 926
                           5889 ;	genAssign
                           5890 ;	AOP_HL for _storeBSA
                           5891 ;	AOP_HL for _totalStepsA
   1263 21 43 01           5892 	ld	hl,#_storeBSA
   1266 7E                 5893 	ld	a,(hl)
   1267 21 28 01           5894 	ld	hl,#_totalStepsA
   126A 77                 5895 	ld	(hl),a
                           5896 ;	square.c 927
                           5897 ;	genAssign
                           5898 ;	AOP_HL for _storeDPB
                           5899 ;	AOP_HL for _numberOfPulsesB
   126B 21 5C 01           5900 	ld	hl,#_storeDPB
   126E 7E                 5901 	ld	a,(hl)
   126F 21 2A 01           5902 	ld	hl,#_numberOfPulsesB
   1272 77                 5903 	ld	(hl),a
                           5904 ;	square.c 928
                           5905 ;	genAssign
                           5906 ;	AOP_HL for _storeBSB
                           5907 ;	AOP_HL for _totalStepsB
   1273 21 45 01           5908 	ld	hl,#_storeBSB
   1276 7E                 5909 	ld	a,(hl)
   1277 21 2B 01           5910 	ld	hl,#_totalStepsB
   127A 77                 5911 	ld	(hl),a
                           5912 ;	square.c 929
                           5913 ;	genAssign
                           5914 ;	AOP_HL for _storeDPC
                           5915 ;	AOP_HL for _numberOfPulsesC
   127B 21 5E 01           5916 	ld	hl,#_storeDPC
   127E 7E                 5917 	ld	a,(hl)
   127F 21 2D 01           5918 	ld	hl,#_numberOfPulsesC
   1282 77                 5919 	ld	(hl),a
                           5920 ;	square.c 930
                           5921 ;	genAssign
                           5922 ;	AOP_HL for _storeDSC
                           5923 ;	AOP_HL for _totalStepsC
   1283 21 5F 01           5924 	ld	hl,#_storeDSC
   1286 7E                 5925 	ld	a,(hl)
   1287 21 2E 01           5926 	ld	hl,#_totalStepsC
   128A 77                 5927 	ld	(hl),a
                           5928 ;	square.c 931
                           5929 ;	genAssign
                           5930 ;	AOP_HL for _storeDOA
                           5931 ;	AOP_HL for _offStepA
   128B 21 60 01           5932 	ld	hl,#_storeDOA
   128E 7E                 5933 	ld	a,(hl)
   128F 21 30 01           5934 	ld	hl,#_offStepA
   1292 77                 5935 	ld	(hl),a
                           5936 ;	square.c 932
                           5937 ;	genAssign
                           5938 ;	AOP_HL for _storeDOB
                           5939 ;	AOP_HL for _offStepB
   1293 21 61 01           5940 	ld	hl,#_storeDOB
   1296 7E                 5941 	ld	a,(hl)
   1297 21 31 01           5942 	ld	hl,#_offStepB
   129A 77                 5943 	ld	(hl),a
                           5944 ;	square.c 933
                           5945 ;	genAssign
                           5946 ;	AOP_HL for _storeDOC
                           5947 ;	AOP_HL for _offStepC
   129B 21 62 01           5948 	ld	hl,#_storeDOC
   129E 7E                 5949 	ld	a,(hl)
   129F 21 32 01           5950 	ld	hl,#_offStepC
   12A2 77                 5951 	ld	(hl),a
                           5952 ;	square.c 934
                           5953 ;	genAssign
                           5954 ;	AOP_HL for _storeDDA
                           5955 ;	AOP_HL for _delayA
   12A3 21 63 01           5956 	ld	hl,#_storeDDA
   12A6 7E                 5957 	ld	a,(hl)
   12A7 21 21 01           5958 	ld	hl,#_delayA
   12AA 77                 5959 	ld	(hl),a
                           5960 ;	square.c 935
                           5961 ;	genAssign
                           5962 ;	AOP_HL for _storeDDB
                           5963 ;	AOP_HL for _delayB
   12AB 21 64 01           5964 	ld	hl,#_storeDDB
   12AE 7E                 5965 	ld	a,(hl)
   12AF 21 22 01           5966 	ld	hl,#_delayB
   12B2 77                 5967 	ld	(hl),a
                           5968 ;	square.c 936
                           5969 ;	genAssign
                           5970 ;	AOP_HL for _storeDDC
                           5971 ;	AOP_HL for _delayC
   12B3 21 65 01           5972 	ld	hl,#_storeDDC
   12B6 7E                 5973 	ld	a,(hl)
   12B7 21 23 01           5974 	ld	hl,#_delayC
   12BA 77                 5975 	ld	(hl),a
                           5976 ;	square.c 937
                           5977 ;	genIpush
                           5978 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12BB 21 00 00           5979 	ld	hl,#0x0000
   12BE E5                 5980 	push	hl
                           5981 ;	genCall
   12BF CD 00 00           5982 	call	_set_sprite_tile
   12C2 E8 02              5983 	lda	sp,2(sp)
                           5984 ;	square.c 938
                           5985 ;	genMinus
                           5986 ;	AOP_HL for _totalStepsA
   12C4 21 28 01           5987 	ld	hl,#_totalStepsA
   12C7 7E                 5988 	ld	a,(hl)
   12C8 C6 FF              5989 	add	a,#0xFF
   12CA 4F                 5990 	ld	c,a
                           5991 ;	genPlus
                           5992 ;	Can't optimise plus by inc, falling back to the normal way
   12CB 3E D0              5993 	ld	a,#<_dXlut
   12CD 81                 5994 	add	a,c
   12CE 4F                 5995 	ld	c,a
   12CF 3E 00              5996 	ld	a,#>_dXlut
   12D1 CE 00              5997 	adc	a,#0x00
   12D3 47                 5998 	ld	b,a
                           5999 ;	genPointerGet
   12D4 0A                 6000 	ld	a,(bc)
   12D5 4F                 6001 	ld	c,a
                           6002 ;	genMinus
                           6003 ;	AOP_HL for _numberOfPulsesA
   12D6 21 27 01           6004 	ld	hl,#_numberOfPulsesA
   12D9 7E                 6005 	ld	a,(hl)
   12DA C6 FF              6006 	add	a,#0xFF
   12DC 47                 6007 	ld	b,a
                           6008 ;	genPlus
                           6009 ;	AOP_STK for _loadD_sloc0_1_0
                           6010 ;	Can't optimise plus by inc, falling back to the normal way
   12DD 11 F0 00           6011 	ld	de,#_dYlut
   12E0 68                 6012 	ld	l,b
   12E1 26 00              6013 	ld	h,#0x00
   12E3 19                 6014 	add	hl,de
   12E4 7D                 6015 	ld	a,l
   12E5 54                 6016 	ld	d,h
   12E6 F8 00              6017 	lda	hl,0(sp)
                           6018 ;	genPointerGet
                           6019 ;	AOP_STK for _loadD_sloc0_1_0
   12E8 22                 6020 	ld	(hl+),a
   12E9 72                 6021 	ld	(hl),d
   12EA 5F                 6022 	ld	e,a
   12EB 1A                 6023 	ld	a,(de)
   12EC 47                 6024 	ld	b,a
                           6025 ;	genIpush
                           6026 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12ED 79                 6027 	ld	a,c
   12EE F5                 6028 	push	af
   12EF 33                 6029 	inc	sp
                           6030 ;	genIpush
   12F0 78                 6031 	ld	a,b
   12F1 F5                 6032 	push	af
   12F2 33                 6033 	inc	sp
                           6034 ;	genIpush
   12F3 3E 00              6035 	ld	a,#0x00
   12F5 F5                 6036 	push	af
   12F6 33                 6037 	inc	sp
                           6038 ;	genCall
   12F7 CD 00 00           6039 	call	_move_sprite
   12FA E8 03              6040 	lda	sp,3(sp)
                           6041 ;	square.c 939
                           6042 ;	genIpush
                           6043 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12FC 21 01 02           6044 	ld	hl,#0x0201
   12FF E5                 6045 	push	hl
                           6046 ;	genCall
   1300 CD 00 00           6047 	call	_set_sprite_tile
   1303 E8 02              6048 	lda	sp,2(sp)
                           6049 ;	square.c 940
                           6050 ;	genMinus
                           6051 ;	AOP_HL for _totalStepsB
   1305 21 2B 01           6052 	ld	hl,#_totalStepsB
   1308 7E                 6053 	ld	a,(hl)
   1309 C6 FF              6054 	add	a,#0xFF
   130B 4F                 6055 	ld	c,a
                           6056 ;	genPlus
                           6057 ;	Can't optimise plus by inc, falling back to the normal way
   130C 3E D0              6058 	ld	a,#<_dXlut
   130E 81                 6059 	add	a,c
   130F 4F                 6060 	ld	c,a
   1310 3E 00              6061 	ld	a,#>_dXlut
   1312 CE 00              6062 	adc	a,#0x00
   1314 47                 6063 	ld	b,a
                           6064 ;	genPointerGet
   1315 0A                 6065 	ld	a,(bc)
   1316 4F                 6066 	ld	c,a
                           6067 ;	genMinus
                           6068 ;	AOP_HL for _numberOfPulsesB
   1317 21 2A 01           6069 	ld	hl,#_numberOfPulsesB
   131A 7E                 6070 	ld	a,(hl)
   131B C6 FF              6071 	add	a,#0xFF
   131D 47                 6072 	ld	b,a
                           6073 ;	genPlus
                           6074 ;	AOP_STK for _loadD_sloc0_1_0
                           6075 ;	Can't optimise plus by inc, falling back to the normal way
   131E 11 F0 00           6076 	ld	de,#_dYlut
   1321 68                 6077 	ld	l,b
   1322 26 00              6078 	ld	h,#0x00
   1324 19                 6079 	add	hl,de
   1325 7D                 6080 	ld	a,l
   1326 54                 6081 	ld	d,h
   1327 F8 00              6082 	lda	hl,0(sp)
                           6083 ;	genPointerGet
                           6084 ;	AOP_STK for _loadD_sloc0_1_0
   1329 22                 6085 	ld	(hl+),a
   132A 72                 6086 	ld	(hl),d
   132B 5F                 6087 	ld	e,a
   132C 1A                 6088 	ld	a,(de)
   132D 47                 6089 	ld	b,a
                           6090 ;	genIpush
                           6091 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   132E 79                 6092 	ld	a,c
   132F F5                 6093 	push	af
   1330 33                 6094 	inc	sp
                           6095 ;	genIpush
   1331 78                 6096 	ld	a,b
   1332 F5                 6097 	push	af
   1333 33                 6098 	inc	sp
                           6099 ;	genIpush
   1334 3E 01              6100 	ld	a,#0x01
   1336 F5                 6101 	push	af
   1337 33                 6102 	inc	sp
                           6103 ;	genCall
   1338 CD 00 00           6104 	call	_move_sprite
   133B E8 03              6105 	lda	sp,3(sp)
                           6106 ;	square.c 941
                           6107 ;	genIpush
                           6108 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   133D 21 02 04           6109 	ld	hl,#0x0402
   1340 E5                 6110 	push	hl
                           6111 ;	genCall
   1341 CD 00 00           6112 	call	_set_sprite_tile
   1344 E8 02              6113 	lda	sp,2(sp)
                           6114 ;	square.c 942
                           6115 ;	genMinus
                           6116 ;	AOP_HL for _totalStepsC
   1346 21 2E 01           6117 	ld	hl,#_totalStepsC
   1349 7E                 6118 	ld	a,(hl)
   134A C6 FF              6119 	add	a,#0xFF
   134C 4F                 6120 	ld	c,a
                           6121 ;	genPlus
                           6122 ;	Can't optimise plus by inc, falling back to the normal way
   134D 3E D0              6123 	ld	a,#<_dXlut
   134F 81                 6124 	add	a,c
   1350 4F                 6125 	ld	c,a
   1351 3E 00              6126 	ld	a,#>_dXlut
   1353 CE 00              6127 	adc	a,#0x00
   1355 47                 6128 	ld	b,a
                           6129 ;	genPointerGet
   1356 0A                 6130 	ld	a,(bc)
   1357 4F                 6131 	ld	c,a
                           6132 ;	genMinus
                           6133 ;	AOP_HL for _numberOfPulsesC
   1358 21 2D 01           6134 	ld	hl,#_numberOfPulsesC
   135B 7E                 6135 	ld	a,(hl)
   135C C6 FF              6136 	add	a,#0xFF
   135E 47                 6137 	ld	b,a
                           6138 ;	genPlus
                           6139 ;	AOP_STK for _loadD_sloc0_1_0
                           6140 ;	Can't optimise plus by inc, falling back to the normal way
   135F 11 F0 00           6141 	ld	de,#_dYlut
   1362 68                 6142 	ld	l,b
   1363 26 00              6143 	ld	h,#0x00
   1365 19                 6144 	add	hl,de
   1366 7D                 6145 	ld	a,l
   1367 54                 6146 	ld	d,h
   1368 F8 00              6147 	lda	hl,0(sp)
                           6148 ;	genPointerGet
                           6149 ;	AOP_STK for _loadD_sloc0_1_0
   136A 22                 6150 	ld	(hl+),a
   136B 72                 6151 	ld	(hl),d
   136C 5F                 6152 	ld	e,a
   136D 1A                 6153 	ld	a,(de)
   136E 47                 6154 	ld	b,a
                           6155 ;	genIpush
                           6156 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   136F 79                 6157 	ld	a,c
   1370 F5                 6158 	push	af
   1371 33                 6159 	inc	sp
                           6160 ;	genIpush
   1372 78                 6161 	ld	a,b
   1373 F5                 6162 	push	af
   1374 33                 6163 	inc	sp
                           6164 ;	genIpush
   1375 3E 02              6165 	ld	a,#0x02
   1377 F5                 6166 	push	af
   1378 33                 6167 	inc	sp
                           6168 ;	genCall
   1379 CD 00 00           6169 	call	_move_sprite
   137C E8 03              6170 	lda	sp,3(sp)
                           6171 ;	square.c 943
                           6172 ;	genCall
                           6173 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   137E CD 00 00           6174 	call	_disable_interrupts
                           6175 ;	square.c 944
                           6176 ;	genCall
                           6177 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1381 CD E3 00           6178 	call	_fillDrumA
                           6179 ;	square.c 945
                           6180 ;	genCall
                           6181 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1384 CD B2 02           6182 	call	_fillDrumB
                           6183 ;	square.c 946
                           6184 ;	genCall
                           6185 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1387 CD 81 04           6186 	call	_fillDrumC
                           6187 ;	square.c 947
                           6188 ;	genAssign
                           6189 ;	AOP_HL for _clkA
   138A 21 29 01           6190 	ld	hl,#_clkA
   138D 36 00              6191 	ld	(hl),#0x00
                           6192 ;	square.c 948
                           6193 ;	genAssign
                           6194 ;	AOP_HL for _clkB
   138F 21 2C 01           6195 	ld	hl,#_clkB
   1392 36 00              6196 	ld	(hl),#0x00
                           6197 ;	square.c 949
                           6198 ;	genAssign
                           6199 ;	AOP_HL for _clkC
   1394 21 2F 01           6200 	ld	hl,#_clkC
   1397 36 00              6201 	ld	(hl),#0x00
                           6202 ;	square.c 950
                           6203 ;	genCall
                           6204 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1399 CD 00 00           6205 	call	_enable_interrupts
                           6206 ;	square.c 951
                           6207 ;	genCall
                           6208 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   139C CD 00 00           6209 	call	_wait_vbl_done
                           6210 ;	genLabel
   139F                    6211 00101$:
                           6212 ;	genEndFunction
   139F E8 02              6213 	lda	sp,2(sp)
   13A1 C9                 6214 	ret
   13A2                    6215 ___loadD_end:
                           6216 ;	square.c 955
                           6217 ;	genLabel
                           6218 ;	genFunction
                           6219 ;	---------------------------------
                           6220 ; Function savePattern
                           6221 ; ---------------------------------
   13A2                    6222 ___savePattern_start:
   13A2                    6223 _savePattern:
                           6224 	
                           6225 ;	square.c 958
                           6226 ;	genCmpGt
                           6227 ;	AOP_HL for _currentSaveSlot
   13A2 3E 03              6228 	ld	a,#0x03
   13A4 21 35 01           6229 	ld	hl,#_currentSaveSlot
   13A7 96                 6230 	sub	a,(hl)
   13A8 DA 4A 15           6231 	jp	c,00105$
                           6232 ;	genJumpTab
                           6233 ;	AOP_HL for _currentSaveSlot
   13AB 5E                 6234 	ld	e,(hl)
   13AC 16 00              6235 	ld	d,#0x00
   13AE 21 B5 13           6236 	ld	hl,#00109$
   13B1 19                 6237 	add	hl,de
   13B2 19                 6238 	add	hl,de
   13B3 19                 6239 	add	hl,de
   13B4 E9                 6240 	jp	(hl)
   13B5                    6241 00109$:
   13B5 C3 C1 13           6242 	jp	00101$
   13B8 C3 24 14           6243 	jp	00102$
   13BB C3 87 14           6244 	jp	00103$
   13BE C3 EA 14           6245 	jp	00104$
                           6246 ;	square.c 961
                           6247 ;	genLabel
   13C1                    6248 00101$:
                           6249 ;	genAssign
                           6250 ;	AOP_HL for _numberOfPulsesA
                           6251 ;	AOP_HL for _storeAPA
   13C1 21 27 01           6252 	ld	hl,#_numberOfPulsesA
   13C4 7E                 6253 	ld	a,(hl)
   13C5 21 36 01           6254 	ld	hl,#_storeAPA
   13C8 77                 6255 	ld	(hl),a
                           6256 ;	square.c 962
                           6257 ;	genAssign
                           6258 ;	AOP_HL for _totalStepsA
                           6259 ;	AOP_HL for _storeASA
   13C9 21 28 01           6260 	ld	hl,#_totalStepsA
   13CC 7E                 6261 	ld	a,(hl)
   13CD 21 37 01           6262 	ld	hl,#_storeASA
   13D0 77                 6263 	ld	(hl),a
                           6264 ;	square.c 963
                           6265 ;	genAssign
                           6266 ;	AOP_HL for _numberOfPulsesB
                           6267 ;	AOP_HL for _storeAPB
   13D1 21 2A 01           6268 	ld	hl,#_numberOfPulsesB
   13D4 7E                 6269 	ld	a,(hl)
   13D5 21 38 01           6270 	ld	hl,#_storeAPB
   13D8 77                 6271 	ld	(hl),a
                           6272 ;	square.c 964
                           6273 ;	genAssign
                           6274 ;	AOP_HL for _totalStepsB
                           6275 ;	AOP_HL for _storeASB
   13D9 21 2B 01           6276 	ld	hl,#_totalStepsB
   13DC 7E                 6277 	ld	a,(hl)
   13DD 21 39 01           6278 	ld	hl,#_storeASB
   13E0 77                 6279 	ld	(hl),a
                           6280 ;	square.c 965
                           6281 ;	genAssign
                           6282 ;	AOP_HL for _numberOfPulsesC
                           6283 ;	AOP_HL for _storeAPC
   13E1 21 2D 01           6284 	ld	hl,#_numberOfPulsesC
   13E4 7E                 6285 	ld	a,(hl)
   13E5 21 3A 01           6286 	ld	hl,#_storeAPC
   13E8 77                 6287 	ld	(hl),a
                           6288 ;	square.c 966
                           6289 ;	genAssign
                           6290 ;	AOP_HL for _totalStepsC
                           6291 ;	AOP_HL for _storeASC
   13E9 21 2E 01           6292 	ld	hl,#_totalStepsC
   13EC 7E                 6293 	ld	a,(hl)
   13ED 21 3B 01           6294 	ld	hl,#_storeASC
   13F0 77                 6295 	ld	(hl),a
                           6296 ;	square.c 967
                           6297 ;	genAssign
                           6298 ;	AOP_HL for _offStepA
                           6299 ;	AOP_HL for _storeAOA
   13F1 21 30 01           6300 	ld	hl,#_offStepA
   13F4 7E                 6301 	ld	a,(hl)
   13F5 21 3C 01           6302 	ld	hl,#_storeAOA
   13F8 77                 6303 	ld	(hl),a
                           6304 ;	square.c 968
                           6305 ;	genAssign
                           6306 ;	AOP_HL for _offStepB
                           6307 ;	AOP_HL for _storeAOB
   13F9 21 31 01           6308 	ld	hl,#_offStepB
   13FC 7E                 6309 	ld	a,(hl)
   13FD 21 3D 01           6310 	ld	hl,#_storeAOB
   1400 77                 6311 	ld	(hl),a
                           6312 ;	square.c 969
                           6313 ;	genAssign
                           6314 ;	AOP_HL for _offStepC
                           6315 ;	AOP_HL for _storeAOC
   1401 21 32 01           6316 	ld	hl,#_offStepC
   1404 7E                 6317 	ld	a,(hl)
   1405 21 3E 01           6318 	ld	hl,#_storeAOC
   1408 77                 6319 	ld	(hl),a
                           6320 ;	square.c 970
                           6321 ;	genAssign
                           6322 ;	AOP_HL for _delayA
                           6323 ;	AOP_HL for _storeADA
   1409 21 21 01           6324 	ld	hl,#_delayA
   140C 7E                 6325 	ld	a,(hl)
   140D 21 3F 01           6326 	ld	hl,#_storeADA
   1410 77                 6327 	ld	(hl),a
                           6328 ;	square.c 971
                           6329 ;	genAssign
                           6330 ;	AOP_HL for _delayB
                           6331 ;	AOP_HL for _storeADB
   1411 21 22 01           6332 	ld	hl,#_delayB
   1414 7E                 6333 	ld	a,(hl)
   1415 21 40 01           6334 	ld	hl,#_storeADB
   1418 77                 6335 	ld	(hl),a
                           6336 ;	square.c 972
                           6337 ;	genAssign
                           6338 ;	AOP_HL for _delayC
                           6339 ;	AOP_HL for _storeADC
   1419 21 23 01           6340 	ld	hl,#_delayC
   141C 7E                 6341 	ld	a,(hl)
   141D 21 41 01           6342 	ld	hl,#_storeADC
   1420 77                 6343 	ld	(hl),a
                           6344 ;	square.c 973
                           6345 ;	genGoto
   1421 C3 4A 15           6346 	jp	00105$
                           6347 ;	square.c 975
                           6348 ;	genLabel
   1424                    6349 00102$:
                           6350 ;	genAssign
                           6351 ;	AOP_HL for _numberOfPulsesA
                           6352 ;	AOP_HL for _storeBPA
   1424 21 27 01           6353 	ld	hl,#_numberOfPulsesA
   1427 7E                 6354 	ld	a,(hl)
   1428 21 42 01           6355 	ld	hl,#_storeBPA
   142B 77                 6356 	ld	(hl),a
                           6357 ;	square.c 976
                           6358 ;	genAssign
                           6359 ;	AOP_HL for _totalStepsA
                           6360 ;	AOP_HL for _storeBSA
   142C 21 28 01           6361 	ld	hl,#_totalStepsA
   142F 7E                 6362 	ld	a,(hl)
   1430 21 43 01           6363 	ld	hl,#_storeBSA
   1433 77                 6364 	ld	(hl),a
                           6365 ;	square.c 977
                           6366 ;	genAssign
                           6367 ;	AOP_HL for _numberOfPulsesB
                           6368 ;	AOP_HL for _storeBPB
   1434 21 2A 01           6369 	ld	hl,#_numberOfPulsesB
   1437 7E                 6370 	ld	a,(hl)
   1438 21 44 01           6371 	ld	hl,#_storeBPB
   143B 77                 6372 	ld	(hl),a
                           6373 ;	square.c 978
                           6374 ;	genAssign
                           6375 ;	AOP_HL for _totalStepsB
                           6376 ;	AOP_HL for _storeBSB
   143C 21 2B 01           6377 	ld	hl,#_totalStepsB
   143F 7E                 6378 	ld	a,(hl)
   1440 21 45 01           6379 	ld	hl,#_storeBSB
   1443 77                 6380 	ld	(hl),a
                           6381 ;	square.c 979
                           6382 ;	genAssign
                           6383 ;	AOP_HL for _numberOfPulsesC
                           6384 ;	AOP_HL for _storeBPC
   1444 21 2D 01           6385 	ld	hl,#_numberOfPulsesC
   1447 7E                 6386 	ld	a,(hl)
   1448 21 46 01           6387 	ld	hl,#_storeBPC
   144B 77                 6388 	ld	(hl),a
                           6389 ;	square.c 980
                           6390 ;	genAssign
                           6391 ;	AOP_HL for _totalStepsC
                           6392 ;	AOP_HL for _storeBSC
   144C 21 2E 01           6393 	ld	hl,#_totalStepsC
   144F 7E                 6394 	ld	a,(hl)
   1450 21 47 01           6395 	ld	hl,#_storeBSC
   1453 77                 6396 	ld	(hl),a
                           6397 ;	square.c 981
                           6398 ;	genAssign
                           6399 ;	AOP_HL for _offStepA
                           6400 ;	AOP_HL for _storeBOA
   1454 21 30 01           6401 	ld	hl,#_offStepA
   1457 7E                 6402 	ld	a,(hl)
   1458 21 48 01           6403 	ld	hl,#_storeBOA
   145B 77                 6404 	ld	(hl),a
                           6405 ;	square.c 982
                           6406 ;	genAssign
                           6407 ;	AOP_HL for _offStepB
                           6408 ;	AOP_HL for _storeBOB
   145C 21 31 01           6409 	ld	hl,#_offStepB
   145F 7E                 6410 	ld	a,(hl)
   1460 21 49 01           6411 	ld	hl,#_storeBOB
   1463 77                 6412 	ld	(hl),a
                           6413 ;	square.c 983
                           6414 ;	genAssign
                           6415 ;	AOP_HL for _offStepC
                           6416 ;	AOP_HL for _storeBOC
   1464 21 32 01           6417 	ld	hl,#_offStepC
   1467 7E                 6418 	ld	a,(hl)
   1468 21 4A 01           6419 	ld	hl,#_storeBOC
   146B 77                 6420 	ld	(hl),a
                           6421 ;	square.c 984
                           6422 ;	genAssign
                           6423 ;	AOP_HL for _delayA
                           6424 ;	AOP_HL for _storeBDA
   146C 21 21 01           6425 	ld	hl,#_delayA
   146F 7E                 6426 	ld	a,(hl)
   1470 21 4B 01           6427 	ld	hl,#_storeBDA
   1473 77                 6428 	ld	(hl),a
                           6429 ;	square.c 985
                           6430 ;	genAssign
                           6431 ;	AOP_HL for _delayB
                           6432 ;	AOP_HL for _storeBDB
   1474 21 22 01           6433 	ld	hl,#_delayB
   1477 7E                 6434 	ld	a,(hl)
   1478 21 4C 01           6435 	ld	hl,#_storeBDB
   147B 77                 6436 	ld	(hl),a
                           6437 ;	square.c 986
                           6438 ;	genAssign
                           6439 ;	AOP_HL for _delayC
                           6440 ;	AOP_HL for _storeBDC
   147C 21 23 01           6441 	ld	hl,#_delayC
   147F 7E                 6442 	ld	a,(hl)
   1480 21 4D 01           6443 	ld	hl,#_storeBDC
   1483 77                 6444 	ld	(hl),a
                           6445 ;	square.c 987
                           6446 ;	genGoto
   1484 C3 4A 15           6447 	jp	00105$
                           6448 ;	square.c 990
                           6449 ;	genLabel
   1487                    6450 00103$:
                           6451 ;	genAssign
                           6452 ;	AOP_HL for _numberOfPulsesA
                           6453 ;	AOP_HL for _storeCPA
   1487 21 27 01           6454 	ld	hl,#_numberOfPulsesA
   148A 7E                 6455 	ld	a,(hl)
   148B 21 4E 01           6456 	ld	hl,#_storeCPA
   148E 77                 6457 	ld	(hl),a
                           6458 ;	square.c 991
                           6459 ;	genAssign
                           6460 ;	AOP_HL for _totalStepsA
                           6461 ;	AOP_HL for _storeCSA
   148F 21 28 01           6462 	ld	hl,#_totalStepsA
   1492 7E                 6463 	ld	a,(hl)
   1493 21 4F 01           6464 	ld	hl,#_storeCSA
   1496 77                 6465 	ld	(hl),a
                           6466 ;	square.c 992
                           6467 ;	genAssign
                           6468 ;	AOP_HL for _numberOfPulsesB
                           6469 ;	AOP_HL for _storeCPB
   1497 21 2A 01           6470 	ld	hl,#_numberOfPulsesB
   149A 7E                 6471 	ld	a,(hl)
   149B 21 50 01           6472 	ld	hl,#_storeCPB
   149E 77                 6473 	ld	(hl),a
                           6474 ;	square.c 993
                           6475 ;	genAssign
                           6476 ;	AOP_HL for _totalStepsB
                           6477 ;	AOP_HL for _storeCSB
   149F 21 2B 01           6478 	ld	hl,#_totalStepsB
   14A2 7E                 6479 	ld	a,(hl)
   14A3 21 51 01           6480 	ld	hl,#_storeCSB
   14A6 77                 6481 	ld	(hl),a
                           6482 ;	square.c 994
                           6483 ;	genAssign
                           6484 ;	AOP_HL for _numberOfPulsesC
                           6485 ;	AOP_HL for _storeCPC
   14A7 21 2D 01           6486 	ld	hl,#_numberOfPulsesC
   14AA 7E                 6487 	ld	a,(hl)
   14AB 21 52 01           6488 	ld	hl,#_storeCPC
   14AE 77                 6489 	ld	(hl),a
                           6490 ;	square.c 995
                           6491 ;	genAssign
                           6492 ;	AOP_HL for _totalStepsC
                           6493 ;	AOP_HL for _storeCSC
   14AF 21 2E 01           6494 	ld	hl,#_totalStepsC
   14B2 7E                 6495 	ld	a,(hl)
   14B3 21 53 01           6496 	ld	hl,#_storeCSC
   14B6 77                 6497 	ld	(hl),a
                           6498 ;	square.c 996
                           6499 ;	genAssign
                           6500 ;	AOP_HL for _offStepA
                           6501 ;	AOP_HL for _storeCOA
   14B7 21 30 01           6502 	ld	hl,#_offStepA
   14BA 7E                 6503 	ld	a,(hl)
   14BB 21 54 01           6504 	ld	hl,#_storeCOA
   14BE 77                 6505 	ld	(hl),a
                           6506 ;	square.c 997
                           6507 ;	genAssign
                           6508 ;	AOP_HL for _offStepB
                           6509 ;	AOP_HL for _storeCOB
   14BF 21 31 01           6510 	ld	hl,#_offStepB
   14C2 7E                 6511 	ld	a,(hl)
   14C3 21 55 01           6512 	ld	hl,#_storeCOB
   14C6 77                 6513 	ld	(hl),a
                           6514 ;	square.c 998
                           6515 ;	genAssign
                           6516 ;	AOP_HL for _offStepC
                           6517 ;	AOP_HL for _storeCOC
   14C7 21 32 01           6518 	ld	hl,#_offStepC
   14CA 7E                 6519 	ld	a,(hl)
   14CB 21 56 01           6520 	ld	hl,#_storeCOC
   14CE 77                 6521 	ld	(hl),a
                           6522 ;	square.c 999
                           6523 ;	genAssign
                           6524 ;	AOP_HL for _delayA
                           6525 ;	AOP_HL for _storeCDA
   14CF 21 21 01           6526 	ld	hl,#_delayA
   14D2 7E                 6527 	ld	a,(hl)
   14D3 21 57 01           6528 	ld	hl,#_storeCDA
   14D6 77                 6529 	ld	(hl),a
                           6530 ;	square.c 1000
                           6531 ;	genAssign
                           6532 ;	AOP_HL for _delayB
                           6533 ;	AOP_HL for _storeCDB
   14D7 21 22 01           6534 	ld	hl,#_delayB
   14DA 7E                 6535 	ld	a,(hl)
   14DB 21 58 01           6536 	ld	hl,#_storeCDB
   14DE 77                 6537 	ld	(hl),a
                           6538 ;	square.c 1001
                           6539 ;	genAssign
                           6540 ;	AOP_HL for _delayC
                           6541 ;	AOP_HL for _storeCDC
   14DF 21 23 01           6542 	ld	hl,#_delayC
   14E2 7E                 6543 	ld	a,(hl)
   14E3 21 59 01           6544 	ld	hl,#_storeCDC
   14E6 77                 6545 	ld	(hl),a
                           6546 ;	square.c 1002
                           6547 ;	genGoto
   14E7 C3 4A 15           6548 	jp	00105$
                           6549 ;	square.c 1004
                           6550 ;	genLabel
   14EA                    6551 00104$:
                           6552 ;	genAssign
                           6553 ;	AOP_HL for _numberOfPulsesA
                           6554 ;	AOP_HL for _storeDPA
   14EA 21 27 01           6555 	ld	hl,#_numberOfPulsesA
   14ED 7E                 6556 	ld	a,(hl)
   14EE 21 5A 01           6557 	ld	hl,#_storeDPA
   14F1 77                 6558 	ld	(hl),a
                           6559 ;	square.c 1005
                           6560 ;	genAssign
                           6561 ;	AOP_HL for _totalStepsA
                           6562 ;	AOP_HL for _storeDSA
   14F2 21 28 01           6563 	ld	hl,#_totalStepsA
   14F5 7E                 6564 	ld	a,(hl)
   14F6 21 5B 01           6565 	ld	hl,#_storeDSA
   14F9 77                 6566 	ld	(hl),a
                           6567 ;	square.c 1006
                           6568 ;	genAssign
                           6569 ;	AOP_HL for _numberOfPulsesB
                           6570 ;	AOP_HL for _storeDPB
   14FA 21 2A 01           6571 	ld	hl,#_numberOfPulsesB
   14FD 7E                 6572 	ld	a,(hl)
   14FE 21 5C 01           6573 	ld	hl,#_storeDPB
   1501 77                 6574 	ld	(hl),a
                           6575 ;	square.c 1007
                           6576 ;	genAssign
                           6577 ;	AOP_HL for _totalStepsB
                           6578 ;	AOP_HL for _storeDSB
   1502 21 2B 01           6579 	ld	hl,#_totalStepsB
   1505 7E                 6580 	ld	a,(hl)
   1506 21 5D 01           6581 	ld	hl,#_storeDSB
   1509 77                 6582 	ld	(hl),a
                           6583 ;	square.c 1008
                           6584 ;	genAssign
                           6585 ;	AOP_HL for _numberOfPulsesC
                           6586 ;	AOP_HL for _storeDPC
   150A 21 2D 01           6587 	ld	hl,#_numberOfPulsesC
   150D 7E                 6588 	ld	a,(hl)
   150E 21 5E 01           6589 	ld	hl,#_storeDPC
   1511 77                 6590 	ld	(hl),a
                           6591 ;	square.c 1009
                           6592 ;	genAssign
                           6593 ;	AOP_HL for _totalStepsC
                           6594 ;	AOP_HL for _storeDSC
   1512 21 2E 01           6595 	ld	hl,#_totalStepsC
   1515 7E                 6596 	ld	a,(hl)
   1516 21 5F 01           6597 	ld	hl,#_storeDSC
   1519 77                 6598 	ld	(hl),a
                           6599 ;	square.c 1010
                           6600 ;	genAssign
                           6601 ;	AOP_HL for _offStepA
                           6602 ;	AOP_HL for _storeDOA
   151A 21 30 01           6603 	ld	hl,#_offStepA
   151D 7E                 6604 	ld	a,(hl)
   151E 21 60 01           6605 	ld	hl,#_storeDOA
   1521 77                 6606 	ld	(hl),a
                           6607 ;	square.c 1011
                           6608 ;	genAssign
                           6609 ;	AOP_HL for _offStepB
                           6610 ;	AOP_HL for _storeDOB
   1522 21 31 01           6611 	ld	hl,#_offStepB
   1525 7E                 6612 	ld	a,(hl)
   1526 21 61 01           6613 	ld	hl,#_storeDOB
   1529 77                 6614 	ld	(hl),a
                           6615 ;	square.c 1012
                           6616 ;	genAssign
                           6617 ;	AOP_HL for _offStepC
                           6618 ;	AOP_HL for _storeDOC
   152A 21 32 01           6619 	ld	hl,#_offStepC
   152D 7E                 6620 	ld	a,(hl)
   152E 21 62 01           6621 	ld	hl,#_storeDOC
   1531 77                 6622 	ld	(hl),a
                           6623 ;	square.c 1013
                           6624 ;	genAssign
                           6625 ;	AOP_HL for _delayA
                           6626 ;	AOP_HL for _storeDDA
   1532 21 21 01           6627 	ld	hl,#_delayA
   1535 7E                 6628 	ld	a,(hl)
   1536 21 63 01           6629 	ld	hl,#_storeDDA
   1539 77                 6630 	ld	(hl),a
                           6631 ;	square.c 1014
                           6632 ;	genAssign
                           6633 ;	AOP_HL for _delayB
                           6634 ;	AOP_HL for _storeDDB
   153A 21 22 01           6635 	ld	hl,#_delayB
   153D 7E                 6636 	ld	a,(hl)
   153E 21 64 01           6637 	ld	hl,#_storeDDB
   1541 77                 6638 	ld	(hl),a
                           6639 ;	square.c 1015
                           6640 ;	genAssign
                           6641 ;	AOP_HL for _delayC
                           6642 ;	AOP_HL for _storeDDC
   1542 21 23 01           6643 	ld	hl,#_delayC
   1545 7E                 6644 	ld	a,(hl)
   1546 21 65 01           6645 	ld	hl,#_storeDDC
   1549 77                 6646 	ld	(hl),a
                           6647 ;	square.c 1017
                           6648 ;	genLabel
   154A                    6649 00105$:
                           6650 ;	square.c 1018
                           6651 ;	genIpush
                           6652 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   154A 3E 01              6653 	ld	a,#0x01
   154C F5                 6654 	push	af
   154D 33                 6655 	inc	sp
                           6656 ;	genCall
   154E CD 00 00           6657 	call	_performantdelay
   1551 E8 01              6658 	lda	sp,1(sp)
                           6659 ;	square.c 1019
                           6660 ;	genCall
                           6661 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1553 CD 00 00           6662 	call	_wait_vbl_done
                           6663 ;	genLabel
   1556                    6664 00106$:
                           6665 ;	genEndFunction
                           6666 	
   1556 C9                 6667 	ret
   1557                    6668 ___savePattern_end:
                           6669 ;	square.c 1023
                           6670 ;	genLabel
                           6671 ;	genFunction
                           6672 ;	---------------------------------
                           6673 ; Function main
                           6674 ; ---------------------------------
   1557                    6675 ___main_start:
   1557                    6676 _main:
   1557 E8 FD              6677 	lda	sp,-3(sp)
                           6678 ;	square.c 1025
                           6679 ;	genAssign
   1559 01 24 FF           6680 	ld	bc,#0xFF24
                           6681 ;	genAssign (pointer)
   155C 3E FF              6682 	ld	a,#0xFF
   155E 02                 6683 	ld	(bc),a
                           6684 ;	square.c 1026
                           6685 ;	genAssign
   155F 01 25 FF           6686 	ld	bc,#0xFF25
                           6687 ;	genAssign (pointer)
   1562 3E FF              6688 	ld	a,#0xFF
   1564 02                 6689 	ld	(bc),a
                           6690 ;	square.c 1027
                           6691 ;	genAssign
   1565 01 26 FF           6692 	ld	bc,#0xFF26
                           6693 ;	genAssign (pointer)
   1568 3E 80              6694 	ld	a,#0x80
   156A 02                 6695 	ld	(bc),a
                           6696 ;	square.c 1028
                           6697 ;	genAssign
                           6698 ;	AOP_HL for _watch
   156B 21 69 01           6699 	ld	hl,#_watch
   156E 36 00              6700 	ld	(hl),#0x00
                           6701 ;	square.c 1029
                           6702 ;	genAssign
                           6703 ;	AOP_HL for _clkA
   1570 21 29 01           6704 	ld	hl,#_clkA
   1573 36 00              6705 	ld	(hl),#0x00
                           6706 ;	square.c 1030
                           6707 ;	genAssign
                           6708 ;	AOP_HL for _pop
   1575 21 6C 01           6709 	ld	hl,#_pop
   1578 36 00              6710 	ld	(hl),#0x00
                           6711 ;	square.c 1031
                           6712 ;	genAssign
                           6713 ;	AOP_HL for _randA
   157A 21 17 01           6714 	ld	hl,#_randA
   157D 36 00              6715 	ld	(hl),#0x00
                           6716 ;	square.c 1032
                           6717 ;	genAssign
                           6718 ;	AOP_HL for _randB
   157F 21 18 01           6719 	ld	hl,#_randB
   1582 36 00              6720 	ld	(hl),#0x00
                           6721 ;	square.c 1033
                           6722 ;	genAssign
                           6723 ;	AOP_HL for _randC
   1584 21 19 01           6724 	ld	hl,#_randC
   1587 36 00              6725 	ld	(hl),#0x00
                           6726 ;	square.c 1034
                           6727 ;	genAssign
                           6728 ;	AOP_HL for _xA
   1589 21 1E 01           6729 	ld	hl,#_xA
   158C 36 00              6730 	ld	(hl),#0x00
                           6731 ;	square.c 1035
                           6732 ;	genAssign
                           6733 ;	AOP_HL for _xB
   158E 21 1F 01           6734 	ld	hl,#_xB
   1591 36 00              6735 	ld	(hl),#0x00
                           6736 ;	square.c 1036
                           6737 ;	genAssign
                           6738 ;	AOP_HL for _xC
   1593 21 20 01           6739 	ld	hl,#_xC
   1596 36 00              6740 	ld	(hl),#0x00
                           6741 ;	square.c 1037
                           6742 ;	genAssign
                           6743 ;	AOP_HL for _modus
   1598 21 6D 01           6744 	ld	hl,#_modus
   159B 36 00              6745 	ld	(hl),#0x00
                           6746 ;	square.c 1038
                           6747 ;	genAssign
                           6748 ;	AOP_HL for _samp_freq
   159D 21 67 01           6749 	ld	hl,#_samp_freq
   15A0 36 A4              6750 	ld	(hl),#0xA4
                           6751 ;	square.c 1039
                           6752 ;	genAssign
                           6753 ;	AOP_HL for _tempo
   15A2 21 68 01           6754 	ld	hl,#_tempo
   15A5 36 14              6755 	ld	(hl),#0x14
                           6756 ;	square.c 1040
                           6757 ;	genAssign
                           6758 ;	AOP_HL for _seldrum
   15A7 21 71 01           6759 	ld	hl,#_seldrum
   15AA 36 00              6760 	ld	(hl),#0x00
                           6761 ;	square.c 1041
                           6762 ;	genAssign
                           6763 ;	AOP_HL for _syncToDrum
   15AC 21 25 01           6764 	ld	hl,#_syncToDrum
   15AF 36 00              6765 	ld	(hl),#0x00
                           6766 ;	square.c 1042
                           6767 ;	genAssign
                           6768 ;	AOP_HL for _currentSaveSlot
   15B1 21 35 01           6769 	ld	hl,#_currentSaveSlot
   15B4 36 00              6770 	ld	(hl),#0x00
                           6771 ;	square.c 1043
                           6772 ;	genAssign
                           6773 ;	AOP_HL for _numberOfPulsesA
   15B6 21 27 01           6774 	ld	hl,#_numberOfPulsesA
   15B9 36 01              6775 	ld	(hl),#0x01
                           6776 ;	square.c 1044
                           6777 ;	genAssign
                           6778 ;	AOP_HL for _totalStepsA
   15BB 21 28 01           6779 	ld	hl,#_totalStepsA
   15BE 36 10              6780 	ld	(hl),#0x10
                           6781 ;	square.c 1045
                           6782 ;	genAssign
                           6783 ;	AOP_HL for _numberOfPulsesB
   15C0 21 2A 01           6784 	ld	hl,#_numberOfPulsesB
   15C3 36 02              6785 	ld	(hl),#0x02
                           6786 ;	square.c 1046
                           6787 ;	genAssign
                           6788 ;	AOP_HL for _totalStepsB
   15C5 21 2B 01           6789 	ld	hl,#_totalStepsB
   15C8 36 10              6790 	ld	(hl),#0x10
                           6791 ;	square.c 1047
                           6792 ;	genAssign
                           6793 ;	AOP_HL for _numberOfPulsesC
   15CA 21 2D 01           6794 	ld	hl,#_numberOfPulsesC
   15CD 36 04              6795 	ld	(hl),#0x04
                           6796 ;	square.c 1048
                           6797 ;	genAssign
                           6798 ;	AOP_HL for _totalStepsC
   15CF 21 2E 01           6799 	ld	hl,#_totalStepsC
   15D2 36 10              6800 	ld	(hl),#0x10
                           6801 ;	square.c 1049
                           6802 ;	genAssign
                           6803 ;	AOP_HL for _offStepA
   15D4 21 30 01           6804 	ld	hl,#_offStepA
   15D7 36 00              6805 	ld	(hl),#0x00
                           6806 ;	square.c 1050
                           6807 ;	genAssign
                           6808 ;	AOP_HL for _offStepB
   15D9 21 31 01           6809 	ld	hl,#_offStepB
   15DC 36 00              6810 	ld	(hl),#0x00
                           6811 ;	square.c 1051
                           6812 ;	genAssign
                           6813 ;	AOP_HL for _offStepC
   15DE 21 32 01           6814 	ld	hl,#_offStepC
   15E1 36 00              6815 	ld	(hl),#0x00
                           6816 ;	square.c 1052
                           6817 ;	genAssign
                           6818 ;	AOP_HL for _delayA
   15E3 21 21 01           6819 	ld	hl,#_delayA
   15E6 36 01              6820 	ld	(hl),#0x01
                           6821 ;	square.c 1053
                           6822 ;	genAssign
                           6823 ;	AOP_HL for _delayB
   15E8 21 22 01           6824 	ld	hl,#_delayB
   15EB 36 01              6825 	ld	(hl),#0x01
                           6826 ;	square.c 1054
                           6827 ;	genAssign
                           6828 ;	AOP_HL for _delayC
   15ED 21 23 01           6829 	ld	hl,#_delayC
   15F0 36 01              6830 	ld	(hl),#0x01
                           6831 ;	square.c 1055
                           6832 ;	genCall
                           6833 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15F2 CD E3 00           6834 	call	_fillDrumA
                           6835 ;	square.c 1056
                           6836 ;	genCall
                           6837 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15F5 CD B2 02           6838 	call	_fillDrumB
                           6839 ;	square.c 1057
                           6840 ;	genCall
                           6841 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15F8 CD 81 04           6842 	call	_fillDrumC
                           6843 ;	square.c 1059
                           6844 ;	genAssign
   15FB 01 40 FF           6845 	ld	bc,#0xFF40
                           6846 ;	genAssign
                           6847 ;	AOP_STK for _main_sloc0_1_0
   15FE F8 01              6848 	lda	hl,1(sp)
   1600 36 40              6849 	ld	(hl),#0x40
   1602 23                 6850 	inc	hl
   1603 36 FF              6851 	ld	(hl),#0xFF
                           6852 ;	genPointerGet
                           6853 ;	AOP_STK for _main_sloc0_1_0
                           6854 ;	AOP_STK for _main_sloc1_1_0
   1605 2B                 6855 	dec	hl
   1606 5E                 6856 	ld	e,(hl)
   1607 23                 6857 	inc	hl
   1608 56                 6858 	ld	d,(hl)
   1609 1A                 6859 	ld	a,(de)
   160A 2B                 6860 	dec	hl
   160B 2B                 6861 	dec	hl
                           6862 ;	genAnd
                           6863 ;	AOP_STK for _main_sloc1_1_0
   160C 77                 6864 	ld      (hl),a
                           6865 ; Removed redundent load
   160D E6 FB              6866 	and	a,#0xFB
                           6867 ;	genAssign (pointer)
   160F 02                 6868 	ld	(bc),a
                           6869 ;	square.c 1060
                           6870 ;	genIpush
                           6871 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1610 21 00 00           6872 	ld	hl,#_squareA
   1613 E5                 6873 	push	hl
                           6874 ;	genIpush
   1614 21 00 02           6875 	ld	hl,#0x0200
   1617 E5                 6876 	push	hl
                           6877 ;	genCall
   1618 CD 00 00           6878 	call	_set_sprite_data
   161B E8 04              6879 	lda	sp,4(sp)
                           6880 ;	square.c 1061
                           6881 ;	genIpush
                           6882 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   161D 21 00 00           6883 	ld	hl,#0x0000
   1620 E5                 6884 	push	hl
                           6885 ;	genCall
   1621 CD 00 00           6886 	call	_set_sprite_tile
   1624 E8 02              6887 	lda	sp,2(sp)
                           6888 ;	square.c 1062
                           6889 ;	genMinus
                           6890 ;	AOP_HL for _totalStepsA
   1626 21 28 01           6891 	ld	hl,#_totalStepsA
   1629 7E                 6892 	ld	a,(hl)
   162A C6 FF              6893 	add	a,#0xFF
   162C 4F                 6894 	ld	c,a
                           6895 ;	genPlus
                           6896 ;	Can't optimise plus by inc, falling back to the normal way
   162D 3E D0              6897 	ld	a,#<_dXlut
   162F 81                 6898 	add	a,c
   1630 4F                 6899 	ld	c,a
   1631 3E 00              6900 	ld	a,#>_dXlut
   1633 CE 00              6901 	adc	a,#0x00
   1635 47                 6902 	ld	b,a
                           6903 ;	genPointerGet
   1636 0A                 6904 	ld	a,(bc)
   1637 4F                 6905 	ld	c,a
                           6906 ;	genMinus
                           6907 ;	AOP_HL for _numberOfPulsesA
   1638 21 27 01           6908 	ld	hl,#_numberOfPulsesA
   163B 7E                 6909 	ld	a,(hl)
   163C C6 FF              6910 	add	a,#0xFF
   163E 47                 6911 	ld	b,a
                           6912 ;	genPlus
                           6913 ;	AOP_STK for _main_sloc0_1_0
                           6914 ;	Can't optimise plus by inc, falling back to the normal way
   163F 11 F0 00           6915 	ld	de,#_dYlut
   1642 68                 6916 	ld	l,b
   1643 26 00              6917 	ld	h,#0x00
   1645 19                 6918 	add	hl,de
   1646 7D                 6919 	ld	a,l
   1647 54                 6920 	ld	d,h
   1648 F8 01              6921 	lda	hl,1(sp)
                           6922 ;	genPointerGet
                           6923 ;	AOP_STK for _main_sloc0_1_0
   164A 22                 6924 	ld	(hl+),a
   164B 72                 6925 	ld	(hl),d
   164C 5F                 6926 	ld	e,a
   164D 1A                 6927 	ld	a,(de)
   164E 47                 6928 	ld	b,a
                           6929 ;	genIpush
                           6930 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   164F 79                 6931 	ld	a,c
   1650 F5                 6932 	push	af
   1651 33                 6933 	inc	sp
                           6934 ;	genIpush
   1652 78                 6935 	ld	a,b
   1653 F5                 6936 	push	af
   1654 33                 6937 	inc	sp
                           6938 ;	genIpush
   1655 3E 00              6939 	ld	a,#0x00
   1657 F5                 6940 	push	af
   1658 33                 6941 	inc	sp
                           6942 ;	genCall
   1659 CD 00 00           6943 	call	_move_sprite
   165C E8 03              6944 	lda	sp,3(sp)
                           6945 ;	square.c 1064
                           6946 ;	genIpush
                           6947 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   165E 21 10 00           6948 	ld	hl,#_squareB
   1661 E5                 6949 	push	hl
                           6950 ;	genIpush
   1662 21 02 04           6951 	ld	hl,#0x0402
   1665 E5                 6952 	push	hl
                           6953 ;	genCall
   1666 CD 00 00           6954 	call	_set_sprite_data
   1669 E8 04              6955 	lda	sp,4(sp)
                           6956 ;	square.c 1065
                           6957 ;	genIpush
                           6958 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   166B 21 01 02           6959 	ld	hl,#0x0201
   166E E5                 6960 	push	hl
                           6961 ;	genCall
   166F CD 00 00           6962 	call	_set_sprite_tile
   1672 E8 02              6963 	lda	sp,2(sp)
                           6964 ;	square.c 1066
                           6965 ;	genMinus
                           6966 ;	AOP_HL for _totalStepsB
   1674 21 2B 01           6967 	ld	hl,#_totalStepsB
   1677 7E                 6968 	ld	a,(hl)
   1678 C6 FF              6969 	add	a,#0xFF
   167A 4F                 6970 	ld	c,a
                           6971 ;	genPlus
                           6972 ;	Can't optimise plus by inc, falling back to the normal way
   167B 3E D0              6973 	ld	a,#<_dXlut
   167D 81                 6974 	add	a,c
   167E 4F                 6975 	ld	c,a
   167F 3E 00              6976 	ld	a,#>_dXlut
   1681 CE 00              6977 	adc	a,#0x00
   1683 47                 6978 	ld	b,a
                           6979 ;	genPointerGet
   1684 0A                 6980 	ld	a,(bc)
   1685 4F                 6981 	ld	c,a
                           6982 ;	genMinus
                           6983 ;	AOP_HL for _numberOfPulsesB
   1686 21 2A 01           6984 	ld	hl,#_numberOfPulsesB
   1689 7E                 6985 	ld	a,(hl)
   168A C6 FF              6986 	add	a,#0xFF
   168C 47                 6987 	ld	b,a
                           6988 ;	genPlus
                           6989 ;	AOP_STK for _main_sloc0_1_0
                           6990 ;	Can't optimise plus by inc, falling back to the normal way
   168D 11 F0 00           6991 	ld	de,#_dYlut
   1690 68                 6992 	ld	l,b
   1691 26 00              6993 	ld	h,#0x00
   1693 19                 6994 	add	hl,de
   1694 7D                 6995 	ld	a,l
   1695 54                 6996 	ld	d,h
   1696 F8 01              6997 	lda	hl,1(sp)
                           6998 ;	genPointerGet
                           6999 ;	AOP_STK for _main_sloc0_1_0
   1698 22                 7000 	ld	(hl+),a
   1699 72                 7001 	ld	(hl),d
   169A 5F                 7002 	ld	e,a
   169B 1A                 7003 	ld	a,(de)
   169C 47                 7004 	ld	b,a
                           7005 ;	genIpush
                           7006 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   169D 79                 7007 	ld	a,c
   169E F5                 7008 	push	af
   169F 33                 7009 	inc	sp
                           7010 ;	genIpush
   16A0 78                 7011 	ld	a,b
   16A1 F5                 7012 	push	af
   16A2 33                 7013 	inc	sp
                           7014 ;	genIpush
   16A3 3E 01              7015 	ld	a,#0x01
   16A5 F5                 7016 	push	af
   16A6 33                 7017 	inc	sp
                           7018 ;	genCall
   16A7 CD 00 00           7019 	call	_move_sprite
   16AA E8 03              7020 	lda	sp,3(sp)
                           7021 ;	square.c 1068
                           7022 ;	genIpush
                           7023 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   16AC 21 20 00           7024 	ld	hl,#_squareC
   16AF E5                 7025 	push	hl
                           7026 ;	genIpush
   16B0 21 04 06           7027 	ld	hl,#0x0604
   16B3 E5                 7028 	push	hl
                           7029 ;	genCall
   16B4 CD 00 00           7030 	call	_set_sprite_data
   16B7 E8 04              7031 	lda	sp,4(sp)
                           7032 ;	square.c 1069
                           7033 ;	genIpush
                           7034 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   16B9 21 02 04           7035 	ld	hl,#0x0402
   16BC E5                 7036 	push	hl
                           7037 ;	genCall
   16BD CD 00 00           7038 	call	_set_sprite_tile
   16C0 E8 02              7039 	lda	sp,2(sp)
                           7040 ;	square.c 1070
                           7041 ;	genMinus
                           7042 ;	AOP_HL for _totalStepsC
   16C2 21 2E 01           7043 	ld	hl,#_totalStepsC
   16C5 7E                 7044 	ld	a,(hl)
   16C6 C6 FF              7045 	add	a,#0xFF
   16C8 4F                 7046 	ld	c,a
                           7047 ;	genPlus
                           7048 ;	Can't optimise plus by inc, falling back to the normal way
   16C9 3E D0              7049 	ld	a,#<_dXlut
   16CB 81                 7050 	add	a,c
   16CC 4F                 7051 	ld	c,a
   16CD 3E 00              7052 	ld	a,#>_dXlut
   16CF CE 00              7053 	adc	a,#0x00
   16D1 47                 7054 	ld	b,a
                           7055 ;	genPointerGet
   16D2 0A                 7056 	ld	a,(bc)
   16D3 4F                 7057 	ld	c,a
                           7058 ;	genMinus
                           7059 ;	AOP_HL for _numberOfPulsesC
   16D4 21 2D 01           7060 	ld	hl,#_numberOfPulsesC
   16D7 7E                 7061 	ld	a,(hl)
   16D8 C6 FF              7062 	add	a,#0xFF
   16DA 47                 7063 	ld	b,a
                           7064 ;	genPlus
                           7065 ;	AOP_STK for _main_sloc0_1_0
                           7066 ;	Can't optimise plus by inc, falling back to the normal way
   16DB 11 F0 00           7067 	ld	de,#_dYlut
   16DE 68                 7068 	ld	l,b
   16DF 26 00              7069 	ld	h,#0x00
   16E1 19                 7070 	add	hl,de
   16E2 7D                 7071 	ld	a,l
   16E3 54                 7072 	ld	d,h
   16E4 F8 01              7073 	lda	hl,1(sp)
                           7074 ;	genPointerGet
                           7075 ;	AOP_STK for _main_sloc0_1_0
   16E6 22                 7076 	ld	(hl+),a
   16E7 72                 7077 	ld	(hl),d
   16E8 5F                 7078 	ld	e,a
   16E9 1A                 7079 	ld	a,(de)
   16EA 47                 7080 	ld	b,a
                           7081 ;	genIpush
                           7082 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   16EB 79                 7083 	ld	a,c
   16EC F5                 7084 	push	af
   16ED 33                 7085 	inc	sp
                           7086 ;	genIpush
   16EE 78                 7087 	ld	a,b
   16EF F5                 7088 	push	af
   16F0 33                 7089 	inc	sp
                           7090 ;	genIpush
   16F1 3E 02              7091 	ld	a,#0x02
   16F3 F5                 7092 	push	af
   16F4 33                 7093 	inc	sp
                           7094 ;	genCall
   16F5 CD 00 00           7095 	call	_move_sprite
   16F8 E8 03              7096 	lda	sp,3(sp)
                           7097 ;	square.c 1072
                           7098 ;	genIpush
                           7099 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   16FA 21 30 00           7100 	ld	hl,#_midiC
   16FD E5                 7101 	push	hl
                           7102 ;	genIpush
   16FE 21 06 08           7103 	ld	hl,#0x0806
   1701 E5                 7104 	push	hl
                           7105 ;	genCall
   1702 CD 00 00           7106 	call	_set_sprite_data
   1705 E8 04              7107 	lda	sp,4(sp)
                           7108 ;	square.c 1073
                           7109 ;	genIpush
                           7110 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1707 21 03 06           7111 	ld	hl,#0x0603
   170A E5                 7112 	push	hl
                           7113 ;	genCall
   170B CD 00 00           7114 	call	_set_sprite_tile
   170E E8 02              7115 	lda	sp,2(sp)
                           7116 ;	square.c 1074
                           7117 ;	genIpush
                           7118 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1710 21 00 00           7119 	ld	hl,#0x0000
   1713 E5                 7120 	push	hl
                           7121 ;	genIpush
   1714 3E 03              7122 	ld	a,#0x03
   1716 F5                 7123 	push	af
   1717 33                 7124 	inc	sp
                           7125 ;	genCall
   1718 CD 00 00           7126 	call	_move_sprite
   171B E8 03              7127 	lda	sp,3(sp)
                           7128 ;	square.c 1076
                           7129 ;	genIpush
                           7130 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   171D 21 40 00           7131 	ld	hl,#_offsetC
   1720 E5                 7132 	push	hl
                           7133 ;	genIpush
   1721 21 08 0A           7134 	ld	hl,#0x0A08
   1724 E5                 7135 	push	hl
                           7136 ;	genCall
   1725 CD 00 00           7137 	call	_set_sprite_data
   1728 E8 04              7138 	lda	sp,4(sp)
                           7139 ;	square.c 1077
                           7140 ;	genIpush
                           7141 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   172A 21 04 08           7142 	ld	hl,#0x0804
   172D E5                 7143 	push	hl
                           7144 ;	genCall
   172E CD 00 00           7145 	call	_set_sprite_tile
   1731 E8 02              7146 	lda	sp,2(sp)
                           7147 ;	square.c 1078
                           7148 ;	genPlus
                           7149 ;	AOP_HL for _offStepA
                           7150 ;	Can't optimise plus by inc, falling back to the normal way
   1733 3E D0              7151 	ld	a,#<_dXlut
   1735 21 30 01           7152 	ld	hl,#_offStepA
   1738 86                 7153 	add	a,(hl)
   1739 4F                 7154 	ld	c,a
   173A 3E 00              7155 	ld	a,#>_dXlut
   173C CE 00              7156 	adc	a,#0x00
   173E 47                 7157 	ld	b,a
                           7158 ;	genPointerGet
   173F 0A                 7159 	ld	a,(bc)
                           7160 ;	genIpush
                           7161 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1740 4F                 7162 	ld	c,a
   1741 F5                 7163 	push	af
   1742 33                 7164 	inc	sp
                           7165 ;	genIpush
   1743 21 04 08           7166 	ld	hl,#0x0804
   1746 E5                 7167 	push	hl
                           7168 ;	genCall
   1747 CD 00 00           7169 	call	_move_sprite
   174A E8 03              7170 	lda	sp,3(sp)
                           7171 ;	square.c 1080
                           7172 ;	genIpush
                           7173 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   174C 21 50 00           7174 	ld	hl,#_swingC
   174F E5                 7175 	push	hl
                           7176 ;	genIpush
   1750 21 0A 0C           7177 	ld	hl,#0x0C0A
   1753 E5                 7178 	push	hl
                           7179 ;	genCall
   1754 CD 00 00           7180 	call	_set_sprite_data
   1757 E8 04              7181 	lda	sp,4(sp)
                           7182 ;	square.c 1081
                           7183 ;	genIpush
                           7184 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1759 21 05 0A           7185 	ld	hl,#0x0A05
   175C E5                 7186 	push	hl
                           7187 ;	genCall
   175D CD 00 00           7188 	call	_set_sprite_tile
   1760 E8 02              7189 	lda	sp,2(sp)
                           7190 ;	square.c 1082
                           7191 ;	genPlus
                           7192 ;	AOP_HL for _delayA
                           7193 ;	genPlusIncr
                           7194 ;	Can't optimise plus by inc, falling back to the normal way
   1762 21 21 01           7195 	ld	hl,#_delayA
   1765 7E                 7196 	ld	a,(hl)
   1766 C6 08              7197 	add	a,#0x08
   1768 4F                 7198 	ld	c,a
                           7199 ;	genIpush
                           7200 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1769 3E 98              7201 	ld	a,#0x98
   176B F5                 7202 	push	af
   176C 33                 7203 	inc	sp
                           7204 ;	genIpush
   176D 79                 7205 	ld	a,c
   176E F5                 7206 	push	af
   176F 33                 7207 	inc	sp
                           7208 ;	genIpush
   1770 3E 05              7209 	ld	a,#0x05
   1772 F5                 7210 	push	af
   1773 33                 7211 	inc	sp
                           7212 ;	genCall
   1774 CD 00 00           7213 	call	_move_sprite
   1777 E8 03              7214 	lda	sp,3(sp)
                           7215 ;	square.c 1085
                           7216 ;	genIpush
                           7217 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1779 21 60 00           7218 	ld	hl,#_saveC
   177C E5                 7219 	push	hl
                           7220 ;	genIpush
   177D 21 0C 0E           7221 	ld	hl,#0x0E0C
   1780 E5                 7222 	push	hl
                           7223 ;	genCall
   1781 CD 00 00           7224 	call	_set_sprite_data
   1784 E8 04              7225 	lda	sp,4(sp)
                           7226 ;	square.c 1086
                           7227 ;	genIpush
                           7228 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1786 21 06 0C           7229 	ld	hl,#0x0C06
   1789 E5                 7230 	push	hl
                           7231 ;	genCall
   178A CD 00 00           7232 	call	_set_sprite_tile
   178D E8 02              7233 	lda	sp,2(sp)
                           7234 ;	square.c 1087
                           7235 ;	genIpush
                           7236 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   178F 21 A0 90           7237 	ld	hl,#0x90A0
   1792 E5                 7238 	push	hl
                           7239 ;	genIpush
   1793 3E 06              7240 	ld	a,#0x06
   1795 F5                 7241 	push	af
   1796 33                 7242 	inc	sp
                           7243 ;	genCall
   1797 CD 00 00           7244 	call	_move_sprite
   179A E8 03              7245 	lda	sp,3(sp)
                           7246 ;	square.c 1089
                           7247 ;	genIpush
                           7248 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   179C 21 07 00           7249 	ld	hl,#0x0007
   179F E5                 7250 	push	hl
                           7251 ;	genCall
   17A0 CD 00 00           7252 	call	_set_sprite_tile
   17A3 E8 02              7253 	lda	sp,2(sp)
                           7254 ;	square.c 1090
                           7255 ;	genIpush
                           7256 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   17A5 21 08 10           7257 	ld	hl,#0x1008
   17A8 E5                 7258 	push	hl
                           7259 ;	genIpush
   17A9 3E 07              7260 	ld	a,#0x07
   17AB F5                 7261 	push	af
   17AC 33                 7262 	inc	sp
                           7263 ;	genCall
   17AD CD 00 00           7264 	call	_move_sprite
   17B0 E8 03              7265 	lda	sp,3(sp)
                           7266 ;	square.c 1095
                           7267 ;	genCall
                           7268 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   17B2 CD 00 00           7269 	call	_disable_interrupts
                           7270 ;	square.c 1096
                           7271 ;	genIpush
                           7272 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   17B5 21 7A 0E           7273 	ld	hl,#_tim
   17B8 E5                 7274 	push	hl
                           7275 ;	genCall
   17B9 CD 00 00           7276 	call	_add_TIM
   17BC E8 02              7277 	lda	sp,2(sp)
                           7278 ;	square.c 1097
                           7279 ;	genCall
                           7280 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   17BE CD 00 00           7281 	call	_enable_interrupts
                           7282 ;	square.c 1098
                           7283 ;	genAssign
   17C1 01 06 FF           7284 	ld	bc,#0xFF06
                           7285 ;	genAssign (pointer)
                           7286 ;	AOP_HL for _samp_freq
   17C4 21 67 01           7287 	ld	hl,#_samp_freq
   17C7 7E                 7288 	ld	a,(hl)
   17C8 02                 7289 	ld	(bc),a
                           7290 ;	square.c 1103
                           7291 ;	genAssign
   17C9 01 07 FF           7292 	ld	bc,#0xFF07
                           7293 ;	genAssign (pointer)
   17CC 3E 07              7294 	ld	a,#0x07
   17CE 02                 7295 	ld	(bc),a
                           7296 ;	square.c 1105
                           7297 ;	genIpush
                           7298 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   17CF 3E 05              7299 	ld	a,#0x05
   17D1 F5                 7300 	push	af
   17D2 33                 7301 	inc	sp
                           7302 ;	genCall
   17D3 CD 00 00           7303 	call	_set_interrupts
   17D6 E8 01              7304 	lda	sp,1(sp)
                           7305 ;	square.c 1110
                           7306 ;	genAssign
   17D8 01 40 FF           7307 	ld	bc,#0xFF40
                           7308 ;	genAssign
                           7309 ;	AOP_STK for _main_sloc0_1_0
   17DB F8 01              7310 	lda	hl,1(sp)
   17DD 36 40              7311 	ld	(hl),#0x40
   17DF 23                 7312 	inc	hl
   17E0 36 FF              7313 	ld	(hl),#0xFF
                           7314 ;	genPointerGet
                           7315 ;	AOP_STK for _main_sloc0_1_0
                           7316 ;	AOP_STK for _main_sloc1_1_0
   17E2 2B                 7317 	dec	hl
   17E3 5E                 7318 	ld	e,(hl)
   17E4 23                 7319 	inc	hl
   17E5 56                 7320 	ld	d,(hl)
   17E6 1A                 7321 	ld	a,(de)
   17E7 2B                 7322 	dec	hl
   17E8 2B                 7323 	dec	hl
                           7324 ;	genOr
                           7325 ;	AOP_STK for _main_sloc1_1_0
   17E9 77                 7326 	ld      (hl),a
                           7327 ; Removed redundent load
   17EA F6 80              7328 	or	a,#0x80
                           7329 ;	genAssign (pointer)
   17EC 02                 7330 	ld	(bc),a
                           7331 ;	square.c 1111
                           7332 ;	genAssign
   17ED 01 40 FF           7333 	ld	bc,#0xFF40
                           7334 ;	genAssign
                           7335 ;	AOP_STK for _main_sloc0_1_0
   17F0 23                 7336 	inc	hl
   17F1 36 40              7337 	ld	(hl),#0x40
   17F3 23                 7338 	inc	hl
   17F4 36 FF              7339 	ld	(hl),#0xFF
                           7340 ;	genPointerGet
                           7341 ;	AOP_STK for _main_sloc0_1_0
                           7342 ;	AOP_STK for _main_sloc1_1_0
   17F6 2B                 7343 	dec	hl
   17F7 5E                 7344 	ld	e,(hl)
   17F8 23                 7345 	inc	hl
   17F9 56                 7346 	ld	d,(hl)
   17FA 1A                 7347 	ld	a,(de)
   17FB 2B                 7348 	dec	hl
   17FC 2B                 7349 	dec	hl
                           7350 ;	genOr
                           7351 ;	AOP_STK for _main_sloc1_1_0
   17FD 77                 7352 	ld      (hl),a
                           7353 ; Removed redundent load
   17FE F6 02              7354 	or	a,#0x02
                           7355 ;	genAssign (pointer)
   1800 02                 7356 	ld	(bc),a
                           7357 ;	square.c 1115
                           7358 ;	genLabel
   1801                    7359 00163$:
                           7360 ;	square.c 1117
                           7361 ;	genCall
                           7362 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1801 CD 00 00           7363 	call	_joypad
   1804 4B                 7364 	ld	c,e
                           7365 ;	genCmpEq
                           7366 ; genCmpEq: left 1, right 1, result 0
   1805 79                 7367 	ld	a,c
   1806 B7                 7368 	or	a,a
   1807 CA 11 18           7369 	jp	z,00102$
   180A                    7370 00196$:
                           7371 ;	square.c 1118
                           7372 ;	genPlus
                           7373 ;	AOP_HL for _pad
                           7374 ;	genPlusIncr
   180A 21 70 01           7375 	ld	hl,#_pad
   180D 34                 7376 	inc	(hl)
                           7377 ;	genGoto
   180E C3 16 18           7378 	jp	00103$
                           7379 ;	genLabel
   1811                    7380 00102$:
                           7381 ;	square.c 1121
                           7382 ;	genAssign
                           7383 ;	AOP_HL for _pad
   1811 21 70 01           7384 	ld	hl,#_pad
   1814 36 00              7385 	ld	(hl),#0x00
                           7386 ;	genLabel
   1816                    7387 00103$:
                           7388 ;	square.c 1124
                           7389 ;	genCall
                           7390 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1816 CD 00 00           7391 	call	_joypad
   1819 4B                 7392 	ld	c,e
                           7393 ;	genCmpEq
                           7394 ;	AOP_HL for _joy
                           7395 ; genCmpEq: left 1, right 1, result 0
   181A 21 6F 01           7396 	ld	hl,#_joy
   181D 7E                 7397 	ld	a,(hl)
   181E B9                 7398 	cp	c
   181F 20 02              7399 	jr	nz,00197$
   1821 18 03              7400 	jr	00198$
   1823                    7401 00197$:
   1823 C3 2F 18           7402 	jp	00104$
   1826                    7403 00198$:
                           7404 ;	genCmpGt
                           7405 ;	AOP_HL for _pad
   1826 3E 0A              7406 	ld	a,#0x0A
   1828 21 70 01           7407 	ld	hl,#_pad
   182B 96                 7408 	sub	a,(hl)
   182C D2 39 18           7409 	jp	nc,00105$
                           7410 ;	genLabel
   182F                    7411 00104$:
                           7412 ;	square.c 1125
                           7413 ;	genCall
                           7414 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   182F CD 00 00           7415 	call	_joypad
                           7416 ;	AOP_HL for _padext
   1832 21 6E 01           7417 	ld	hl,#_padext
   1835 73                 7418 	ld	(hl),e
                           7419 ;	genGoto
   1836 C3 3E 18           7420 	jp	00106$
                           7421 ;	genLabel
   1839                    7422 00105$:
                           7423 ;	square.c 1128
                           7424 ;	genAssign
                           7425 ;	AOP_HL for _padext
   1839 21 6E 01           7426 	ld	hl,#_padext
   183C 36 00              7427 	ld	(hl),#0x00
                           7428 ;	genLabel
   183E                    7429 00106$:
                           7430 ;	square.c 1132
                           7431 ;	genCall
                           7432 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   183E CD 00 00           7433 	call	_joypad
   1841 4B                 7434 	ld	c,e
                           7435 ;	genCmpEq
                           7436 ;	AOP_HL for _joy
                           7437 ; genCmpEq: left 1, right 1, result 0
   1842 21 6F 01           7438 	ld	hl,#_joy
   1845 7E                 7439 	ld	a,(hl)
   1846 B9                 7440 	cp	c
   1847 20 03              7441 	jr	nz,00199$
   1849 C3 51 18           7442 	jp	00109$
   184C                    7443 00199$:
                           7444 ;	square.c 1134
                           7445 ;	genAssign
                           7446 ;	AOP_HL for _pad
   184C 21 70 01           7447 	ld	hl,#_pad
   184F 36 00              7448 	ld	(hl),#0x00
                           7449 ;	genLabel
   1851                    7450 00109$:
                           7451 ;	square.c 1137
                           7452 ;	genCall
                           7453 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1851 CD 00 00           7454 	call	_joypad
                           7455 ;	AOP_HL for _joy
   1854 21 6F 01           7456 	ld	hl,#_joy
   1857 73                 7457 	ld	(hl),e
                           7458 ;	square.c 1139
                           7459 ;	genCall
                           7460 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1858 CD 00 00           7461 	call	_joypad
   185B 4B                 7462 	ld	c,e
                           7463 ;	genCmpEq
                           7464 ; genCmpEq: left 1, right 1, result 0
   185C 79                 7465 	ld	a,c
   185D FE 02              7466 	cp	a,#0x02
   185F C2 73 18           7467 	jp	nz,00111$
   1862 18 03              7468 	jr	00201$
   1864                    7469 00200$:
   1864 C3 73 18           7470 	jp	00111$
   1867                    7471 00201$:
                           7472 ;	square.c 1141
                           7473 ;	genCall
                           7474 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1867 CD B3 0A           7475 	call	_decreasePulses
                           7476 ;	square.c 1142
                           7477 ;	genIpush
                           7478 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   186A 3E 05              7479 	ld	a,#0x05
   186C F5                 7480 	push	af
   186D 33                 7481 	inc	sp
                           7482 ;	genCall
   186E CD 00 00           7483 	call	_performantdelay
   1871 E8 01              7484 	lda	sp,1(sp)
                           7485 ;	genLabel
   1873                    7486 00111$:
                           7487 ;	square.c 1145
                           7488 ;	genCall
                           7489 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1873 CD 00 00           7490 	call	_joypad
   1876 4B                 7491 	ld	c,e
                           7492 ;	genCmpEq
                           7493 ; genCmpEq: left 1, right 1, result 0
   1877 79                 7494 	ld	a,c
   1878 FE 01              7495 	cp	a,#0x01
   187A C2 8E 18           7496 	jp	nz,00113$
   187D 18 03              7497 	jr	00203$
   187F                    7498 00202$:
   187F C3 8E 18           7499 	jp	00113$
   1882                    7500 00203$:
                           7501 ;	square.c 1147
                           7502 ;	genCall
                           7503 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1882 CD AE 09           7504 	call	_increasePulses
                           7505 ;	square.c 1148
                           7506 ;	genIpush
                           7507 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1885 3E 05              7508 	ld	a,#0x05
   1887 F5                 7509 	push	af
   1888 33                 7510 	inc	sp
                           7511 ;	genCall
   1889 CD 00 00           7512 	call	_performantdelay
   188C E8 01              7513 	lda	sp,1(sp)
                           7514 ;	genLabel
   188E                    7515 00113$:
                           7516 ;	square.c 1151
                           7517 ;	genCall
                           7518 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   188E CD 00 00           7519 	call	_joypad
   1891 4B                 7520 	ld	c,e
                           7521 ;	genCmpEq
                           7522 ; genCmpEq: left 1, right 1, result 0
   1892 79                 7523 	ld	a,c
   1893 FE 08              7524 	cp	a,#0x08
   1895 C2 A9 18           7525 	jp	nz,00115$
   1898 18 03              7526 	jr	00205$
   189A                    7527 00204$:
   189A C3 A9 18           7528 	jp	00115$
   189D                    7529 00205$:
                           7530 ;	square.c 1153
                           7531 ;	genCall
                           7532 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   189D CD C5 08           7533 	call	_decreaseSteps
                           7534 ;	square.c 1154
                           7535 ;	genIpush
                           7536 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   18A0 3E 05              7537 	ld	a,#0x05
   18A2 F5                 7538 	push	af
   18A3 33                 7539 	inc	sp
                           7540 ;	genCall
   18A4 CD 00 00           7541 	call	_performantdelay
   18A7 E8 01              7542 	lda	sp,1(sp)
                           7543 ;	genLabel
   18A9                    7544 00115$:
                           7545 ;	square.c 1157
                           7546 ;	genCall
                           7547 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   18A9 CD 00 00           7548 	call	_joypad
   18AC 4B                 7549 	ld	c,e
                           7550 ;	genCmpEq
                           7551 ; genCmpEq: left 1, right 1, result 0
   18AD 79                 7552 	ld	a,c
   18AE FE 04              7553 	cp	a,#0x04
   18B0 C2 C4 18           7554 	jp	nz,00117$
   18B3 18 03              7555 	jr	00207$
   18B5                    7556 00206$:
   18B5 C3 C4 18           7557 	jp	00117$
   18B8                    7558 00207$:
                           7559 ;	square.c 1159
                           7560 ;	genCall
                           7561 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   18B8 CD DC 07           7562 	call	_increaseSteps
                           7563 ;	square.c 1160
                           7564 ;	genIpush
                           7565 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   18BB 3E 05              7566 	ld	a,#0x05
   18BD F5                 7567 	push	af
   18BE 33                 7568 	inc	sp
                           7569 ;	genCall
   18BF CD 00 00           7570 	call	_performantdelay
   18C2 E8 01              7571 	lda	sp,1(sp)
                           7572 ;	genLabel
   18C4                    7573 00117$:
                           7574 ;	square.c 1164
                           7575 ;	genCmpEq
                           7576 ;	AOP_HL for _padext
                           7577 ; genCmpEq: left 1, right 1, result 0
   18C4 21 6E 01           7578 	ld	hl,#_padext
   18C7 7E                 7579 	ld	a,(hl)
   18C8 FE 84              7580 	cp	a,#0x84
   18CA C2 DF 18           7581 	jp	nz,00119$
   18CD 18 03              7582 	jr	00209$
   18CF                    7583 00208$:
   18CF C3 DF 18           7584 	jp	00119$
   18D2                    7585 00209$:
                           7586 ;	square.c 1166
                           7587 ;	genMinus
                           7588 ;	AOP_HL for _tempo
   18D2 21 68 01           7589 	ld	hl,#_tempo
   18D5 35                 7590 	dec	(hl)
                           7591 ;	square.c 1167
                           7592 ;	genIpush
                           7593 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   18D6 3E 02              7594 	ld	a,#0x02
   18D8 F5                 7595 	push	af
   18D9 33                 7596 	inc	sp
                           7597 ;	genCall
   18DA CD 00 00           7598 	call	_performantdelay
   18DD E8 01              7599 	lda	sp,1(sp)
                           7600 ;	genLabel
   18DF                    7601 00119$:
                           7602 ;	square.c 1170
                           7603 ;	genCmpEq
                           7604 ;	AOP_HL for _padext
                           7605 ; genCmpEq: left 1, right 1, result 0
   18DF 21 6E 01           7606 	ld	hl,#_padext
   18E2 7E                 7607 	ld	a,(hl)
   18E3 FE 88              7608 	cp	a,#0x88
   18E5 C2 FA 18           7609 	jp	nz,00121$
   18E8 18 03              7610 	jr	00211$
   18EA                    7611 00210$:
   18EA C3 FA 18           7612 	jp	00121$
   18ED                    7613 00211$:
                           7614 ;	square.c 1172
                           7615 ;	genPlus
                           7616 ;	AOP_HL for _tempo
                           7617 ;	genPlusIncr
   18ED 21 68 01           7618 	ld	hl,#_tempo
   18F0 34                 7619 	inc	(hl)
                           7620 ;	square.c 1173
                           7621 ;	genIpush
                           7622 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   18F1 3E 02              7623 	ld	a,#0x02
   18F3 F5                 7624 	push	af
   18F4 33                 7625 	inc	sp
                           7626 ;	genCall
   18F5 CD 00 00           7627 	call	_performantdelay
   18F8 E8 01              7628 	lda	sp,1(sp)
                           7629 ;	genLabel
   18FA                    7630 00121$:
                           7631 ;	square.c 1177
                           7632 ;	genCmpEq
                           7633 ;	AOP_HL for _padext
                           7634 ; genCmpEq: left 1, right 1, result 0
   18FA 21 6E 01           7635 	ld	hl,#_padext
   18FD 7E                 7636 	ld	a,(hl)
   18FE FE 44              7637 	cp	a,#0x44
   1900 C2 EA 19           7638 	jp	nz,00129$
   1903 18 03              7639 	jr	00213$
   1905                    7640 00212$:
   1905 C3 EA 19           7641 	jp	00129$
   1908                    7642 00213$:
                           7643 ;	square.c 1179
                           7644 ;	genPlus
                           7645 ;	AOP_HL for _seldrum
                           7646 ;	genPlusIncr
   1908 21 71 01           7647 	ld	hl,#_seldrum
   190B 34                 7648 	inc	(hl)
                           7649 ;	square.c 1180
                           7650 ;	genCmpEq
                           7651 ;	AOP_HL for _seldrum
                           7652 ; genCmpEq: left 1, right 1, result 0
   190C 7E                 7653 	ld	a,(hl)
   190D FE 03              7654 	cp	a,#0x03
   190F C2 1C 19           7655 	jp	nz,00123$
   1912 18 03              7656 	jr	00215$
   1914                    7657 00214$:
   1914 C3 1C 19           7658 	jp	00123$
   1917                    7659 00215$:
                           7660 ;	square.c 1182
                           7661 ;	genAssign
                           7662 ;	AOP_HL for _seldrum
   1917 21 71 01           7663 	ld	hl,#_seldrum
   191A 36 00              7664 	ld	(hl),#0x00
                           7665 ;	genLabel
   191C                    7666 00123$:
                           7667 ;	square.c 1184
                           7668 ;	genIpush
                           7669 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   191C 3E 0A              7670 	ld	a,#0x0A
   191E F5                 7671 	push	af
   191F 33                 7672 	inc	sp
                           7673 ;	genCall
   1920 CD 00 00           7674 	call	_performantdelay
   1923 E8 01              7675 	lda	sp,1(sp)
                           7676 ;	square.c 1185
                           7677 ;	genAssign
                           7678 ;	AOP_HL for _cDelay
   1925 21 33 01           7679 	ld	hl,#_cDelay
   1928 36 00              7680 	ld	(hl),#0x00
                           7681 ;	square.c 1186
                           7682 ;	genAssign
                           7683 ;	AOP_HL for _cOffStep
   192A 21 34 01           7684 	ld	hl,#_cOffStep
   192D 36 00              7685 	ld	(hl),#0x00
                           7686 ;	square.c 1187
                           7687 ;	genCmpEq
                           7688 ;	AOP_HL for _seldrum
                           7689 ; genCmpEq: left 1, right 1, result 0
   192F 21 71 01           7690 	ld	hl,#_seldrum
   1932 7E                 7691 	ld	a,(hl)
   1933 B7                 7692 	or	a,a
   1934 CA 4C 19           7693 	jp	z,00124$
   1937                    7694 00216$:
                           7695 ;	genCmpEq
                           7696 ;	AOP_HL for _seldrum
                           7697 ; genCmpEq: left 1, right 1, result 0
   1937 21 71 01           7698 	ld	hl,#_seldrum
   193A 7E                 7699 	ld	a,(hl)
   193B FE 01              7700 	cp	a,#0x01
   193D CA 5F 19           7701 	jp	z,00125$
   1940                    7702 00217$:
                           7703 ;	genCmpEq
                           7704 ;	AOP_HL for _seldrum
                           7705 ; genCmpEq: left 1, right 1, result 0
   1940 21 71 01           7706 	ld	hl,#_seldrum
   1943 7E                 7707 	ld	a,(hl)
   1944 FE 02              7708 	cp	a,#0x02
   1946 CA 72 19           7709 	jp	z,00126$
   1949                    7710 00218$:
                           7711 ;	genGoto
   1949 C3 82 19           7712 	jp	00127$
                           7713 ;	square.c 1190
                           7714 ;	genLabel
   194C                    7715 00124$:
                           7716 ;	genAssign
                           7717 ;	AOP_HL for _delayA
                           7718 ;	AOP_HL for _cDelay
   194C 21 21 01           7719 	ld	hl,#_delayA
   194F 7E                 7720 	ld	a,(hl)
   1950 21 33 01           7721 	ld	hl,#_cDelay
   1953 77                 7722 	ld	(hl),a
                           7723 ;	square.c 1191
                           7724 ;	genAssign
                           7725 ;	AOP_HL for _offStepA
                           7726 ;	AOP_HL for _cOffStep
   1954 21 30 01           7727 	ld	hl,#_offStepA
   1957 7E                 7728 	ld	a,(hl)
   1958 21 34 01           7729 	ld	hl,#_cOffStep
   195B 77                 7730 	ld	(hl),a
                           7731 ;	square.c 1192
                           7732 ;	genGoto
   195C C3 82 19           7733 	jp	00127$
                           7734 ;	square.c 1194
                           7735 ;	genLabel
   195F                    7736 00125$:
                           7737 ;	genAssign
                           7738 ;	AOP_HL for _delayB
                           7739 ;	AOP_HL for _cDelay
   195F 21 22 01           7740 	ld	hl,#_delayB
   1962 7E                 7741 	ld	a,(hl)
   1963 21 33 01           7742 	ld	hl,#_cDelay
   1966 77                 7743 	ld	(hl),a
                           7744 ;	square.c 1195
                           7745 ;	genAssign
                           7746 ;	AOP_HL for _offStepB
                           7747 ;	AOP_HL for _cOffStep
   1967 21 31 01           7748 	ld	hl,#_offStepB
   196A 7E                 7749 	ld	a,(hl)
   196B 21 34 01           7750 	ld	hl,#_cOffStep
   196E 77                 7751 	ld	(hl),a
                           7752 ;	square.c 1196
                           7753 ;	genGoto
   196F C3 82 19           7754 	jp	00127$
                           7755 ;	square.c 1198
                           7756 ;	genLabel
   1972                    7757 00126$:
                           7758 ;	genAssign
                           7759 ;	AOP_HL for _delayC
                           7760 ;	AOP_HL for _cDelay
   1972 21 23 01           7761 	ld	hl,#_delayC
   1975 7E                 7762 	ld	a,(hl)
   1976 21 33 01           7763 	ld	hl,#_cDelay
   1979 77                 7764 	ld	(hl),a
                           7765 ;	square.c 1199
                           7766 ;	genAssign
                           7767 ;	AOP_HL for _offStepC
                           7768 ;	AOP_HL for _cOffStep
   197A 21 32 01           7769 	ld	hl,#_offStepC
   197D 7E                 7770 	ld	a,(hl)
   197E 21 34 01           7771 	ld	hl,#_cOffStep
   1981 77                 7772 	ld	(hl),a
                           7773 ;	square.c 1201
                           7774 ;	genLabel
   1982                    7775 00127$:
                           7776 ;	square.c 1202
                           7777 ;	genCast
                           7778 ;	AOP_HL for _seldrum
   1982 21 71 01           7779 	ld	hl,#_seldrum
   1985 4E                 7780 	ld	c,(hl)
   1986 06 00              7781 	ld	b,#0x00
                           7782 ;	genLeftShift
   1988 CB 21              7783 	sla	c
   198A CB 10              7784 	rl	b
                           7785 ;	genCast
                           7786 ; Removed redundent load
                           7787 ;	genIpush
                           7788 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   198C 79                 7789 	ld	a,c
   198D F5                 7790 	push	af
   198E 33                 7791 	inc	sp
                           7792 ;	genIpush
   198F 3E 07              7793 	ld	a,#0x07
   1991 F5                 7794 	push	af
   1992 33                 7795 	inc	sp
                           7796 ;	genCall
   1993 CD 00 00           7797 	call	_set_sprite_tile
   1996 E8 02              7798 	lda	sp,2(sp)
                           7799 ;	square.c 1203
                           7800 ;	genIpush
                           7801 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1998 21 08 10           7802 	ld	hl,#0x1008
   199B E5                 7803 	push	hl
                           7804 ;	genIpush
   199C 3E 07              7805 	ld	a,#0x07
   199E F5                 7806 	push	af
   199F 33                 7807 	inc	sp
                           7808 ;	genCall
   19A0 CD 00 00           7809 	call	_move_sprite
   19A3 E8 03              7810 	lda	sp,3(sp)
                           7811 ;	square.c 1204
                           7812 ;	genIpush
                           7813 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   19A5 21 05 0A           7814 	ld	hl,#0x0A05
   19A8 E5                 7815 	push	hl
                           7816 ;	genCall
   19A9 CD 00 00           7817 	call	_set_sprite_tile
   19AC E8 02              7818 	lda	sp,2(sp)
                           7819 ;	square.c 1205
                           7820 ;	genPlus
                           7821 ;	AOP_HL for _cDelay
                           7822 ;	genPlusIncr
                           7823 ;	Can't optimise plus by inc, falling back to the normal way
   19AE 21 33 01           7824 	ld	hl,#_cDelay
   19B1 7E                 7825 	ld	a,(hl)
   19B2 C6 08              7826 	add	a,#0x08
   19B4 4F                 7827 	ld	c,a
                           7828 ;	genIpush
                           7829 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   19B5 3E 98              7830 	ld	a,#0x98
   19B7 F5                 7831 	push	af
   19B8 33                 7832 	inc	sp
                           7833 ;	genIpush
   19B9 79                 7834 	ld	a,c
   19BA F5                 7835 	push	af
   19BB 33                 7836 	inc	sp
                           7837 ;	genIpush
   19BC 3E 05              7838 	ld	a,#0x05
   19BE F5                 7839 	push	af
   19BF 33                 7840 	inc	sp
                           7841 ;	genCall
   19C0 CD 00 00           7842 	call	_move_sprite
   19C3 E8 03              7843 	lda	sp,3(sp)
                           7844 ;	square.c 1206
                           7845 ;	genIpush
                           7846 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   19C5 21 04 08           7847 	ld	hl,#0x0804
   19C8 E5                 7848 	push	hl
                           7849 ;	genCall
   19C9 CD 00 00           7850 	call	_set_sprite_tile
   19CC E8 02              7851 	lda	sp,2(sp)
                           7852 ;	square.c 1207
                           7853 ;	genPlus
                           7854 ;	AOP_HL for _cOffStep
                           7855 ;	Can't optimise plus by inc, falling back to the normal way
   19CE 3E D0              7856 	ld	a,#<_dXlut
   19D0 21 34 01           7857 	ld	hl,#_cOffStep
   19D3 86                 7858 	add	a,(hl)
   19D4 4F                 7859 	ld	c,a
   19D5 3E 00              7860 	ld	a,#>_dXlut
   19D7 CE 00              7861 	adc	a,#0x00
   19D9 47                 7862 	ld	b,a
                           7863 ;	genPointerGet
   19DA 0A                 7864 	ld	a,(bc)
                           7865 ;	genIpush
                           7866 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   19DB 4F                 7867 	ld	c,a
   19DC F5                 7868 	push	af
   19DD 33                 7869 	inc	sp
                           7870 ;	genIpush
   19DE 21 04 08           7871 	ld	hl,#0x0804
   19E1 E5                 7872 	push	hl
                           7873 ;	genCall
   19E2 CD 00 00           7874 	call	_move_sprite
   19E5 E8 03              7875 	lda	sp,3(sp)
                           7876 ;	square.c 1208
                           7877 ;	genCall
                           7878 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   19E7 CD 00 00           7879 	call	_wait_vbl_done
                           7880 ;	genLabel
   19EA                    7881 00129$:
                           7882 ;	square.c 1211
                           7883 ;	genCmpEq
                           7884 ;	AOP_HL for _padext
                           7885 ; genCmpEq: left 1, right 1, result 0
   19EA 21 6E 01           7886 	ld	hl,#_padext
   19ED 7E                 7887 	ld	a,(hl)
   19EE FE 48              7888 	cp	a,#0x48
   19F0 C2 68 1A           7889 	jp	nz,00134$
   19F3 18 03              7890 	jr	00222$
   19F5                    7891 00221$:
   19F5 C3 68 1A           7892 	jp	00134$
   19F8                    7893 00222$:
                           7894 ;	square.c 1213
                           7895 ;	genCmpEq
                           7896 ;	AOP_HL for _modus
                           7897 ; genCmpEq: left 1, right 1, result 0
   19F8 21 6D 01           7898 	ld	hl,#_modus
   19FB 7E                 7899 	ld	a,(hl)
   19FC B7                 7900 	or	a,a
   19FD C2 32 1A           7901 	jp	nz,00131$
   1A00 18 03              7902 	jr	00224$
   1A02                    7903 00223$:
   1A02 C3 32 1A           7904 	jp	00131$
   1A05                    7905 00224$:
                           7906 ;	square.c 1215
                           7907 ;	genAssign
                           7908 ;	AOP_HL for _clkA
   1A05 21 29 01           7909 	ld	hl,#_clkA
   1A08 36 00              7910 	ld	(hl),#0x00
                           7911 ;	square.c 1216
                           7912 ;	genAssign
                           7913 ;	AOP_HL for _clkB
   1A0A 21 2C 01           7914 	ld	hl,#_clkB
   1A0D 36 00              7915 	ld	(hl),#0x00
                           7916 ;	square.c 1217
                           7917 ;	genAssign
                           7918 ;	AOP_HL for _clkC
   1A0F 21 2F 01           7919 	ld	hl,#_clkC
   1A12 36 00              7920 	ld	(hl),#0x00
                           7921 ;	square.c 1218
                           7922 ;	genAssign
                           7923 ;	AOP_HL for _modus
   1A14 21 6D 01           7924 	ld	hl,#_modus
   1A17 36 01              7925 	ld	(hl),#0x01
                           7926 ;	square.c 1219
                           7927 ;	genIpush
                           7928 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A19 21 03 06           7929 	ld	hl,#0x0603
   1A1C E5                 7930 	push	hl
                           7931 ;	genCall
   1A1D CD 00 00           7932 	call	_set_sprite_tile
   1A20 E8 02              7933 	lda	sp,2(sp)
                           7934 ;	square.c 1220
                           7935 ;	genIpush
                           7936 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A22 21 A0 10           7937 	ld	hl,#0x10A0
   1A25 E5                 7938 	push	hl
                           7939 ;	genIpush
   1A26 3E 03              7940 	ld	a,#0x03
   1A28 F5                 7941 	push	af
   1A29 33                 7942 	inc	sp
                           7943 ;	genCall
   1A2A CD 00 00           7944 	call	_move_sprite
   1A2D E8 03              7945 	lda	sp,3(sp)
                           7946 ;	genGoto
   1A2F C3 5C 1A           7947 	jp	00132$
                           7948 ;	genLabel
   1A32                    7949 00131$:
                           7950 ;	square.c 1224
                           7951 ;	genAssign
                           7952 ;	AOP_HL for _clkA
   1A32 21 29 01           7953 	ld	hl,#_clkA
   1A35 36 00              7954 	ld	(hl),#0x00
                           7955 ;	square.c 1225
                           7956 ;	genAssign
                           7957 ;	AOP_HL for _clkB
   1A37 21 2C 01           7958 	ld	hl,#_clkB
   1A3A 36 00              7959 	ld	(hl),#0x00
                           7960 ;	square.c 1226
                           7961 ;	genAssign
                           7962 ;	AOP_HL for _clkC
   1A3C 21 2F 01           7963 	ld	hl,#_clkC
   1A3F 36 00              7964 	ld	(hl),#0x00
                           7965 ;	square.c 1227
                           7966 ;	genAssign
                           7967 ;	AOP_HL for _modus
   1A41 21 6D 01           7968 	ld	hl,#_modus
   1A44 36 00              7969 	ld	(hl),#0x00
                           7970 ;	square.c 1228
                           7971 ;	genIpush
                           7972 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A46 21 03 06           7973 	ld	hl,#0x0603
   1A49 E5                 7974 	push	hl
                           7975 ;	genCall
   1A4A CD 00 00           7976 	call	_set_sprite_tile
   1A4D E8 02              7977 	lda	sp,2(sp)
                           7978 ;	square.c 1229
                           7979 ;	genIpush
                           7980 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A4F 21 00 00           7981 	ld	hl,#0x0000
   1A52 E5                 7982 	push	hl
                           7983 ;	genIpush
   1A53 3E 03              7984 	ld	a,#0x03
   1A55 F5                 7985 	push	af
   1A56 33                 7986 	inc	sp
                           7987 ;	genCall
   1A57 CD 00 00           7988 	call	_move_sprite
   1A5A E8 03              7989 	lda	sp,3(sp)
                           7990 ;	genLabel
   1A5C                    7991 00132$:
                           7992 ;	square.c 1233
                           7993 ;	genCall
                           7994 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A5C CD 00 00           7995 	call	_wait_vbl_done
                           7996 ;	square.c 1234
                           7997 ;	genIpush
                           7998 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A5F 3E 05              7999 	ld	a,#0x05
   1A61 F5                 8000 	push	af
   1A62 33                 8001 	inc	sp
                           8002 ;	genCall
   1A63 CD 00 00           8003 	call	_performantdelay
   1A66 E8 01              8004 	lda	sp,1(sp)
                           8005 ;	genLabel
   1A68                    8006 00134$:
                           8007 ;	square.c 1265
                           8008 ;	genCmpEq
                           8009 ;	AOP_HL for _padext
                           8010 ; genCmpEq: left 1, right 1, result 0
   1A68 21 6E 01           8011 	ld	hl,#_padext
   1A6B 7E                 8012 	ld	a,(hl)
   1A6C FE 14              8013 	cp	a,#0x14
   1A6E C2 82 1A           8014 	jp	nz,00136$
   1A71 18 03              8015 	jr	00226$
   1A73                    8016 00225$:
   1A73 C3 82 1A           8017 	jp	00136$
   1A76                    8018 00226$:
                           8019 ;	square.c 1267
                           8020 ;	genCall
                           8021 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A76 CD 89 06           8022 	call	_increaseOffStep
                           8023 ;	square.c 1268
                           8024 ;	genIpush
                           8025 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A79 3E 05              8026 	ld	a,#0x05
   1A7B F5                 8027 	push	af
   1A7C 33                 8028 	inc	sp
                           8029 ;	genCall
   1A7D CD 00 00           8030 	call	_performantdelay
   1A80 E8 01              8031 	lda	sp,1(sp)
                           8032 ;	genLabel
   1A82                    8033 00136$:
                           8034 ;	square.c 1271
                           8035 ;	genCmpEq
                           8036 ;	AOP_HL for _padext
                           8037 ; genCmpEq: left 1, right 1, result 0
   1A82 21 6E 01           8038 	ld	hl,#_padext
   1A85 7E                 8039 	ld	a,(hl)
   1A86 FE 18              8040 	cp	a,#0x18
   1A88 C2 9C 1A           8041 	jp	nz,00138$
   1A8B 18 03              8042 	jr	00228$
   1A8D                    8043 00227$:
   1A8D C3 9C 1A           8044 	jp	00138$
   1A90                    8045 00228$:
                           8046 ;	square.c 1273
                           8047 ;	genCall
                           8048 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A90 CD 45 07           8049 	call	_decreaseOffStep
                           8050 ;	square.c 1274
                           8051 ;	genIpush
                           8052 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A93 3E 05              8053 	ld	a,#0x05
   1A95 F5                 8054 	push	af
   1A96 33                 8055 	inc	sp
                           8056 ;	genCall
   1A97 CD 00 00           8057 	call	_performantdelay
   1A9A E8 01              8058 	lda	sp,1(sp)
                           8059 ;	genLabel
   1A9C                    8060 00138$:
                           8061 ;	square.c 1277
                           8062 ;	genCmpEq
                           8063 ;	AOP_HL for _padext
                           8064 ; genCmpEq: left 1, right 1, result 0
   1A9C 21 6E 01           8065 	ld	hl,#_padext
   1A9F 7E                 8066 	ld	a,(hl)
   1AA0 FE 11              8067 	cp	a,#0x11
   1AA2 C2 B6 1A           8068 	jp	nz,00140$
   1AA5 18 03              8069 	jr	00230$
   1AA7                    8070 00229$:
   1AA7 C3 B6 1A           8071 	jp	00140$
   1AAA                    8072 00230$:
                           8073 ;	square.c 1279
                           8074 ;	genCall
                           8075 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1AAA CD B8 0B           8076 	call	_increaseSwing
                           8077 ;	square.c 1280
                           8078 ;	genIpush
                           8079 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1AAD 3E 05              8080 	ld	a,#0x05
   1AAF F5                 8081 	push	af
   1AB0 33                 8082 	inc	sp
                           8083 ;	genCall
   1AB1 CD 00 00           8084 	call	_performantdelay
   1AB4 E8 01              8085 	lda	sp,1(sp)
                           8086 ;	genLabel
   1AB6                    8087 00140$:
                           8088 ;	square.c 1283
                           8089 ;	genCmpEq
                           8090 ;	AOP_HL for _padext
                           8091 ; genCmpEq: left 1, right 1, result 0
   1AB6 21 6E 01           8092 	ld	hl,#_padext
   1AB9 7E                 8093 	ld	a,(hl)
   1ABA FE 12              8094 	cp	a,#0x12
   1ABC C2 D0 1A           8095 	jp	nz,00142$
   1ABF 18 03              8096 	jr	00232$
   1AC1                    8097 00231$:
   1AC1 C3 D0 1A           8098 	jp	00142$
   1AC4                    8099 00232$:
                           8100 ;	square.c 1285
                           8101 ;	genCall
                           8102 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1AC4 CD 48 0C           8103 	call	_decreaseSwing
                           8104 ;	square.c 1286
                           8105 ;	genIpush
                           8106 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1AC7 3E 05              8107 	ld	a,#0x05
   1AC9 F5                 8108 	push	af
   1ACA 33                 8109 	inc	sp
                           8110 ;	genCall
   1ACB CD 00 00           8111 	call	_performantdelay
   1ACE E8 01              8112 	lda	sp,1(sp)
                           8113 ;	genLabel
   1AD0                    8114 00142$:
                           8115 ;	square.c 1289
                           8116 ;	genCmpEq
                           8117 ;	AOP_HL for _padext
                           8118 ; genCmpEq: left 1, right 1, result 0
   1AD0 21 6E 01           8119 	ld	hl,#_padext
   1AD3 7E                 8120 	ld	a,(hl)
   1AD4 FE 30              8121 	cp	a,#0x30
   1AD6 C2 E6 1A           8122 	jp	nz,00144$
   1AD9 18 03              8123 	jr	00234$
   1ADB                    8124 00233$:
   1ADB C3 E6 1A           8125 	jp	00144$
   1ADE                    8126 00234$:
                           8127 ;	square.c 1291
                           8128 ;	genAssign
                           8129 ;	AOP_HL for _syncToDrum
   1ADE 21 25 01           8130 	ld	hl,#_syncToDrum
   1AE1 36 01              8131 	ld	(hl),#0x01
                           8132 ;	square.c 1293
                           8133 ;	genCall
                           8134 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1AE3 CD 00 00           8135 	call	_waitpadup
                           8136 ;	genLabel
   1AE6                    8137 00144$:
                           8138 ;	square.c 1297
                           8139 ;	genCmpEq
                           8140 ;	AOP_HL for _padext
                           8141 ; genCmpEq: left 1, right 1, result 0
   1AE6 21 6E 01           8142 	ld	hl,#_padext
   1AE9 7E                 8143 	ld	a,(hl)
   1AEA FE 21              8144 	cp	a,#0x21
   1AEC C2 00 1B           8145 	jp	nz,00146$
   1AEF 18 03              8146 	jr	00236$
   1AF1                    8147 00235$:
   1AF1 C3 00 1B           8148 	jp	00146$
   1AF4                    8149 00236$:
                           8150 ;	square.c 1299
                           8151 ;	genCall
                           8152 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1AF4 CD A2 13           8153 	call	_savePattern
                           8154 ;	square.c 1300
                           8155 ;	genIpush
                           8156 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1AF7 3E 05              8157 	ld	a,#0x05
   1AF9 F5                 8158 	push	af
   1AFA 33                 8159 	inc	sp
                           8160 ;	genCall
   1AFB CD 00 00           8161 	call	_performantdelay
   1AFE E8 01              8162 	lda	sp,1(sp)
                           8163 ;	genLabel
   1B00                    8164 00146$:
                           8165 ;	square.c 1303
                           8166 ;	genCmpEq
                           8167 ;	AOP_HL for _padext
                           8168 ; genCmpEq: left 1, right 1, result 0
   1B00 21 6E 01           8169 	ld	hl,#_padext
   1B03 7E                 8170 	ld	a,(hl)
   1B04 FE 22              8171 	cp	a,#0x22
   1B06 C2 4B 1B           8172 	jp	nz,00153$
   1B09 18 03              8173 	jr	00238$
   1B0B                    8174 00237$:
   1B0B C3 4B 1B           8175 	jp	00153$
   1B0E                    8176 00238$:
                           8177 ;	square.c 1306
                           8178 ;	genCmpGt
                           8179 ;	AOP_HL for _currentSaveSlot
   1B0E 3E 03              8180 	ld	a,#0x03
   1B10 21 35 01           8181 	ld	hl,#_currentSaveSlot
   1B13 96                 8182 	sub	a,(hl)
   1B14 DA 42 1B           8183 	jp	c,00151$
                           8184 ;	genJumpTab
                           8185 ;	AOP_HL for _currentSaveSlot
   1B17 5E                 8186 	ld	e,(hl)
   1B18 16 00              8187 	ld	d,#0x00
   1B1A 21 21 1B           8188 	ld	hl,#00239$
   1B1D 19                 8189 	add	hl,de
   1B1E 19                 8190 	add	hl,de
   1B1F 19                 8191 	add	hl,de
   1B20 E9                 8192 	jp	(hl)
   1B21                    8193 00239$:
   1B21 C3 2D 1B           8194 	jp	00147$
   1B24 C3 33 1B           8195 	jp	00148$
   1B27 C3 39 1B           8196 	jp	00149$
   1B2A C3 3F 1B           8197 	jp	00150$
                           8198 ;	square.c 1309
                           8199 ;	genLabel
   1B2D                    8200 00147$:
                           8201 ;	genCall
                           8202 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1B2D CD 7E 0E           8203 	call	_loadA
                           8204 ;	square.c 1310
                           8205 ;	genGoto
   1B30 C3 42 1B           8206 	jp	00151$
                           8207 ;	square.c 1312
                           8208 ;	genLabel
   1B33                    8209 00148$:
                           8210 ;	genCall
                           8211 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1B33 CD C7 0F           8212 	call	_loadB
                           8213 ;	square.c 1313
                           8214 ;	genGoto
   1B36 C3 42 1B           8215 	jp	00151$
                           8216 ;	square.c 1316
                           8217 ;	genLabel
   1B39                    8218 00149$:
                           8219 ;	genCall
                           8220 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1B39 CD 10 11           8221 	call	_loadC
                           8222 ;	square.c 1317
                           8223 ;	genGoto
   1B3C C3 42 1B           8224 	jp	00151$
                           8225 ;	square.c 1319
                           8226 ;	genLabel
   1B3F                    8227 00150$:
                           8228 ;	genCall
                           8229 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1B3F CD 59 12           8230 	call	_loadD
                           8231 ;	square.c 1321
                           8232 ;	genLabel
   1B42                    8233 00151$:
                           8234 ;	square.c 1322
                           8235 ;	genIpush
                           8236 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1B42 3E 05              8237 	ld	a,#0x05
   1B44 F5                 8238 	push	af
   1B45 33                 8239 	inc	sp
                           8240 ;	genCall
   1B46 CD 00 00           8241 	call	_performantdelay
   1B49 E8 01              8242 	lda	sp,1(sp)
                           8243 ;	genLabel
   1B4B                    8244 00153$:
                           8245 ;	square.c 1325
                           8246 ;	genCmpEq
                           8247 ;	AOP_HL for _padext
                           8248 ; genCmpEq: left 1, right 1, result 0
   1B4B 21 6E 01           8249 	ld	hl,#_padext
   1B4E 7E                 8250 	ld	a,(hl)
   1B4F FE 24              8251 	cp	a,#0x24
   1B51 C2 8E 1B           8252 	jp	nz,00157$
   1B54 18 03              8253 	jr	00241$
   1B56                    8254 00240$:
   1B56 C3 8E 1B           8255 	jp	00157$
   1B59                    8256 00241$:
                           8257 ;	square.c 1327
                           8258 ;	genCmpLt
                           8259 ;	AOP_HL for _currentSaveSlot
   1B59 21 35 01           8260 	ld	hl,#_currentSaveSlot
   1B5C 7E                 8261 	ld	a,(hl)
   1B5D FE 03              8262 	cp	#0x03
   1B5F D2 85 1B           8263 	jp	nc,00155$
                           8264 ;	square.c 1329
                           8265 ;	genPlus
                           8266 ;	AOP_HL for _currentSaveSlot
                           8267 ;	genPlusIncr
   1B62 34                 8268 	inc	(hl)
                           8269 ;	square.c 1330
                           8270 ;	genIpush
                           8271 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1B63 21 06 0C           8272 	ld	hl,#0x0C06
   1B66 E5                 8273 	push	hl
                           8274 ;	genCall
   1B67 CD 00 00           8275 	call	_set_sprite_tile
   1B6A E8 02              8276 	lda	sp,2(sp)
                           8277 ;	square.c 1331
                           8278 ;	genPlus
                           8279 ;	AOP_HL for _currentSaveSlot
                           8280 ;	Can't optimise plus by inc, falling back to the normal way
   1B6C 3E 10              8281 	ld	a,#<_savelut
   1B6E 21 35 01           8282 	ld	hl,#_currentSaveSlot
   1B71 86                 8283 	add	a,(hl)
   1B72 4F                 8284 	ld	c,a
   1B73 3E 01              8285 	ld	a,#>_savelut
   1B75 CE 00              8286 	adc	a,#0x00
   1B77 47                 8287 	ld	b,a
                           8288 ;	genPointerGet
   1B78 0A                 8289 	ld	a,(bc)
                           8290 ;	genIpush
                           8291 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1B79 4F                 8292 	ld	c,a
   1B7A F5                 8293 	push	af
   1B7B 33                 8294 	inc	sp
                           8295 ;	genIpush
   1B7C 21 06 A0           8296 	ld	hl,#0xA006
   1B7F E5                 8297 	push	hl
                           8298 ;	genCall
   1B80 CD 00 00           8299 	call	_move_sprite
   1B83 E8 03              8300 	lda	sp,3(sp)
                           8301 ;	genLabel
   1B85                    8302 00155$:
                           8303 ;	square.c 1333
                           8304 ;	genIpush
                           8305 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1B85 3E 05              8306 	ld	a,#0x05
   1B87 F5                 8307 	push	af
   1B88 33                 8308 	inc	sp
                           8309 ;	genCall
   1B89 CD 00 00           8310 	call	_performantdelay
   1B8C E8 01              8311 	lda	sp,1(sp)
                           8312 ;	genLabel
   1B8E                    8313 00157$:
                           8314 ;	square.c 1336
                           8315 ;	genCmpEq
                           8316 ;	AOP_HL for _padext
                           8317 ; genCmpEq: left 1, right 1, result 0
   1B8E 21 6E 01           8318 	ld	hl,#_padext
   1B91 7E                 8319 	ld	a,(hl)
   1B92 FE 28              8320 	cp	a,#0x28
   1B94 C2 01 18           8321 	jp	nz,00163$
   1B97 18 03              8322 	jr	00243$
   1B99                    8323 00242$:
   1B99 C3 01 18           8324 	jp	00163$
   1B9C                    8325 00243$:
                           8326 ;	square.c 1338
                           8327 ;	genCmpGt
                           8328 ;	AOP_HL for _currentSaveSlot
   1B9C 3E 00              8329 	ld	a,#0x00
   1B9E 21 35 01           8330 	ld	hl,#_currentSaveSlot
   1BA1 96                 8331 	sub	a,(hl)
   1BA2 D2 C8 1B           8332 	jp	nc,00159$
                           8333 ;	square.c 1340
                           8334 ;	genMinus
                           8335 ;	AOP_HL for _currentSaveSlot
   1BA5 35                 8336 	dec	(hl)
                           8337 ;	square.c 1341
                           8338 ;	genIpush
                           8339 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1BA6 21 06 0C           8340 	ld	hl,#0x0C06
   1BA9 E5                 8341 	push	hl
                           8342 ;	genCall
   1BAA CD 00 00           8343 	call	_set_sprite_tile
   1BAD E8 02              8344 	lda	sp,2(sp)
                           8345 ;	square.c 1342
                           8346 ;	genPlus
                           8347 ;	AOP_HL for _currentSaveSlot
                           8348 ;	Can't optimise plus by inc, falling back to the normal way
   1BAF 3E 10              8349 	ld	a,#<_savelut
   1BB1 21 35 01           8350 	ld	hl,#_currentSaveSlot
   1BB4 86                 8351 	add	a,(hl)
   1BB5 4F                 8352 	ld	c,a
   1BB6 3E 01              8353 	ld	a,#>_savelut
   1BB8 CE 00              8354 	adc	a,#0x00
   1BBA 47                 8355 	ld	b,a
                           8356 ;	genPointerGet
   1BBB 0A                 8357 	ld	a,(bc)
                           8358 ;	genIpush
                           8359 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1BBC 4F                 8360 	ld	c,a
   1BBD F5                 8361 	push	af
   1BBE 33                 8362 	inc	sp
                           8363 ;	genIpush
   1BBF 21 06 A0           8364 	ld	hl,#0xA006
   1BC2 E5                 8365 	push	hl
                           8366 ;	genCall
   1BC3 CD 00 00           8367 	call	_move_sprite
   1BC6 E8 03              8368 	lda	sp,3(sp)
                           8369 ;	genLabel
   1BC8                    8370 00159$:
                           8371 ;	square.c 1344
                           8372 ;	genIpush
                           8373 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1BC8 3E 05              8374 	ld	a,#0x05
   1BCA F5                 8375 	push	af
   1BCB 33                 8376 	inc	sp
                           8377 ;	genCall
   1BCC CD 00 00           8378 	call	_performantdelay
   1BCF E8 01              8379 	lda	sp,1(sp)
                           8380 ;	genGoto
   1BD1 C3 01 18           8381 	jp	00163$
                           8382 ;	genLabel
   1BD4                    8383 00165$:
                           8384 ;	genEndFunction
   1BD4 E8 03              8385 	lda	sp,3(sp)
   1BD6 C9                 8386 	ret
   1BD7                    8387 ___main_end:
                           8388 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 ___decreaseOffStep_end             07DC R
  0 ___decreaseOffStep_start           0745 R
  0 ___decreasePulses_end              0BB8 R
  0 ___decreasePulses_start            0AB3 R
  0 ___decreaseSteps_end               09AE R
  0 ___decreaseSteps_start             08C5 R
  0 ___decreaseSwing_end               0CDD R
  0 ___decreaseSwing_start             0C48 R
  0 ___fillDrumA_end                   02B2 R
  0 ___fillDrumA_start                 00E3 R
  0 ___fillDrumB_end                   0481 R
  0 ___fillDrumB_start                 02B2 R
  0 ___fillDrumC_end                   0650 R
  0 ___fillDrumC_start                 0481 R
  0 ___increaseOffStep_end             0745 R
  0 ___increaseOffStep_start           0689 R
  0 ___increasePulses_end              0AB3 R
  0 ___increasePulses_start            09AE R
  0 ___increaseSteps_end               08C5 R
  0 ___increaseSteps_start             07DC R
  0 ___increaseSwing_end               0C48 R
  0 ___increaseSwing_start             0BB8 R
  0 ___loadA_end                       0FC7 R
  0 ___loadA_start                     0E7E R
  0 ___loadB_end                       1110 R
  0 ___loadB_start                     0FC7 R
  0 ___loadC_end                       1259 R
  0 ___loadC_start                     1110 R
  0 ___loadD_end                       13A2 R
  0 ___loadD_start                     1259 R
  0 ___main_end                        1BD7 R
  0 ___main_start                      1557 R
  0 ___makeASound_end                  007D R
  0 ___makeASound_start                0044 R
  0 ___makeBSound_end                  00B0 R
  0 ___makeBSound_start                007D R
  0 ___makeCSound_end                  00E3 R
  0 ___makeCSound_start                00B0 R
  0 ___master_end                      0E63 R
  0 ___master_start                    0E4E R
  0 ___performantdelay_end             0014 R
  0 ___performantdelay_start           0000 R
  0 ___player_end                      0E7A R
  0 ___player_start                    0E63 R
  0 ___rand_end                        0044 R
  0 ___rand_start                      0014 R
  0 ___savePattern_end                 1557 R
  0 ___savePattern_start               13A2 R
  0 ___setupDrum_end                   0689 R
  0 ___setupDrum_start                 0650 R
  0 ___sync_end                        0E4E R
  0 ___sync_start                      0E11 R
  0 ___tick_end                        0E11 R
  0 ___tick_start                      0CDD R
  0 ___tim_end                         0E7E R
  0 ___tim_start                       0E7A R
    __initrleblock                     **** GX
    __moduchar_rrx_s                   **** GX
    __muluint_rrx_s                    **** GX
    _add_TIM                           **** GX
  1 _bob                               016A GR
  1 _bucket                            0114 GR
  1 _cDelay                            0133 GR
  1 _cOffStep                          0134 GR
  1 _clkA                              0129 GR
  1 _clkB                              012C GR
  1 _clkC                              012F GR
    _clock                             **** GX
  1 _clockToSync                       0126 GR
  1 _currentSaveSlot                   0135 GR
  1 _current_rand                      0166 R
  1 _dXlut                             00D0 GR
  1 _dYlut                             00F0 GR
  0 _decreaseOffStep                   0745 GR
  0 _decreasePulses                    0AB3 GR
  0 _decreaseSteps                     08C5 GR
  0 _decreaseSwing                     0C48 GR
    _delay                             **** GX
  1 _delayA                            0121 GR
  1 _delayB                            0122 GR
  1 _delayC                            0123 GR
    _disable_interrupts                **** GX
  1 _drumA                             0070 GR
  1 _drumB                             0090 GR
  1 _drumC                             00B0 GR
    _enable_interrupts                 **** GX
  1 _f                                 011C GR
  0 _fillDrumA                         00E3 GR
  0 _fillDrumB                         02B2 GR
  0 _fillDrumC                         0481 GR
  1 _first                             011A GR
  1 _g                                 0124 GR
  1 _i                                 0115 GR
  0 _increaseOffStep                   0689 GR
  0 _increasePulses                    09AE GR
  0 _increaseSteps                     07DC GR
  0 _increaseSwing                     0BB8 GR
  1 _joy                               016F GR
    _joypad                            **** GX
  1 _last                              011B GR
  0 _loadA                             0E7E GR
  0 _loadB                             0FC7 GR
  0 _loadC                             1110 GR
  0 _loadD                             1259 GR
  0 _main                              1557 GR
  0 _makeASound                        0044 GR
  0 _makeBSound                        007D GR
  0 _makeCSound                        00B0 GR
  0 _master                            0E4E GR
  1 _midiC                             0030 GR
  1 _modus                             016D GR
    _move_sprite                       **** GX
  1 _numberOfPulsesA                   0127 GR
  1 _numberOfPulsesB                   012A GR
  1 _numberOfPulsesC                   012D GR
  1 _offStepA                          0130 GR
  1 _offStepB                          0131 GR
  1 _offStepC                          0132 GR
  1 _offsetC                           0040 GR
  1 _pad                               0170 GR
  1 _padext                            016E GR
  0 _performantdelay                   0000 GR
  0 _player                            0E63 GR
  1 _pop                               016C GR
  0 _rand                              0014 GR
  1 _randA                             0117 GR
  1 _randB                             0118 GR
  1 _randC                             0119 GR
  1 _samp_freq                         0167 GR
  1 _saveC                             0060 GR
  0 _savePattern                       13A2 GR
  1 _savelut                           0110 GR
  1 _seldrum                           0171 GR
    _set_interrupts                    **** GX
    _set_sprite_data                   **** GX
    _set_sprite_tile                   **** GX
  0 _setupDrum                         0650 GR
  1 _squareA                           0000 GR
  1 _squareB                           0010 GR
  1 _squareC                           0020 GR
  1 _storeADA                          013F GR
  1 _storeADB                          0140 GR
  1 _storeADC                          0141 GR
  1 _storeAOA                          013C GR
  1 _storeAOB                          013D GR
  1 _storeAOC                          013E GR
  1 _storeAPA                          0136 GR
  1 _storeAPB                          0138 GR
  1 _storeAPC                          013A GR
  1 _storeASA                          0137 GR
  1 _storeASB                          0139 GR
  1 _storeASC                          013B GR
  1 _storeBDA                          014B GR
  1 _storeBDB                          014C GR
  1 _storeBDC                          014D GR
  1 _storeBOA                          0148 GR
  1 _storeBOB                          0149 GR
  1 _storeBOC                          014A GR
  1 _storeBPA                          0142 GR
  1 _storeBPB                          0144 GR
  1 _storeBPC                          0146 GR
  1 _storeBSA                          0143 GR
  1 _storeBSB                          0145 GR
  1 _storeBSC                          0147 GR
  1 _storeCDA                          0157 GR
  1 _storeCDB                          0158 GR
  1 _storeCDC                          0159 GR
  1 _storeCOA                          0154 GR
  1 _storeCOB                          0155 GR
  1 _storeCOC                          0156 GR
  1 _storeCPA                          014E GR
  1 _storeCPB                          0150 GR
  1 _storeCPC                          0152 GR
  1 _storeCSA                          014F GR
  1 _storeCSB                          0151 GR
  1 _storeCSC                          0153 GR
  1 _storeDDA                          0163 GR
  1 _storeDDB                          0164 GR
  1 _storeDDC                          0165 GR
  1 _storeDOA                          0160 GR
  1 _storeDOB                          0161 GR
  1 _storeDOC                          0162 GR
  1 _storeDPA                          015A GR
  1 _storeDPB                          015C GR
  1 _storeDPC                          015E GR
  1 _storeDSA                          015B GR
  1 _storeDSB                          015D GR
  1 _storeDSC                          015F GR
  1 _swingC                            0050 GR
  0 _sync                              0E11 GR
  1 _syncToDrum                        0125 GR
  1 _tempo                             0168 GR
  0 _tick                              0CDD GR
  0 _tim                               0E7A GR
  1 _todd                              016B GR
  1 _totalStepsA                       0128 GR
  1 _totalStepsB                       012B GR
  1 _totalStepsC                       012E GR
    _wait_vbl_done                     **** GX
    _waitpadup                         **** GX
  1 _watch                             0169 GR
  1 _x                                 011D GR
  1 _xA                                011E GR
  1 _xB                                011F GR
  1 _xC                                0120 GR
  1 _y                                 0116 GR

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size 1BD7   flags 0
   1 _DATA                              size  172   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size  108   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
