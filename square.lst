                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Mon Mar 30 10:48:29 2020
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc555150
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _tim
                             13 	.globl _player
                             14 	.globl _master
                             15 	.globl _slave
                             16 	.globl _tick
                             17 	.globl _decreaseSwing
                             18 	.globl _increaseSwing
                             19 	.globl _decreasePulses
                             20 	.globl _increasePulses
                             21 	.globl _decreaseSteps
                             22 	.globl _increaseSteps
                             23 	.globl _decreaseOffStep
                             24 	.globl _increaseOffStep
                             25 	.globl _setupDrum
                             26 	.globl _updateUI
                             27 	.globl _fillDrumC
                             28 	.globl _fillDrumB
                             29 	.globl _fillDrumA
                             30 	.globl _makeCSound
                             31 	.globl _makeBSound
                             32 	.globl _makeASound
                             33 	.globl _rand
                             34 	.globl _seed
                             35 	.globl _drumC
                             36 	.globl _drumB
                             37 	.globl _drumA
                             38 	.globl _offStepC
                             39 	.globl _offStepB
                             40 	.globl _offStepA
                             41 	.globl _clkC
                             42 	.globl _totalStepsC
                             43 	.globl _numberOfPulsesC
                             44 	.globl _clkB
                             45 	.globl _totalStepsB
                             46 	.globl _numberOfPulsesB
                             47 	.globl _clkA
                             48 	.globl _totalStepsA
                             49 	.globl _numberOfPulsesA
                             50 	.globl _clockToSync
                             51 	.globl _syncToDrum
                             52 	.globl _g
                             53 	.globl _delayC
                             54 	.globl _delayB
                             55 	.globl _delayA
                             56 	.globl _xC
                             57 	.globl _xB
                             58 	.globl _xA
                             59 	.globl _x
                             60 	.globl _f
                             61 	.globl _last
                             62 	.globl _first
                             63 	.globl _randC
                             64 	.globl _randB
                             65 	.globl _randA
                             66 	.globl _y
                             67 	.globl _i
                             68 	.globl _bucket
                             69 	.globl _seldrum
                             70 	.globl _pad
                             71 	.globl _joy
                             72 	.globl _padext
                             73 	.globl _modus
                             74 	.globl _pop
                             75 	.globl _todd
                             76 	.globl _bob
                             77 	.globl _watch
                             78 	.globl _tempo
                             79 	.globl _samp_freq
                             80 ;--------------------------------------------------------
                             81 ; special function registers
                             82 ;--------------------------------------------------------
                             83 ;--------------------------------------------------------
                             84 ; special function bits 
                             85 ;--------------------------------------------------------
                             86 ;--------------------------------------------------------
                             87 ; internal ram data
                             88 ;--------------------------------------------------------
                             89 	.area _DATA
   0000                      90 _current_rand:
   0000                      91 	.ds 1
   0001                      92 _samp_freq::
   0001                      93 	.ds 1
   0002                      94 _tempo::
   0002                      95 	.ds 1
   0003                      96 _watch::
   0003                      97 	.ds 1
   0004                      98 _bob::
   0004                      99 	.ds 1
   0005                     100 _todd::
   0005                     101 	.ds 1
   0006                     102 _pop::
   0006                     103 	.ds 1
   0007                     104 _modus::
   0007                     105 	.ds 1
   0008                     106 _padext::
   0008                     107 	.ds 1
   0009                     108 _joy::
   0009                     109 	.ds 1
   000A                     110 _pad::
   000A                     111 	.ds 1
   000B                     112 _seldrum::
   000B                     113 	.ds 1
   000C                     114 _bucket::
   000C                     115 	.ds 1
   000D                     116 _i::
   000D                     117 	.ds 1
   000E                     118 _y::
   000E                     119 	.ds 1
   000F                     120 _randA::
   000F                     121 	.ds 1
   0010                     122 _randB::
   0010                     123 	.ds 1
   0011                     124 _randC::
   0011                     125 	.ds 1
   0012                     126 _first::
   0012                     127 	.ds 1
   0013                     128 _last::
   0013                     129 	.ds 1
   0014                     130 _f::
   0014                     131 	.ds 1
   0015                     132 _x::
   0015                     133 	.ds 1
   0016                     134 _xA::
   0016                     135 	.ds 1
   0017                     136 _xB::
   0017                     137 	.ds 1
   0018                     138 _xC::
   0018                     139 	.ds 1
   0019                     140 _delayA::
   0019                     141 	.ds 1
   001A                     142 _delayB::
   001A                     143 	.ds 1
   001B                     144 _delayC::
   001B                     145 	.ds 1
   001C                     146 _g::
   001C                     147 	.ds 1
   001D                     148 _syncToDrum::
   001D                     149 	.ds 1
   001E                     150 _clockToSync::
   001E                     151 	.ds 1
   001F                     152 _numberOfPulsesA::
   001F                     153 	.ds 1
   0020                     154 _totalStepsA::
   0020                     155 	.ds 1
   0021                     156 _clkA::
   0021                     157 	.ds 1
   0022                     158 _numberOfPulsesB::
   0022                     159 	.ds 1
   0023                     160 _totalStepsB::
   0023                     161 	.ds 1
   0024                     162 _clkB::
   0024                     163 	.ds 1
   0025                     164 _numberOfPulsesC::
   0025                     165 	.ds 1
   0026                     166 _totalStepsC::
   0026                     167 	.ds 1
   0027                     168 _clkC::
   0027                     169 	.ds 1
   0028                     170 _offStepA::
   0028                     171 	.ds 1
   0029                     172 _offStepB::
   0029                     173 	.ds 1
   002A                     174 _offStepC::
   002A                     175 	.ds 1
   002B                     176 _drumA::
   002B                     177 	.ds 32
   004B                     178 _drumB::
   004B                     179 	.ds 32
   006B                     180 _drumC::
   006B                     181 	.ds 32
   008B                     182 _seed::
   008B                     183 	.ds 2
                            184 ;--------------------------------------------------------
                            185 ; overlayable items in internal ram 
                            186 ;--------------------------------------------------------
                            187 	.area _OVERLAY
                            188 ;--------------------------------------------------------
                            189 ; indirectly addressable internal ram data
                            190 ;--------------------------------------------------------
                            191 	.area _ISEG
                            192 ;--------------------------------------------------------
                            193 ; bit data
                            194 ;--------------------------------------------------------
                            195 	.area _BSEG
                            196 ;--------------------------------------------------------
                            197 ; external ram data
                            198 ;--------------------------------------------------------
                            199 	.area _XSEG
                            200 ;--------------------------------------------------------
                            201 ; global & static initialisations
                            202 ;--------------------------------------------------------
                            203 	.area _GSINIT
                            204 	.area _GSFINAL
                            205 	.area _GSINIT
                            206 ;	square.c 53
                            207 ;	square.c 899
                            208 ;	genArrayInit
                            209 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 2B 00            210 	ld	hl,#_drumA
   0003 CD 00 00            211 	call	__initrleblock
   0006 E0 00               212 	.db	-32,0x00
   0008 00                  213 	.db	0
                            214 ;	square.c 54
                            215 ;	square.c 899
                            216 ;	genArrayInit
                            217 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0009 21 4B 00            218 	ld	hl,#_drumB
   000C CD 00 00            219 	call	__initrleblock
   000F E0 00               220 	.db	-32,0x00
   0011 00                  221 	.db	0
                            222 ;	square.c 55
                            223 ;	square.c 899
                            224 ;	genArrayInit
                            225 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0012 21 6B 00            226 	ld	hl,#_drumC
   0015 CD 00 00            227 	call	__initrleblock
   0018 E0 00               228 	.db	-32,0x00
   001A 00                  229 	.db	0
                            230 ;--------------------------------------------------------
                            231 ; Home
                            232 ;--------------------------------------------------------
                            233 	.area _HOME
                            234 	.area _CODE
                            235 ;--------------------------------------------------------
                            236 ; code
                            237 ;--------------------------------------------------------
                            238 	.area _CODE
                            239 ;	square.c 59
                            240 ;	genLabel
                            241 ;	genFunction
                            242 ;	---------------------------------
                            243 ; Function rand
                            244 ; ---------------------------------
   0000                     245 ___rand_start:
   0000                     246 _rand:
   0000 E8 FE               247 	lda	sp,-2(sp)
                            248 ;	square.c 62
                            249 ;	genCall
                            250 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0002 CD 00 00            251 	call	_clock
   0005 42                  252 	ld	b,d
   0006 4B                  253 	ld	c,e
                            254 ;	genCast
                            255 ;	AOP_HL for _current_rand
                            256 ;	AOP_STK for _rand_sloc0_1_0
   0007 21 00 00            257 	ld	hl,#_current_rand
   000A 7E                  258 	ld	a,(hl)
   000B F8 00               259 	lda	hl,0(sp)
   000D 22                  260 	ld	(hl+),a
   000E 36 00               261 	ld	(hl),#0x00
                            262 ;	genIpush
                            263 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0010 C5                  264 	push	bc
                            265 ;	genIpush
                            266 ;	AOP_STK for _rand_sloc0_1_0
   0011 2B                  267 	dec	hl
   0012 2A                  268 	ld	a,(hl+)
   0013 66                  269 	ld	h,(hl)
   0014 6F                  270 	ld	l,a
   0015 E5                  271 	push	hl
                            272 ;	genCall
   0016 CD 00 00            273 	call	__muluint_rrx_s
   0019 42                  274 	ld	b,d
   001A 4B                  275 	ld	c,e
   001B E8 04               276 	lda	sp,4(sp)
                            277 ;	genPlus
                            278 ;	genPlusIncr
                            279 ;	Can't optimise plus by inc, falling back to the normal way
   001D 79                  280 	ld	a,c
   001E C6 7B               281 	add	a,#0x7B
   0020 4F                  282 	ld	c,a
   0021 78                  283 	ld	a,b
   0022 CE 00               284 	adc	a,#0x00
                            285 ;	genAnd
   0024 47                  286 	ld	b,a
   0025 E6 07               287 	and	a,#0x07
   0027 47                  288 	ld	b,a
                            289 ;	genCast
                            290 ;	AOP_HL for _current_rand
   0028 21 00 00            291 	ld	hl,#_current_rand
   002B 71                  292 	ld	(hl),c
                            293 ;	square.c 63
                            294 ;	genRet
                            295 ;	AOP_HL for _current_rand
   002C 5E                  296 	ld	e,(hl)
                            297 ;	genLabel
   002D                     298 00101$:
                            299 ;	genEndFunction
   002D E8 02               300 	lda	sp,2(sp)
   002F C9                  301 	ret
   0030                     302 ___rand_end:
                            303 ;	square.c 66
                            304 ;	genLabel
                            305 ;	genFunction
                            306 ;	---------------------------------
                            307 ; Function makeASound
                            308 ; ---------------------------------
   0030                     309 ___makeASound_start:
   0030                     310 _makeASound:
   0030 E8 FD               311 	lda	sp,-3(sp)
                            312 ;	square.c 68
                            313 ;	genAssign
   0032 01 10 FF            314 	ld	bc,#0xFF10
                            315 ;	genAssign (pointer)
   0035 3E 29               316 	ld	a,#0x29
   0037 02                  317 	ld	(bc),a
                            318 ;	square.c 69
                            319 ;	genAssign
   0038 01 11 FF            320 	ld	bc,#0xFF11
                            321 ;	genAssign (pointer)
   003B 3E 4F               322 	ld	a,#0x4F
   003D 02                  323 	ld	(bc),a
                            324 ;	square.c 70
                            325 ;	genAssign
   003E 01 12 FF            326 	ld	bc,#0xFF12
                            327 ;	genAssign (pointer)
   0041 3E F1               328 	ld	a,#0xF1
   0043 02                  329 	ld	(bc),a
                            330 ;	square.c 71
                            331 ;	genAssign
   0044 01 13 FF            332 	ld	bc,#0xFF13
                            333 ;	genAssign (pointer)
   0047 3E 6F               334 	ld	a,#0x6F
   0049 02                  335 	ld	(bc),a
                            336 ;	square.c 72
                            337 ;	genAssign
   004A 01 14 FF            338 	ld	bc,#0xFF14
                            339 ;	genAssign (pointer)
   004D 3E C4               340 	ld	a,#0xC4
   004F 02                  341 	ld	(bc),a
                            342 ;	square.c 73
                            343 ;	genAssign
   0050 01 25 FF            344 	ld	bc,#0xFF25
                            345 ;	genAssign
                            346 ;	AOP_STK for _makeASound_sloc0_1_0
   0053 F8 01               347 	lda	hl,1(sp)
   0055 36 25               348 	ld	(hl),#0x25
   0057 23                  349 	inc	hl
   0058 36 FF               350 	ld	(hl),#0xFF
                            351 ;	genPointerGet
                            352 ;	AOP_STK for _makeASound_sloc0_1_0
                            353 ;	AOP_STK for _makeASound_sloc1_1_0
   005A 2B                  354 	dec	hl
   005B 5E                  355 	ld	e,(hl)
   005C 23                  356 	inc	hl
   005D 56                  357 	ld	d,(hl)
   005E 1A                  358 	ld	a,(de)
   005F 2B                  359 	dec	hl
   0060 2B                  360 	dec	hl
                            361 ;	genOr
                            362 ;	AOP_STK for _makeASound_sloc1_1_0
   0061 77                  363 	ld      (hl),a
   0062 7F                  364 	ld      a,a
   0063 F6 FF               365 	or	a,#0xFF
                            366 ;	genAssign (pointer)
   0065 02                  367 	ld	(bc),a
                            368 ;	genLabel
   0066                     369 00101$:
                            370 ;	genEndFunction
   0066 E8 03               371 	lda	sp,3(sp)
   0068 C9                  372 	ret
   0069                     373 ___makeASound_end:
                            374 ;	square.c 76
                            375 ;	genLabel
                            376 ;	genFunction
                            377 ;	---------------------------------
                            378 ; Function makeBSound
                            379 ; ---------------------------------
   0069                     380 ___makeBSound_start:
   0069                     381 _makeBSound:
   0069 E8 FD               382 	lda	sp,-3(sp)
                            383 ;	square.c 78
                            384 ;	genAssign
   006B 01 16 FF            385 	ld	bc,#0xFF16
                            386 ;	genAssign (pointer)
   006E 3E 4A               387 	ld	a,#0x4A
   0070 02                  388 	ld	(bc),a
                            389 ;	square.c 79
                            390 ;	genAssign
   0071 01 17 FF            391 	ld	bc,#0xFF17
                            392 ;	genAssign (pointer)
   0074 3E 15               393 	ld	a,#0x15
   0076 02                  394 	ld	(bc),a
                            395 ;	square.c 80
                            396 ;	genAssign
   0077 01 18 FF            397 	ld	bc,#0xFF18
                            398 ;	genAssign (pointer)
   007A 3E 27               399 	ld	a,#0x27
   007C 02                  400 	ld	(bc),a
                            401 ;	square.c 81
                            402 ;	genAssign
   007D 01 19 FF            403 	ld	bc,#0xFF19
                            404 ;	genAssign (pointer)
   0080 3E C7               405 	ld	a,#0xC7
   0082 02                  406 	ld	(bc),a
                            407 ;	square.c 82
                            408 ;	genAssign
   0083 01 25 FF            409 	ld	bc,#0xFF25
                            410 ;	genAssign
                            411 ;	AOP_STK for _makeBSound_sloc0_1_0
   0086 F8 01               412 	lda	hl,1(sp)
   0088 36 25               413 	ld	(hl),#0x25
   008A 23                  414 	inc	hl
   008B 36 FF               415 	ld	(hl),#0xFF
                            416 ;	genPointerGet
                            417 ;	AOP_STK for _makeBSound_sloc0_1_0
                            418 ;	AOP_STK for _makeBSound_sloc1_1_0
   008D 2B                  419 	dec	hl
   008E 5E                  420 	ld	e,(hl)
   008F 23                  421 	inc	hl
   0090 56                  422 	ld	d,(hl)
   0091 1A                  423 	ld	a,(de)
   0092 2B                  424 	dec	hl
   0093 2B                  425 	dec	hl
                            426 ;	genOr
                            427 ;	AOP_STK for _makeBSound_sloc1_1_0
   0094 77                  428 	ld      (hl),a
   0095 7F                  429 	ld      a,a
   0096 F6 FF               430 	or	a,#0xFF
                            431 ;	genAssign (pointer)
   0098 02                  432 	ld	(bc),a
                            433 ;	genLabel
   0099                     434 00101$:
                            435 ;	genEndFunction
   0099 E8 03               436 	lda	sp,3(sp)
   009B C9                  437 	ret
   009C                     438 ___makeBSound_end:
                            439 ;	square.c 85
                            440 ;	genLabel
                            441 ;	genFunction
                            442 ;	---------------------------------
                            443 ; Function makeCSound
                            444 ; ---------------------------------
   009C                     445 ___makeCSound_start:
   009C                     446 _makeCSound:
   009C E8 FD               447 	lda	sp,-3(sp)
                            448 ;	square.c 87
                            449 ;	genAssign
   009E 01 20 FF            450 	ld	bc,#0xFF20
                            451 ;	genAssign (pointer)
   00A1 3E 10               452 	ld	a,#0x10
   00A3 02                  453 	ld	(bc),a
                            454 ;	square.c 88
                            455 ;	genAssign
   00A4 01 21 FF            456 	ld	bc,#0xFF21
                            457 ;	genAssign (pointer)
   00A7 3E 24               458 	ld	a,#0x24
   00A9 02                  459 	ld	(bc),a
                            460 ;	square.c 89
                            461 ;	genAssign
   00AA 01 22 FF            462 	ld	bc,#0xFF22
                            463 ;	genAssign (pointer)
   00AD 3E 31               464 	ld	a,#0x31
   00AF 02                  465 	ld	(bc),a
                            466 ;	square.c 90
                            467 ;	genAssign
   00B0 01 23 FF            468 	ld	bc,#0xFF23
                            469 ;	genAssign (pointer)
   00B3 3E C0               470 	ld	a,#0xC0
   00B5 02                  471 	ld	(bc),a
                            472 ;	square.c 91
                            473 ;	genAssign
   00B6 01 25 FF            474 	ld	bc,#0xFF25
                            475 ;	genAssign
                            476 ;	AOP_STK for _makeCSound_sloc0_1_0
   00B9 F8 01               477 	lda	hl,1(sp)
   00BB 36 25               478 	ld	(hl),#0x25
   00BD 23                  479 	inc	hl
   00BE 36 FF               480 	ld	(hl),#0xFF
                            481 ;	genPointerGet
                            482 ;	AOP_STK for _makeCSound_sloc0_1_0
                            483 ;	AOP_STK for _makeCSound_sloc1_1_0
   00C0 2B                  484 	dec	hl
   00C1 5E                  485 	ld	e,(hl)
   00C2 23                  486 	inc	hl
   00C3 56                  487 	ld	d,(hl)
   00C4 1A                  488 	ld	a,(de)
   00C5 2B                  489 	dec	hl
   00C6 2B                  490 	dec	hl
                            491 ;	genOr
                            492 ;	AOP_STK for _makeCSound_sloc1_1_0
   00C7 77                  493 	ld      (hl),a
   00C8 7F                  494 	ld      a,a
   00C9 F6 FF               495 	or	a,#0xFF
                            496 ;	genAssign (pointer)
   00CB 02                  497 	ld	(bc),a
                            498 ;	genLabel
   00CC                     499 00101$:
                            500 ;	genEndFunction
   00CC E8 03               501 	lda	sp,3(sp)
   00CE C9                  502 	ret
   00CF                     503 ___makeCSound_end:
                            504 ;	square.c 96
                            505 ;	genLabel
                            506 ;	genFunction
                            507 ;	---------------------------------
                            508 ; Function fillDrumA
                            509 ; ---------------------------------
   00CF                     510 ___fillDrumA_start:
   00CF                     511 _fillDrumA:
   00CF E8 FA               512 	lda	sp,-6(sp)
                            513 ;	square.c 97
                            514 ;	genAssign
                            515 ;	AOP_HL for _bucket
   00D1 21 0C 00            516 	ld	hl,#_bucket
   00D4 36 00               517 	ld	(hl),#0x00
                            518 ;	square.c 98
                            519 ;	genAssign
                            520 ;	AOP_HL for _i
   00D6 21 0D 00            521 	ld	hl,#_i
   00D9 36 00               522 	ld	(hl),#0x00
                            523 ;	genLabel
   00DB                     524 00118$:
                            525 ;	genCmpLt
                            526 ;	AOP_HL for _i
                            527 ;	AOP_HL for _totalStepsA
   00DB 21 0D 00            528 	ld	hl,#_i
   00DE 7E                  529 	ld	a,(hl)
   00DF 21 20 00            530 	ld	hl,#_totalStepsA
   00E2 96                  531 	sub	a,(hl)
   00E3 D2 3C 01            532 	jp	nc,00121$
                            533 ;	square.c 100
                            534 ;	genPlus
                            535 ;	AOP_HL for _bucket
                            536 ;	AOP_HL for _numberOfPulsesA
                            537 ;	Can't optimise plus by inc, falling back to the normal way
   00E6 21 0C 00            538 	ld	hl,#_bucket
   00E9 7E                  539 	ld	a,(hl)
   00EA 21 1F 00            540 	ld	hl,#_numberOfPulsesA
   00ED 86                  541 	add	a,(hl)
   00EE 21 0C 00            542 	ld	hl,#_bucket
   00F1 77                  543 	ld	(hl),a
                            544 ;	square.c 101
                            545 ;	genMinus
                            546 ;	AOP_HL for _totalStepsA
   00F2 21 20 00            547 	ld	hl,#_totalStepsA
   00F5 7E                  548 	ld	a,(hl)
   00F6 C6 FF               549 	add	a,#0xFF
                            550 ;	genCmpGt
                            551 ;	AOP_HL for _bucket
   00F8 4F                  552 	ld	c,a
   00F9 21 0C 00            553 	ld	hl,#_bucket
   00FC 96                  554 	sub	a,(hl)
   00FD D2 1B 01            555 	jp	nc,00104$
                            556 ;	square.c 103
                            557 ;	genMinus
                            558 ;	AOP_HL for _bucket
                            559 ;	AOP_HL for _totalStepsA
   0100 7E                  560 	ld	a,(hl)
   0101 21 20 00            561 	ld	hl,#_totalStepsA
   0104 96                  562 	sub	a,(hl)
   0105 21 0C 00            563 	ld	hl,#_bucket
   0108 77                  564 	ld	(hl),a
                            565 ;	square.c 104
                            566 ;	genPlus
                            567 ;	AOP_HL for _i
                            568 ;	Can't optimise plus by inc, falling back to the normal way
   0109 3E 2B               569 	ld	a,#<_drumA
   010B 21 0D 00            570 	ld	hl,#_i
   010E 86                  571 	add	a,(hl)
   010F 4F                  572 	ld	c,a
   0110 3E 00               573 	ld	a,#>_drumA
   0112 CE 00               574 	adc	a,#0x00
   0114 47                  575 	ld	b,a
                            576 ;	genAssign (pointer)
   0115 3E 01               577 	ld	a,#0x01
   0117 02                  578 	ld	(bc),a
                            579 ;	genGoto
   0118 C3 35 01            580 	jp	00120$
                            581 ;	genLabel
   011B                     582 00104$:
                            583 ;	square.c 106
                            584 ;	genCmpLt
                            585 ;	AOP_HL for _bucket
                            586 ;	AOP_HL for _totalStepsA
   011B 21 0C 00            587 	ld	hl,#_bucket
   011E 7E                  588 	ld	a,(hl)
   011F 21 20 00            589 	ld	hl,#_totalStepsA
   0122 96                  590 	sub	a,(hl)
   0123 D2 35 01            591 	jp	nc,00120$
                            592 ;	square.c 108
                            593 ;	genPlus
                            594 ;	AOP_HL for _i
                            595 ;	Can't optimise plus by inc, falling back to the normal way
   0126 3E 2B               596 	ld	a,#<_drumA
   0128 21 0D 00            597 	ld	hl,#_i
   012B 86                  598 	add	a,(hl)
   012C 4F                  599 	ld	c,a
   012D 3E 00               600 	ld	a,#>_drumA
   012F CE 00               601 	adc	a,#0x00
   0131 47                  602 	ld	b,a
                            603 ;	genAssign (pointer)
   0132 3E 00               604 	ld	a,#0x00
   0134 02                  605 	ld	(bc),a
                            606 ;	genLabel
   0135                     607 00120$:
                            608 ;	square.c 98
                            609 ;	genPlus
                            610 ;	AOP_HL for _i
                            611 ;	genPlusIncr
   0135 21 0D 00            612 	ld	hl,#_i
   0138 34                  613 	inc	(hl)
                            614 ;	genGoto
   0139 C3 DB 00            615 	jp	00118$
                            616 ;	genLabel
   013C                     617 00121$:
                            618 ;	square.c 111
                            619 ;	genPointerGet
                            620 ;	AOP_HL for _first
   013C 11 2B 00            621 	ld	de,#_drumA
   013F 1A                  622 	ld	a,(de)
   0140 21 12 00            623 	ld	hl,#_first
   0143 77                  624 	ld	(hl),a
                            625 ;	square.c 112
                            626 ;	genIpush
                            627 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0144 21 9E 02            628 	ld	hl,#__str_0
   0147 E5                  629 	push	hl
                            630 ;	genCall
   0148 CD 00 00            631 	call	_printf
   014B E8 02               632 	lda	sp,2(sp)
                            633 ;	square.c 113
                            634 ;	genCmpGt
                            635 ;	AOP_HL for _numberOfPulsesA
                            636 ;	AOP_STK for _fillDrumA_sloc3_1_0
   014D 3E 00               637 	ld	a,#0x00
   014F 21 1F 00            638 	ld	hl,#_numberOfPulsesA
   0152 96                  639 	sub	a,(hl)
   0153 3E 00               640 	ld	a,#0x00
   0155 17                  641 	rla
   0156 F8 00               642 	lda	hl,0(sp)
   0158 77                  643 	ld	(hl),a
                            644 ;	genIfx
                            645 ;	AOP_STK for _fillDrumA_sloc3_1_0
   0159 AF                  646 	xor	a,a
   015A B6                  647 	or	a,(hl)
   015B CA EB 01            648 	jp	z,00113$
                            649 ;	genCmpEq
                            650 ;	AOP_HL for _first
                            651 ; genCmpEq: left 1, right 1, result 0
   015E 21 12 00            652 	ld	hl,#_first
   0161 7E                  653 	ld	a,(hl)
   0162 FE 01               654 	cp	a,#0x01
   0164 CA EB 01            655 	jp	z,00113$
   0167                     656 00153$:
                            657 ;	square.c 115
                            658 ;	genAssign
                            659 ;	AOP_HL for _f
   0167 21 14 00            660 	ld	hl,#_f
   016A 36 00               661 	ld	(hl),#0x00
                            662 ;	genLabel
   016C                     663 00108$:
                            664 ;	genCmpLt
                            665 ;	AOP_HL for _f
                            666 ;	AOP_HL for _totalStepsA
   016C 21 14 00            667 	ld	hl,#_f
   016F 7E                  668 	ld	a,(hl)
   0170 21 20 00            669 	ld	hl,#_totalStepsA
   0173 96                  670 	sub	a,(hl)
   0174 D2 EB 01            671 	jp	nc,00113$
                            672 ;	square.c 116
                            673 ;	genAssign
                            674 ;	AOP_HL for _x
   0177 21 15 00            675 	ld	hl,#_x
   017A 36 00               676 	ld	(hl),#0x00
                            677 ;	genLabel
   017C                     678 00122$:
                            679 ;	genCmpLt
                            680 ;	AOP_HL for _x
                            681 ;	AOP_HL for _totalStepsA
   017C 21 15 00            682 	ld	hl,#_x
   017F 7E                  683 	ld	a,(hl)
   0180 21 20 00            684 	ld	hl,#_totalStepsA
   0183 96                  685 	sub	a,(hl)
   0184 3E 00               686 	ld	a,#0x00
   0186 17                  687 	rla
   0187 47                  688 	ld	b,a
                            689 ;	genIfx
   0188 AF                  690 	xor	a,a
   0189 B0                  691 	or	a,b
   018A CA C5 01            692 	jp	z,00125$
                            693 ;	square.c 117
                            694 ;	genPlus
                            695 ;	AOP_HL for _x
                            696 ;	AOP_STK for _fillDrumA_sloc0_1_0
                            697 ;	Can't optimise plus by inc, falling back to the normal way
   018D 11 2B 00            698 	ld	de,#_drumA
   0190 21 15 00            699 	ld	hl,#_x
   0193 6E                  700 	ld	l,(hl)
   0194 26 00               701 	ld	h,#0x00
   0196 19                  702 	add	hl,de
   0197 7D                  703 	ld	a,l
   0198 54                  704 	ld	d,h
   0199 F8 04               705 	lda	hl,4(sp)
   019B 22                  706 	ld	(hl+),a
   019C 72                  707 	ld	(hl),d
                            708 ;	genPlus
                            709 ;	AOP_HL for _x
                            710 ;	AOP_STK for _fillDrumA_sloc1_1_0
                            711 ;	genPlusIncr
                            712 ;	Can't optimise plus by inc, falling back to the normal way
   019D 21 15 00            713 	ld	hl,#_x
   01A0 7E                  714 	ld	a,(hl)
   01A1 C6 01               715 	add	a,#0x01
   01A3 F8 03               716 	lda	hl,3(sp)
   01A5 77                  717 	ld	(hl),a
                            718 ;	genPlus
                            719 ;	AOP_STK for _fillDrumA_sloc1_1_0
                            720 ;	AOP_STK for _fillDrumA_sloc2_1_0
                            721 ;	Can't optimise plus by inc, falling back to the normal way
   01A6 11 2B 00            722 	ld	de,#_drumA
   01A9 6E                  723 	ld	l,(hl)
   01AA 26 00               724 	ld	h,#0x00
   01AC 19                  725 	add	hl,de
   01AD 7D                  726 	ld	a,l
   01AE 54                  727 	ld	d,h
   01AF F8 01               728 	lda	hl,1(sp)
                            729 ;	genPointerGet
                            730 ;	AOP_STK for _fillDrumA_sloc2_1_0
   01B1 22                  731 	ld	(hl+),a
   01B2 72                  732 	ld	(hl),d
   01B3 5F                  733 	ld	e,a
   01B4 1A                  734 	ld	a,(de)
                            735 ;	genAssign (pointer)
                            736 ;	AOP_STK for _fillDrumA_sloc0_1_0
   01B5 23                  737 	inc	hl
   01B6 23                  738 	inc	hl
   01B7 5E                  739 	ld	e,(hl)
   01B8 23                  740 	inc	hl
   01B9 56                  741 	ld	d,(hl)
   01BA 12                  742 	ld	(de),a
                            743 ;	square.c 116
                            744 ;	genAssign
                            745 ;	AOP_STK for _fillDrumA_sloc1_1_0
   01BB 2B                  746 	dec	hl
   01BC 2B                  747 	dec	hl
   01BD 4E                  748 	ld	c,(hl)
                            749 ;	genAssign
                            750 ;	AOP_HL for _x
   01BE 21 15 00            751 	ld	hl,#_x
   01C1 71                  752 	ld	(hl),c
                            753 ;	genGoto
   01C2 C3 7C 01            754 	jp	00122$
                            755 ;	genLabel
   01C5                     756 00125$:
                            757 ;	square.c 119
                            758 ;	genMinus
                            759 ;	AOP_HL for _totalStepsA
   01C5 21 20 00            760 	ld	hl,#_totalStepsA
   01C8 7E                  761 	ld	a,(hl)
   01C9 C6 FF               762 	add	a,#0xFF
   01CB 4F                  763 	ld	c,a
                            764 ;	genPlus
                            765 ;	Can't optimise plus by inc, falling back to the normal way
   01CC 3E 2B               766 	ld	a,#<_drumA
   01CE 81                  767 	add	a,c
   01CF 4F                  768 	ld	c,a
   01D0 3E 00               769 	ld	a,#>_drumA
   01D2 CE 00               770 	adc	a,#0x00
   01D4 47                  771 	ld	b,a
                            772 ;	genAssign (pointer)
                            773 ;	AOP_HL for _first
   01D5 21 12 00            774 	ld	hl,#_first
   01D8 7E                  775 	ld	a,(hl)
   01D9 02                  776 	ld	(bc),a
                            777 ;	square.c 120
                            778 ;	genPointerGet
   01DA 11 2B 00            779 	ld	de,#_drumA
   01DD 1A                  780 	ld	a,(de)
                            781 ;	genCmpEq
                            782 ; genCmpEq: left 1, right 1, result 0
   01DE 4F                  783 	ld	c,a
   01DF FE 01               784 	cp	a,#0x01
   01E1 CA EB 01            785 	jp	z,00113$
   01E4                     786 00154$:
                            787 ;	square.c 115
                            788 ;	genPlus
                            789 ;	AOP_HL for _f
                            790 ;	genPlusIncr
   01E4 21 14 00            791 	ld	hl,#_f
   01E7 34                  792 	inc	(hl)
                            793 ;	genGoto
   01E8 C3 6C 01            794 	jp	00108$
                            795 ;	genLabel
   01EB                     796 00113$:
                            797 ;	square.c 128
                            798 ;	genMinus
                            799 ;	AOP_HL for _totalStepsA
   01EB 21 20 00            800 	ld	hl,#_totalStepsA
   01EE 7E                  801 	ld	a,(hl)
   01EF C6 FF               802 	add	a,#0xFF
   01F1 4F                  803 	ld	c,a
                            804 ;	genPlus
                            805 ;	Can't optimise plus by inc, falling back to the normal way
   01F2 3E 2B               806 	ld	a,#<_drumA
   01F4 81                  807 	add	a,c
   01F5 4F                  808 	ld	c,a
   01F6 3E 00               809 	ld	a,#>_drumA
   01F8 CE 00               810 	adc	a,#0x00
   01FA 47                  811 	ld	b,a
                            812 ;	genPointerGet
                            813 ;	AOP_HL for _last
   01FB 0A                  814 	ld	a,(bc)
   01FC 21 13 00            815 	ld	hl,#_last
   01FF 77                  816 	ld	(hl),a
                            817 ;	square.c 129
                            818 ;	genIfx
                            819 ;	AOP_STK for _fillDrumA_sloc3_1_0
   0200 AF                  820 	xor	a,a
   0201 F8 00               821 	lda	hl,0(sp)
   0203 B6                  822 	or	a,(hl)
   0204 CA 7B 02            823 	jp	z,00116$
                            824 ;	genCmpEq
                            825 ;	AOP_HL for _offStepA
                            826 ; genCmpEq: left 1, right 1, result 0
   0207 21 28 00            827 	ld	hl,#_offStepA
   020A 7E                  828 	ld	a,(hl)
   020B B7                  829 	or	a,a
   020C CA 7B 02            830 	jp	z,00116$
   020F                     831 00155$:
                            832 ;	square.c 131
                            833 ;	genAssign
                            834 ;	AOP_HL for _f
   020F 21 14 00            835 	ld	hl,#_f
   0212 36 00               836 	ld	(hl),#0x00
                            837 ;	genLabel
   0214                     838 00130$:
                            839 ;	genCmpLt
                            840 ;	AOP_HL for _f
                            841 ;	AOP_HL for _offStepA
   0214 21 14 00            842 	ld	hl,#_f
   0217 7E                  843 	ld	a,(hl)
   0218 21 28 00            844 	ld	hl,#_offStepA
   021B 96                  845 	sub	a,(hl)
   021C D2 7B 02            846 	jp	nc,00116$
                            847 ;	square.c 132
                            848 ;	genAssign
                            849 ;	AOP_HL for _totalStepsA
                            850 ;	AOP_HL for _x
   021F 21 20 00            851 	ld	hl,#_totalStepsA
   0222 7E                  852 	ld	a,(hl)
   0223 21 15 00            853 	ld	hl,#_x
   0226 77                  854 	ld	(hl),a
                            855 ;	genLabel
   0227                     856 00126$:
                            857 ;	genCmpGt
                            858 ;	AOP_HL for _x
                            859 ;	AOP_STK for _fillDrumA_sloc3_1_0
   0227 3E 00               860 	ld	a,#0x00
   0229 21 15 00            861 	ld	hl,#_x
   022C 96                  862 	sub	a,(hl)
   022D 3E 00               863 	ld	a,#0x00
   022F 17                  864 	rla
   0230 F8 00               865 	lda	hl,0(sp)
   0232 77                  866 	ld	(hl),a
                            867 ;	genIfx
                            868 ;	AOP_STK for _fillDrumA_sloc3_1_0
   0233 AF                  869 	xor	a,a
   0234 B6                  870 	or	a,(hl)
   0235 CA 6C 02            871 	jp	z,00129$
                            872 ;	square.c 133
                            873 ;	genPlus
                            874 ;	AOP_HL for _x
                            875 ;	AOP_STK for _fillDrumA_sloc2_1_0
                            876 ;	Can't optimise plus by inc, falling back to the normal way
   0238 11 2B 00            877 	ld	de,#_drumA
   023B 21 15 00            878 	ld	hl,#_x
   023E 6E                  879 	ld	l,(hl)
   023F 26 00               880 	ld	h,#0x00
   0241 19                  881 	add	hl,de
   0242 7D                  882 	ld	a,l
   0243 54                  883 	ld	d,h
   0244 F8 01               884 	lda	hl,1(sp)
   0246 22                  885 	ld	(hl+),a
   0247 72                  886 	ld	(hl),d
                            887 ;	genMinus
                            888 ;	AOP_HL for _x
   0248 21 15 00            889 	ld	hl,#_x
   024B 7E                  890 	ld	a,(hl)
   024C C6 FF               891 	add	a,#0xFF
   024E 47                  892 	ld	b,a
                            893 ;	genPlus
                            894 ;	AOP_STK for _fillDrumA_sloc0_1_0
                            895 ;	Can't optimise plus by inc, falling back to the normal way
   024F 11 2B 00            896 	ld	de,#_drumA
   0252 68                  897 	ld	l,b
   0253 26 00               898 	ld	h,#0x00
   0255 19                  899 	add	hl,de
   0256 7D                  900 	ld	a,l
   0257 54                  901 	ld	d,h
   0258 F8 04               902 	lda	hl,4(sp)
                            903 ;	genPointerGet
                            904 ;	AOP_STK for _fillDrumA_sloc0_1_0
   025A 22                  905 	ld	(hl+),a
   025B 72                  906 	ld	(hl),d
   025C 5F                  907 	ld	e,a
   025D 1A                  908 	ld	a,(de)
                            909 ;	genAssign (pointer)
                            910 ;	AOP_STK for _fillDrumA_sloc2_1_0
   025E F8 01               911 	lda	hl,1(sp)
   0260 5E                  912 	ld	e,(hl)
   0261 23                  913 	inc	hl
   0262 56                  914 	ld	d,(hl)
   0263 12                  915 	ld	(de),a
                            916 ;	square.c 132
                            917 ;	genAssign
   0264 48                  918 	ld	c,b
                            919 ;	genAssign
                            920 ;	AOP_HL for _x
   0265 21 15 00            921 	ld	hl,#_x
   0268 71                  922 	ld	(hl),c
                            923 ;	genGoto
   0269 C3 27 02            924 	jp	00126$
                            925 ;	genLabel
   026C                     926 00129$:
                            927 ;	square.c 135
                            928 ;	genAssign (pointer)
                            929 ;	AOP_HL for _last
   026C 11 2B 00            930 	ld	de,#_drumA
   026F 21 13 00            931 	ld	hl,#_last
   0272 7E                  932 	ld	a,(hl)
   0273 12                  933 	ld	(de),a
                            934 ;	square.c 131
                            935 ;	genPlus
                            936 ;	AOP_HL for _f
                            937 ;	genPlusIncr
   0274 21 14 00            938 	ld	hl,#_f
   0277 34                  939 	inc	(hl)
                            940 ;	genGoto
   0278 C3 14 02            941 	jp	00130$
                            942 ;	genLabel
   027B                     943 00116$:
                            944 ;	square.c 138
                            945 ;	genCall
                            946 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   027B CD 00 00            947 	call	_rand
                            948 ;	AOP_HL for _randA
   027E 21 0F 00            949 	ld	hl,#_randA
   0281 73                  950 	ld	(hl),e
                            951 ;	square.c 139
                            952 ;	genIpush
                            953 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0282 3E 1E               954 	ld	a,#0x1E
   0284 F5                  955 	push	af
   0285 33                  956 	inc	sp
                            957 ;	genIpush
                            958 ;	AOP_HL for _randA
   0286 21 0F 00            959 	ld	hl,#_randA
   0289 7E                  960 	ld	a,(hl)
   028A F5                  961 	push	af
   028B 33                  962 	inc	sp
                            963 ;	genCall
   028C CD 00 00            964 	call	__moduchar_rrx_s
   028F 4B                  965 	ld	c,e
   0290 E8 02               966 	lda	sp,2(sp)
                            967 ;	genPlus
                            968 ;	AOP_HL for _delayA
                            969 ;	AOP_HL for _xA
                            970 ;	Can't optimise plus by inc, falling back to the normal way
   0292 21 19 00            971 	ld	hl,#_delayA
   0295 7E                  972 	ld	a,(hl)
   0296 81                  973 	add	a,c
   0297 21 16 00            974 	ld	hl,#_xA
   029A 77                  975 	ld	(hl),a
                            976 ;	genLabel
   029B                     977 00134$:
                            978 ;	genEndFunction
   029B E8 06               979 	lda	sp,6(sp)
   029D C9                  980 	ret
   029E                     981 ___fillDrumA_end:
   029E                     982 __str_0:
   029E 00                  983 	.db 0x00
                            984 ;	square.c 143
                            985 ;	genLabel
                            986 ;	genFunction
                            987 ;	---------------------------------
                            988 ; Function fillDrumB
                            989 ; ---------------------------------
   029F                     990 ___fillDrumB_start:
   029F                     991 _fillDrumB:
   029F E8 FA               992 	lda	sp,-6(sp)
                            993 ;	square.c 144
                            994 ;	genAssign
                            995 ;	AOP_HL for _bucket
   02A1 21 0C 00            996 	ld	hl,#_bucket
   02A4 36 00               997 	ld	(hl),#0x00
                            998 ;	square.c 145
                            999 ;	genAssign
                           1000 ;	AOP_HL for _i
   02A6 21 0D 00           1001 	ld	hl,#_i
   02A9 36 00              1002 	ld	(hl),#0x00
                           1003 ;	genLabel
   02AB                    1004 00118$:
                           1005 ;	genCmpLt
                           1006 ;	AOP_HL for _i
                           1007 ;	AOP_HL for _totalStepsB
   02AB 21 0D 00           1008 	ld	hl,#_i
   02AE 7E                 1009 	ld	a,(hl)
   02AF 21 23 00           1010 	ld	hl,#_totalStepsB
   02B2 96                 1011 	sub	a,(hl)
   02B3 D2 0C 03           1012 	jp	nc,00121$
                           1013 ;	square.c 147
                           1014 ;	genPlus
                           1015 ;	AOP_HL for _bucket
                           1016 ;	AOP_HL for _numberOfPulsesB
                           1017 ;	Can't optimise plus by inc, falling back to the normal way
   02B6 21 0C 00           1018 	ld	hl,#_bucket
   02B9 7E                 1019 	ld	a,(hl)
   02BA 21 22 00           1020 	ld	hl,#_numberOfPulsesB
   02BD 86                 1021 	add	a,(hl)
   02BE 21 0C 00           1022 	ld	hl,#_bucket
   02C1 77                 1023 	ld	(hl),a
                           1024 ;	square.c 148
                           1025 ;	genMinus
                           1026 ;	AOP_HL for _totalStepsB
   02C2 21 23 00           1027 	ld	hl,#_totalStepsB
   02C5 7E                 1028 	ld	a,(hl)
   02C6 C6 FF              1029 	add	a,#0xFF
                           1030 ;	genCmpGt
                           1031 ;	AOP_HL for _bucket
   02C8 4F                 1032 	ld	c,a
   02C9 21 0C 00           1033 	ld	hl,#_bucket
   02CC 96                 1034 	sub	a,(hl)
   02CD D2 EB 02           1035 	jp	nc,00104$
                           1036 ;	square.c 150
                           1037 ;	genMinus
                           1038 ;	AOP_HL for _bucket
                           1039 ;	AOP_HL for _totalStepsB
   02D0 7E                 1040 	ld	a,(hl)
   02D1 21 23 00           1041 	ld	hl,#_totalStepsB
   02D4 96                 1042 	sub	a,(hl)
   02D5 21 0C 00           1043 	ld	hl,#_bucket
   02D8 77                 1044 	ld	(hl),a
                           1045 ;	square.c 151
                           1046 ;	genPlus
                           1047 ;	AOP_HL for _i
                           1048 ;	Can't optimise plus by inc, falling back to the normal way
   02D9 3E 4B              1049 	ld	a,#<_drumB
   02DB 21 0D 00           1050 	ld	hl,#_i
   02DE 86                 1051 	add	a,(hl)
   02DF 4F                 1052 	ld	c,a
   02E0 3E 00              1053 	ld	a,#>_drumB
   02E2 CE 00              1054 	adc	a,#0x00
   02E4 47                 1055 	ld	b,a
                           1056 ;	genAssign (pointer)
   02E5 3E 01              1057 	ld	a,#0x01
   02E7 02                 1058 	ld	(bc),a
                           1059 ;	genGoto
   02E8 C3 05 03           1060 	jp	00120$
                           1061 ;	genLabel
   02EB                    1062 00104$:
                           1063 ;	square.c 153
                           1064 ;	genCmpLt
                           1065 ;	AOP_HL for _bucket
                           1066 ;	AOP_HL for _totalStepsB
   02EB 21 0C 00           1067 	ld	hl,#_bucket
   02EE 7E                 1068 	ld	a,(hl)
   02EF 21 23 00           1069 	ld	hl,#_totalStepsB
   02F2 96                 1070 	sub	a,(hl)
   02F3 D2 05 03           1071 	jp	nc,00120$
                           1072 ;	square.c 155
                           1073 ;	genPlus
                           1074 ;	AOP_HL for _i
                           1075 ;	Can't optimise plus by inc, falling back to the normal way
   02F6 3E 4B              1076 	ld	a,#<_drumB
   02F8 21 0D 00           1077 	ld	hl,#_i
   02FB 86                 1078 	add	a,(hl)
   02FC 4F                 1079 	ld	c,a
   02FD 3E 00              1080 	ld	a,#>_drumB
   02FF CE 00              1081 	adc	a,#0x00
   0301 47                 1082 	ld	b,a
                           1083 ;	genAssign (pointer)
   0302 3E 00              1084 	ld	a,#0x00
   0304 02                 1085 	ld	(bc),a
                           1086 ;	genLabel
   0305                    1087 00120$:
                           1088 ;	square.c 145
                           1089 ;	genPlus
                           1090 ;	AOP_HL for _i
                           1091 ;	genPlusIncr
   0305 21 0D 00           1092 	ld	hl,#_i
   0308 34                 1093 	inc	(hl)
                           1094 ;	genGoto
   0309 C3 AB 02           1095 	jp	00118$
                           1096 ;	genLabel
   030C                    1097 00121$:
                           1098 ;	square.c 158
                           1099 ;	genPointerGet
                           1100 ;	AOP_HL for _first
   030C 11 4B 00           1101 	ld	de,#_drumB
   030F 1A                 1102 	ld	a,(de)
   0310 21 12 00           1103 	ld	hl,#_first
   0313 77                 1104 	ld	(hl),a
                           1105 ;	square.c 159
                           1106 ;	genIpush
                           1107 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0314 21 6E 04           1108 	ld	hl,#__str_1
   0317 E5                 1109 	push	hl
                           1110 ;	genCall
   0318 CD 00 00           1111 	call	_printf
   031B E8 02              1112 	lda	sp,2(sp)
                           1113 ;	square.c 160
                           1114 ;	genCmpGt
                           1115 ;	AOP_HL for _numberOfPulsesB
                           1116 ;	AOP_STK for _fillDrumB_sloc3_1_0
   031D 3E 00              1117 	ld	a,#0x00
   031F 21 22 00           1118 	ld	hl,#_numberOfPulsesB
   0322 96                 1119 	sub	a,(hl)
   0323 3E 00              1120 	ld	a,#0x00
   0325 17                 1121 	rla
   0326 F8 00              1122 	lda	hl,0(sp)
   0328 77                 1123 	ld	(hl),a
                           1124 ;	genIfx
                           1125 ;	AOP_STK for _fillDrumB_sloc3_1_0
   0329 AF                 1126 	xor	a,a
   032A B6                 1127 	or	a,(hl)
   032B CA BB 03           1128 	jp	z,00113$
                           1129 ;	genCmpEq
                           1130 ;	AOP_HL for _first
                           1131 ; genCmpEq: left 1, right 1, result 0
   032E 21 12 00           1132 	ld	hl,#_first
   0331 7E                 1133 	ld	a,(hl)
   0332 FE 01              1134 	cp	a,#0x01
   0334 CA BB 03           1135 	jp	z,00113$
   0337                    1136 00153$:
                           1137 ;	square.c 162
                           1138 ;	genAssign
                           1139 ;	AOP_HL for _f
   0337 21 14 00           1140 	ld	hl,#_f
   033A 36 00              1141 	ld	(hl),#0x00
                           1142 ;	genLabel
   033C                    1143 00108$:
                           1144 ;	genCmpLt
                           1145 ;	AOP_HL for _f
                           1146 ;	AOP_HL for _totalStepsB
   033C 21 14 00           1147 	ld	hl,#_f
   033F 7E                 1148 	ld	a,(hl)
   0340 21 23 00           1149 	ld	hl,#_totalStepsB
   0343 96                 1150 	sub	a,(hl)
   0344 D2 BB 03           1151 	jp	nc,00113$
                           1152 ;	square.c 163
                           1153 ;	genAssign
                           1154 ;	AOP_HL for _x
   0347 21 15 00           1155 	ld	hl,#_x
   034A 36 00              1156 	ld	(hl),#0x00
                           1157 ;	genLabel
   034C                    1158 00122$:
                           1159 ;	genCmpLt
                           1160 ;	AOP_HL for _x
                           1161 ;	AOP_HL for _totalStepsB
   034C 21 15 00           1162 	ld	hl,#_x
   034F 7E                 1163 	ld	a,(hl)
   0350 21 23 00           1164 	ld	hl,#_totalStepsB
   0353 96                 1165 	sub	a,(hl)
   0354 3E 00              1166 	ld	a,#0x00
   0356 17                 1167 	rla
   0357 47                 1168 	ld	b,a
                           1169 ;	genIfx
   0358 AF                 1170 	xor	a,a
   0359 B0                 1171 	or	a,b
   035A CA 95 03           1172 	jp	z,00125$
                           1173 ;	square.c 164
                           1174 ;	genPlus
                           1175 ;	AOP_HL for _x
                           1176 ;	AOP_STK for _fillDrumB_sloc0_1_0
                           1177 ;	Can't optimise plus by inc, falling back to the normal way
   035D 11 4B 00           1178 	ld	de,#_drumB
   0360 21 15 00           1179 	ld	hl,#_x
   0363 6E                 1180 	ld	l,(hl)
   0364 26 00              1181 	ld	h,#0x00
   0366 19                 1182 	add	hl,de
   0367 7D                 1183 	ld	a,l
   0368 54                 1184 	ld	d,h
   0369 F8 04              1185 	lda	hl,4(sp)
   036B 22                 1186 	ld	(hl+),a
   036C 72                 1187 	ld	(hl),d
                           1188 ;	genPlus
                           1189 ;	AOP_HL for _x
                           1190 ;	AOP_STK for _fillDrumB_sloc1_1_0
                           1191 ;	genPlusIncr
                           1192 ;	Can't optimise plus by inc, falling back to the normal way
   036D 21 15 00           1193 	ld	hl,#_x
   0370 7E                 1194 	ld	a,(hl)
   0371 C6 01              1195 	add	a,#0x01
   0373 F8 03              1196 	lda	hl,3(sp)
   0375 77                 1197 	ld	(hl),a
                           1198 ;	genPlus
                           1199 ;	AOP_STK for _fillDrumB_sloc1_1_0
                           1200 ;	AOP_STK for _fillDrumB_sloc2_1_0
                           1201 ;	Can't optimise plus by inc, falling back to the normal way
   0376 11 4B 00           1202 	ld	de,#_drumB
   0379 6E                 1203 	ld	l,(hl)
   037A 26 00              1204 	ld	h,#0x00
   037C 19                 1205 	add	hl,de
   037D 7D                 1206 	ld	a,l
   037E 54                 1207 	ld	d,h
   037F F8 01              1208 	lda	hl,1(sp)
                           1209 ;	genPointerGet
                           1210 ;	AOP_STK for _fillDrumB_sloc2_1_0
   0381 22                 1211 	ld	(hl+),a
   0382 72                 1212 	ld	(hl),d
   0383 5F                 1213 	ld	e,a
   0384 1A                 1214 	ld	a,(de)
                           1215 ;	genAssign (pointer)
                           1216 ;	AOP_STK for _fillDrumB_sloc0_1_0
   0385 23                 1217 	inc	hl
   0386 23                 1218 	inc	hl
   0387 5E                 1219 	ld	e,(hl)
   0388 23                 1220 	inc	hl
   0389 56                 1221 	ld	d,(hl)
   038A 12                 1222 	ld	(de),a
                           1223 ;	square.c 163
                           1224 ;	genAssign
                           1225 ;	AOP_STK for _fillDrumB_sloc1_1_0
   038B 2B                 1226 	dec	hl
   038C 2B                 1227 	dec	hl
   038D 4E                 1228 	ld	c,(hl)
                           1229 ;	genAssign
                           1230 ;	AOP_HL for _x
   038E 21 15 00           1231 	ld	hl,#_x
   0391 71                 1232 	ld	(hl),c
                           1233 ;	genGoto
   0392 C3 4C 03           1234 	jp	00122$
                           1235 ;	genLabel
   0395                    1236 00125$:
                           1237 ;	square.c 166
                           1238 ;	genMinus
                           1239 ;	AOP_HL for _totalStepsB
   0395 21 23 00           1240 	ld	hl,#_totalStepsB
   0398 7E                 1241 	ld	a,(hl)
   0399 C6 FF              1242 	add	a,#0xFF
   039B 4F                 1243 	ld	c,a
                           1244 ;	genPlus
                           1245 ;	Can't optimise plus by inc, falling back to the normal way
   039C 3E 4B              1246 	ld	a,#<_drumB
   039E 81                 1247 	add	a,c
   039F 4F                 1248 	ld	c,a
   03A0 3E 00              1249 	ld	a,#>_drumB
   03A2 CE 00              1250 	adc	a,#0x00
   03A4 47                 1251 	ld	b,a
                           1252 ;	genAssign (pointer)
                           1253 ;	AOP_HL for _first
   03A5 21 12 00           1254 	ld	hl,#_first
   03A8 7E                 1255 	ld	a,(hl)
   03A9 02                 1256 	ld	(bc),a
                           1257 ;	square.c 167
                           1258 ;	genPointerGet
   03AA 11 4B 00           1259 	ld	de,#_drumB
   03AD 1A                 1260 	ld	a,(de)
                           1261 ;	genCmpEq
                           1262 ; genCmpEq: left 1, right 1, result 0
   03AE 4F                 1263 	ld	c,a
   03AF FE 01              1264 	cp	a,#0x01
   03B1 CA BB 03           1265 	jp	z,00113$
   03B4                    1266 00154$:
                           1267 ;	square.c 162
                           1268 ;	genPlus
                           1269 ;	AOP_HL for _f
                           1270 ;	genPlusIncr
   03B4 21 14 00           1271 	ld	hl,#_f
   03B7 34                 1272 	inc	(hl)
                           1273 ;	genGoto
   03B8 C3 3C 03           1274 	jp	00108$
                           1275 ;	genLabel
   03BB                    1276 00113$:
                           1277 ;	square.c 174
                           1278 ;	genMinus
                           1279 ;	AOP_HL for _totalStepsB
   03BB 21 23 00           1280 	ld	hl,#_totalStepsB
   03BE 7E                 1281 	ld	a,(hl)
   03BF C6 FF              1282 	add	a,#0xFF
   03C1 4F                 1283 	ld	c,a
                           1284 ;	genPlus
                           1285 ;	Can't optimise plus by inc, falling back to the normal way
   03C2 3E 4B              1286 	ld	a,#<_drumB
   03C4 81                 1287 	add	a,c
   03C5 4F                 1288 	ld	c,a
   03C6 3E 00              1289 	ld	a,#>_drumB
   03C8 CE 00              1290 	adc	a,#0x00
   03CA 47                 1291 	ld	b,a
                           1292 ;	genPointerGet
                           1293 ;	AOP_HL for _last
   03CB 0A                 1294 	ld	a,(bc)
   03CC 21 13 00           1295 	ld	hl,#_last
   03CF 77                 1296 	ld	(hl),a
                           1297 ;	square.c 175
                           1298 ;	genIfx
                           1299 ;	AOP_STK for _fillDrumB_sloc3_1_0
   03D0 AF                 1300 	xor	a,a
   03D1 F8 00              1301 	lda	hl,0(sp)
   03D3 B6                 1302 	or	a,(hl)
   03D4 CA 4B 04           1303 	jp	z,00116$
                           1304 ;	genCmpEq
                           1305 ;	AOP_HL for _offStepB
                           1306 ; genCmpEq: left 1, right 1, result 0
   03D7 21 29 00           1307 	ld	hl,#_offStepB
   03DA 7E                 1308 	ld	a,(hl)
   03DB B7                 1309 	or	a,a
   03DC CA 4B 04           1310 	jp	z,00116$
   03DF                    1311 00155$:
                           1312 ;	square.c 177
                           1313 ;	genAssign
                           1314 ;	AOP_HL for _f
   03DF 21 14 00           1315 	ld	hl,#_f
   03E2 36 00              1316 	ld	(hl),#0x00
                           1317 ;	genLabel
   03E4                    1318 00130$:
                           1319 ;	genCmpLt
                           1320 ;	AOP_HL for _f
                           1321 ;	AOP_HL for _offStepB
   03E4 21 14 00           1322 	ld	hl,#_f
   03E7 7E                 1323 	ld	a,(hl)
   03E8 21 29 00           1324 	ld	hl,#_offStepB
   03EB 96                 1325 	sub	a,(hl)
   03EC D2 4B 04           1326 	jp	nc,00116$
                           1327 ;	square.c 178
                           1328 ;	genAssign
                           1329 ;	AOP_HL for _totalStepsB
                           1330 ;	AOP_HL for _x
   03EF 21 23 00           1331 	ld	hl,#_totalStepsB
   03F2 7E                 1332 	ld	a,(hl)
   03F3 21 15 00           1333 	ld	hl,#_x
   03F6 77                 1334 	ld	(hl),a
                           1335 ;	genLabel
   03F7                    1336 00126$:
                           1337 ;	genCmpGt
                           1338 ;	AOP_HL for _x
                           1339 ;	AOP_STK for _fillDrumB_sloc3_1_0
   03F7 3E 00              1340 	ld	a,#0x00
   03F9 21 15 00           1341 	ld	hl,#_x
   03FC 96                 1342 	sub	a,(hl)
   03FD 3E 00              1343 	ld	a,#0x00
   03FF 17                 1344 	rla
   0400 F8 00              1345 	lda	hl,0(sp)
   0402 77                 1346 	ld	(hl),a
                           1347 ;	genIfx
                           1348 ;	AOP_STK for _fillDrumB_sloc3_1_0
   0403 AF                 1349 	xor	a,a
   0404 B6                 1350 	or	a,(hl)
   0405 CA 3C 04           1351 	jp	z,00129$
                           1352 ;	square.c 179
                           1353 ;	genPlus
                           1354 ;	AOP_HL for _x
                           1355 ;	AOP_STK for _fillDrumB_sloc2_1_0
                           1356 ;	Can't optimise plus by inc, falling back to the normal way
   0408 11 4B 00           1357 	ld	de,#_drumB
   040B 21 15 00           1358 	ld	hl,#_x
   040E 6E                 1359 	ld	l,(hl)
   040F 26 00              1360 	ld	h,#0x00
   0411 19                 1361 	add	hl,de
   0412 7D                 1362 	ld	a,l
   0413 54                 1363 	ld	d,h
   0414 F8 01              1364 	lda	hl,1(sp)
   0416 22                 1365 	ld	(hl+),a
   0417 72                 1366 	ld	(hl),d
                           1367 ;	genMinus
                           1368 ;	AOP_HL for _x
   0418 21 15 00           1369 	ld	hl,#_x
   041B 7E                 1370 	ld	a,(hl)
   041C C6 FF              1371 	add	a,#0xFF
   041E 47                 1372 	ld	b,a
                           1373 ;	genPlus
                           1374 ;	AOP_STK for _fillDrumB_sloc0_1_0
                           1375 ;	Can't optimise plus by inc, falling back to the normal way
   041F 11 4B 00           1376 	ld	de,#_drumB
   0422 68                 1377 	ld	l,b
   0423 26 00              1378 	ld	h,#0x00
   0425 19                 1379 	add	hl,de
   0426 7D                 1380 	ld	a,l
   0427 54                 1381 	ld	d,h
   0428 F8 04              1382 	lda	hl,4(sp)
                           1383 ;	genPointerGet
                           1384 ;	AOP_STK for _fillDrumB_sloc0_1_0
   042A 22                 1385 	ld	(hl+),a
   042B 72                 1386 	ld	(hl),d
   042C 5F                 1387 	ld	e,a
   042D 1A                 1388 	ld	a,(de)
                           1389 ;	genAssign (pointer)
                           1390 ;	AOP_STK for _fillDrumB_sloc2_1_0
   042E F8 01              1391 	lda	hl,1(sp)
   0430 5E                 1392 	ld	e,(hl)
   0431 23                 1393 	inc	hl
   0432 56                 1394 	ld	d,(hl)
   0433 12                 1395 	ld	(de),a
                           1396 ;	square.c 178
                           1397 ;	genAssign
   0434 48                 1398 	ld	c,b
                           1399 ;	genAssign
                           1400 ;	AOP_HL for _x
   0435 21 15 00           1401 	ld	hl,#_x
   0438 71                 1402 	ld	(hl),c
                           1403 ;	genGoto
   0439 C3 F7 03           1404 	jp	00126$
                           1405 ;	genLabel
   043C                    1406 00129$:
                           1407 ;	square.c 181
                           1408 ;	genAssign (pointer)
                           1409 ;	AOP_HL for _last
   043C 11 4B 00           1410 	ld	de,#_drumB
   043F 21 13 00           1411 	ld	hl,#_last
   0442 7E                 1412 	ld	a,(hl)
   0443 12                 1413 	ld	(de),a
                           1414 ;	square.c 177
                           1415 ;	genPlus
                           1416 ;	AOP_HL for _f
                           1417 ;	genPlusIncr
   0444 21 14 00           1418 	ld	hl,#_f
   0447 34                 1419 	inc	(hl)
                           1420 ;	genGoto
   0448 C3 E4 03           1421 	jp	00130$
                           1422 ;	genLabel
   044B                    1423 00116$:
                           1424 ;	square.c 184
                           1425 ;	genCall
                           1426 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   044B CD 00 00           1427 	call	_rand
                           1428 ;	AOP_HL for _randB
   044E 21 10 00           1429 	ld	hl,#_randB
   0451 73                 1430 	ld	(hl),e
                           1431 ;	square.c 185
                           1432 ;	genIpush
                           1433 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0452 3E 1E              1434 	ld	a,#0x1E
   0454 F5                 1435 	push	af
   0455 33                 1436 	inc	sp
                           1437 ;	genIpush
                           1438 ;	AOP_HL for _randB
   0456 21 10 00           1439 	ld	hl,#_randB
   0459 7E                 1440 	ld	a,(hl)
   045A F5                 1441 	push	af
   045B 33                 1442 	inc	sp
                           1443 ;	genCall
   045C CD 00 00           1444 	call	__moduchar_rrx_s
   045F 4B                 1445 	ld	c,e
   0460 E8 02              1446 	lda	sp,2(sp)
                           1447 ;	genPlus
                           1448 ;	AOP_HL for _delayB
                           1449 ;	AOP_HL for _xB
                           1450 ;	Can't optimise plus by inc, falling back to the normal way
   0462 21 1A 00           1451 	ld	hl,#_delayB
   0465 7E                 1452 	ld	a,(hl)
   0466 81                 1453 	add	a,c
   0467 21 17 00           1454 	ld	hl,#_xB
   046A 77                 1455 	ld	(hl),a
                           1456 ;	genLabel
   046B                    1457 00134$:
                           1458 ;	genEndFunction
   046B E8 06              1459 	lda	sp,6(sp)
   046D C9                 1460 	ret
   046E                    1461 ___fillDrumB_end:
   046E                    1462 __str_1:
   046E 00                 1463 	.db 0x00
                           1464 ;	square.c 189
                           1465 ;	genLabel
                           1466 ;	genFunction
                           1467 ;	---------------------------------
                           1468 ; Function fillDrumC
                           1469 ; ---------------------------------
   046F                    1470 ___fillDrumC_start:
   046F                    1471 _fillDrumC:
   046F E8 FA              1472 	lda	sp,-6(sp)
                           1473 ;	square.c 190
                           1474 ;	genAssign
                           1475 ;	AOP_HL for _bucket
   0471 21 0C 00           1476 	ld	hl,#_bucket
   0474 36 00              1477 	ld	(hl),#0x00
                           1478 ;	square.c 191
                           1479 ;	genAssign
                           1480 ;	AOP_HL for _i
   0476 21 0D 00           1481 	ld	hl,#_i
   0479 36 00              1482 	ld	(hl),#0x00
                           1483 ;	genLabel
   047B                    1484 00118$:
                           1485 ;	genCmpLt
                           1486 ;	AOP_HL for _i
                           1487 ;	AOP_HL for _totalStepsC
   047B 21 0D 00           1488 	ld	hl,#_i
   047E 7E                 1489 	ld	a,(hl)
   047F 21 26 00           1490 	ld	hl,#_totalStepsC
   0482 96                 1491 	sub	a,(hl)
   0483 D2 DC 04           1492 	jp	nc,00121$
                           1493 ;	square.c 193
                           1494 ;	genPlus
                           1495 ;	AOP_HL for _bucket
                           1496 ;	AOP_HL for _numberOfPulsesC
                           1497 ;	Can't optimise plus by inc, falling back to the normal way
   0486 21 0C 00           1498 	ld	hl,#_bucket
   0489 7E                 1499 	ld	a,(hl)
   048A 21 25 00           1500 	ld	hl,#_numberOfPulsesC
   048D 86                 1501 	add	a,(hl)
   048E 21 0C 00           1502 	ld	hl,#_bucket
   0491 77                 1503 	ld	(hl),a
                           1504 ;	square.c 194
                           1505 ;	genMinus
                           1506 ;	AOP_HL for _totalStepsC
   0492 21 26 00           1507 	ld	hl,#_totalStepsC
   0495 7E                 1508 	ld	a,(hl)
   0496 C6 FF              1509 	add	a,#0xFF
                           1510 ;	genCmpGt
                           1511 ;	AOP_HL for _bucket
   0498 4F                 1512 	ld	c,a
   0499 21 0C 00           1513 	ld	hl,#_bucket
   049C 96                 1514 	sub	a,(hl)
   049D D2 BB 04           1515 	jp	nc,00104$
                           1516 ;	square.c 196
                           1517 ;	genMinus
                           1518 ;	AOP_HL for _bucket
                           1519 ;	AOP_HL for _totalStepsC
   04A0 7E                 1520 	ld	a,(hl)
   04A1 21 26 00           1521 	ld	hl,#_totalStepsC
   04A4 96                 1522 	sub	a,(hl)
   04A5 21 0C 00           1523 	ld	hl,#_bucket
   04A8 77                 1524 	ld	(hl),a
                           1525 ;	square.c 197
                           1526 ;	genPlus
                           1527 ;	AOP_HL for _i
                           1528 ;	Can't optimise plus by inc, falling back to the normal way
   04A9 3E 6B              1529 	ld	a,#<_drumC
   04AB 21 0D 00           1530 	ld	hl,#_i
   04AE 86                 1531 	add	a,(hl)
   04AF 4F                 1532 	ld	c,a
   04B0 3E 00              1533 	ld	a,#>_drumC
   04B2 CE 00              1534 	adc	a,#0x00
   04B4 47                 1535 	ld	b,a
                           1536 ;	genAssign (pointer)
   04B5 3E 01              1537 	ld	a,#0x01
   04B7 02                 1538 	ld	(bc),a
                           1539 ;	genGoto
   04B8 C3 D5 04           1540 	jp	00120$
                           1541 ;	genLabel
   04BB                    1542 00104$:
                           1543 ;	square.c 199
                           1544 ;	genCmpLt
                           1545 ;	AOP_HL for _bucket
                           1546 ;	AOP_HL for _totalStepsC
   04BB 21 0C 00           1547 	ld	hl,#_bucket
   04BE 7E                 1548 	ld	a,(hl)
   04BF 21 26 00           1549 	ld	hl,#_totalStepsC
   04C2 96                 1550 	sub	a,(hl)
   04C3 D2 D5 04           1551 	jp	nc,00120$
                           1552 ;	square.c 201
                           1553 ;	genPlus
                           1554 ;	AOP_HL for _i
                           1555 ;	Can't optimise plus by inc, falling back to the normal way
   04C6 3E 6B              1556 	ld	a,#<_drumC
   04C8 21 0D 00           1557 	ld	hl,#_i
   04CB 86                 1558 	add	a,(hl)
   04CC 4F                 1559 	ld	c,a
   04CD 3E 00              1560 	ld	a,#>_drumC
   04CF CE 00              1561 	adc	a,#0x00
   04D1 47                 1562 	ld	b,a
                           1563 ;	genAssign (pointer)
   04D2 3E 00              1564 	ld	a,#0x00
   04D4 02                 1565 	ld	(bc),a
                           1566 ;	genLabel
   04D5                    1567 00120$:
                           1568 ;	square.c 191
                           1569 ;	genPlus
                           1570 ;	AOP_HL for _i
                           1571 ;	genPlusIncr
   04D5 21 0D 00           1572 	ld	hl,#_i
   04D8 34                 1573 	inc	(hl)
                           1574 ;	genGoto
   04D9 C3 7B 04           1575 	jp	00118$
                           1576 ;	genLabel
   04DC                    1577 00121$:
                           1578 ;	square.c 204
                           1579 ;	genPointerGet
                           1580 ;	AOP_HL for _first
   04DC 11 6B 00           1581 	ld	de,#_drumC
   04DF 1A                 1582 	ld	a,(de)
   04E0 21 12 00           1583 	ld	hl,#_first
   04E3 77                 1584 	ld	(hl),a
                           1585 ;	square.c 205
                           1586 ;	genIpush
                           1587 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   04E4 21 3E 06           1588 	ld	hl,#__str_2
   04E7 E5                 1589 	push	hl
                           1590 ;	genCall
   04E8 CD 00 00           1591 	call	_printf
   04EB E8 02              1592 	lda	sp,2(sp)
                           1593 ;	square.c 206
                           1594 ;	genCmpGt
                           1595 ;	AOP_HL for _numberOfPulsesC
                           1596 ;	AOP_STK for _fillDrumC_sloc3_1_0
   04ED 3E 00              1597 	ld	a,#0x00
   04EF 21 25 00           1598 	ld	hl,#_numberOfPulsesC
   04F2 96                 1599 	sub	a,(hl)
   04F3 3E 00              1600 	ld	a,#0x00
   04F5 17                 1601 	rla
   04F6 F8 00              1602 	lda	hl,0(sp)
   04F8 77                 1603 	ld	(hl),a
                           1604 ;	genIfx
                           1605 ;	AOP_STK for _fillDrumC_sloc3_1_0
   04F9 AF                 1606 	xor	a,a
   04FA B6                 1607 	or	a,(hl)
   04FB CA 8B 05           1608 	jp	z,00113$
                           1609 ;	genCmpEq
                           1610 ;	AOP_HL for _first
                           1611 ; genCmpEq: left 1, right 1, result 0
   04FE 21 12 00           1612 	ld	hl,#_first
   0501 7E                 1613 	ld	a,(hl)
   0502 FE 01              1614 	cp	a,#0x01
   0504 CA 8B 05           1615 	jp	z,00113$
   0507                    1616 00153$:
                           1617 ;	square.c 208
                           1618 ;	genAssign
                           1619 ;	AOP_HL for _f
   0507 21 14 00           1620 	ld	hl,#_f
   050A 36 00              1621 	ld	(hl),#0x00
                           1622 ;	genLabel
   050C                    1623 00108$:
                           1624 ;	genCmpLt
                           1625 ;	AOP_HL for _f
                           1626 ;	AOP_HL for _totalStepsC
   050C 21 14 00           1627 	ld	hl,#_f
   050F 7E                 1628 	ld	a,(hl)
   0510 21 26 00           1629 	ld	hl,#_totalStepsC
   0513 96                 1630 	sub	a,(hl)
   0514 D2 8B 05           1631 	jp	nc,00113$
                           1632 ;	square.c 209
                           1633 ;	genAssign
                           1634 ;	AOP_HL for _x
   0517 21 15 00           1635 	ld	hl,#_x
   051A 36 00              1636 	ld	(hl),#0x00
                           1637 ;	genLabel
   051C                    1638 00122$:
                           1639 ;	genCmpLt
                           1640 ;	AOP_HL for _x
                           1641 ;	AOP_HL for _totalStepsC
   051C 21 15 00           1642 	ld	hl,#_x
   051F 7E                 1643 	ld	a,(hl)
   0520 21 26 00           1644 	ld	hl,#_totalStepsC
   0523 96                 1645 	sub	a,(hl)
   0524 3E 00              1646 	ld	a,#0x00
   0526 17                 1647 	rla
   0527 47                 1648 	ld	b,a
                           1649 ;	genIfx
   0528 AF                 1650 	xor	a,a
   0529 B0                 1651 	or	a,b
   052A CA 65 05           1652 	jp	z,00125$
                           1653 ;	square.c 210
                           1654 ;	genPlus
                           1655 ;	AOP_HL for _x
                           1656 ;	AOP_STK for _fillDrumC_sloc0_1_0
                           1657 ;	Can't optimise plus by inc, falling back to the normal way
   052D 11 6B 00           1658 	ld	de,#_drumC
   0530 21 15 00           1659 	ld	hl,#_x
   0533 6E                 1660 	ld	l,(hl)
   0534 26 00              1661 	ld	h,#0x00
   0536 19                 1662 	add	hl,de
   0537 7D                 1663 	ld	a,l
   0538 54                 1664 	ld	d,h
   0539 F8 04              1665 	lda	hl,4(sp)
   053B 22                 1666 	ld	(hl+),a
   053C 72                 1667 	ld	(hl),d
                           1668 ;	genPlus
                           1669 ;	AOP_HL for _x
                           1670 ;	AOP_STK for _fillDrumC_sloc1_1_0
                           1671 ;	genPlusIncr
                           1672 ;	Can't optimise plus by inc, falling back to the normal way
   053D 21 15 00           1673 	ld	hl,#_x
   0540 7E                 1674 	ld	a,(hl)
   0541 C6 01              1675 	add	a,#0x01
   0543 F8 03              1676 	lda	hl,3(sp)
   0545 77                 1677 	ld	(hl),a
                           1678 ;	genPlus
                           1679 ;	AOP_STK for _fillDrumC_sloc1_1_0
                           1680 ;	AOP_STK for _fillDrumC_sloc2_1_0
                           1681 ;	Can't optimise plus by inc, falling back to the normal way
   0546 11 6B 00           1682 	ld	de,#_drumC
   0549 6E                 1683 	ld	l,(hl)
   054A 26 00              1684 	ld	h,#0x00
   054C 19                 1685 	add	hl,de
   054D 7D                 1686 	ld	a,l
   054E 54                 1687 	ld	d,h
   054F F8 01              1688 	lda	hl,1(sp)
                           1689 ;	genPointerGet
                           1690 ;	AOP_STK for _fillDrumC_sloc2_1_0
   0551 22                 1691 	ld	(hl+),a
   0552 72                 1692 	ld	(hl),d
   0553 5F                 1693 	ld	e,a
   0554 1A                 1694 	ld	a,(de)
                           1695 ;	genAssign (pointer)
                           1696 ;	AOP_STK for _fillDrumC_sloc0_1_0
   0555 23                 1697 	inc	hl
   0556 23                 1698 	inc	hl
   0557 5E                 1699 	ld	e,(hl)
   0558 23                 1700 	inc	hl
   0559 56                 1701 	ld	d,(hl)
   055A 12                 1702 	ld	(de),a
                           1703 ;	square.c 209
                           1704 ;	genAssign
                           1705 ;	AOP_STK for _fillDrumC_sloc1_1_0
   055B 2B                 1706 	dec	hl
   055C 2B                 1707 	dec	hl
   055D 4E                 1708 	ld	c,(hl)
                           1709 ;	genAssign
                           1710 ;	AOP_HL for _x
   055E 21 15 00           1711 	ld	hl,#_x
   0561 71                 1712 	ld	(hl),c
                           1713 ;	genGoto
   0562 C3 1C 05           1714 	jp	00122$
                           1715 ;	genLabel
   0565                    1716 00125$:
                           1717 ;	square.c 212
                           1718 ;	genMinus
                           1719 ;	AOP_HL for _totalStepsC
   0565 21 26 00           1720 	ld	hl,#_totalStepsC
   0568 7E                 1721 	ld	a,(hl)
   0569 C6 FF              1722 	add	a,#0xFF
   056B 4F                 1723 	ld	c,a
                           1724 ;	genPlus
                           1725 ;	Can't optimise plus by inc, falling back to the normal way
   056C 3E 6B              1726 	ld	a,#<_drumC
   056E 81                 1727 	add	a,c
   056F 4F                 1728 	ld	c,a
   0570 3E 00              1729 	ld	a,#>_drumC
   0572 CE 00              1730 	adc	a,#0x00
   0574 47                 1731 	ld	b,a
                           1732 ;	genAssign (pointer)
                           1733 ;	AOP_HL for _first
   0575 21 12 00           1734 	ld	hl,#_first
   0578 7E                 1735 	ld	a,(hl)
   0579 02                 1736 	ld	(bc),a
                           1737 ;	square.c 213
                           1738 ;	genPointerGet
   057A 11 6B 00           1739 	ld	de,#_drumC
   057D 1A                 1740 	ld	a,(de)
                           1741 ;	genCmpEq
                           1742 ; genCmpEq: left 1, right 1, result 0
   057E 4F                 1743 	ld	c,a
   057F FE 01              1744 	cp	a,#0x01
   0581 CA 8B 05           1745 	jp	z,00113$
   0584                    1746 00154$:
                           1747 ;	square.c 208
                           1748 ;	genPlus
                           1749 ;	AOP_HL for _f
                           1750 ;	genPlusIncr
   0584 21 14 00           1751 	ld	hl,#_f
   0587 34                 1752 	inc	(hl)
                           1753 ;	genGoto
   0588 C3 0C 05           1754 	jp	00108$
                           1755 ;	genLabel
   058B                    1756 00113$:
                           1757 ;	square.c 219
                           1758 ;	genMinus
                           1759 ;	AOP_HL for _totalStepsC
   058B 21 26 00           1760 	ld	hl,#_totalStepsC
   058E 7E                 1761 	ld	a,(hl)
   058F C6 FF              1762 	add	a,#0xFF
   0591 4F                 1763 	ld	c,a
                           1764 ;	genPlus
                           1765 ;	Can't optimise plus by inc, falling back to the normal way
   0592 3E 6B              1766 	ld	a,#<_drumC
   0594 81                 1767 	add	a,c
   0595 4F                 1768 	ld	c,a
   0596 3E 00              1769 	ld	a,#>_drumC
   0598 CE 00              1770 	adc	a,#0x00
   059A 47                 1771 	ld	b,a
                           1772 ;	genPointerGet
                           1773 ;	AOP_HL for _last
   059B 0A                 1774 	ld	a,(bc)
   059C 21 13 00           1775 	ld	hl,#_last
   059F 77                 1776 	ld	(hl),a
                           1777 ;	square.c 220
                           1778 ;	genIfx
                           1779 ;	AOP_STK for _fillDrumC_sloc3_1_0
   05A0 AF                 1780 	xor	a,a
   05A1 F8 00              1781 	lda	hl,0(sp)
   05A3 B6                 1782 	or	a,(hl)
   05A4 CA 1B 06           1783 	jp	z,00116$
                           1784 ;	genCmpEq
                           1785 ;	AOP_HL for _offStepC
                           1786 ; genCmpEq: left 1, right 1, result 0
   05A7 21 2A 00           1787 	ld	hl,#_offStepC
   05AA 7E                 1788 	ld	a,(hl)
   05AB B7                 1789 	or	a,a
   05AC CA 1B 06           1790 	jp	z,00116$
   05AF                    1791 00155$:
                           1792 ;	square.c 222
                           1793 ;	genAssign
                           1794 ;	AOP_HL for _f
   05AF 21 14 00           1795 	ld	hl,#_f
   05B2 36 00              1796 	ld	(hl),#0x00
                           1797 ;	genLabel
   05B4                    1798 00130$:
                           1799 ;	genCmpLt
                           1800 ;	AOP_HL for _f
                           1801 ;	AOP_HL for _offStepC
   05B4 21 14 00           1802 	ld	hl,#_f
   05B7 7E                 1803 	ld	a,(hl)
   05B8 21 2A 00           1804 	ld	hl,#_offStepC
   05BB 96                 1805 	sub	a,(hl)
   05BC D2 1B 06           1806 	jp	nc,00116$
                           1807 ;	square.c 223
                           1808 ;	genAssign
                           1809 ;	AOP_HL for _totalStepsC
                           1810 ;	AOP_HL for _x
   05BF 21 26 00           1811 	ld	hl,#_totalStepsC
   05C2 7E                 1812 	ld	a,(hl)
   05C3 21 15 00           1813 	ld	hl,#_x
   05C6 77                 1814 	ld	(hl),a
                           1815 ;	genLabel
   05C7                    1816 00126$:
                           1817 ;	genCmpGt
                           1818 ;	AOP_HL for _x
                           1819 ;	AOP_STK for _fillDrumC_sloc3_1_0
   05C7 3E 00              1820 	ld	a,#0x00
   05C9 21 15 00           1821 	ld	hl,#_x
   05CC 96                 1822 	sub	a,(hl)
   05CD 3E 00              1823 	ld	a,#0x00
   05CF 17                 1824 	rla
   05D0 F8 00              1825 	lda	hl,0(sp)
   05D2 77                 1826 	ld	(hl),a
                           1827 ;	genIfx
                           1828 ;	AOP_STK for _fillDrumC_sloc3_1_0
   05D3 AF                 1829 	xor	a,a
   05D4 B6                 1830 	or	a,(hl)
   05D5 CA 0C 06           1831 	jp	z,00129$
                           1832 ;	square.c 224
                           1833 ;	genPlus
                           1834 ;	AOP_HL for _x
                           1835 ;	AOP_STK for _fillDrumC_sloc2_1_0
                           1836 ;	Can't optimise plus by inc, falling back to the normal way
   05D8 11 6B 00           1837 	ld	de,#_drumC
   05DB 21 15 00           1838 	ld	hl,#_x
   05DE 6E                 1839 	ld	l,(hl)
   05DF 26 00              1840 	ld	h,#0x00
   05E1 19                 1841 	add	hl,de
   05E2 7D                 1842 	ld	a,l
   05E3 54                 1843 	ld	d,h
   05E4 F8 01              1844 	lda	hl,1(sp)
   05E6 22                 1845 	ld	(hl+),a
   05E7 72                 1846 	ld	(hl),d
                           1847 ;	genMinus
                           1848 ;	AOP_HL for _x
   05E8 21 15 00           1849 	ld	hl,#_x
   05EB 7E                 1850 	ld	a,(hl)
   05EC C6 FF              1851 	add	a,#0xFF
   05EE 47                 1852 	ld	b,a
                           1853 ;	genPlus
                           1854 ;	AOP_STK for _fillDrumC_sloc0_1_0
                           1855 ;	Can't optimise plus by inc, falling back to the normal way
   05EF 11 6B 00           1856 	ld	de,#_drumC
   05F2 68                 1857 	ld	l,b
   05F3 26 00              1858 	ld	h,#0x00
   05F5 19                 1859 	add	hl,de
   05F6 7D                 1860 	ld	a,l
   05F7 54                 1861 	ld	d,h
   05F8 F8 04              1862 	lda	hl,4(sp)
                           1863 ;	genPointerGet
                           1864 ;	AOP_STK for _fillDrumC_sloc0_1_0
   05FA 22                 1865 	ld	(hl+),a
   05FB 72                 1866 	ld	(hl),d
   05FC 5F                 1867 	ld	e,a
   05FD 1A                 1868 	ld	a,(de)
                           1869 ;	genAssign (pointer)
                           1870 ;	AOP_STK for _fillDrumC_sloc2_1_0
   05FE F8 01              1871 	lda	hl,1(sp)
   0600 5E                 1872 	ld	e,(hl)
   0601 23                 1873 	inc	hl
   0602 56                 1874 	ld	d,(hl)
   0603 12                 1875 	ld	(de),a
                           1876 ;	square.c 223
                           1877 ;	genAssign
   0604 48                 1878 	ld	c,b
                           1879 ;	genAssign
                           1880 ;	AOP_HL for _x
   0605 21 15 00           1881 	ld	hl,#_x
   0608 71                 1882 	ld	(hl),c
                           1883 ;	genGoto
   0609 C3 C7 05           1884 	jp	00126$
                           1885 ;	genLabel
   060C                    1886 00129$:
                           1887 ;	square.c 226
                           1888 ;	genAssign (pointer)
                           1889 ;	AOP_HL for _last
   060C 11 6B 00           1890 	ld	de,#_drumC
   060F 21 13 00           1891 	ld	hl,#_last
   0612 7E                 1892 	ld	a,(hl)
   0613 12                 1893 	ld	(de),a
                           1894 ;	square.c 222
                           1895 ;	genPlus
                           1896 ;	AOP_HL for _f
                           1897 ;	genPlusIncr
   0614 21 14 00           1898 	ld	hl,#_f
   0617 34                 1899 	inc	(hl)
                           1900 ;	genGoto
   0618 C3 B4 05           1901 	jp	00130$
                           1902 ;	genLabel
   061B                    1903 00116$:
                           1904 ;	square.c 229
                           1905 ;	genCall
                           1906 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   061B CD 00 00           1907 	call	_rand
                           1908 ;	AOP_HL for _randC
   061E 21 11 00           1909 	ld	hl,#_randC
   0621 73                 1910 	ld	(hl),e
                           1911 ;	square.c 230
                           1912 ;	genIpush
                           1913 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0622 3E 1E              1914 	ld	a,#0x1E
   0624 F5                 1915 	push	af
   0625 33                 1916 	inc	sp
                           1917 ;	genIpush
                           1918 ;	AOP_HL for _randC
   0626 21 11 00           1919 	ld	hl,#_randC
   0629 7E                 1920 	ld	a,(hl)
   062A F5                 1921 	push	af
   062B 33                 1922 	inc	sp
                           1923 ;	genCall
   062C CD 00 00           1924 	call	__moduchar_rrx_s
   062F 4B                 1925 	ld	c,e
   0630 E8 02              1926 	lda	sp,2(sp)
                           1927 ;	genPlus
                           1928 ;	AOP_HL for _delayC
                           1929 ;	AOP_HL for _xC
                           1930 ;	Can't optimise plus by inc, falling back to the normal way
   0632 21 1B 00           1931 	ld	hl,#_delayC
   0635 7E                 1932 	ld	a,(hl)
   0636 81                 1933 	add	a,c
   0637 21 18 00           1934 	ld	hl,#_xC
   063A 77                 1935 	ld	(hl),a
                           1936 ;	genLabel
   063B                    1937 00134$:
                           1938 ;	genEndFunction
   063B E8 06              1939 	lda	sp,6(sp)
   063D C9                 1940 	ret
   063E                    1941 ___fillDrumC_end:
   063E                    1942 __str_2:
   063E 00                 1943 	.db 0x00
                           1944 ;	square.c 235
                           1945 ;	genLabel
                           1946 ;	genFunction
                           1947 ;	---------------------------------
                           1948 ; Function updateUI
                           1949 ; ---------------------------------
   063F                    1950 ___updateUI_start:
   063F                    1951 _updateUI:
   063F E8 FA              1952 	lda	sp,-6(sp)
                           1953 ;	square.c 237
                           1954 ;	genIpush
                           1955 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0641 21 7F 08           1956 	ld	hl,#__str_3
   0644 E5                 1957 	push	hl
                           1958 ;	genCall
   0645 CD 00 00           1959 	call	_puts
   0648 E8 02              1960 	lda	sp,2(sp)
                           1961 ;	square.c 239
                           1962 ;	genIpush
                           1963 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   064A 21 80 08           1964 	ld	hl,#__str_4
   064D E5                 1965 	push	hl
                           1966 ;	genCall
   064E CD 00 00           1967 	call	_puts
   0651 E8 02              1968 	lda	sp,2(sp)
                           1969 ;	square.c 240
                           1970 ;	genIpush
                           1971 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0653 21 82 08           1972 	ld	hl,#__str_5
   0656 E5                 1973 	push	hl
                           1974 ;	genCall
   0657 CD 00 00           1975 	call	_puts
   065A E8 02              1976 	lda	sp,2(sp)
                           1977 ;	square.c 241
                           1978 ;	genCmpEq
                           1979 ;	AOP_HL for _seldrum
                           1980 ; genCmpEq: left 1, right 1, result 0
   065C 21 0B 00           1981 	ld	hl,#_seldrum
   065F 7E                 1982 	ld	a,(hl)
   0660 B7                 1983 	or	a,a
   0661 C2 75 06           1984 	jp	nz,00102$
   0664 18 03              1985 	jr	00127$
   0666                    1986 00126$:
   0666 C3 75 06           1987 	jp	00102$
   0669                    1988 00127$:
                           1989 ;	square.c 243
                           1990 ;	genIpush
                           1991 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0669 21 A0 08           1992 	ld	hl,#__str_6
   066C E5                 1993 	push	hl
                           1994 ;	genCall
   066D CD 00 00           1995 	call	_printf
   0670 E8 02              1996 	lda	sp,2(sp)
                           1997 ;	genGoto
   0672 C3 7E 06           1998 	jp	00103$
                           1999 ;	genLabel
   0675                    2000 00102$:
                           2001 ;	square.c 247
                           2002 ;	genIpush
                           2003 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0675 21 A3 08           2004 	ld	hl,#__str_7
   0678 E5                 2005 	push	hl
                           2006 ;	genCall
   0679 CD 00 00           2007 	call	_printf
   067C E8 02              2008 	lda	sp,2(sp)
                           2009 ;	genLabel
   067E                    2010 00103$:
                           2011 ;	square.c 249
                           2012 ;	genCast
                           2013 ;	AOP_HL for _xA
   067E 21 16 00           2014 	ld	hl,#_xA
   0681 4E                 2015 	ld	c,(hl)
   0682 7E                 2016 	ld	a,(hl)
   0683 17                 2017 	rla	
   0684 9F                 2018 	sbc	a,a
   0685 47                 2019 	ld	b,a
                           2020 ;	genCast
                           2021 ;	AOP_HL for _offStepA
                           2022 ;	AOP_STK for _updateUI_sloc0_1_0
   0686 21 28 00           2023 	ld	hl,#_offStepA
   0689 7E                 2024 	ld	a,(hl)
   068A F8 04              2025 	lda	hl,4(sp)
   068C 77                 2026 	ld	(hl),a
   068D 21 28 00           2027 	ld	hl,#_offStepA
   0690 7E                 2028 	ld	a,(hl)
   0691 17                 2029 	rla	
   0692 9F                 2030 	sbc	a,a
   0693 F8 05              2031 	lda	hl,5(sp)
   0695 77                 2032 	ld	(hl),a
                           2033 ;	genCast
                           2034 ;	AOP_HL for _numberOfPulsesA
                           2035 ;	AOP_STK for _updateUI_sloc1_1_0
   0696 21 1F 00           2036 	ld	hl,#_numberOfPulsesA
   0699 7E                 2037 	ld	a,(hl)
   069A F8 02              2038 	lda	hl,2(sp)
   069C 77                 2039 	ld	(hl),a
   069D 21 1F 00           2040 	ld	hl,#_numberOfPulsesA
   06A0 7E                 2041 	ld	a,(hl)
   06A1 17                 2042 	rla	
   06A2 9F                 2043 	sbc	a,a
   06A3 F8 03              2044 	lda	hl,3(sp)
   06A5 77                 2045 	ld	(hl),a
                           2046 ;	genCast
                           2047 ;	AOP_HL for _totalStepsA
                           2048 ;	AOP_STK for _updateUI_sloc2_1_0
   06A6 21 20 00           2049 	ld	hl,#_totalStepsA
   06A9 7E                 2050 	ld	a,(hl)
   06AA F8 00              2051 	lda	hl,0(sp)
   06AC 77                 2052 	ld	(hl),a
   06AD 21 20 00           2053 	ld	hl,#_totalStepsA
   06B0 7E                 2054 	ld	a,(hl)
   06B1 17                 2055 	rla	
   06B2 9F                 2056 	sbc	a,a
   06B3 F8 01              2057 	lda	hl,1(sp)
   06B5 77                 2058 	ld	(hl),a
                           2059 ;	genIpush
                           2060 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06B6 C5                 2061 	push	bc
                           2062 ;	genIpush
                           2063 ;	AOP_STK for _updateUI_sloc0_1_0
   06B7 F8 06              2064 	lda	hl,6(sp)
   06B9 2A                 2065 	ld	a,(hl+)
   06BA 66                 2066 	ld	h,(hl)
   06BB 6F                 2067 	ld	l,a
   06BC E5                 2068 	push	hl
                           2069 ;	genIpush
                           2070 ;	AOP_STK for _updateUI_sloc1_1_0
   06BD F8 06              2071 	lda	hl,6(sp)
   06BF 2A                 2072 	ld	a,(hl+)
   06C0 66                 2073 	ld	h,(hl)
   06C1 6F                 2074 	ld	l,a
   06C2 E5                 2075 	push	hl
                           2076 ;	genIpush
                           2077 ;	AOP_STK for _updateUI_sloc2_1_0
   06C3 F8 06              2078 	lda	hl,6(sp)
   06C5 2A                 2079 	ld	a,(hl+)
   06C6 66                 2080 	ld	h,(hl)
   06C7 6F                 2081 	ld	l,a
   06C8 E5                 2082 	push	hl
                           2083 ;	genIpush
   06C9 21 A6 08           2084 	ld	hl,#__str_8
   06CC E5                 2085 	push	hl
                           2086 ;	genCall
   06CD CD 00 00           2087 	call	_printf
   06D0 E8 0A              2088 	lda	sp,10(sp)
                           2089 ;	square.c 250
                           2090 ;	genIpush
                           2091 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06D2 21 BA 08           2092 	ld	hl,#__str_9
   06D5 E5                 2093 	push	hl
                           2094 ;	genCall
   06D6 CD 00 00           2095 	call	_printf
   06D9 E8 02              2096 	lda	sp,2(sp)
                           2097 ;	square.c 251
                           2098 ;	genCmpEq
                           2099 ;	AOP_HL for _seldrum
                           2100 ; genCmpEq: left 1, right 1, result 0
   06DB 21 0B 00           2101 	ld	hl,#_seldrum
   06DE 7E                 2102 	ld	a,(hl)
   06DF FE 01              2103 	cp	a,#0x01
   06E1 C2 F5 06           2104 	jp	nz,00105$
   06E4 18 03              2105 	jr	00129$
   06E6                    2106 00128$:
   06E6 C3 F5 06           2107 	jp	00105$
   06E9                    2108 00129$:
                           2109 ;	square.c 253
                           2110 ;	genIpush
                           2111 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06E9 21 BC 08           2112 	ld	hl,#__str_10
   06EC E5                 2113 	push	hl
                           2114 ;	genCall
   06ED CD 00 00           2115 	call	_printf
   06F0 E8 02              2116 	lda	sp,2(sp)
                           2117 ;	genGoto
   06F2 C3 FE 06           2118 	jp	00106$
                           2119 ;	genLabel
   06F5                    2120 00105$:
                           2121 ;	square.c 257
                           2122 ;	genIpush
                           2123 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06F5 21 BF 08           2124 	ld	hl,#__str_11
   06F8 E5                 2125 	push	hl
                           2126 ;	genCall
   06F9 CD 00 00           2127 	call	_printf
   06FC E8 02              2128 	lda	sp,2(sp)
                           2129 ;	genLabel
   06FE                    2130 00106$:
                           2131 ;	square.c 259
                           2132 ;	genCast
                           2133 ;	AOP_HL for _xB
   06FE 21 17 00           2134 	ld	hl,#_xB
   0701 4E                 2135 	ld	c,(hl)
   0702 7E                 2136 	ld	a,(hl)
   0703 17                 2137 	rla	
   0704 9F                 2138 	sbc	a,a
   0705 47                 2139 	ld	b,a
                           2140 ;	genCast
                           2141 ;	AOP_HL for _offStepB
                           2142 ;	AOP_STK for _updateUI_sloc2_1_0
   0706 21 29 00           2143 	ld	hl,#_offStepB
   0709 7E                 2144 	ld	a,(hl)
   070A F8 00              2145 	lda	hl,0(sp)
   070C 77                 2146 	ld	(hl),a
   070D 21 29 00           2147 	ld	hl,#_offStepB
   0710 7E                 2148 	ld	a,(hl)
   0711 17                 2149 	rla	
   0712 9F                 2150 	sbc	a,a
   0713 F8 01              2151 	lda	hl,1(sp)
   0715 77                 2152 	ld	(hl),a
                           2153 ;	genCast
                           2154 ;	AOP_HL for _numberOfPulsesB
                           2155 ;	AOP_STK for _updateUI_sloc1_1_0
   0716 21 22 00           2156 	ld	hl,#_numberOfPulsesB
   0719 7E                 2157 	ld	a,(hl)
   071A F8 02              2158 	lda	hl,2(sp)
   071C 77                 2159 	ld	(hl),a
   071D 21 22 00           2160 	ld	hl,#_numberOfPulsesB
   0720 7E                 2161 	ld	a,(hl)
   0721 17                 2162 	rla	
   0722 9F                 2163 	sbc	a,a
   0723 F8 03              2164 	lda	hl,3(sp)
   0725 77                 2165 	ld	(hl),a
                           2166 ;	genCast
                           2167 ;	AOP_HL for _totalStepsB
                           2168 ;	AOP_STK for _updateUI_sloc0_1_0
   0726 21 23 00           2169 	ld	hl,#_totalStepsB
   0729 7E                 2170 	ld	a,(hl)
   072A F8 04              2171 	lda	hl,4(sp)
   072C 77                 2172 	ld	(hl),a
   072D 21 23 00           2173 	ld	hl,#_totalStepsB
   0730 7E                 2174 	ld	a,(hl)
   0731 17                 2175 	rla	
   0732 9F                 2176 	sbc	a,a
   0733 F8 05              2177 	lda	hl,5(sp)
   0735 77                 2178 	ld	(hl),a
                           2179 ;	genIpush
                           2180 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0736 C5                 2181 	push	bc
                           2182 ;	genIpush
                           2183 ;	AOP_STK for _updateUI_sloc2_1_0
   0737 F8 02              2184 	lda	hl,2(sp)
   0739 2A                 2185 	ld	a,(hl+)
   073A 66                 2186 	ld	h,(hl)
   073B 6F                 2187 	ld	l,a
   073C E5                 2188 	push	hl
                           2189 ;	genIpush
                           2190 ;	AOP_STK for _updateUI_sloc1_1_0
   073D F8 06              2191 	lda	hl,6(sp)
   073F 2A                 2192 	ld	a,(hl+)
   0740 66                 2193 	ld	h,(hl)
   0741 6F                 2194 	ld	l,a
   0742 E5                 2195 	push	hl
                           2196 ;	genIpush
                           2197 ;	AOP_STK for _updateUI_sloc0_1_0
   0743 F8 0A              2198 	lda	hl,10(sp)
   0745 2A                 2199 	ld	a,(hl+)
   0746 66                 2200 	ld	h,(hl)
   0747 6F                 2201 	ld	l,a
   0748 E5                 2202 	push	hl
                           2203 ;	genIpush
   0749 21 C2 08           2204 	ld	hl,#__str_12
   074C E5                 2205 	push	hl
                           2206 ;	genCall
   074D CD 00 00           2207 	call	_printf
   0750 E8 0A              2208 	lda	sp,10(sp)
                           2209 ;	square.c 260
                           2210 ;	genIpush
                           2211 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0752 21 D6 08           2212 	ld	hl,#__str_13
   0755 E5                 2213 	push	hl
                           2214 ;	genCall
   0756 CD 00 00           2215 	call	_printf
   0759 E8 02              2216 	lda	sp,2(sp)
                           2217 ;	square.c 261
                           2218 ;	genCmpEq
                           2219 ;	AOP_HL for _seldrum
                           2220 ; genCmpEq: left 1, right 1, result 0
   075B 21 0B 00           2221 	ld	hl,#_seldrum
   075E 7E                 2222 	ld	a,(hl)
   075F FE 02              2223 	cp	a,#0x02
   0761 C2 75 07           2224 	jp	nz,00108$
   0764 18 03              2225 	jr	00131$
   0766                    2226 00130$:
   0766 C3 75 07           2227 	jp	00108$
   0769                    2228 00131$:
                           2229 ;	square.c 263
                           2230 ;	genIpush
                           2231 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0769 21 D8 08           2232 	ld	hl,#__str_14
   076C E5                 2233 	push	hl
                           2234 ;	genCall
   076D CD 00 00           2235 	call	_printf
   0770 E8 02              2236 	lda	sp,2(sp)
                           2237 ;	genGoto
   0772 C3 7E 07           2238 	jp	00109$
                           2239 ;	genLabel
   0775                    2240 00108$:
                           2241 ;	square.c 267
                           2242 ;	genIpush
                           2243 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0775 21 DB 08           2244 	ld	hl,#__str_15
   0778 E5                 2245 	push	hl
                           2246 ;	genCall
   0779 CD 00 00           2247 	call	_printf
   077C E8 02              2248 	lda	sp,2(sp)
                           2249 ;	genLabel
   077E                    2250 00109$:
                           2251 ;	square.c 269
                           2252 ;	genCast
                           2253 ;	AOP_HL for _xC
   077E 21 18 00           2254 	ld	hl,#_xC
   0781 4E                 2255 	ld	c,(hl)
   0782 7E                 2256 	ld	a,(hl)
   0783 17                 2257 	rla	
   0784 9F                 2258 	sbc	a,a
   0785 47                 2259 	ld	b,a
                           2260 ;	genCast
                           2261 ;	AOP_HL for _offStepC
                           2262 ;	AOP_STK for _updateUI_sloc2_1_0
   0786 21 2A 00           2263 	ld	hl,#_offStepC
   0789 7E                 2264 	ld	a,(hl)
   078A F8 00              2265 	lda	hl,0(sp)
   078C 77                 2266 	ld	(hl),a
   078D 21 2A 00           2267 	ld	hl,#_offStepC
   0790 7E                 2268 	ld	a,(hl)
   0791 17                 2269 	rla	
   0792 9F                 2270 	sbc	a,a
   0793 F8 01              2271 	lda	hl,1(sp)
   0795 77                 2272 	ld	(hl),a
                           2273 ;	genCast
                           2274 ;	AOP_HL for _numberOfPulsesC
                           2275 ;	AOP_STK for _updateUI_sloc1_1_0
   0796 21 25 00           2276 	ld	hl,#_numberOfPulsesC
   0799 7E                 2277 	ld	a,(hl)
   079A F8 02              2278 	lda	hl,2(sp)
   079C 77                 2279 	ld	(hl),a
   079D 21 25 00           2280 	ld	hl,#_numberOfPulsesC
   07A0 7E                 2281 	ld	a,(hl)
   07A1 17                 2282 	rla	
   07A2 9F                 2283 	sbc	a,a
   07A3 F8 03              2284 	lda	hl,3(sp)
   07A5 77                 2285 	ld	(hl),a
                           2286 ;	genCast
                           2287 ;	AOP_HL for _totalStepsC
                           2288 ;	AOP_STK for _updateUI_sloc0_1_0
   07A6 21 26 00           2289 	ld	hl,#_totalStepsC
   07A9 7E                 2290 	ld	a,(hl)
   07AA F8 04              2291 	lda	hl,4(sp)
   07AC 77                 2292 	ld	(hl),a
   07AD 21 26 00           2293 	ld	hl,#_totalStepsC
   07B0 7E                 2294 	ld	a,(hl)
   07B1 17                 2295 	rla	
   07B2 9F                 2296 	sbc	a,a
   07B3 F8 05              2297 	lda	hl,5(sp)
   07B5 77                 2298 	ld	(hl),a
                           2299 ;	genIpush
                           2300 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07B6 C5                 2301 	push	bc
                           2302 ;	genIpush
                           2303 ;	AOP_STK for _updateUI_sloc2_1_0
   07B7 F8 02              2304 	lda	hl,2(sp)
   07B9 2A                 2305 	ld	a,(hl+)
   07BA 66                 2306 	ld	h,(hl)
   07BB 6F                 2307 	ld	l,a
   07BC E5                 2308 	push	hl
                           2309 ;	genIpush
                           2310 ;	AOP_STK for _updateUI_sloc1_1_0
   07BD F8 06              2311 	lda	hl,6(sp)
   07BF 2A                 2312 	ld	a,(hl+)
   07C0 66                 2313 	ld	h,(hl)
   07C1 6F                 2314 	ld	l,a
   07C2 E5                 2315 	push	hl
                           2316 ;	genIpush
                           2317 ;	AOP_STK for _updateUI_sloc0_1_0
   07C3 F8 0A              2318 	lda	hl,10(sp)
   07C5 2A                 2319 	ld	a,(hl+)
   07C6 66                 2320 	ld	h,(hl)
   07C7 6F                 2321 	ld	l,a
   07C8 E5                 2322 	push	hl
                           2323 ;	genIpush
   07C9 21 DE 08           2324 	ld	hl,#__str_16
   07CC E5                 2325 	push	hl
                           2326 ;	genCall
   07CD CD 00 00           2327 	call	_printf
   07D0 E8 0A              2328 	lda	sp,10(sp)
                           2329 ;	square.c 270
                           2330 ;	genIpush
                           2331 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07D2 21 F2 08           2332 	ld	hl,#__str_17
   07D5 E5                 2333 	push	hl
                           2334 ;	genCall
   07D6 CD 00 00           2335 	call	_printf
   07D9 E8 02              2336 	lda	sp,2(sp)
                           2337 ;	square.c 271
                           2338 ;	genCmpEq
                           2339 ;	AOP_HL for _modus
                           2340 ; genCmpEq: left 1, right 1, result 1
   07DB 21 07 00           2341 	ld	hl,#_modus
   07DE 7E                 2342 	ld	a,(hl)
   07DF FE 01              2343 	cp	a,#0x01
   07E1 C2 E8 07           2344 	jp	nz,00132$
   07E4 3E 01              2345 	ld	a,#0x01
   07E6 18 01              2346 	jr	00133$
   07E8                    2347 00132$:
   07E8 AF                 2348 	xor	a,a
   07E9                    2349 00133$:
   07E9 4F                 2350 	ld	c,a
                           2351 ;	genIfx
   07EA AF                 2352 	xor	a,a
   07EB B1                 2353 	or	a,c
   07EC C2 13 08           2354 	jp	nz,00111$
                           2355 ;	square.c 273
                           2356 ;	genCast
                           2357 ;	AOP_HL for _tempo
                           2358 ;	AOP_STK for _updateUI_sloc2_1_0
   07EF 21 02 00           2359 	ld	hl,#_tempo
   07F2 7E                 2360 	ld	a,(hl)
   07F3 F8 00              2361 	lda	hl,0(sp)
   07F5 77                 2362 	ld	(hl),a
   07F6 21 02 00           2363 	ld	hl,#_tempo
   07F9 7E                 2364 	ld	a,(hl)
   07FA 17                 2365 	rla	
   07FB 9F                 2366 	sbc	a,a
   07FC F8 01              2367 	lda	hl,1(sp)
   07FE 77                 2368 	ld	(hl),a
                           2369 ;	genIpush
                           2370 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   07FF C5                 2371 	push	bc
                           2372 ;	AOP_STK for _updateUI_sloc2_1_0
   0800 2B                 2373 	dec	hl
   0801 2A                 2374 	ld	a,(hl+)
   0802 66                 2375 	ld	h,(hl)
   0803 6F                 2376 	ld	l,a
   0804 E5                 2377 	push	hl
                           2378 ;	genIpush
   0805 21 F4 08           2379 	ld	hl,#__str_18
   0808 E5                 2380 	push	hl
                           2381 ;	genCall
   0809 CD 00 00           2382 	call	_printf
   080C E8 04              2383 	lda	sp,4(sp)
   080E E1                 2384 	pop	hl
   080F 4D                 2385 	ld	c,l
                           2386 ;	genGoto
   0810 C3 1F 08           2387 	jp	00112$
                           2388 ;	genLabel
   0813                    2389 00111$:
                           2390 ;	square.c 277
                           2391 ;	genIpush
                           2392 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0813 C5                 2393 	push	bc
   0814 21 FE 08           2394 	ld	hl,#__str_19
   0817 E5                 2395 	push	hl
                           2396 ;	genCall
   0818 CD 00 00           2397 	call	_printf
   081B E8 02              2398 	lda	sp,2(sp)
   081D E1                 2399 	pop	hl
   081E 4D                 2400 	ld	c,l
                           2401 ;	genLabel
   081F                    2402 00112$:
                           2403 ;	square.c 279
                           2404 ;	genCmpEq
                           2405 ;	AOP_HL for _syncToDrum
                           2406 ; genCmpEq: left 1, right 1, result 0
   081F 21 1D 00           2407 	ld	hl,#_syncToDrum
   0822 7E                 2408 	ld	a,(hl)
   0823 FE 01              2409 	cp	a,#0x01
   0825 C2 39 08           2410 	jp	nz,00114$
   0828 18 03              2411 	jr	00135$
   082A                    2412 00134$:
   082A C3 39 08           2413 	jp	00114$
   082D                    2414 00135$:
                           2415 ;	square.c 281
                           2416 ;	genIpush
                           2417 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   082D C5                 2418 	push	bc
   082E 21 07 09           2419 	ld	hl,#__str_20
   0831 E5                 2420 	push	hl
                           2421 ;	genCall
   0832 CD 00 00           2422 	call	_printf
   0835 E8 02              2423 	lda	sp,2(sp)
   0837 E1                 2424 	pop	hl
   0838 4D                 2425 	ld	c,l
                           2426 ;	genLabel
   0839                    2427 00114$:
                           2428 ;	square.c 283
                           2429 ;	genIpush
                           2430 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0839 C5                 2431 	push	bc
   083A 21 0C 09           2432 	ld	hl,#__str_21
   083D E5                 2433 	push	hl
                           2434 ;	genCall
   083E CD 00 00           2435 	call	_printf
   0841 E8 02              2436 	lda	sp,2(sp)
   0843 E1                 2437 	pop	hl
   0844 4D                 2438 	ld	c,l
                           2439 ;	square.c 284
                           2440 ;	genIfx
   0845 AF                 2441 	xor	a,a
   0846 B1                 2442 	or	a,c
   0847 CA 56 08           2443 	jp	z,00116$
                           2444 ;	square.c 286
                           2445 ;	genIpush
                           2446 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   084A 21 0E 09           2447 	ld	hl,#__str_22
   084D E5                 2448 	push	hl
                           2449 ;	genCall
   084E CD 00 00           2450 	call	_printf
   0851 E8 02              2451 	lda	sp,2(sp)
                           2452 ;	genGoto
   0853 C3 5F 08           2453 	jp	00117$
                           2454 ;	genLabel
   0856                    2455 00116$:
                           2456 ;	square.c 290
                           2457 ;	genIpush
                           2458 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0856 21 1A 09           2459 	ld	hl,#__str_23
   0859 E5                 2460 	push	hl
                           2461 ;	genCall
   085A CD 00 00           2462 	call	_printf
   085D E8 02              2463 	lda	sp,2(sp)
                           2464 ;	genLabel
   085F                    2465 00117$:
                           2466 ;	square.c 292
                           2467 ;	genIpush
                           2468 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   085F 21 28 09           2469 	ld	hl,#__str_24
   0862 E5                 2470 	push	hl
                           2471 ;	genCall
   0863 CD 00 00           2472 	call	_printf
   0866 E8 02              2473 	lda	sp,2(sp)
                           2474 ;	square.c 293
                           2475 ;	genAssign
   0868 01 40 FF           2476 	ld	bc,#0xFF40
                           2477 ;	genAssign
                           2478 ;	AOP_STK for _updateUI_sloc2_1_0
   086B F8 00              2479 	lda	hl,0(sp)
   086D 36 40              2480 	ld	(hl),#0x40
   086F 23                 2481 	inc	hl
   0870 36 FF              2482 	ld	(hl),#0xFF
                           2483 ;	genPointerGet
                           2484 ;	AOP_STK for _updateUI_sloc2_1_0
                           2485 ;	AOP_STK for _updateUI_sloc1_1_0
   0872 2B                 2486 	dec	hl
   0873 5E                 2487 	ld	e,(hl)
   0874 23                 2488 	inc	hl
   0875 56                 2489 	ld	d,(hl)
   0876 1A                 2490 	ld	a,(de)
   0877 23                 2491 	inc	hl
                           2492 ;	genOr
                           2493 ;	AOP_STK for _updateUI_sloc1_1_0
   0878 77                 2494 	ld      (hl),a
                           2495 ; Removed redundent load
   0879 F6 01              2496 	or	a,#0x01
                           2497 ;	genAssign (pointer)
   087B 02                 2498 	ld	(bc),a
                           2499 ;	genLabel
   087C                    2500 00118$:
                           2501 ;	genEndFunction
   087C E8 06              2502 	lda	sp,6(sp)
   087E C9                 2503 	ret
   087F                    2504 ___updateUI_end:
   087F                    2505 __str_3:
   087F 00                 2506 	.db 0x00
   0880                    2507 __str_4:
   0880 0A                 2508 	.db 0x0A
   0881 00                 2509 	.db 0x00
   0882                    2510 __str_5:
   0882 53 51 55 41 52 45  2511 	.ascii "SQUARE GB "
        20 47 42 20
   088C 0A                 2512 	.db 0x0A
   088D 20                 2513 	.ascii " "
   088E 0A                 2514 	.db 0x0A
   088F 20                 2515 	.ascii " "
   0890 0A                 2516 	.db 0x0A
   0891 20                 2517 	.ascii " "
   0892 0A                 2518 	.db 0x0A
   0893 20                 2519 	.ascii " "
   0894 0A                 2520 	.db 0x0A
   0895 20                 2521 	.ascii " "
   0896 0A                 2522 	.db 0x0A
   0897 20                 2523 	.ascii " "
   0898 0A                 2524 	.db 0x0A
   0899 20                 2525 	.ascii " "
   089A 0A                 2526 	.db 0x0A
   089B 20                 2527 	.ascii " "
   089C 0A                 2528 	.db 0x0A
   089D 20                 2529 	.ascii " "
   089E 0A                 2530 	.db 0x0A
   089F 00                 2531 	.db 0x00
   08A0                    2532 __str_6:
   08A0 2A 20              2533 	.ascii "* "
   08A2 00                 2534 	.db 0x00
   08A3                    2535 __str_7:
   08A3 41 20              2536 	.ascii "A "
   08A5 00                 2537 	.db 0x00
   08A6                    2538 __str_8:
   08A6 53 3A 25 64 20 50  2539 	.ascii "S:%d P:%d O:%d R:%d"
        3A 25 64 20 4F 3A
        25 64 20 52 3A 25
        64
   08B9 00                 2540 	.db 0x00
   08BA                    2541 __str_9:
   08BA 0A                 2542 	.db 0x0A
   08BB 00                 2543 	.db 0x00
   08BC                    2544 __str_10:
   08BC 2A 20              2545 	.ascii "* "
   08BE 00                 2546 	.db 0x00
   08BF                    2547 __str_11:
   08BF 42 20              2548 	.ascii "B "
   08C1 00                 2549 	.db 0x00
   08C2                    2550 __str_12:
   08C2 53 3A 25 64 20 50  2551 	.ascii "S:%d P:%d O:%d R:%d"
        3A 25 64 20 4F 3A
        25 64 20 52 3A 25
        64
   08D5 00                 2552 	.db 0x00
   08D6                    2553 __str_13:
   08D6 0A                 2554 	.db 0x0A
   08D7 00                 2555 	.db 0x00
   08D8                    2556 __str_14:
   08D8 2A 20              2557 	.ascii "* "
   08DA 00                 2558 	.db 0x00
   08DB                    2559 __str_15:
   08DB 43 20              2560 	.ascii "C "
   08DD 00                 2561 	.db 0x00
   08DE                    2562 __str_16:
   08DE 53 3A 25 64 20 50  2563 	.ascii "S:%d P:%d O:%d R:%d"
        3A 25 64 20 4F 3A
        25 64 20 52 3A 25
        64
   08F1 00                 2564 	.db 0x00
   08F2                    2565 __str_17:
   08F2 0A                 2566 	.db 0x0A
   08F3 00                 2567 	.db 0x00
   08F4                    2568 __str_18:
   08F4 54 65 6D 70 6F 3A  2569 	.ascii "Tempo: %d"
        20 25 64
   08FD 00                 2570 	.db 0x00
   08FE                    2571 __str_19:
   08FE 54 65 6D 70 6F 3A  2572 	.ascii "Tempo: P"
        20 50
   0906 00                 2573 	.db 0x00
   0907                    2574 __str_20:
   0907 20 53 59 4E        2575 	.ascii " SYN"
   090B 00                 2576 	.db 0x00
   090C                    2577 __str_21:
   090C 0A                 2578 	.db 0x0A
   090D 00                 2579 	.db 0x00
   090E                    2580 __str_22:
   090E 4D 6F 64 75 73 3A  2581 	.ascii "Modus: Sync"
        20 53 79 6E 63
   0919 00                 2582 	.db 0x00
   091A                    2583 __str_23:
   091A 4D 6F 64 75 73 3A  2584 	.ascii "Modus: Master"
        20 4D 61 73 74 65
        72
   0927 00                 2585 	.db 0x00
   0928                    2586 __str_24:
   0928 0A                 2587 	.db 0x0A
   0929 00                 2588 	.db 0x00
                           2589 ;	square.c 297
                           2590 ;	genLabel
                           2591 ;	genFunction
                           2592 ;	---------------------------------
                           2593 ; Function setupDrum
                           2594 ; ---------------------------------
   092A                    2595 ___setupDrum_start:
   092A                    2596 _setupDrum:
                           2597 	
                           2598 ;	square.c 299
                           2599 ;	genCmpEq
                           2600 ;	AOP_HL for _seldrum
                           2601 ; genCmpEq: left 1, right 1, result 0
   092A 21 0B 00           2602 	ld	hl,#_seldrum
   092D 7E                 2603 	ld	a,(hl)
   092E B7                 2604 	or	a,a
   092F CA 47 09           2605 	jp	z,00101$
   0932                    2606 00111$:
                           2607 ;	genCmpEq
                           2608 ;	AOP_HL for _seldrum
                           2609 ; genCmpEq: left 1, right 1, result 0
   0932 21 0B 00           2610 	ld	hl,#_seldrum
   0935 7E                 2611 	ld	a,(hl)
   0936 FE 01              2612 	cp	a,#0x01
   0938 CA 4D 09           2613 	jp	z,00102$
   093B                    2614 00112$:
                           2615 ;	genCmpEq
                           2616 ;	AOP_HL for _seldrum
                           2617 ; genCmpEq: left 1, right 1, result 0
   093B 21 0B 00           2618 	ld	hl,#_seldrum
   093E 7E                 2619 	ld	a,(hl)
   093F FE 02              2620 	cp	a,#0x02
   0941 CA 53 09           2621 	jp	z,00103$
   0944                    2622 00113$:
                           2623 ;	genGoto
   0944 C3 59 09           2624 	jp	00104$
                           2625 ;	square.c 302
                           2626 ;	genLabel
   0947                    2627 00101$:
                           2628 ;	genCall
                           2629 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0947 CD CF 00           2630 	call	_fillDrumA
                           2631 ;	square.c 303
                           2632 ;	genGoto
   094A C3 62 09           2633 	jp	00105$
                           2634 ;	square.c 305
                           2635 ;	genLabel
   094D                    2636 00102$:
                           2637 ;	genCall
                           2638 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   094D CD 9F 02           2639 	call	_fillDrumB
                           2640 ;	square.c 306
                           2641 ;	genGoto
   0950 C3 62 09           2642 	jp	00105$
                           2643 ;	square.c 308
                           2644 ;	genLabel
   0953                    2645 00103$:
                           2646 ;	genCall
                           2647 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0953 CD 6F 04           2648 	call	_fillDrumC
                           2649 ;	square.c 309
                           2650 ;	genGoto
   0956 C3 62 09           2651 	jp	00105$
                           2652 ;	square.c 311
                           2653 ;	genLabel
   0959                    2654 00104$:
                           2655 ;	genCall
                           2656 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0959 CD CF 00           2657 	call	_fillDrumA
                           2658 ;	square.c 312
                           2659 ;	genCall
                           2660 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   095C CD 9F 02           2661 	call	_fillDrumB
                           2662 ;	square.c 313
                           2663 ;	genCall
                           2664 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   095F CD 6F 04           2665 	call	_fillDrumC
                           2666 ;	square.c 314
                           2667 ;	genLabel
   0962                    2668 00105$:
                           2669 ;	square.c 315
                           2670 ;	genCall
                           2671 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0962 CD 3F 06           2672 	call	_updateUI
                           2673 ;	genLabel
   0965                    2674 00106$:
                           2675 ;	genEndFunction
                           2676 	
   0965 C9                 2677 	ret
   0966                    2678 ___setupDrum_end:
                           2679 ;	square.c 320
                           2680 ;	genLabel
                           2681 ;	genFunction
                           2682 ;	---------------------------------
                           2683 ; Function increaseOffStep
                           2684 ; ---------------------------------
   0966                    2685 ___increaseOffStep_start:
   0966                    2686 _increaseOffStep:
   0966 E8 FE              2687 	lda	sp,-2(sp)
                           2688 ;	square.c 322
                           2689 ;	genAssign
   0968 0E 00              2690 	ld	c,#0x00
                           2691 ;	square.c 323
                           2692 ;	genAssign
                           2693 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   096A F8 01              2694 	lda	hl,1(sp)
   096C 36 01              2695 	ld	(hl),#0x01
                           2696 ;	square.c 324
                           2697 ;	genCmpEq
                           2698 ;	AOP_HL for _seldrum
                           2699 ; genCmpEq: left 1, right 1, result 1
   096E 21 0B 00           2700 	ld	hl,#_seldrum
   0971 7E                 2701 	ld	a,(hl)
   0972 B7                 2702 	or	a,a
   0973 C2 7A 09           2703 	jp	nz,00120$
   0976 3E 01              2704 	ld	a,#0x01
   0978 18 01              2705 	jr	00121$
   097A                    2706 00120$:
   097A AF                 2707 	xor	a,a
   097B                    2708 00121$:
   097B 47                 2709 	ld	b,a
                           2710 ;	genIfx
   097C AF                 2711 	xor	a,a
   097D B0                 2712 	or	a,b
   097E C2 96 09           2713 	jp	nz,00101$
                           2714 ;	genCmpEq
                           2715 ;	AOP_HL for _seldrum
                           2716 ; genCmpEq: left 1, right 1, result 0
   0981 21 0B 00           2717 	ld	hl,#_seldrum
   0984 7E                 2718 	ld	a,(hl)
   0985 FE 01              2719 	cp	a,#0x01
   0987 CA A4 09           2720 	jp	z,00102$
   098A                    2721 00122$:
                           2722 ;	genCmpEq
                           2723 ;	AOP_HL for _seldrum
                           2724 ; genCmpEq: left 1, right 1, result 0
   098A 21 0B 00           2725 	ld	hl,#_seldrum
   098D 7E                 2726 	ld	a,(hl)
   098E FE 02              2727 	cp	a,#0x02
   0990 CA B2 09           2728 	jp	z,00103$
   0993                    2729 00123$:
                           2730 ;	genGoto
   0993 C3 BD 09           2731 	jp	00104$
                           2732 ;	square.c 327
                           2733 ;	genLabel
   0996                    2734 00101$:
                           2735 ;	genAssign
                           2736 ;	AOP_HL for _offStepA
   0996 21 28 00           2737 	ld	hl,#_offStepA
   0999 4E                 2738 	ld	c,(hl)
                           2739 ;	square.c 328
                           2740 ;	genAssign
                           2741 ;	AOP_HL for _totalStepsA
                           2742 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   099A 21 20 00           2743 	ld	hl,#_totalStepsA
   099D 7E                 2744 	ld	a,(hl)
   099E F8 01              2745 	lda	hl,1(sp)
   09A0 77                 2746 	ld	(hl),a
                           2747 ;	square.c 329
                           2748 ;	genGoto
   09A1 C3 BD 09           2749 	jp	00104$
                           2750 ;	square.c 331
                           2751 ;	genLabel
   09A4                    2752 00102$:
                           2753 ;	genAssign
                           2754 ;	AOP_HL for _offStepB
   09A4 21 29 00           2755 	ld	hl,#_offStepB
   09A7 4E                 2756 	ld	c,(hl)
                           2757 ;	square.c 332
                           2758 ;	genAssign
                           2759 ;	AOP_HL for _totalStepsB
                           2760 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   09A8 21 23 00           2761 	ld	hl,#_totalStepsB
   09AB 7E                 2762 	ld	a,(hl)
   09AC F8 01              2763 	lda	hl,1(sp)
   09AE 77                 2764 	ld	(hl),a
                           2765 ;	square.c 333
                           2766 ;	genGoto
   09AF C3 BD 09           2767 	jp	00104$
                           2768 ;	square.c 335
                           2769 ;	genLabel
   09B2                    2770 00103$:
                           2771 ;	genAssign
                           2772 ;	AOP_HL for _offStepC
   09B2 21 2A 00           2773 	ld	hl,#_offStepC
   09B5 4E                 2774 	ld	c,(hl)
                           2775 ;	square.c 336
                           2776 ;	genAssign
                           2777 ;	AOP_HL for _totalStepsC
                           2778 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   09B6 21 26 00           2779 	ld	hl,#_totalStepsC
   09B9 7E                 2780 	ld	a,(hl)
   09BA F8 01              2781 	lda	hl,1(sp)
   09BC 77                 2782 	ld	(hl),a
                           2783 ;	square.c 338
                           2784 ;	genLabel
   09BD                    2785 00104$:
                           2786 ;	square.c 339
                           2787 ;	genPlus
                           2788 ;	genPlusIncr
                           2789 ; Removed redundent load
   09BD 0C                 2790 	inc	c
                           2791 ;	square.c 340
                           2792 ;	genMinus
                           2793 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
                           2794 ;	AOP_STK for _increaseOffStep_sloc0_1_0
   09BE F8 01              2795 	lda	hl,1(sp)
   09C0 7E                 2796 	ld	a,(hl)
   09C1 C6 FF              2797 	add	a,#0xFF
   09C3 2B                 2798 	dec	hl
                           2799 ;	genCmpGt
                           2800 ;	AOP_STK for _increaseOffStep_sloc0_1_0
   09C4 77                 2801 	ld      (hl),a
                           2802 ; Removed redundent load
   09C5 91                 2803 	sub	a,c
   09C6 D2 CB 09           2804 	jp	nc,00106$
                           2805 ;	square.c 342
                           2806 ;	genAssign
   09C9 0E 00              2807 	ld	c,#0x00
                           2808 ;	genLabel
   09CB                    2809 00106$:
                           2810 ;	square.c 344
                           2811 ;	genIfx
   09CB AF                 2812 	xor	a,a
   09CC B0                 2813 	or	a,b
   09CD C2 E5 09           2814 	jp	nz,00107$
                           2815 ;	genCmpEq
                           2816 ;	AOP_HL for _seldrum
                           2817 ; genCmpEq: left 1, right 1, result 0
   09D0 21 0B 00           2818 	ld	hl,#_seldrum
   09D3 7E                 2819 	ld	a,(hl)
   09D4 FE 01              2820 	cp	a,#0x01
   09D6 CA EC 09           2821 	jp	z,00108$
   09D9                    2822 00124$:
                           2823 ;	genCmpEq
                           2824 ;	AOP_HL for _seldrum
                           2825 ; genCmpEq: left 1, right 1, result 0
   09D9 21 0B 00           2826 	ld	hl,#_seldrum
   09DC 7E                 2827 	ld	a,(hl)
   09DD FE 02              2828 	cp	a,#0x02
   09DF CA F3 09           2829 	jp	z,00109$
   09E2                    2830 00125$:
                           2831 ;	genGoto
   09E2 C3 F7 09           2832 	jp	00110$
                           2833 ;	square.c 347
                           2834 ;	genLabel
   09E5                    2835 00107$:
                           2836 ;	genAssign
                           2837 ;	AOP_HL for _offStepA
   09E5 21 28 00           2838 	ld	hl,#_offStepA
   09E8 71                 2839 	ld	(hl),c
                           2840 ;	square.c 348
                           2841 ;	genGoto
   09E9 C3 F7 09           2842 	jp	00110$
                           2843 ;	square.c 350
                           2844 ;	genLabel
   09EC                    2845 00108$:
                           2846 ;	genAssign
                           2847 ;	AOP_HL for _offStepB
   09EC 21 29 00           2848 	ld	hl,#_offStepB
   09EF 71                 2849 	ld	(hl),c
                           2850 ;	square.c 351
                           2851 ;	genGoto
   09F0 C3 F7 09           2852 	jp	00110$
                           2853 ;	square.c 353
                           2854 ;	genLabel
   09F3                    2855 00109$:
                           2856 ;	genAssign
                           2857 ;	AOP_HL for _offStepC
   09F3 21 2A 00           2858 	ld	hl,#_offStepC
   09F6 71                 2859 	ld	(hl),c
                           2860 ;	square.c 355
                           2861 ;	genLabel
   09F7                    2862 00110$:
                           2863 ;	square.c 356
                           2864 ;	genCall
                           2865 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   09F7 CD 2A 09           2866 	call	_setupDrum
                           2867 ;	genLabel
   09FA                    2868 00111$:
                           2869 ;	genEndFunction
   09FA E8 02              2870 	lda	sp,2(sp)
   09FC C9                 2871 	ret
   09FD                    2872 ___increaseOffStep_end:
                           2873 ;	square.c 359
                           2874 ;	genLabel
                           2875 ;	genFunction
                           2876 ;	---------------------------------
                           2877 ; Function decreaseOffStep
                           2878 ; ---------------------------------
   09FD                    2879 ___decreaseOffStep_start:
   09FD                    2880 _decreaseOffStep:
                           2881 	
                           2882 ;	square.c 361
                           2883 ;	genAssign
   09FD 0E 00              2884 	ld	c,#0x00
                           2885 ;	square.c 363
                           2886 ;	genCmpEq
                           2887 ;	AOP_HL for _seldrum
                           2888 ; genCmpEq: left 1, right 1, result 1
   09FF 21 0B 00           2889 	ld	hl,#_seldrum
   0A02 7E                 2890 	ld	a,(hl)
   0A03 B7                 2891 	or	a,a
   0A04 C2 0B 0A           2892 	jp	nz,00120$
   0A07 3E 01              2893 	ld	a,#0x01
   0A09 18 01              2894 	jr	00121$
   0A0B                    2895 00120$:
   0A0B AF                 2896 	xor	a,a
   0A0C                    2897 00121$:
   0A0C 47                 2898 	ld	b,a
                           2899 ;	genIfx
   0A0D AF                 2900 	xor	a,a
   0A0E B0                 2901 	or	a,b
   0A0F C2 27 0A           2902 	jp	nz,00101$
                           2903 ;	genCmpEq
                           2904 ;	AOP_HL for _seldrum
                           2905 ; genCmpEq: left 1, right 1, result 0
   0A12 21 0B 00           2906 	ld	hl,#_seldrum
   0A15 7E                 2907 	ld	a,(hl)
   0A16 FE 01              2908 	cp	a,#0x01
   0A18 CA 2E 0A           2909 	jp	z,00102$
   0A1B                    2910 00122$:
                           2911 ;	genCmpEq
                           2912 ;	AOP_HL for _seldrum
                           2913 ; genCmpEq: left 1, right 1, result 0
   0A1B 21 0B 00           2914 	ld	hl,#_seldrum
   0A1E 7E                 2915 	ld	a,(hl)
   0A1F FE 02              2916 	cp	a,#0x02
   0A21 CA 35 0A           2917 	jp	z,00103$
   0A24                    2918 00123$:
                           2919 ;	genGoto
   0A24 C3 39 0A           2920 	jp	00104$
                           2921 ;	square.c 366
                           2922 ;	genLabel
   0A27                    2923 00101$:
                           2924 ;	genAssign
                           2925 ;	AOP_HL for _offStepA
   0A27 21 28 00           2926 	ld	hl,#_offStepA
   0A2A 4E                 2927 	ld	c,(hl)
                           2928 ;	square.c 368
                           2929 ;	genGoto
   0A2B C3 39 0A           2930 	jp	00104$
                           2931 ;	square.c 370
                           2932 ;	genLabel
   0A2E                    2933 00102$:
                           2934 ;	genAssign
                           2935 ;	AOP_HL for _offStepB
   0A2E 21 29 00           2936 	ld	hl,#_offStepB
   0A31 4E                 2937 	ld	c,(hl)
                           2938 ;	square.c 372
                           2939 ;	genGoto
   0A32 C3 39 0A           2940 	jp	00104$
                           2941 ;	square.c 374
                           2942 ;	genLabel
   0A35                    2943 00103$:
                           2944 ;	genAssign
                           2945 ;	AOP_HL for _offStepC
   0A35 21 2A 00           2946 	ld	hl,#_offStepC
   0A38 4E                 2947 	ld	c,(hl)
                           2948 ;	square.c 377
                           2949 ;	genLabel
   0A39                    2950 00104$:
                           2951 ;	square.c 379
                           2952 ;	genCmpEq
                           2953 ; genCmpEq: left 1, right 1, result 0
   0A39 79                 2954 	ld	a,c
   0A3A B7                 2955 	or	a,a
   0A3B CA 3F 0A           2956 	jp	z,00106$
   0A3E                    2957 00124$:
                           2958 ;	square.c 381
                           2959 ;	genMinus
   0A3E 0D                 2960 	dec	c
                           2961 ;	genLabel
   0A3F                    2962 00106$:
                           2963 ;	square.c 383
                           2964 ;	genIfx
   0A3F AF                 2965 	xor	a,a
   0A40 B0                 2966 	or	a,b
   0A41 C2 59 0A           2967 	jp	nz,00107$
                           2968 ;	genCmpEq
                           2969 ;	AOP_HL for _seldrum
                           2970 ; genCmpEq: left 1, right 1, result 0
   0A44 21 0B 00           2971 	ld	hl,#_seldrum
   0A47 7E                 2972 	ld	a,(hl)
   0A48 FE 01              2973 	cp	a,#0x01
   0A4A CA 60 0A           2974 	jp	z,00108$
   0A4D                    2975 00125$:
                           2976 ;	genCmpEq
                           2977 ;	AOP_HL for _seldrum
                           2978 ; genCmpEq: left 1, right 1, result 0
   0A4D 21 0B 00           2979 	ld	hl,#_seldrum
   0A50 7E                 2980 	ld	a,(hl)
   0A51 FE 02              2981 	cp	a,#0x02
   0A53 CA 67 0A           2982 	jp	z,00109$
   0A56                    2983 00126$:
                           2984 ;	genGoto
   0A56 C3 6B 0A           2985 	jp	00110$
                           2986 ;	square.c 386
                           2987 ;	genLabel
   0A59                    2988 00107$:
                           2989 ;	genAssign
                           2990 ;	AOP_HL for _offStepA
   0A59 21 28 00           2991 	ld	hl,#_offStepA
   0A5C 71                 2992 	ld	(hl),c
                           2993 ;	square.c 387
                           2994 ;	genGoto
   0A5D C3 6B 0A           2995 	jp	00110$
                           2996 ;	square.c 389
                           2997 ;	genLabel
   0A60                    2998 00108$:
                           2999 ;	genAssign
                           3000 ;	AOP_HL for _offStepB
   0A60 21 29 00           3001 	ld	hl,#_offStepB
   0A63 71                 3002 	ld	(hl),c
                           3003 ;	square.c 390
                           3004 ;	genGoto
   0A64 C3 6B 0A           3005 	jp	00110$
                           3006 ;	square.c 392
                           3007 ;	genLabel
   0A67                    3008 00109$:
                           3009 ;	genAssign
                           3010 ;	AOP_HL for _offStepC
   0A67 21 2A 00           3011 	ld	hl,#_offStepC
   0A6A 71                 3012 	ld	(hl),c
                           3013 ;	square.c 394
                           3014 ;	genLabel
   0A6B                    3015 00110$:
                           3016 ;	square.c 395
                           3017 ;	genCall
                           3018 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A6B CD 2A 09           3019 	call	_setupDrum
                           3020 ;	genLabel
   0A6E                    3021 00111$:
                           3022 ;	genEndFunction
                           3023 	
   0A6E C9                 3024 	ret
   0A6F                    3025 ___decreaseOffStep_end:
                           3026 ;	square.c 398
                           3027 ;	genLabel
                           3028 ;	genFunction
                           3029 ;	---------------------------------
                           3030 ; Function increaseSteps
                           3031 ; ---------------------------------
   0A6F                    3032 ___increaseSteps_start:
   0A6F                    3033 _increaseSteps:
                           3034 	
                           3035 ;	square.c 400
                           3036 ;	genAssign
   0A6F 0E 01              3037 	ld	c,#0x01
                           3038 ;	square.c 401
                           3039 ;	genCmpEq
                           3040 ;	AOP_HL for _seldrum
                           3041 ; genCmpEq: left 1, right 1, result 1
   0A71 21 0B 00           3042 	ld	hl,#_seldrum
   0A74 7E                 3043 	ld	a,(hl)
   0A75 B7                 3044 	or	a,a
   0A76 C2 7D 0A           3045 	jp	nz,00120$
   0A79 3E 01              3046 	ld	a,#0x01
   0A7B 18 01              3047 	jr	00121$
   0A7D                    3048 00120$:
   0A7D AF                 3049 	xor	a,a
   0A7E                    3050 00121$:
   0A7E 47                 3051 	ld	b,a
                           3052 ;	genIfx
   0A7F AF                 3053 	xor	a,a
   0A80 B0                 3054 	or	a,b
   0A81 C2 99 0A           3055 	jp	nz,00101$
                           3056 ;	genCmpEq
                           3057 ;	AOP_HL for _seldrum
                           3058 ; genCmpEq: left 1, right 1, result 0
   0A84 21 0B 00           3059 	ld	hl,#_seldrum
   0A87 7E                 3060 	ld	a,(hl)
   0A88 FE 01              3061 	cp	a,#0x01
   0A8A CA A0 0A           3062 	jp	z,00102$
   0A8D                    3063 00122$:
                           3064 ;	genCmpEq
                           3065 ;	AOP_HL for _seldrum
                           3066 ; genCmpEq: left 1, right 1, result 0
   0A8D 21 0B 00           3067 	ld	hl,#_seldrum
   0A90 7E                 3068 	ld	a,(hl)
   0A91 FE 02              3069 	cp	a,#0x02
   0A93 CA A7 0A           3070 	jp	z,00103$
   0A96                    3071 00123$:
                           3072 ;	genGoto
   0A96 C3 AB 0A           3073 	jp	00104$
                           3074 ;	square.c 404
                           3075 ;	genLabel
   0A99                    3076 00101$:
                           3077 ;	genAssign
                           3078 ;	AOP_HL for _totalStepsA
   0A99 21 20 00           3079 	ld	hl,#_totalStepsA
   0A9C 4E                 3080 	ld	c,(hl)
                           3081 ;	square.c 405
                           3082 ;	genGoto
   0A9D C3 AB 0A           3083 	jp	00104$
                           3084 ;	square.c 407
                           3085 ;	genLabel
   0AA0                    3086 00102$:
                           3087 ;	genAssign
                           3088 ;	AOP_HL for _totalStepsB
   0AA0 21 23 00           3089 	ld	hl,#_totalStepsB
   0AA3 4E                 3090 	ld	c,(hl)
                           3091 ;	square.c 408
                           3092 ;	genGoto
   0AA4 C3 AB 0A           3093 	jp	00104$
                           3094 ;	square.c 410
                           3095 ;	genLabel
   0AA7                    3096 00103$:
                           3097 ;	genAssign
                           3098 ;	AOP_HL for _totalStepsC
   0AA7 21 26 00           3099 	ld	hl,#_totalStepsC
   0AAA 4E                 3100 	ld	c,(hl)
                           3101 ;	square.c 412
                           3102 ;	genLabel
   0AAB                    3103 00104$:
                           3104 ;	square.c 413
                           3105 ;	genPlus
                           3106 ;	genPlusIncr
                           3107 ; Removed redundent load
   0AAB 0C                 3108 	inc	c
                           3109 ;	square.c 414
                           3110 ;	genCmpGt
   0AAC 3E 20              3111 	ld	a,#0x20
   0AAE 91                 3112 	sub	a,c
   0AAF D2 B4 0A           3113 	jp	nc,00106$
                           3114 ;	square.c 416
                           3115 ;	genAssign
   0AB2 0E 01              3116 	ld	c,#0x01
                           3117 ;	genLabel
   0AB4                    3118 00106$:
                           3119 ;	square.c 418
                           3120 ;	genIfx
   0AB4 AF                 3121 	xor	a,a
   0AB5 B0                 3122 	or	a,b
   0AB6 C2 CE 0A           3123 	jp	nz,00107$
                           3124 ;	genCmpEq
                           3125 ;	AOP_HL for _seldrum
                           3126 ; genCmpEq: left 1, right 1, result 0
   0AB9 21 0B 00           3127 	ld	hl,#_seldrum
   0ABC 7E                 3128 	ld	a,(hl)
   0ABD FE 01              3129 	cp	a,#0x01
   0ABF CA D5 0A           3130 	jp	z,00108$
   0AC2                    3131 00124$:
                           3132 ;	genCmpEq
                           3133 ;	AOP_HL for _seldrum
                           3134 ; genCmpEq: left 1, right 1, result 0
   0AC2 21 0B 00           3135 	ld	hl,#_seldrum
   0AC5 7E                 3136 	ld	a,(hl)
   0AC6 FE 02              3137 	cp	a,#0x02
   0AC8 CA DC 0A           3138 	jp	z,00109$
   0ACB                    3139 00125$:
                           3140 ;	genGoto
   0ACB C3 E0 0A           3141 	jp	00110$
                           3142 ;	square.c 421
                           3143 ;	genLabel
   0ACE                    3144 00107$:
                           3145 ;	genAssign
                           3146 ;	AOP_HL for _totalStepsA
   0ACE 21 20 00           3147 	ld	hl,#_totalStepsA
   0AD1 71                 3148 	ld	(hl),c
                           3149 ;	square.c 422
                           3150 ;	genGoto
   0AD2 C3 E0 0A           3151 	jp	00110$
                           3152 ;	square.c 424
                           3153 ;	genLabel
   0AD5                    3154 00108$:
                           3155 ;	genAssign
                           3156 ;	AOP_HL for _totalStepsB
   0AD5 21 23 00           3157 	ld	hl,#_totalStepsB
   0AD8 71                 3158 	ld	(hl),c
                           3159 ;	square.c 425
                           3160 ;	genGoto
   0AD9 C3 E0 0A           3161 	jp	00110$
                           3162 ;	square.c 427
                           3163 ;	genLabel
   0ADC                    3164 00109$:
                           3165 ;	genAssign
                           3166 ;	AOP_HL for _totalStepsC
   0ADC 21 26 00           3167 	ld	hl,#_totalStepsC
   0ADF 71                 3168 	ld	(hl),c
                           3169 ;	square.c 429
                           3170 ;	genLabel
   0AE0                    3171 00110$:
                           3172 ;	square.c 430
                           3173 ;	genCall
                           3174 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AE0 CD 2A 09           3175 	call	_setupDrum
                           3176 ;	genLabel
   0AE3                    3177 00111$:
                           3178 ;	genEndFunction
                           3179 	
   0AE3 C9                 3180 	ret
   0AE4                    3181 ___increaseSteps_end:
                           3182 ;	square.c 433
                           3183 ;	genLabel
                           3184 ;	genFunction
                           3185 ;	---------------------------------
                           3186 ; Function decreaseSteps
                           3187 ; ---------------------------------
   0AE4                    3188 ___decreaseSteps_start:
   0AE4                    3189 _decreaseSteps:
                           3190 	
                           3191 ;	square.c 435
                           3192 ;	genAssign
   0AE4 0E 01              3193 	ld	c,#0x01
                           3194 ;	square.c 436
                           3195 ;	genCmpEq
                           3196 ;	AOP_HL for _seldrum
                           3197 ; genCmpEq: left 1, right 1, result 1
   0AE6 21 0B 00           3198 	ld	hl,#_seldrum
   0AE9 7E                 3199 	ld	a,(hl)
   0AEA B7                 3200 	or	a,a
   0AEB C2 F2 0A           3201 	jp	nz,00120$
   0AEE 3E 01              3202 	ld	a,#0x01
   0AF0 18 01              3203 	jr	00121$
   0AF2                    3204 00120$:
   0AF2 AF                 3205 	xor	a,a
   0AF3                    3206 00121$:
   0AF3 47                 3207 	ld	b,a
                           3208 ;	genIfx
   0AF4 AF                 3209 	xor	a,a
   0AF5 B0                 3210 	or	a,b
   0AF6 C2 0E 0B           3211 	jp	nz,00101$
                           3212 ;	genCmpEq
                           3213 ;	AOP_HL for _seldrum
                           3214 ; genCmpEq: left 1, right 1, result 0
   0AF9 21 0B 00           3215 	ld	hl,#_seldrum
   0AFC 7E                 3216 	ld	a,(hl)
   0AFD FE 01              3217 	cp	a,#0x01
   0AFF CA 15 0B           3218 	jp	z,00102$
   0B02                    3219 00122$:
                           3220 ;	genCmpEq
                           3221 ;	AOP_HL for _seldrum
                           3222 ; genCmpEq: left 1, right 1, result 0
   0B02 21 0B 00           3223 	ld	hl,#_seldrum
   0B05 7E                 3224 	ld	a,(hl)
   0B06 FE 02              3225 	cp	a,#0x02
   0B08 CA 1C 0B           3226 	jp	z,00103$
   0B0B                    3227 00123$:
                           3228 ;	genGoto
   0B0B C3 20 0B           3229 	jp	00104$
                           3230 ;	square.c 439
                           3231 ;	genLabel
   0B0E                    3232 00101$:
                           3233 ;	genAssign
                           3234 ;	AOP_HL for _totalStepsA
   0B0E 21 20 00           3235 	ld	hl,#_totalStepsA
   0B11 4E                 3236 	ld	c,(hl)
                           3237 ;	square.c 440
                           3238 ;	genGoto
   0B12 C3 20 0B           3239 	jp	00104$
                           3240 ;	square.c 442
                           3241 ;	genLabel
   0B15                    3242 00102$:
                           3243 ;	genAssign
                           3244 ;	AOP_HL for _totalStepsB
   0B15 21 23 00           3245 	ld	hl,#_totalStepsB
   0B18 4E                 3246 	ld	c,(hl)
                           3247 ;	square.c 443
                           3248 ;	genGoto
   0B19 C3 20 0B           3249 	jp	00104$
                           3250 ;	square.c 445
                           3251 ;	genLabel
   0B1C                    3252 00103$:
                           3253 ;	genAssign
                           3254 ;	AOP_HL for _totalStepsC
   0B1C 21 26 00           3255 	ld	hl,#_totalStepsC
   0B1F 4E                 3256 	ld	c,(hl)
                           3257 ;	square.c 447
                           3258 ;	genLabel
   0B20                    3259 00104$:
                           3260 ;	square.c 448
                           3261 ;	genMinus
   0B20 0D                 3262 	dec	c
                           3263 ;	square.c 449
                           3264 ;	genCmpLt
   0B21 79                 3265 	ld	a,c
   0B22 FE 01              3266 	cp	#0x01
   0B24 D2 29 0B           3267 	jp	nc,00106$
                           3268 ;	square.c 451
                           3269 ;	genAssign
   0B27 0E 20              3270 	ld	c,#0x20
                           3271 ;	genLabel
   0B29                    3272 00106$:
                           3273 ;	square.c 453
                           3274 ;	genIfx
   0B29 AF                 3275 	xor	a,a
   0B2A B0                 3276 	or	a,b
   0B2B C2 43 0B           3277 	jp	nz,00107$
                           3278 ;	genCmpEq
                           3279 ;	AOP_HL for _seldrum
                           3280 ; genCmpEq: left 1, right 1, result 0
   0B2E 21 0B 00           3281 	ld	hl,#_seldrum
   0B31 7E                 3282 	ld	a,(hl)
   0B32 FE 01              3283 	cp	a,#0x01
   0B34 CA 4A 0B           3284 	jp	z,00108$
   0B37                    3285 00124$:
                           3286 ;	genCmpEq
                           3287 ;	AOP_HL for _seldrum
                           3288 ; genCmpEq: left 1, right 1, result 0
   0B37 21 0B 00           3289 	ld	hl,#_seldrum
   0B3A 7E                 3290 	ld	a,(hl)
   0B3B FE 02              3291 	cp	a,#0x02
   0B3D CA 51 0B           3292 	jp	z,00109$
   0B40                    3293 00125$:
                           3294 ;	genGoto
   0B40 C3 55 0B           3295 	jp	00110$
                           3296 ;	square.c 456
                           3297 ;	genLabel
   0B43                    3298 00107$:
                           3299 ;	genAssign
                           3300 ;	AOP_HL for _totalStepsA
   0B43 21 20 00           3301 	ld	hl,#_totalStepsA
   0B46 71                 3302 	ld	(hl),c
                           3303 ;	square.c 457
                           3304 ;	genGoto
   0B47 C3 55 0B           3305 	jp	00110$
                           3306 ;	square.c 459
                           3307 ;	genLabel
   0B4A                    3308 00108$:
                           3309 ;	genAssign
                           3310 ;	AOP_HL for _totalStepsB
   0B4A 21 23 00           3311 	ld	hl,#_totalStepsB
   0B4D 71                 3312 	ld	(hl),c
                           3313 ;	square.c 460
                           3314 ;	genGoto
   0B4E C3 55 0B           3315 	jp	00110$
                           3316 ;	square.c 462
                           3317 ;	genLabel
   0B51                    3318 00109$:
                           3319 ;	genAssign
                           3320 ;	AOP_HL for _totalStepsC
   0B51 21 26 00           3321 	ld	hl,#_totalStepsC
   0B54 71                 3322 	ld	(hl),c
                           3323 ;	square.c 464
                           3324 ;	genLabel
   0B55                    3325 00110$:
                           3326 ;	square.c 465
                           3327 ;	genCall
                           3328 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B55 CD 2A 09           3329 	call	_setupDrum
                           3330 ;	genLabel
   0B58                    3331 00111$:
                           3332 ;	genEndFunction
                           3333 	
   0B58 C9                 3334 	ret
   0B59                    3335 ___decreaseSteps_end:
                           3336 ;	square.c 468
                           3337 ;	genLabel
                           3338 ;	genFunction
                           3339 ;	---------------------------------
                           3340 ; Function increasePulses
                           3341 ; ---------------------------------
   0B59                    3342 ___increasePulses_start:
   0B59                    3343 _increasePulses:
                           3344 	
                           3345 ;	square.c 470
                           3346 ;	genAssign
   0B59 0E 01              3347 	ld	c,#0x01
                           3348 ;	square.c 471
                           3349 ;	genCmpEq
                           3350 ;	AOP_HL for _seldrum
                           3351 ; genCmpEq: left 1, right 1, result 1
   0B5B 21 0B 00           3352 	ld	hl,#_seldrum
   0B5E 7E                 3353 	ld	a,(hl)
   0B5F B7                 3354 	or	a,a
   0B60 C2 67 0B           3355 	jp	nz,00120$
   0B63 3E 01              3356 	ld	a,#0x01
   0B65 18 01              3357 	jr	00121$
   0B67                    3358 00120$:
   0B67 AF                 3359 	xor	a,a
   0B68                    3360 00121$:
   0B68 47                 3361 	ld	b,a
                           3362 ;	genIfx
   0B69 AF                 3363 	xor	a,a
   0B6A B0                 3364 	or	a,b
   0B6B C2 83 0B           3365 	jp	nz,00101$
                           3366 ;	genCmpEq
                           3367 ;	AOP_HL for _seldrum
                           3368 ; genCmpEq: left 1, right 1, result 0
   0B6E 21 0B 00           3369 	ld	hl,#_seldrum
   0B71 7E                 3370 	ld	a,(hl)
   0B72 FE 01              3371 	cp	a,#0x01
   0B74 CA 8A 0B           3372 	jp	z,00102$
   0B77                    3373 00122$:
                           3374 ;	genCmpEq
                           3375 ;	AOP_HL for _seldrum
                           3376 ; genCmpEq: left 1, right 1, result 0
   0B77 21 0B 00           3377 	ld	hl,#_seldrum
   0B7A 7E                 3378 	ld	a,(hl)
   0B7B FE 02              3379 	cp	a,#0x02
   0B7D CA 91 0B           3380 	jp	z,00103$
   0B80                    3381 00123$:
                           3382 ;	genGoto
   0B80 C3 95 0B           3383 	jp	00104$
                           3384 ;	square.c 474
                           3385 ;	genLabel
   0B83                    3386 00101$:
                           3387 ;	genAssign
                           3388 ;	AOP_HL for _numberOfPulsesA
   0B83 21 1F 00           3389 	ld	hl,#_numberOfPulsesA
   0B86 4E                 3390 	ld	c,(hl)
                           3391 ;	square.c 475
                           3392 ;	genGoto
   0B87 C3 95 0B           3393 	jp	00104$
                           3394 ;	square.c 477
                           3395 ;	genLabel
   0B8A                    3396 00102$:
                           3397 ;	genAssign
                           3398 ;	AOP_HL for _numberOfPulsesB
   0B8A 21 22 00           3399 	ld	hl,#_numberOfPulsesB
   0B8D 4E                 3400 	ld	c,(hl)
                           3401 ;	square.c 478
                           3402 ;	genGoto
   0B8E C3 95 0B           3403 	jp	00104$
                           3404 ;	square.c 480
                           3405 ;	genLabel
   0B91                    3406 00103$:
                           3407 ;	genAssign
                           3408 ;	AOP_HL for _numberOfPulsesC
   0B91 21 25 00           3409 	ld	hl,#_numberOfPulsesC
   0B94 4E                 3410 	ld	c,(hl)
                           3411 ;	square.c 482
                           3412 ;	genLabel
   0B95                    3413 00104$:
                           3414 ;	square.c 483
                           3415 ;	genPlus
                           3416 ;	genPlusIncr
                           3417 ; Removed redundent load
   0B95 0C                 3418 	inc	c
                           3419 ;	square.c 484
                           3420 ;	genCmpGt
   0B96 3E 20              3421 	ld	a,#0x20
   0B98 91                 3422 	sub	a,c
   0B99 D2 9E 0B           3423 	jp	nc,00106$
                           3424 ;	square.c 486
                           3425 ;	genAssign
   0B9C 0E 01              3426 	ld	c,#0x01
                           3427 ;	genLabel
   0B9E                    3428 00106$:
                           3429 ;	square.c 488
                           3430 ;	genIfx
   0B9E AF                 3431 	xor	a,a
   0B9F B0                 3432 	or	a,b
   0BA0 C2 B8 0B           3433 	jp	nz,00107$
                           3434 ;	genCmpEq
                           3435 ;	AOP_HL for _seldrum
                           3436 ; genCmpEq: left 1, right 1, result 0
   0BA3 21 0B 00           3437 	ld	hl,#_seldrum
   0BA6 7E                 3438 	ld	a,(hl)
   0BA7 FE 01              3439 	cp	a,#0x01
   0BA9 CA BF 0B           3440 	jp	z,00108$
   0BAC                    3441 00124$:
                           3442 ;	genCmpEq
                           3443 ;	AOP_HL for _seldrum
                           3444 ; genCmpEq: left 1, right 1, result 0
   0BAC 21 0B 00           3445 	ld	hl,#_seldrum
   0BAF 7E                 3446 	ld	a,(hl)
   0BB0 FE 02              3447 	cp	a,#0x02
   0BB2 CA C6 0B           3448 	jp	z,00109$
   0BB5                    3449 00125$:
                           3450 ;	genGoto
   0BB5 C3 CA 0B           3451 	jp	00110$
                           3452 ;	square.c 491
                           3453 ;	genLabel
   0BB8                    3454 00107$:
                           3455 ;	genAssign
                           3456 ;	AOP_HL for _numberOfPulsesA
   0BB8 21 1F 00           3457 	ld	hl,#_numberOfPulsesA
   0BBB 71                 3458 	ld	(hl),c
                           3459 ;	square.c 492
                           3460 ;	genGoto
   0BBC C3 CA 0B           3461 	jp	00110$
                           3462 ;	square.c 494
                           3463 ;	genLabel
   0BBF                    3464 00108$:
                           3465 ;	genAssign
                           3466 ;	AOP_HL for _numberOfPulsesB
   0BBF 21 22 00           3467 	ld	hl,#_numberOfPulsesB
   0BC2 71                 3468 	ld	(hl),c
                           3469 ;	square.c 495
                           3470 ;	genGoto
   0BC3 C3 CA 0B           3471 	jp	00110$
                           3472 ;	square.c 497
                           3473 ;	genLabel
   0BC6                    3474 00109$:
                           3475 ;	genAssign
                           3476 ;	AOP_HL for _numberOfPulsesC
   0BC6 21 25 00           3477 	ld	hl,#_numberOfPulsesC
   0BC9 71                 3478 	ld	(hl),c
                           3479 ;	square.c 499
                           3480 ;	genLabel
   0BCA                    3481 00110$:
                           3482 ;	square.c 500
                           3483 ;	genCall
                           3484 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0BCA CD 2A 09           3485 	call	_setupDrum
                           3486 ;	genLabel
   0BCD                    3487 00111$:
                           3488 ;	genEndFunction
                           3489 	
   0BCD C9                 3490 	ret
   0BCE                    3491 ___increasePulses_end:
                           3492 ;	square.c 503
                           3493 ;	genLabel
                           3494 ;	genFunction
                           3495 ;	---------------------------------
                           3496 ; Function decreasePulses
                           3497 ; ---------------------------------
   0BCE                    3498 ___decreasePulses_start:
   0BCE                    3499 _decreasePulses:
                           3500 	
                           3501 ;	square.c 505
                           3502 ;	genAssign
   0BCE 0E 01              3503 	ld	c,#0x01
                           3504 ;	square.c 506
                           3505 ;	genCmpEq
                           3506 ;	AOP_HL for _seldrum
                           3507 ; genCmpEq: left 1, right 1, result 1
   0BD0 21 0B 00           3508 	ld	hl,#_seldrum
   0BD3 7E                 3509 	ld	a,(hl)
   0BD4 B7                 3510 	or	a,a
   0BD5 C2 DC 0B           3511 	jp	nz,00120$
   0BD8 3E 01              3512 	ld	a,#0x01
   0BDA 18 01              3513 	jr	00121$
   0BDC                    3514 00120$:
   0BDC AF                 3515 	xor	a,a
   0BDD                    3516 00121$:
   0BDD 47                 3517 	ld	b,a
                           3518 ;	genIfx
   0BDE AF                 3519 	xor	a,a
   0BDF B0                 3520 	or	a,b
   0BE0 C2 F8 0B           3521 	jp	nz,00101$
                           3522 ;	genCmpEq
                           3523 ;	AOP_HL for _seldrum
                           3524 ; genCmpEq: left 1, right 1, result 0
   0BE3 21 0B 00           3525 	ld	hl,#_seldrum
   0BE6 7E                 3526 	ld	a,(hl)
   0BE7 FE 01              3527 	cp	a,#0x01
   0BE9 CA FF 0B           3528 	jp	z,00102$
   0BEC                    3529 00122$:
                           3530 ;	genCmpEq
                           3531 ;	AOP_HL for _seldrum
                           3532 ; genCmpEq: left 1, right 1, result 0
   0BEC 21 0B 00           3533 	ld	hl,#_seldrum
   0BEF 7E                 3534 	ld	a,(hl)
   0BF0 FE 02              3535 	cp	a,#0x02
   0BF2 CA 06 0C           3536 	jp	z,00103$
   0BF5                    3537 00123$:
                           3538 ;	genGoto
   0BF5 C3 0A 0C           3539 	jp	00104$
                           3540 ;	square.c 509
                           3541 ;	genLabel
   0BF8                    3542 00101$:
                           3543 ;	genAssign
                           3544 ;	AOP_HL for _numberOfPulsesA
   0BF8 21 1F 00           3545 	ld	hl,#_numberOfPulsesA
   0BFB 4E                 3546 	ld	c,(hl)
                           3547 ;	square.c 510
                           3548 ;	genGoto
   0BFC C3 0A 0C           3549 	jp	00104$
                           3550 ;	square.c 512
                           3551 ;	genLabel
   0BFF                    3552 00102$:
                           3553 ;	genAssign
                           3554 ;	AOP_HL for _numberOfPulsesB
   0BFF 21 22 00           3555 	ld	hl,#_numberOfPulsesB
   0C02 4E                 3556 	ld	c,(hl)
                           3557 ;	square.c 513
                           3558 ;	genGoto
   0C03 C3 0A 0C           3559 	jp	00104$
                           3560 ;	square.c 515
                           3561 ;	genLabel
   0C06                    3562 00103$:
                           3563 ;	genAssign
                           3564 ;	AOP_HL for _numberOfPulsesC
   0C06 21 25 00           3565 	ld	hl,#_numberOfPulsesC
   0C09 4E                 3566 	ld	c,(hl)
                           3567 ;	square.c 517
                           3568 ;	genLabel
   0C0A                    3569 00104$:
                           3570 ;	square.c 518
                           3571 ;	genMinus
   0C0A 0D                 3572 	dec	c
                           3573 ;	square.c 519
                           3574 ;	genCmpLt
   0C0B 79                 3575 	ld	a,c
   0C0C FE 01              3576 	cp	#0x01
   0C0E D2 13 0C           3577 	jp	nc,00106$
                           3578 ;	square.c 521
                           3579 ;	genAssign
   0C11 0E 20              3580 	ld	c,#0x20
                           3581 ;	genLabel
   0C13                    3582 00106$:
                           3583 ;	square.c 523
                           3584 ;	genIfx
   0C13 AF                 3585 	xor	a,a
   0C14 B0                 3586 	or	a,b
   0C15 C2 2D 0C           3587 	jp	nz,00107$
                           3588 ;	genCmpEq
                           3589 ;	AOP_HL for _seldrum
                           3590 ; genCmpEq: left 1, right 1, result 0
   0C18 21 0B 00           3591 	ld	hl,#_seldrum
   0C1B 7E                 3592 	ld	a,(hl)
   0C1C FE 01              3593 	cp	a,#0x01
   0C1E CA 34 0C           3594 	jp	z,00108$
   0C21                    3595 00124$:
                           3596 ;	genCmpEq
                           3597 ;	AOP_HL for _seldrum
                           3598 ; genCmpEq: left 1, right 1, result 0
   0C21 21 0B 00           3599 	ld	hl,#_seldrum
   0C24 7E                 3600 	ld	a,(hl)
   0C25 FE 02              3601 	cp	a,#0x02
   0C27 CA 3B 0C           3602 	jp	z,00109$
   0C2A                    3603 00125$:
                           3604 ;	genGoto
   0C2A C3 3F 0C           3605 	jp	00110$
                           3606 ;	square.c 526
                           3607 ;	genLabel
   0C2D                    3608 00107$:
                           3609 ;	genAssign
                           3610 ;	AOP_HL for _numberOfPulsesA
   0C2D 21 1F 00           3611 	ld	hl,#_numberOfPulsesA
   0C30 71                 3612 	ld	(hl),c
                           3613 ;	square.c 527
                           3614 ;	genGoto
   0C31 C3 3F 0C           3615 	jp	00110$
                           3616 ;	square.c 529
                           3617 ;	genLabel
   0C34                    3618 00108$:
                           3619 ;	genAssign
                           3620 ;	AOP_HL for _numberOfPulsesB
   0C34 21 22 00           3621 	ld	hl,#_numberOfPulsesB
   0C37 71                 3622 	ld	(hl),c
                           3623 ;	square.c 530
                           3624 ;	genGoto
   0C38 C3 3F 0C           3625 	jp	00110$
                           3626 ;	square.c 532
                           3627 ;	genLabel
   0C3B                    3628 00109$:
                           3629 ;	genAssign
                           3630 ;	AOP_HL for _numberOfPulsesC
   0C3B 21 25 00           3631 	ld	hl,#_numberOfPulsesC
   0C3E 71                 3632 	ld	(hl),c
                           3633 ;	square.c 534
                           3634 ;	genLabel
   0C3F                    3635 00110$:
                           3636 ;	square.c 535
                           3637 ;	genCall
                           3638 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C3F CD 2A 09           3639 	call	_setupDrum
                           3640 ;	genLabel
   0C42                    3641 00111$:
                           3642 ;	genEndFunction
                           3643 	
   0C42 C9                 3644 	ret
   0C43                    3645 ___decreasePulses_end:
                           3646 ;	square.c 539
                           3647 ;	genLabel
                           3648 ;	genFunction
                           3649 ;	---------------------------------
                           3650 ; Function increaseSwing
                           3651 ; ---------------------------------
   0C43                    3652 ___increaseSwing_start:
   0C43                    3653 _increaseSwing:
                           3654 	
                           3655 ;	square.c 541
                           3656 ;	genAssign
   0C43 0E 00              3657 	ld	c,#0x00
                           3658 ;	square.c 542
                           3659 ;	genCmpEq
                           3660 ;	AOP_HL for _seldrum
                           3661 ; genCmpEq: left 1, right 1, result 1
   0C45 21 0B 00           3662 	ld	hl,#_seldrum
   0C48 7E                 3663 	ld	a,(hl)
   0C49 B7                 3664 	or	a,a
   0C4A C2 51 0C           3665 	jp	nz,00117$
   0C4D 3E 01              3666 	ld	a,#0x01
   0C4F 18 01              3667 	jr	00118$
   0C51                    3668 00117$:
   0C51 AF                 3669 	xor	a,a
   0C52                    3670 00118$:
   0C52 47                 3671 	ld	b,a
                           3672 ;	genIfx
   0C53 AF                 3673 	xor	a,a
   0C54 B0                 3674 	or	a,b
   0C55 C2 6D 0C           3675 	jp	nz,00101$
                           3676 ;	genCmpEq
                           3677 ;	AOP_HL for _seldrum
                           3678 ; genCmpEq: left 1, right 1, result 0
   0C58 21 0B 00           3679 	ld	hl,#_seldrum
   0C5B 7E                 3680 	ld	a,(hl)
   0C5C FE 01              3681 	cp	a,#0x01
   0C5E CA 74 0C           3682 	jp	z,00102$
   0C61                    3683 00119$:
                           3684 ;	genCmpEq
                           3685 ;	AOP_HL for _seldrum
                           3686 ; genCmpEq: left 1, right 1, result 0
   0C61 21 0B 00           3687 	ld	hl,#_seldrum
   0C64 7E                 3688 	ld	a,(hl)
   0C65 FE 02              3689 	cp	a,#0x02
   0C67 CA 7B 0C           3690 	jp	z,00103$
   0C6A                    3691 00120$:
                           3692 ;	genGoto
   0C6A C3 7F 0C           3693 	jp	00104$
                           3694 ;	square.c 545
                           3695 ;	genLabel
   0C6D                    3696 00101$:
                           3697 ;	genAssign
                           3698 ;	AOP_HL for _delayA
   0C6D 21 19 00           3699 	ld	hl,#_delayA
   0C70 4E                 3700 	ld	c,(hl)
                           3701 ;	square.c 546
                           3702 ;	genGoto
   0C71 C3 7F 0C           3703 	jp	00104$
                           3704 ;	square.c 548
                           3705 ;	genLabel
   0C74                    3706 00102$:
                           3707 ;	genAssign
                           3708 ;	AOP_HL for _delayB
   0C74 21 1A 00           3709 	ld	hl,#_delayB
   0C77 4E                 3710 	ld	c,(hl)
                           3711 ;	square.c 549
                           3712 ;	genGoto
   0C78 C3 7F 0C           3713 	jp	00104$
                           3714 ;	square.c 551
                           3715 ;	genLabel
   0C7B                    3716 00103$:
                           3717 ;	genAssign
                           3718 ;	AOP_HL for _delayC
   0C7B 21 1B 00           3719 	ld	hl,#_delayC
   0C7E 4E                 3720 	ld	c,(hl)
                           3721 ;	square.c 553
                           3722 ;	genLabel
   0C7F                    3723 00104$:
                           3724 ;	square.c 554
                           3725 ;	genPlus
                           3726 ;	genPlusIncr
                           3727 ; Removed redundent load
   0C7F 0C                 3728 	inc	c
                           3729 ;	square.c 555
                           3730 ;	genIfx
   0C80 AF                 3731 	xor	a,a
   0C81 B0                 3732 	or	a,b
   0C82 C2 9A 0C           3733 	jp	nz,00105$
                           3734 ;	genCmpEq
                           3735 ;	AOP_HL for _seldrum
                           3736 ; genCmpEq: left 1, right 1, result 0
   0C85 21 0B 00           3737 	ld	hl,#_seldrum
   0C88 7E                 3738 	ld	a,(hl)
   0C89 FE 01              3739 	cp	a,#0x01
   0C8B CA A1 0C           3740 	jp	z,00106$
   0C8E                    3741 00121$:
                           3742 ;	genCmpEq
                           3743 ;	AOP_HL for _seldrum
                           3744 ; genCmpEq: left 1, right 1, result 0
   0C8E 21 0B 00           3745 	ld	hl,#_seldrum
   0C91 7E                 3746 	ld	a,(hl)
   0C92 FE 02              3747 	cp	a,#0x02
   0C94 CA A8 0C           3748 	jp	z,00107$
   0C97                    3749 00122$:
                           3750 ;	genGoto
   0C97 C3 AC 0C           3751 	jp	00108$
                           3752 ;	square.c 558
                           3753 ;	genLabel
   0C9A                    3754 00105$:
                           3755 ;	genAssign
                           3756 ;	AOP_HL for _delayA
   0C9A 21 19 00           3757 	ld	hl,#_delayA
   0C9D 71                 3758 	ld	(hl),c
                           3759 ;	square.c 559
                           3760 ;	genGoto
   0C9E C3 AC 0C           3761 	jp	00108$
                           3762 ;	square.c 561
                           3763 ;	genLabel
   0CA1                    3764 00106$:
                           3765 ;	genAssign
                           3766 ;	AOP_HL for _delayB
   0CA1 21 1A 00           3767 	ld	hl,#_delayB
   0CA4 71                 3768 	ld	(hl),c
                           3769 ;	square.c 562
                           3770 ;	genGoto
   0CA5 C3 AC 0C           3771 	jp	00108$
                           3772 ;	square.c 564
                           3773 ;	genLabel
   0CA8                    3774 00107$:
                           3775 ;	genAssign
                           3776 ;	AOP_HL for _delayC
   0CA8 21 1B 00           3777 	ld	hl,#_delayC
   0CAB 71                 3778 	ld	(hl),c
                           3779 ;	square.c 566
                           3780 ;	genLabel
   0CAC                    3781 00108$:
                           3782 ;	square.c 567
                           3783 ;	genCall
                           3784 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CAC CD 2A 09           3785 	call	_setupDrum
                           3786 ;	genLabel
   0CAF                    3787 00109$:
                           3788 ;	genEndFunction
                           3789 	
   0CAF C9                 3790 	ret
   0CB0                    3791 ___increaseSwing_end:
                           3792 ;	square.c 570
                           3793 ;	genLabel
                           3794 ;	genFunction
                           3795 ;	---------------------------------
                           3796 ; Function decreaseSwing
                           3797 ; ---------------------------------
   0CB0                    3798 ___decreaseSwing_start:
   0CB0                    3799 _decreaseSwing:
                           3800 	
                           3801 ;	square.c 572
                           3802 ;	genAssign
   0CB0 0E 00              3803 	ld	c,#0x00
                           3804 ;	square.c 573
                           3805 ;	genCmpEq
                           3806 ;	AOP_HL for _seldrum
                           3807 ; genCmpEq: left 1, right 1, result 1
   0CB2 21 0B 00           3808 	ld	hl,#_seldrum
   0CB5 7E                 3809 	ld	a,(hl)
   0CB6 B7                 3810 	or	a,a
   0CB7 C2 BE 0C           3811 	jp	nz,00120$
   0CBA 3E 01              3812 	ld	a,#0x01
   0CBC 18 01              3813 	jr	00121$
   0CBE                    3814 00120$:
   0CBE AF                 3815 	xor	a,a
   0CBF                    3816 00121$:
   0CBF 47                 3817 	ld	b,a
                           3818 ;	genIfx
   0CC0 AF                 3819 	xor	a,a
   0CC1 B0                 3820 	or	a,b
   0CC2 C2 DA 0C           3821 	jp	nz,00101$
                           3822 ;	genCmpEq
                           3823 ;	AOP_HL for _seldrum
                           3824 ; genCmpEq: left 1, right 1, result 0
   0CC5 21 0B 00           3825 	ld	hl,#_seldrum
   0CC8 7E                 3826 	ld	a,(hl)
   0CC9 FE 01              3827 	cp	a,#0x01
   0CCB CA E1 0C           3828 	jp	z,00102$
   0CCE                    3829 00122$:
                           3830 ;	genCmpEq
                           3831 ;	AOP_HL for _seldrum
                           3832 ; genCmpEq: left 1, right 1, result 0
   0CCE 21 0B 00           3833 	ld	hl,#_seldrum
   0CD1 7E                 3834 	ld	a,(hl)
   0CD2 FE 02              3835 	cp	a,#0x02
   0CD4 CA E8 0C           3836 	jp	z,00103$
   0CD7                    3837 00123$:
                           3838 ;	genGoto
   0CD7 C3 EC 0C           3839 	jp	00104$
                           3840 ;	square.c 576
                           3841 ;	genLabel
   0CDA                    3842 00101$:
                           3843 ;	genAssign
                           3844 ;	AOP_HL for _delayA
   0CDA 21 19 00           3845 	ld	hl,#_delayA
   0CDD 4E                 3846 	ld	c,(hl)
                           3847 ;	square.c 577
                           3848 ;	genGoto
   0CDE C3 EC 0C           3849 	jp	00104$
                           3850 ;	square.c 579
                           3851 ;	genLabel
   0CE1                    3852 00102$:
                           3853 ;	genAssign
                           3854 ;	AOP_HL for _delayB
   0CE1 21 1A 00           3855 	ld	hl,#_delayB
   0CE4 4E                 3856 	ld	c,(hl)
                           3857 ;	square.c 580
                           3858 ;	genGoto
   0CE5 C3 EC 0C           3859 	jp	00104$
                           3860 ;	square.c 582
                           3861 ;	genLabel
   0CE8                    3862 00103$:
                           3863 ;	genAssign
                           3864 ;	AOP_HL for _delayC
   0CE8 21 1B 00           3865 	ld	hl,#_delayC
   0CEB 4E                 3866 	ld	c,(hl)
                           3867 ;	square.c 584
                           3868 ;	genLabel
   0CEC                    3869 00104$:
                           3870 ;	square.c 585
                           3871 ;	genCmpEq
                           3872 ; genCmpEq: left 1, right 1, result 0
   0CEC 79                 3873 	ld	a,c
   0CED B7                 3874 	or	a,a
   0CEE CA F2 0C           3875 	jp	z,00106$
   0CF1                    3876 00124$:
                           3877 ;	square.c 587
                           3878 ;	genMinus
   0CF1 0D                 3879 	dec	c
                           3880 ;	genLabel
   0CF2                    3881 00106$:
                           3882 ;	square.c 589
                           3883 ;	genIfx
   0CF2 AF                 3884 	xor	a,a
   0CF3 B0                 3885 	or	a,b
   0CF4 C2 0C 0D           3886 	jp	nz,00107$
                           3887 ;	genCmpEq
                           3888 ;	AOP_HL for _seldrum
                           3889 ; genCmpEq: left 1, right 1, result 0
   0CF7 21 0B 00           3890 	ld	hl,#_seldrum
   0CFA 7E                 3891 	ld	a,(hl)
   0CFB FE 01              3892 	cp	a,#0x01
   0CFD CA 13 0D           3893 	jp	z,00108$
   0D00                    3894 00125$:
                           3895 ;	genCmpEq
                           3896 ;	AOP_HL for _seldrum
                           3897 ; genCmpEq: left 1, right 1, result 0
   0D00 21 0B 00           3898 	ld	hl,#_seldrum
   0D03 7E                 3899 	ld	a,(hl)
   0D04 FE 02              3900 	cp	a,#0x02
   0D06 CA 1A 0D           3901 	jp	z,00109$
   0D09                    3902 00126$:
                           3903 ;	genGoto
   0D09 C3 1E 0D           3904 	jp	00110$
                           3905 ;	square.c 592
                           3906 ;	genLabel
   0D0C                    3907 00107$:
                           3908 ;	genAssign
                           3909 ;	AOP_HL for _delayA
   0D0C 21 19 00           3910 	ld	hl,#_delayA
   0D0F 71                 3911 	ld	(hl),c
                           3912 ;	square.c 593
                           3913 ;	genGoto
   0D10 C3 1E 0D           3914 	jp	00110$
                           3915 ;	square.c 595
                           3916 ;	genLabel
   0D13                    3917 00108$:
                           3918 ;	genAssign
                           3919 ;	AOP_HL for _delayB
   0D13 21 1A 00           3920 	ld	hl,#_delayB
   0D16 71                 3921 	ld	(hl),c
                           3922 ;	square.c 596
                           3923 ;	genGoto
   0D17 C3 1E 0D           3924 	jp	00110$
                           3925 ;	square.c 598
                           3926 ;	genLabel
   0D1A                    3927 00109$:
                           3928 ;	genAssign
                           3929 ;	AOP_HL for _delayC
   0D1A 21 1B 00           3930 	ld	hl,#_delayC
   0D1D 71                 3931 	ld	(hl),c
                           3932 ;	square.c 600
                           3933 ;	genLabel
   0D1E                    3934 00110$:
                           3935 ;	square.c 601
                           3936 ;	genCall
                           3937 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D1E CD 2A 09           3938 	call	_setupDrum
                           3939 ;	genLabel
   0D21                    3940 00111$:
                           3941 ;	genEndFunction
                           3942 	
   0D21 C9                 3943 	ret
   0D22                    3944 ___decreaseSwing_end:
                           3945 ;	square.c 604
                           3946 ;	genLabel
                           3947 ;	genFunction
                           3948 ;	---------------------------------
                           3949 ; Function tick
                           3950 ; ---------------------------------
   0D22                    3951 ___tick_start:
   0D22                    3952 _tick:
                           3953 	
                           3954 ;	square.c 607
                           3955 ;	genMinus
                           3956 ;	AOP_HL for _totalStepsA
   0D22 21 20 00           3957 	ld	hl,#_totalStepsA
   0D25 7E                 3958 	ld	a,(hl)
   0D26 C6 FF              3959 	add	a,#0xFF
                           3960 ;	genCmpGt
                           3961 ;	AOP_HL for _clkA
   0D28 4F                 3962 	ld	c,a
   0D29 21 21 00           3963 	ld	hl,#_clkA
   0D2C 96                 3964 	sub	a,(hl)
   0D2D D2 32 0D           3965 	jp	nc,00102$
                           3966 ;	square.c 609
                           3967 ;	genAssign
                           3968 ;	AOP_HL for _clkA
   0D30 36 00              3969 	ld	(hl),#0x00
                           3970 ;	genLabel
   0D32                    3971 00102$:
                           3972 ;	square.c 611
                           3973 ;	genMinus
                           3974 ;	AOP_HL for _totalStepsB
   0D32 21 23 00           3975 	ld	hl,#_totalStepsB
   0D35 7E                 3976 	ld	a,(hl)
   0D36 C6 FF              3977 	add	a,#0xFF
                           3978 ;	genCmpGt
                           3979 ;	AOP_HL for _clkB
   0D38 4F                 3980 	ld	c,a
   0D39 21 24 00           3981 	ld	hl,#_clkB
   0D3C 96                 3982 	sub	a,(hl)
   0D3D D2 42 0D           3983 	jp	nc,00104$
                           3984 ;	square.c 613
                           3985 ;	genAssign
                           3986 ;	AOP_HL for _clkB
   0D40 36 00              3987 	ld	(hl),#0x00
                           3988 ;	genLabel
   0D42                    3989 00104$:
                           3990 ;	square.c 615
                           3991 ;	genMinus
                           3992 ;	AOP_HL for _totalStepsC
   0D42 21 26 00           3993 	ld	hl,#_totalStepsC
   0D45 7E                 3994 	ld	a,(hl)
   0D46 C6 FF              3995 	add	a,#0xFF
                           3996 ;	genCmpGt
                           3997 ;	AOP_HL for _clkC
   0D48 4F                 3998 	ld	c,a
   0D49 21 27 00           3999 	ld	hl,#_clkC
   0D4C 96                 4000 	sub	a,(hl)
   0D4D D2 52 0D           4001 	jp	nc,00106$
                           4002 ;	square.c 617
                           4003 ;	genAssign
                           4004 ;	AOP_HL for _clkC
   0D50 36 00              4005 	ld	(hl),#0x00
                           4006 ;	genLabel
   0D52                    4007 00106$:
                           4008 ;	square.c 620
                           4009 ;	genCmpEq
                           4010 ;	AOP_HL for _syncToDrum
                           4011 ; genCmpEq: left 1, right 1, result 0
   0D52 21 1D 00           4012 	ld	hl,#_syncToDrum
   0D55 7E                 4013 	ld	a,(hl)
   0D56 FE 01              4014 	cp	a,#0x01
   0D58 C2 BF 0D           4015 	jp	nz,00114$
   0D5B 18 03              4016 	jr	00144$
   0D5D                    4017 00143$:
   0D5D C3 BF 0D           4018 	jp	00114$
   0D60                    4019 00144$:
                           4020 ;	square.c 622
                           4021 ;	genCmpEq
                           4022 ;	AOP_HL for _seldrum
                           4023 ; genCmpEq: left 1, right 1, result 0
   0D60 21 0B 00           4024 	ld	hl,#_seldrum
   0D63 7E                 4025 	ld	a,(hl)
   0D64 B7                 4026 	or	a,a
   0D65 CA 7D 0D           4027 	jp	z,00107$
   0D68                    4028 00145$:
                           4029 ;	genCmpEq
                           4030 ;	AOP_HL for _seldrum
                           4031 ; genCmpEq: left 1, right 1, result 0
   0D68 21 0B 00           4032 	ld	hl,#_seldrum
   0D6B 7E                 4033 	ld	a,(hl)
   0D6C FE 01              4034 	cp	a,#0x01
   0D6E CA 88 0D           4035 	jp	z,00108$
   0D71                    4036 00146$:
                           4037 ;	genCmpEq
                           4038 ;	AOP_HL for _seldrum
                           4039 ; genCmpEq: left 1, right 1, result 0
   0D71 21 0B 00           4040 	ld	hl,#_seldrum
   0D74 7E                 4041 	ld	a,(hl)
   0D75 FE 02              4042 	cp	a,#0x02
   0D77 CA 93 0D           4043 	jp	z,00109$
   0D7A                    4044 00147$:
                           4045 ;	genGoto
   0D7A C3 9B 0D           4046 	jp	00110$
                           4047 ;	square.c 625
                           4048 ;	genLabel
   0D7D                    4049 00107$:
                           4050 ;	genAssign
                           4051 ;	AOP_HL for _clkA
                           4052 ;	AOP_HL for _clockToSync
   0D7D 21 21 00           4053 	ld	hl,#_clkA
   0D80 7E                 4054 	ld	a,(hl)
   0D81 21 1E 00           4055 	ld	hl,#_clockToSync
   0D84 77                 4056 	ld	(hl),a
                           4057 ;	square.c 626
                           4058 ;	genGoto
   0D85 C3 9B 0D           4059 	jp	00110$
                           4060 ;	square.c 628
                           4061 ;	genLabel
   0D88                    4062 00108$:
                           4063 ;	genAssign
                           4064 ;	AOP_HL for _clkB
                           4065 ;	AOP_HL for _clockToSync
   0D88 21 24 00           4066 	ld	hl,#_clkB
   0D8B 7E                 4067 	ld	a,(hl)
   0D8C 21 1E 00           4068 	ld	hl,#_clockToSync
   0D8F 77                 4069 	ld	(hl),a
                           4070 ;	square.c 629
                           4071 ;	genGoto
   0D90 C3 9B 0D           4072 	jp	00110$
                           4073 ;	square.c 631
                           4074 ;	genLabel
   0D93                    4075 00109$:
                           4076 ;	genAssign
                           4077 ;	AOP_HL for _clkC
                           4078 ;	AOP_HL for _clockToSync
   0D93 21 27 00           4079 	ld	hl,#_clkC
   0D96 7E                 4080 	ld	a,(hl)
   0D97 21 1E 00           4081 	ld	hl,#_clockToSync
   0D9A 77                 4082 	ld	(hl),a
                           4083 ;	square.c 633
                           4084 ;	genLabel
   0D9B                    4085 00110$:
                           4086 ;	square.c 635
                           4087 ;	genCmpEq
                           4088 ;	AOP_HL for _clockToSync
                           4089 ; genCmpEq: left 1, right 1, result 0
   0D9B 21 1E 00           4090 	ld	hl,#_clockToSync
   0D9E 7E                 4091 	ld	a,(hl)
   0D9F B7                 4092 	or	a,a
   0DA0 C2 BF 0D           4093 	jp	nz,00114$
   0DA3 18 03              4094 	jr	00149$
   0DA5                    4095 00148$:
   0DA5 C3 BF 0D           4096 	jp	00114$
   0DA8                    4097 00149$:
                           4098 ;	square.c 637
                           4099 ;	genAssign
                           4100 ;	AOP_HL for _clkA
   0DA8 21 21 00           4101 	ld	hl,#_clkA
   0DAB 36 00              4102 	ld	(hl),#0x00
                           4103 ;	square.c 638
                           4104 ;	genAssign
                           4105 ;	AOP_HL for _clkB
   0DAD 21 24 00           4106 	ld	hl,#_clkB
   0DB0 36 00              4107 	ld	(hl),#0x00
                           4108 ;	square.c 639
                           4109 ;	genAssign
                           4110 ;	AOP_HL for _clkC
   0DB2 21 27 00           4111 	ld	hl,#_clkC
   0DB5 36 00              4112 	ld	(hl),#0x00
                           4113 ;	square.c 640
                           4114 ;	genAssign
                           4115 ;	AOP_HL for _syncToDrum
   0DB7 21 1D 00           4116 	ld	hl,#_syncToDrum
   0DBA 36 00              4117 	ld	(hl),#0x00
                           4118 ;	square.c 641
                           4119 ;	genCall
                           4120 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DBC CD 3F 06           4121 	call	_updateUI
                           4122 ;	genLabel
   0DBF                    4123 00114$:
                           4124 ;	square.c 645
                           4125 ;	genPlus
                           4126 ;	AOP_HL for _clkA
                           4127 ;	Can't optimise plus by inc, falling back to the normal way
   0DBF 3E 2B              4128 	ld	a,#<_drumA
   0DC1 21 21 00           4129 	ld	hl,#_clkA
   0DC4 86                 4130 	add	a,(hl)
   0DC5 4F                 4131 	ld	c,a
   0DC6 3E 00              4132 	ld	a,#>_drumA
   0DC8 CE 00              4133 	adc	a,#0x00
   0DCA 47                 4134 	ld	b,a
                           4135 ;	genPointerGet
   0DCB 0A                 4136 	ld	a,(bc)
                           4137 ;	genCmpEq
                           4138 ; genCmpEq: left 1, right 1, result 0
   0DCC 4F                 4139 	ld	c,a
   0DCD FE 01              4140 	cp	a,#0x01
   0DCF C2 EE 0D           4141 	jp	nz,00118$
   0DD2 18 03              4142 	jr	00151$
   0DD4                    4143 00150$:
   0DD4 C3 EE 0D           4144 	jp	00118$
   0DD7                    4145 00151$:
                           4146 ;	square.c 647
                           4147 ;	genCmpEq
                           4148 ;	AOP_HL for _xA
                           4149 ; genCmpEq: left 1, right 1, result 0
   0DD7 21 16 00           4150 	ld	hl,#_xA
   0DDA 7E                 4151 	ld	a,(hl)
   0DDB B7                 4152 	or	a,a
   0DDC CA EB 0D           4153 	jp	z,00116$
   0DDF                    4154 00152$:
                           4155 ;	square.c 648
                           4156 ;	genCast
                           4157 ;	AOP_HL for _xA
   0DDF 21 16 00           4158 	ld	hl,#_xA
   0DE2 4E                 4159 	ld	c,(hl)
   0DE3 06 00              4160 	ld	b,#0x00
                           4161 ;	genIpush
                           4162 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DE5 C5                 4163 	push	bc
                           4164 ;	genCall
   0DE6 CD 00 00           4165 	call	_delay
   0DE9 E8 02              4166 	lda	sp,2(sp)
                           4167 ;	genLabel
   0DEB                    4168 00116$:
                           4169 ;	square.c 649
                           4170 ;	genCall
                           4171 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DEB CD 30 00           4172 	call	_makeASound
                           4173 ;	genLabel
   0DEE                    4174 00118$:
                           4175 ;	square.c 651
                           4176 ;	genPlus
                           4177 ;	AOP_HL for _clkB
                           4178 ;	Can't optimise plus by inc, falling back to the normal way
   0DEE 3E 4B              4179 	ld	a,#<_drumB
   0DF0 21 24 00           4180 	ld	hl,#_clkB
   0DF3 86                 4181 	add	a,(hl)
   0DF4 4F                 4182 	ld	c,a
   0DF5 3E 00              4183 	ld	a,#>_drumB
   0DF7 CE 00              4184 	adc	a,#0x00
   0DF9 47                 4185 	ld	b,a
                           4186 ;	genPointerGet
   0DFA 0A                 4187 	ld	a,(bc)
                           4188 ;	genCmpEq
                           4189 ; genCmpEq: left 1, right 1, result 0
   0DFB 4F                 4190 	ld	c,a
   0DFC FE 01              4191 	cp	a,#0x01
   0DFE C2 1D 0E           4192 	jp	nz,00122$
   0E01 18 03              4193 	jr	00154$
   0E03                    4194 00153$:
   0E03 C3 1D 0E           4195 	jp	00122$
   0E06                    4196 00154$:
                           4197 ;	square.c 653
                           4198 ;	genCmpEq
                           4199 ;	AOP_HL for _xB
                           4200 ; genCmpEq: left 1, right 1, result 0
   0E06 21 17 00           4201 	ld	hl,#_xB
   0E09 7E                 4202 	ld	a,(hl)
   0E0A B7                 4203 	or	a,a
   0E0B CA 1A 0E           4204 	jp	z,00120$
   0E0E                    4205 00155$:
                           4206 ;	square.c 654
                           4207 ;	genCast
                           4208 ;	AOP_HL for _xB
   0E0E 21 17 00           4209 	ld	hl,#_xB
   0E11 4E                 4210 	ld	c,(hl)
   0E12 06 00              4211 	ld	b,#0x00
                           4212 ;	genIpush
                           4213 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E14 C5                 4214 	push	bc
                           4215 ;	genCall
   0E15 CD 00 00           4216 	call	_delay
   0E18 E8 02              4217 	lda	sp,2(sp)
                           4218 ;	genLabel
   0E1A                    4219 00120$:
                           4220 ;	square.c 655
                           4221 ;	genCall
                           4222 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E1A CD 69 00           4223 	call	_makeBSound
                           4224 ;	genLabel
   0E1D                    4225 00122$:
                           4226 ;	square.c 657
                           4227 ;	genPlus
                           4228 ;	AOP_HL for _clkC
                           4229 ;	Can't optimise plus by inc, falling back to the normal way
   0E1D 3E 6B              4230 	ld	a,#<_drumC
   0E1F 21 27 00           4231 	ld	hl,#_clkC
   0E22 86                 4232 	add	a,(hl)
   0E23 4F                 4233 	ld	c,a
   0E24 3E 00              4234 	ld	a,#>_drumC
   0E26 CE 00              4235 	adc	a,#0x00
   0E28 47                 4236 	ld	b,a
                           4237 ;	genPointerGet
   0E29 0A                 4238 	ld	a,(bc)
                           4239 ;	genCmpEq
                           4240 ; genCmpEq: left 1, right 1, result 0
   0E2A 4F                 4241 	ld	c,a
   0E2B FE 01              4242 	cp	a,#0x01
   0E2D C2 4C 0E           4243 	jp	nz,00126$
   0E30 18 03              4244 	jr	00157$
   0E32                    4245 00156$:
   0E32 C3 4C 0E           4246 	jp	00126$
   0E35                    4247 00157$:
                           4248 ;	square.c 659
                           4249 ;	genCmpEq
                           4250 ;	AOP_HL for _xC
                           4251 ; genCmpEq: left 1, right 1, result 0
   0E35 21 18 00           4252 	ld	hl,#_xC
   0E38 7E                 4253 	ld	a,(hl)
   0E39 B7                 4254 	or	a,a
   0E3A CA 49 0E           4255 	jp	z,00124$
   0E3D                    4256 00158$:
                           4257 ;	square.c 660
                           4258 ;	genCast
                           4259 ;	AOP_HL for _xC
   0E3D 21 18 00           4260 	ld	hl,#_xC
   0E40 4E                 4261 	ld	c,(hl)
   0E41 06 00              4262 	ld	b,#0x00
                           4263 ;	genIpush
                           4264 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E43 C5                 4265 	push	bc
                           4266 ;	genCall
   0E44 CD 00 00           4267 	call	_delay
   0E47 E8 02              4268 	lda	sp,2(sp)
                           4269 ;	genLabel
   0E49                    4270 00124$:
                           4271 ;	square.c 661
                           4272 ;	genCall
                           4273 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E49 CD 9C 00           4274 	call	_makeCSound
                           4275 ;	genLabel
   0E4C                    4276 00126$:
                           4277 ;	square.c 664
                           4278 ;	genPlus
                           4279 ;	AOP_HL for _clkA
                           4280 ;	genPlusIncr
   0E4C 21 21 00           4281 	ld	hl,#_clkA
   0E4F 34                 4282 	inc	(hl)
                           4283 ;	square.c 665
                           4284 ;	genPlus
                           4285 ;	AOP_HL for _clkB
                           4286 ;	genPlusIncr
   0E50 21 24 00           4287 	ld	hl,#_clkB
   0E53 34                 4288 	inc	(hl)
                           4289 ;	square.c 666
                           4290 ;	genPlus
                           4291 ;	AOP_HL for _clkC
                           4292 ;	genPlusIncr
   0E54 21 27 00           4293 	ld	hl,#_clkC
   0E57 34                 4294 	inc	(hl)
                           4295 ;	genLabel
   0E58                    4296 00127$:
                           4297 ;	genEndFunction
                           4298 	
   0E58 C9                 4299 	ret
   0E59                    4300 ___tick_end:
                           4301 ;	square.c 671
                           4302 ;	genLabel
                           4303 ;	genFunction
                           4304 ;	---------------------------------
                           4305 ; Function slave
                           4306 ; ---------------------------------
   0E59                    4307 ___slave_start:
   0E59                    4308 _slave:
                           4309 	
                           4310 ;	square.c 673
                           4311 ;	genAssign
                           4312 ;	AOP_HL for _pop
                           4313 ;	AOP_HL for _bob
   0E59 21 06 00           4314 	ld	hl,#_pop
   0E5C 7E                 4315 	ld	a,(hl)
   0E5D 21 04 00           4316 	ld	hl,#_bob
   0E60 77                 4317 	ld	(hl),a
                           4318 ;	square.c 674
                           4319 ;	genAssign
   0E61 01 02 FF           4320 	ld	bc,#0xFF02
                           4321 ;	genAssign (pointer)
   0E64 3E 80              4322 	ld	a,#0x80
   0E66 02                 4323 	ld	(bc),a
                           4324 ;	square.c 675
                           4325 ;	genPointerGet
                           4326 ;	AOP_HL for _todd
   0E67 11 01 FF           4327 	ld	de,#0xFF01
   0E6A 1A                 4328 	ld	a,(de)
   0E6B 21 05 00           4329 	ld	hl,#_todd
                           4330 ;	square.c 676
                           4331 ;	genCmpEq
                           4332 ;	AOP_HL for _todd
                           4333 ; genCmpEq: left 1, right 1, result 0
   0E6E 77                 4334 	ld      (hl),a
                           4335 ; Removed redundent load
   0E6F B7                 4336 	or	a,a
   0E70 C2 80 0E           4337 	jp	nz,00102$
   0E73 18 03              4338 	jr	00111$
   0E75                    4339 00110$:
   0E75 C3 80 0E           4340 	jp	00102$
   0E78                    4341 00111$:
                           4342 ;	square.c 677
                           4343 ;	genAssign
                           4344 ;	AOP_HL for _pop
   0E78 21 06 00           4345 	ld	hl,#_pop
   0E7B 36 00              4346 	ld	(hl),#0x00
                           4347 ;	genGoto
   0E7D C3 85 0E           4348 	jp	00103$
                           4349 ;	genLabel
   0E80                    4350 00102$:
                           4351 ;	square.c 679
                           4352 ;	genAssign
                           4353 ;	AOP_HL for _pop
   0E80 21 06 00           4354 	ld	hl,#_pop
   0E83 36 01              4355 	ld	(hl),#0x01
                           4356 ;	genLabel
   0E85                    4357 00103$:
                           4358 ;	square.c 680
                           4359 ;	genCmpEq
                           4360 ;	AOP_HL for _pop
                           4361 ; genCmpEq: left 1, right 1, result 0
   0E85 21 06 00           4362 	ld	hl,#_pop
   0E88 7E                 4363 	ld	a,(hl)
   0E89 FE 01              4364 	cp	a,#0x01
   0E8B C2 96 0E           4365 	jp	nz,00106$
   0E8E 18 03              4366 	jr	00113$
   0E90                    4367 00112$:
   0E90 C3 96 0E           4368 	jp	00106$
   0E93                    4369 00113$:
                           4370 ;	square.c 682
                           4371 ;	genCall
                           4372 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E93 CD 22 0D           4373 	call	_tick
                           4374 ;	genLabel
   0E96                    4375 00106$:
                           4376 ;	genEndFunction
                           4377 	
   0E96 C9                 4378 	ret
   0E97                    4379 ___slave_end:
                           4380 ;	square.c 688
                           4381 ;	genLabel
                           4382 ;	genFunction
                           4383 ;	---------------------------------
                           4384 ; Function master
                           4385 ; ---------------------------------
   0E97                    4386 ___master_start:
   0E97                    4387 _master:
                           4388 	
                           4389 ;	square.c 690
                           4390 ;	genPlus
                           4391 ;	AOP_HL for _watch
                           4392 ;	genPlusIncr
   0E97 21 03 00           4393 	ld	hl,#_watch
   0E9A 34                 4394 	inc	(hl)
                           4395 ;	square.c 691
                           4396 ;	genCmpGt
                           4397 ;	AOP_HL for _watch
                           4398 ;	AOP_HL for _tempo
   0E9B 21 02 00           4399 	ld	hl,#_tempo
   0E9E 7E                 4400 	ld	a,(hl)
   0E9F 21 03 00           4401 	ld	hl,#_watch
   0EA2 96                 4402 	sub	a,(hl)
   0EA3 D2 AB 0E           4403 	jp	nc,00103$
                           4404 ;	square.c 693
                           4405 ;	genAssign
                           4406 ;	AOP_HL for _watch
   0EA6 36 00              4407 	ld	(hl),#0x00
                           4408 ;	square.c 694
                           4409 ;	genCall
                           4410 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EA8 CD 22 0D           4411 	call	_tick
                           4412 ;	genLabel
   0EAB                    4413 00103$:
                           4414 ;	genEndFunction
                           4415 	
   0EAB C9                 4416 	ret
   0EAC                    4417 ___master_end:
                           4418 ;	square.c 698
                           4419 ;	genLabel
                           4420 ;	genFunction
                           4421 ;	---------------------------------
                           4422 ; Function player
                           4423 ; ---------------------------------
   0EAC                    4424 ___player_start:
   0EAC                    4425 _player:
                           4426 	
                           4427 ;	square.c 700
                           4428 ;	genCmpEq
                           4429 ;	AOP_HL for _modus
                           4430 ; genCmpEq: left 1, right 1, result 0
   0EAC 21 07 00           4431 	ld	hl,#_modus
   0EAF 7E                 4432 	ld	a,(hl)
   0EB0 B7                 4433 	or	a,a
   0EB1 C2 BF 0E           4434 	jp	nz,00102$
   0EB4 18 03              4435 	jr	00108$
   0EB6                    4436 00107$:
   0EB6 C3 BF 0E           4437 	jp	00102$
   0EB9                    4438 00108$:
                           4439 ;	square.c 702
                           4440 ;	genCall
                           4441 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EB9 CD 97 0E           4442 	call	_master
                           4443 ;	genGoto
   0EBC C3 C2 0E           4444 	jp	00104$
                           4445 ;	genLabel
   0EBF                    4446 00102$:
                           4447 ;	square.c 705
                           4448 ;	genCall
                           4449 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EBF CD 59 0E           4450 	call	_slave
                           4451 ;	genLabel
   0EC2                    4452 00104$:
                           4453 ;	genEndFunction
                           4454 	
   0EC2 C9                 4455 	ret
   0EC3                    4456 ___player_end:
                           4457 ;	square.c 709
                           4458 ;	genLabel
                           4459 ;	genFunction
                           4460 ;	---------------------------------
                           4461 ; Function tim
                           4462 ; ---------------------------------
   0EC3                    4463 ___tim_start:
   0EC3                    4464 _tim:
                           4465 	
                           4466 ;	square.c 711
                           4467 ;	genCall
                           4468 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EC3 CD AC 0E           4469 	call	_player
                           4470 ;	genLabel
   0EC6                    4471 00101$:
                           4472 ;	genEndFunction
                           4473 	
   0EC6 C9                 4474 	ret
   0EC7                    4475 ___tim_end:
                           4476 ;	square.c 715
                           4477 ;	genLabel
                           4478 ;	genFunction
                           4479 ;	---------------------------------
                           4480 ; Function main
                           4481 ; ---------------------------------
   0EC7                    4482 ___main_start:
   0EC7                    4483 _main:
   0EC7 E8 FD              4484 	lda	sp,-3(sp)
                           4485 ;	square.c 717
                           4486 ;	genAssign
   0EC9 01 24 FF           4487 	ld	bc,#0xFF24
                           4488 ;	genAssign (pointer)
   0ECC 3E FF              4489 	ld	a,#0xFF
   0ECE 02                 4490 	ld	(bc),a
                           4491 ;	square.c 718
                           4492 ;	genAssign
   0ECF 01 25 FF           4493 	ld	bc,#0xFF25
                           4494 ;	genAssign (pointer)
   0ED2 3E FF              4495 	ld	a,#0xFF
   0ED4 02                 4496 	ld	(bc),a
                           4497 ;	square.c 719
                           4498 ;	genAssign
   0ED5 01 26 FF           4499 	ld	bc,#0xFF26
                           4500 ;	genAssign (pointer)
   0ED8 3E 80              4501 	ld	a,#0x80
   0EDA 02                 4502 	ld	(bc),a
                           4503 ;	square.c 720
                           4504 ;	genAssign
                           4505 ;	AOP_HL for _watch
   0EDB 21 03 00           4506 	ld	hl,#_watch
   0EDE 36 00              4507 	ld	(hl),#0x00
                           4508 ;	square.c 721
                           4509 ;	genAssign
                           4510 ;	AOP_HL for _clkA
   0EE0 21 21 00           4511 	ld	hl,#_clkA
   0EE3 36 00              4512 	ld	(hl),#0x00
                           4513 ;	square.c 722
                           4514 ;	genAssign
                           4515 ;	AOP_HL for _pop
   0EE5 21 06 00           4516 	ld	hl,#_pop
   0EE8 36 00              4517 	ld	(hl),#0x00
                           4518 ;	square.c 723
                           4519 ;	genAssign
                           4520 ;	AOP_HL for _numberOfPulsesA
   0EEA 21 1F 00           4521 	ld	hl,#_numberOfPulsesA
   0EED 36 01              4522 	ld	(hl),#0x01
                           4523 ;	square.c 724
                           4524 ;	genAssign
                           4525 ;	AOP_HL for _totalStepsA
   0EEF 21 20 00           4526 	ld	hl,#_totalStepsA
   0EF2 36 10              4527 	ld	(hl),#0x10
                           4528 ;	square.c 725
                           4529 ;	genAssign
                           4530 ;	AOP_HL for _numberOfPulsesB
   0EF4 21 22 00           4531 	ld	hl,#_numberOfPulsesB
   0EF7 36 02              4532 	ld	(hl),#0x02
                           4533 ;	square.c 726
                           4534 ;	genAssign
                           4535 ;	AOP_HL for _totalStepsB
   0EF9 21 23 00           4536 	ld	hl,#_totalStepsB
   0EFC 36 10              4537 	ld	(hl),#0x10
                           4538 ;	square.c 727
                           4539 ;	genAssign
                           4540 ;	AOP_HL for _numberOfPulsesC
   0EFE 21 25 00           4541 	ld	hl,#_numberOfPulsesC
   0F01 36 04              4542 	ld	(hl),#0x04
                           4543 ;	square.c 728
                           4544 ;	genAssign
                           4545 ;	AOP_HL for _totalStepsC
   0F03 21 26 00           4546 	ld	hl,#_totalStepsC
   0F06 36 10              4547 	ld	(hl),#0x10
                           4548 ;	square.c 729
                           4549 ;	genAssign
                           4550 ;	AOP_HL for _offStepA
   0F08 21 28 00           4551 	ld	hl,#_offStepA
   0F0B 36 00              4552 	ld	(hl),#0x00
                           4553 ;	square.c 730
                           4554 ;	genAssign
                           4555 ;	AOP_HL for _offStepB
   0F0D 21 29 00           4556 	ld	hl,#_offStepB
   0F10 36 00              4557 	ld	(hl),#0x00
                           4558 ;	square.c 731
                           4559 ;	genAssign
                           4560 ;	AOP_HL for _offStepC
   0F12 21 2A 00           4561 	ld	hl,#_offStepC
   0F15 36 00              4562 	ld	(hl),#0x00
                           4563 ;	square.c 732
                           4564 ;	genAssign
                           4565 ;	AOP_HL for _randA
   0F17 21 0F 00           4566 	ld	hl,#_randA
   0F1A 36 00              4567 	ld	(hl),#0x00
                           4568 ;	square.c 733
                           4569 ;	genAssign
                           4570 ;	AOP_HL for _randB
   0F1C 21 10 00           4571 	ld	hl,#_randB
   0F1F 36 00              4572 	ld	(hl),#0x00
                           4573 ;	square.c 734
                           4574 ;	genAssign
                           4575 ;	AOP_HL for _randC
   0F21 21 11 00           4576 	ld	hl,#_randC
   0F24 36 00              4577 	ld	(hl),#0x00
                           4578 ;	square.c 735
                           4579 ;	genAssign
                           4580 ;	AOP_HL for _xA
   0F26 21 16 00           4581 	ld	hl,#_xA
   0F29 36 00              4582 	ld	(hl),#0x00
                           4583 ;	square.c 736
                           4584 ;	genAssign
                           4585 ;	AOP_HL for _xB
   0F2B 21 17 00           4586 	ld	hl,#_xB
   0F2E 36 00              4587 	ld	(hl),#0x00
                           4588 ;	square.c 737
                           4589 ;	genAssign
                           4590 ;	AOP_HL for _xC
   0F30 21 18 00           4591 	ld	hl,#_xC
   0F33 36 00              4592 	ld	(hl),#0x00
                           4593 ;	square.c 738
                           4594 ;	genAssign
                           4595 ;	AOP_HL for _delayA
   0F35 21 19 00           4596 	ld	hl,#_delayA
   0F38 36 01              4597 	ld	(hl),#0x01
                           4598 ;	square.c 739
                           4599 ;	genAssign
                           4600 ;	AOP_HL for _delayB
   0F3A 21 1A 00           4601 	ld	hl,#_delayB
   0F3D 36 01              4602 	ld	(hl),#0x01
                           4603 ;	square.c 740
                           4604 ;	genAssign
                           4605 ;	AOP_HL for _delayC
   0F3F 21 1B 00           4606 	ld	hl,#_delayC
   0F42 36 01              4607 	ld	(hl),#0x01
                           4608 ;	square.c 741
                           4609 ;	genAssign
                           4610 ;	AOP_HL for _modus
   0F44 21 07 00           4611 	ld	hl,#_modus
   0F47 36 00              4612 	ld	(hl),#0x00
                           4613 ;	square.c 742
                           4614 ;	genAssign
                           4615 ;	AOP_HL for _samp_freq
   0F49 21 01 00           4616 	ld	hl,#_samp_freq
   0F4C 36 A4              4617 	ld	(hl),#0xA4
                           4618 ;	square.c 743
                           4619 ;	genAssign
                           4620 ;	AOP_HL for _tempo
   0F4E 21 02 00           4621 	ld	hl,#_tempo
   0F51 36 14              4622 	ld	(hl),#0x14
                           4623 ;	square.c 744
                           4624 ;	genAssign
                           4625 ;	AOP_HL for _seldrum
   0F53 21 0B 00           4626 	ld	hl,#_seldrum
   0F56 36 00              4627 	ld	(hl),#0x00
                           4628 ;	square.c 745
                           4629 ;	genAssign
                           4630 ;	AOP_HL for _syncToDrum
   0F58 21 1D 00           4631 	ld	hl,#_syncToDrum
   0F5B 36 00              4632 	ld	(hl),#0x00
                           4633 ;	square.c 746
                           4634 ;	genCall
                           4635 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F5D CD CF 00           4636 	call	_fillDrumA
                           4637 ;	square.c 747
                           4638 ;	genCall
                           4639 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F60 CD 9F 02           4640 	call	_fillDrumB
                           4641 ;	square.c 748
                           4642 ;	genCall
                           4643 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F63 CD 6F 04           4644 	call	_fillDrumC
                           4645 ;	square.c 749
                           4646 ;	genCall
                           4647 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F66 CD 00 00           4648 	call	_disable_interrupts
                           4649 ;	square.c 750
                           4650 ;	genIpush
                           4651 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F69 21 C3 0E           4652 	ld	hl,#_tim
   0F6C E5                 4653 	push	hl
                           4654 ;	genCall
   0F6D CD 00 00           4655 	call	_add_TIM
   0F70 E8 02              4656 	lda	sp,2(sp)
                           4657 ;	square.c 751
                           4658 ;	genCall
                           4659 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F72 CD 00 00           4660 	call	_enable_interrupts
                           4661 ;	square.c 752
                           4662 ;	genAssign
   0F75 01 06 FF           4663 	ld	bc,#0xFF06
                           4664 ;	genAssign (pointer)
                           4665 ;	AOP_HL for _samp_freq
   0F78 21 01 00           4666 	ld	hl,#_samp_freq
   0F7B 7E                 4667 	ld	a,(hl)
   0F7C 02                 4668 	ld	(bc),a
                           4669 ;	square.c 757
                           4670 ;	genAssign
   0F7D 01 07 FF           4671 	ld	bc,#0xFF07
                           4672 ;	genAssign (pointer)
   0F80 3E 07              4673 	ld	a,#0x07
   0F82 02                 4674 	ld	(bc),a
                           4675 ;	square.c 759
                           4676 ;	genIpush
                           4677 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F83 3E 05              4678 	ld	a,#0x05
   0F85 F5                 4679 	push	af
   0F86 33                 4680 	inc	sp
                           4681 ;	genCall
   0F87 CD 00 00           4682 	call	_set_interrupts
   0F8A E8 01              4683 	lda	sp,1(sp)
                           4684 ;	square.c 760
                           4685 ;	genAssign
   0F8C 01 40 FF           4686 	ld	bc,#0xFF40
                           4687 ;	genAssign
                           4688 ;	AOP_STK for _main_sloc0_1_0
   0F8F F8 01              4689 	lda	hl,1(sp)
   0F91 36 40              4690 	ld	(hl),#0x40
   0F93 23                 4691 	inc	hl
   0F94 36 FF              4692 	ld	(hl),#0xFF
                           4693 ;	genPointerGet
                           4694 ;	AOP_STK for _main_sloc0_1_0
                           4695 ;	AOP_STK for _main_sloc1_1_0
   0F96 2B                 4696 	dec	hl
   0F97 5E                 4697 	ld	e,(hl)
   0F98 23                 4698 	inc	hl
   0F99 56                 4699 	ld	d,(hl)
   0F9A 1A                 4700 	ld	a,(de)
   0F9B 2B                 4701 	dec	hl
   0F9C 2B                 4702 	dec	hl
                           4703 ;	genOr
                           4704 ;	AOP_STK for _main_sloc1_1_0
   0F9D 77                 4705 	ld      (hl),a
                           4706 ; Removed redundent load
   0F9E F6 80              4707 	or	a,#0x80
                           4708 ;	genAssign (pointer)
   0FA0 02                 4709 	ld	(bc),a
                           4710 ;	square.c 762
                           4711 ;	genCall
                           4712 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FA1 CD 3F 06           4713 	call	_updateUI
                           4714 ;	square.c 764
                           4715 ;	genLabel
   0FA4                    4716 00144$:
                           4717 ;	square.c 766
                           4718 ;	genCall
                           4719 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FA4 CD 00 00           4720 	call	_joypad
   0FA7 4B                 4721 	ld	c,e
                           4722 ;	genCmpEq
                           4723 ; genCmpEq: left 1, right 1, result 0
   0FA8 79                 4724 	ld	a,c
   0FA9 B7                 4725 	or	a,a
   0FAA CA B4 0F           4726 	jp	z,00102$
   0FAD                    4727 00169$:
                           4728 ;	square.c 767
                           4729 ;	genPlus
                           4730 ;	AOP_HL for _pad
                           4731 ;	genPlusIncr
   0FAD 21 0A 00           4732 	ld	hl,#_pad
   0FB0 34                 4733 	inc	(hl)
                           4734 ;	genGoto
   0FB1 C3 B9 0F           4735 	jp	00103$
                           4736 ;	genLabel
   0FB4                    4737 00102$:
                           4738 ;	square.c 770
                           4739 ;	genAssign
                           4740 ;	AOP_HL for _pad
   0FB4 21 0A 00           4741 	ld	hl,#_pad
   0FB7 36 00              4742 	ld	(hl),#0x00
                           4743 ;	genLabel
   0FB9                    4744 00103$:
                           4745 ;	square.c 773
                           4746 ;	genCall
                           4747 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FB9 CD 00 00           4748 	call	_joypad
   0FBC 4B                 4749 	ld	c,e
                           4750 ;	genCmpEq
                           4751 ;	AOP_HL for _joy
                           4752 ; genCmpEq: left 1, right 1, result 0
   0FBD 21 09 00           4753 	ld	hl,#_joy
   0FC0 7E                 4754 	ld	a,(hl)
   0FC1 B9                 4755 	cp	c
   0FC2 20 02              4756 	jr	nz,00170$
   0FC4 18 03              4757 	jr	00171$
   0FC6                    4758 00170$:
   0FC6 C3 D2 0F           4759 	jp	00104$
   0FC9                    4760 00171$:
                           4761 ;	genCmpGt
                           4762 ;	AOP_HL for _pad
   0FC9 3E 0A              4763 	ld	a,#0x0A
   0FCB 21 0A 00           4764 	ld	hl,#_pad
   0FCE 96                 4765 	sub	a,(hl)
   0FCF D2 DC 0F           4766 	jp	nc,00105$
                           4767 ;	genLabel
   0FD2                    4768 00104$:
                           4769 ;	square.c 774
                           4770 ;	genCall
                           4771 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FD2 CD 00 00           4772 	call	_joypad
                           4773 ;	AOP_HL for _padext
   0FD5 21 08 00           4774 	ld	hl,#_padext
   0FD8 73                 4775 	ld	(hl),e
                           4776 ;	genGoto
   0FD9 C3 E1 0F           4777 	jp	00106$
                           4778 ;	genLabel
   0FDC                    4779 00105$:
                           4780 ;	square.c 777
                           4781 ;	genAssign
                           4782 ;	AOP_HL for _padext
   0FDC 21 08 00           4783 	ld	hl,#_padext
   0FDF 36 00              4784 	ld	(hl),#0x00
                           4785 ;	genLabel
   0FE1                    4786 00106$:
                           4787 ;	square.c 781
                           4788 ;	genCall
                           4789 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FE1 CD 00 00           4790 	call	_joypad
   0FE4 4B                 4791 	ld	c,e
                           4792 ;	genCmpEq
                           4793 ;	AOP_HL for _joy
                           4794 ; genCmpEq: left 1, right 1, result 0
   0FE5 21 09 00           4795 	ld	hl,#_joy
   0FE8 7E                 4796 	ld	a,(hl)
   0FE9 B9                 4797 	cp	c
   0FEA 20 03              4798 	jr	nz,00172$
   0FEC C3 F4 0F           4799 	jp	00109$
   0FEF                    4800 00172$:
                           4801 ;	square.c 783
                           4802 ;	genAssign
                           4803 ;	AOP_HL for _pad
   0FEF 21 0A 00           4804 	ld	hl,#_pad
   0FF2 36 00              4805 	ld	(hl),#0x00
                           4806 ;	genLabel
   0FF4                    4807 00109$:
                           4808 ;	square.c 786
                           4809 ;	genCall
                           4810 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FF4 CD 00 00           4811 	call	_joypad
                           4812 ;	AOP_HL for _joy
   0FF7 21 09 00           4813 	ld	hl,#_joy
   0FFA 73                 4814 	ld	(hl),e
                           4815 ;	square.c 789
                           4816 ;	genCall
                           4817 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FFB CD 00 00           4818 	call	_joypad
   0FFE 4B                 4819 	ld	c,e
                           4820 ;	genCmpEq
                           4821 ; genCmpEq: left 1, right 1, result 0
   0FFF 79                 4822 	ld	a,c
   1000 FE 40              4823 	cp	a,#0x40
   1002 C2 24 10           4824 	jp	nz,00113$
   1005 18 03              4825 	jr	00174$
   1007                    4826 00173$:
   1007 C3 24 10           4827 	jp	00113$
   100A                    4828 00174$:
                           4829 ;	square.c 791
                           4830 ;	genPlus
                           4831 ;	AOP_HL for _seldrum
                           4832 ;	genPlusIncr
   100A 21 0B 00           4833 	ld	hl,#_seldrum
   100D 34                 4834 	inc	(hl)
                           4835 ;	square.c 792
                           4836 ;	genCmpEq
                           4837 ;	AOP_HL for _seldrum
                           4838 ; genCmpEq: left 1, right 1, result 0
   100E 7E                 4839 	ld	a,(hl)
   100F FE 03              4840 	cp	a,#0x03
   1011 C2 1E 10           4841 	jp	nz,00111$
   1014 18 03              4842 	jr	00176$
   1016                    4843 00175$:
   1016 C3 1E 10           4844 	jp	00111$
   1019                    4845 00176$:
                           4846 ;	square.c 794
                           4847 ;	genAssign
                           4848 ;	AOP_HL for _seldrum
   1019 21 0B 00           4849 	ld	hl,#_seldrum
   101C 36 00              4850 	ld	(hl),#0x00
                           4851 ;	genLabel
   101E                    4852 00111$:
                           4853 ;	square.c 796
                           4854 ;	genCall
                           4855 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   101E CD 00 00           4856 	call	_waitpadup
                           4857 ;	square.c 797
                           4858 ;	genCall
                           4859 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1021 CD 3F 06           4860 	call	_updateUI
                           4861 ;	genLabel
   1024                    4862 00113$:
                           4863 ;	square.c 801
                           4864 ;	genCall
                           4865 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1024 CD 00 00           4866 	call	_joypad
   1027 4B                 4867 	ld	c,e
                           4868 ;	genCmpEq
                           4869 ; genCmpEq: left 1, right 1, result 0
   1028 79                 4870 	ld	a,c
   1029 FE 80              4871 	cp	a,#0x80
   102B C2 71 10           4872 	jp	nz,00118$
   102E 18 03              4873 	jr	00178$
   1030                    4874 00177$:
   1030 C3 71 10           4875 	jp	00118$
   1033                    4876 00178$:
                           4877 ;	square.c 803
                           4878 ;	genCmpEq
                           4879 ;	AOP_HL for _modus
                           4880 ; genCmpEq: left 1, right 1, result 0
   1033 21 07 00           4881 	ld	hl,#_modus
   1036 7E                 4882 	ld	a,(hl)
   1037 B7                 4883 	or	a,a
   1038 C2 57 10           4884 	jp	nz,00115$
   103B 18 03              4885 	jr	00180$
   103D                    4886 00179$:
   103D C3 57 10           4887 	jp	00115$
   1040                    4888 00180$:
                           4889 ;	square.c 805
                           4890 ;	genAssign
                           4891 ;	AOP_HL for _clkA
   1040 21 21 00           4892 	ld	hl,#_clkA
   1043 36 00              4893 	ld	(hl),#0x00
                           4894 ;	square.c 806
                           4895 ;	genAssign
                           4896 ;	AOP_HL for _clkB
   1045 21 24 00           4897 	ld	hl,#_clkB
   1048 36 00              4898 	ld	(hl),#0x00
                           4899 ;	square.c 807
                           4900 ;	genAssign
                           4901 ;	AOP_HL for _clkC
   104A 21 27 00           4902 	ld	hl,#_clkC
   104D 36 00              4903 	ld	(hl),#0x00
                           4904 ;	square.c 808
                           4905 ;	genAssign
                           4906 ;	AOP_HL for _modus
   104F 21 07 00           4907 	ld	hl,#_modus
   1052 36 01              4908 	ld	(hl),#0x01
                           4909 ;	genGoto
   1054 C3 6B 10           4910 	jp	00116$
                           4911 ;	genLabel
   1057                    4912 00115$:
                           4913 ;	square.c 812
                           4914 ;	genAssign
                           4915 ;	AOP_HL for _clkA
   1057 21 21 00           4916 	ld	hl,#_clkA
   105A 36 00              4917 	ld	(hl),#0x00
                           4918 ;	square.c 813
                           4919 ;	genAssign
                           4920 ;	AOP_HL for _clkB
   105C 21 24 00           4921 	ld	hl,#_clkB
   105F 36 00              4922 	ld	(hl),#0x00
                           4923 ;	square.c 814
                           4924 ;	genAssign
                           4925 ;	AOP_HL for _clkC
   1061 21 27 00           4926 	ld	hl,#_clkC
   1064 36 00              4927 	ld	(hl),#0x00
                           4928 ;	square.c 815
                           4929 ;	genAssign
                           4930 ;	AOP_HL for _modus
   1066 21 07 00           4931 	ld	hl,#_modus
   1069 36 00              4932 	ld	(hl),#0x00
                           4933 ;	genLabel
   106B                    4934 00116$:
                           4935 ;	square.c 817
                           4936 ;	genCall
                           4937 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   106B CD 3F 06           4938 	call	_updateUI
                           4939 ;	square.c 819
                           4940 ;	genCall
                           4941 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   106E CD 00 00           4942 	call	_waitpadup
                           4943 ;	genLabel
   1071                    4944 00118$:
                           4945 ;	square.c 822
                           4946 ;	genCall
                           4947 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1071 CD 00 00           4948 	call	_joypad
   1074 4B                 4949 	ld	c,e
                           4950 ;	genCmpEq
                           4951 ; genCmpEq: left 1, right 1, result 0
   1075 79                 4952 	ld	a,c
   1076 FE 08              4953 	cp	a,#0x08
   1078 C2 93 10           4954 	jp	nz,00120$
   107B 18 03              4955 	jr	00182$
   107D                    4956 00181$:
   107D C3 93 10           4957 	jp	00120$
   1080                    4958 00182$:
                           4959 ;	genCmpEq
                           4960 ;	AOP_HL for _tempo
                           4961 ; genCmpEq: left 1, right 1, result 0
   1080 21 02 00           4962 	ld	hl,#_tempo
   1083 7E                 4963 	ld	a,(hl)
   1084 FE 01              4964 	cp	a,#0x01
   1086 CA 93 10           4965 	jp	z,00120$
   1089                    4966 00183$:
                           4967 ;	square.c 824
                           4968 ;	genMinus
                           4969 ;	AOP_HL for _tempo
   1089 21 02 00           4970 	ld	hl,#_tempo
   108C 35                 4971 	dec	(hl)
                           4972 ;	square.c 826
                           4973 ;	genCall
                           4974 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   108D CD 00 00           4975 	call	_waitpadup
                           4976 ;	square.c 827
                           4977 ;	genCall
                           4978 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1090 CD 3F 06           4979 	call	_updateUI
                           4980 ;	genLabel
   1093                    4981 00120$:
                           4982 ;	square.c 831
                           4983 ;	genCall
                           4984 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1093 CD 00 00           4985 	call	_joypad
   1096 4B                 4986 	ld	c,e
                           4987 ;	genCmpEq
                           4988 ; genCmpEq: left 1, right 1, result 0
   1097 79                 4989 	ld	a,c
   1098 FE 04              4990 	cp	a,#0x04
   109A C2 B5 10           4991 	jp	nz,00123$
   109D 18 03              4992 	jr	00185$
   109F                    4993 00184$:
   109F C3 B5 10           4994 	jp	00123$
   10A2                    4995 00185$:
                           4996 ;	genCmpEq
                           4997 ;	AOP_HL for _tempo
                           4998 ; genCmpEq: left 1, right 1, result 0
   10A2 21 02 00           4999 	ld	hl,#_tempo
   10A5 7E                 5000 	ld	a,(hl)
   10A6 FE 28              5001 	cp	a,#0x28
   10A8 CA B5 10           5002 	jp	z,00123$
   10AB                    5003 00186$:
                           5004 ;	square.c 833
                           5005 ;	genPlus
                           5006 ;	AOP_HL for _tempo
                           5007 ;	genPlusIncr
   10AB 21 02 00           5008 	ld	hl,#_tempo
   10AE 34                 5009 	inc	(hl)
                           5010 ;	square.c 835
                           5011 ;	genCall
                           5012 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10AF CD 00 00           5013 	call	_waitpadup
                           5014 ;	square.c 836
                           5015 ;	genCall
                           5016 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10B2 CD 3F 06           5017 	call	_updateUI
                           5018 ;	genLabel
   10B5                    5019 00123$:
                           5020 ;	square.c 839
                           5021 ;	genCmpEq
                           5022 ;	AOP_HL for _padext
                           5023 ; genCmpEq: left 1, right 1, result 0
   10B5 21 08 00           5024 	ld	hl,#_padext
   10B8 7E                 5025 	ld	a,(hl)
   10B9 FE 21              5026 	cp	a,#0x21
   10BB C2 CF 10           5027 	jp	nz,00126$
   10BE 18 03              5028 	jr	00188$
   10C0                    5029 00187$:
   10C0 C3 CF 10           5030 	jp	00126$
   10C3                    5031 00188$:
                           5032 ;	square.c 841
                           5033 ;	genCall
                           5034 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10C3 CD 6F 0A           5035 	call	_increaseSteps
                           5036 ;	square.c 842
                           5037 ;	genIpush
                           5038 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10C6 21 C8 00           5039 	ld	hl,#0x00C8
   10C9 E5                 5040 	push	hl
                           5041 ;	genCall
   10CA CD 00 00           5042 	call	_delay
   10CD E8 02              5043 	lda	sp,2(sp)
                           5044 ;	genLabel
   10CF                    5045 00126$:
                           5046 ;	square.c 845
                           5047 ;	genCmpEq
                           5048 ;	AOP_HL for _padext
                           5049 ; genCmpEq: left 1, right 1, result 0
   10CF 21 08 00           5050 	ld	hl,#_padext
   10D2 7E                 5051 	ld	a,(hl)
   10D3 FE 22              5052 	cp	a,#0x22
   10D5 C2 E9 10           5053 	jp	nz,00128$
   10D8 18 03              5054 	jr	00190$
   10DA                    5055 00189$:
   10DA C3 E9 10           5056 	jp	00128$
   10DD                    5057 00190$:
                           5058 ;	square.c 847
                           5059 ;	genCall
                           5060 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10DD CD E4 0A           5061 	call	_decreaseSteps
                           5062 ;	square.c 848
                           5063 ;	genIpush
                           5064 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10E0 21 C8 00           5065 	ld	hl,#0x00C8
   10E3 E5                 5066 	push	hl
                           5067 ;	genCall
   10E4 CD 00 00           5068 	call	_delay
   10E7 E8 02              5069 	lda	sp,2(sp)
                           5070 ;	genLabel
   10E9                    5071 00128$:
                           5072 ;	square.c 851
                           5073 ;	genCmpEq
                           5074 ;	AOP_HL for _padext
                           5075 ; genCmpEq: left 1, right 1, result 0
   10E9 21 08 00           5076 	ld	hl,#_padext
   10EC 7E                 5077 	ld	a,(hl)
   10ED FE 24              5078 	cp	a,#0x24
   10EF C2 03 11           5079 	jp	nz,00130$
   10F2 18 03              5080 	jr	00192$
   10F4                    5081 00191$:
   10F4 C3 03 11           5082 	jp	00130$
   10F7                    5083 00192$:
                           5084 ;	square.c 853
                           5085 ;	genCall
                           5086 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10F7 CD 59 0B           5087 	call	_increasePulses
                           5088 ;	square.c 854
                           5089 ;	genIpush
                           5090 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10FA 21 C8 00           5091 	ld	hl,#0x00C8
   10FD E5                 5092 	push	hl
                           5093 ;	genCall
   10FE CD 00 00           5094 	call	_delay
   1101 E8 02              5095 	lda	sp,2(sp)
                           5096 ;	genLabel
   1103                    5097 00130$:
                           5098 ;	square.c 857
                           5099 ;	genCmpEq
                           5100 ;	AOP_HL for _padext
                           5101 ; genCmpEq: left 1, right 1, result 0
   1103 21 08 00           5102 	ld	hl,#_padext
   1106 7E                 5103 	ld	a,(hl)
   1107 FE 28              5104 	cp	a,#0x28
   1109 C2 1D 11           5105 	jp	nz,00132$
   110C 18 03              5106 	jr	00194$
   110E                    5107 00193$:
   110E C3 1D 11           5108 	jp	00132$
   1111                    5109 00194$:
                           5110 ;	square.c 859
                           5111 ;	genCall
                           5112 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1111 CD CE 0B           5113 	call	_decreasePulses
                           5114 ;	square.c 860
                           5115 ;	genIpush
                           5116 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1114 21 C8 00           5117 	ld	hl,#0x00C8
   1117 E5                 5118 	push	hl
                           5119 ;	genCall
   1118 CD 00 00           5120 	call	_delay
   111B E8 02              5121 	lda	sp,2(sp)
                           5122 ;	genLabel
   111D                    5123 00132$:
                           5124 ;	square.c 863
                           5125 ;	genCmpEq
                           5126 ;	AOP_HL for _padext
                           5127 ; genCmpEq: left 1, right 1, result 0
   111D 21 08 00           5128 	ld	hl,#_padext
   1120 7E                 5129 	ld	a,(hl)
   1121 FE 14              5130 	cp	a,#0x14
   1123 C2 37 11           5131 	jp	nz,00134$
   1126 18 03              5132 	jr	00196$
   1128                    5133 00195$:
   1128 C3 37 11           5134 	jp	00134$
   112B                    5135 00196$:
                           5136 ;	square.c 865
                           5137 ;	genCall
                           5138 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   112B CD 66 09           5139 	call	_increaseOffStep
                           5140 ;	square.c 866
                           5141 ;	genIpush
                           5142 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   112E 21 C8 00           5143 	ld	hl,#0x00C8
   1131 E5                 5144 	push	hl
                           5145 ;	genCall
   1132 CD 00 00           5146 	call	_delay
   1135 E8 02              5147 	lda	sp,2(sp)
                           5148 ;	genLabel
   1137                    5149 00134$:
                           5150 ;	square.c 869
                           5151 ;	genCmpEq
                           5152 ;	AOP_HL for _padext
                           5153 ; genCmpEq: left 1, right 1, result 0
   1137 21 08 00           5154 	ld	hl,#_padext
   113A 7E                 5155 	ld	a,(hl)
   113B FE 18              5156 	cp	a,#0x18
   113D C2 51 11           5157 	jp	nz,00136$
   1140 18 03              5158 	jr	00198$
   1142                    5159 00197$:
   1142 C3 51 11           5160 	jp	00136$
   1145                    5161 00198$:
                           5162 ;	square.c 871
                           5163 ;	genCall
                           5164 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1145 CD FD 09           5165 	call	_decreaseOffStep
                           5166 ;	square.c 872
                           5167 ;	genIpush
                           5168 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1148 21 C8 00           5169 	ld	hl,#0x00C8
   114B E5                 5170 	push	hl
                           5171 ;	genCall
   114C CD 00 00           5172 	call	_delay
   114F E8 02              5173 	lda	sp,2(sp)
                           5174 ;	genLabel
   1151                    5175 00136$:
                           5176 ;	square.c 875
                           5177 ;	genCmpEq
                           5178 ;	AOP_HL for _padext
                           5179 ; genCmpEq: left 1, right 1, result 0
   1151 21 08 00           5180 	ld	hl,#_padext
   1154 7E                 5181 	ld	a,(hl)
   1155 FE 11              5182 	cp	a,#0x11
   1157 C2 6B 11           5183 	jp	nz,00138$
   115A 18 03              5184 	jr	00200$
   115C                    5185 00199$:
   115C C3 6B 11           5186 	jp	00138$
   115F                    5187 00200$:
                           5188 ;	square.c 877
                           5189 ;	genCall
                           5190 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   115F CD 43 0C           5191 	call	_increaseSwing
                           5192 ;	square.c 878
                           5193 ;	genIpush
                           5194 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1162 21 32 00           5195 	ld	hl,#0x0032
   1165 E5                 5196 	push	hl
                           5197 ;	genCall
   1166 CD 00 00           5198 	call	_delay
   1169 E8 02              5199 	lda	sp,2(sp)
                           5200 ;	genLabel
   116B                    5201 00138$:
                           5202 ;	square.c 881
                           5203 ;	genCmpEq
                           5204 ;	AOP_HL for _padext
                           5205 ; genCmpEq: left 1, right 1, result 0
   116B 21 08 00           5206 	ld	hl,#_padext
   116E 7E                 5207 	ld	a,(hl)
   116F FE 12              5208 	cp	a,#0x12
   1171 C2 85 11           5209 	jp	nz,00140$
   1174 18 03              5210 	jr	00202$
   1176                    5211 00201$:
   1176 C3 85 11           5212 	jp	00140$
   1179                    5213 00202$:
                           5214 ;	square.c 883
                           5215 ;	genCall
                           5216 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1179 CD B0 0C           5217 	call	_decreaseSwing
                           5218 ;	square.c 884
                           5219 ;	genIpush
                           5220 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   117C 21 32 00           5221 	ld	hl,#0x0032
   117F E5                 5222 	push	hl
                           5223 ;	genCall
   1180 CD 00 00           5224 	call	_delay
   1183 E8 02              5225 	lda	sp,2(sp)
                           5226 ;	genLabel
   1185                    5227 00140$:
                           5228 ;	square.c 887
                           5229 ;	genCmpEq
                           5230 ;	AOP_HL for _padext
                           5231 ; genCmpEq: left 1, right 1, result 0
   1185 21 08 00           5232 	ld	hl,#_padext
   1188 7E                 5233 	ld	a,(hl)
   1189 FE 30              5234 	cp	a,#0x30
   118B C2 9E 11           5235 	jp	nz,00142$
   118E 18 03              5236 	jr	00204$
   1190                    5237 00203$:
   1190 C3 9E 11           5238 	jp	00142$
   1193                    5239 00204$:
                           5240 ;	square.c 889
                           5241 ;	genAssign
                           5242 ;	AOP_HL for _syncToDrum
   1193 21 1D 00           5243 	ld	hl,#_syncToDrum
   1196 36 01              5244 	ld	(hl),#0x01
                           5245 ;	square.c 891
                           5246 ;	genCall
                           5247 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1198 CD 00 00           5248 	call	_waitpadup
                           5249 ;	square.c 892
                           5250 ;	genCall
                           5251 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   119B CD 3F 06           5252 	call	_updateUI
                           5253 ;	genLabel
   119E                    5254 00142$:
                           5255 ;	square.c 895
                           5256 ;	genCall
                           5257 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   119E CD 00 00           5258 	call	_wait_vbl_done
                           5259 ;	genGoto
   11A1 C3 A4 0F           5260 	jp	00144$
                           5261 ;	genLabel
   11A4                    5262 00146$:
                           5263 ;	genEndFunction
   11A4 E8 03              5264 	lda	sp,3(sp)
   11A6 C9                 5265 	ret
   11A7                    5266 ___main_end:
                           5267 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 ___decreaseOffStep_end             0A6F R
  0 ___decreaseOffStep_start           09FD R
  0 ___decreasePulses_end              0C43 R
  0 ___decreasePulses_start            0BCE R
  0 ___decreaseSteps_end               0B59 R
  0 ___decreaseSteps_start             0AE4 R
  0 ___decreaseSwing_end               0D22 R
  0 ___decreaseSwing_start             0CB0 R
  0 ___fillDrumA_end                   029E R
  0 ___fillDrumA_start                 00CF R
  0 ___fillDrumB_end                   046E R
  0 ___fillDrumB_start                 029F R
  0 ___fillDrumC_end                   063E R
  0 ___fillDrumC_start                 046F R
  0 ___increaseOffStep_end             09FD R
  0 ___increaseOffStep_start           0966 R
  0 ___increasePulses_end              0BCE R
  0 ___increasePulses_start            0B59 R
  0 ___increaseSteps_end               0AE4 R
  0 ___increaseSteps_start             0A6F R
  0 ___increaseSwing_end               0CB0 R
  0 ___increaseSwing_start             0C43 R
  0 ___main_end                        11A7 R
  0 ___main_start                      0EC7 R
  0 ___makeASound_end                  0069 R
  0 ___makeASound_start                0030 R
  0 ___makeBSound_end                  009C R
  0 ___makeBSound_start                0069 R
  0 ___makeCSound_end                  00CF R
  0 ___makeCSound_start                009C R
  0 ___master_end                      0EAC R
  0 ___master_start                    0E97 R
  0 ___player_end                      0EC3 R
  0 ___player_start                    0EAC R
  0 ___rand_end                        0030 R
  0 ___rand_start                      0000 R
  0 ___setupDrum_end                   0966 R
  0 ___setupDrum_start                 092A R
  0 ___slave_end                       0E97 R
  0 ___slave_start                     0E59 R
  0 ___tick_end                        0E59 R
  0 ___tick_start                      0D22 R
  0 ___tim_end                         0EC7 R
  0 ___tim_start                       0EC3 R
  0 ___updateUI_end                    087F R
  0 ___updateUI_start                  063F R
    __initrleblock                     **** GX
    __moduchar_rrx_s                   **** GX
    __muluint_rrx_s                    **** GX
  0 __str_0                            029E R
  0 __str_1                            046E R
  0 __str_10                           08BC R
  0 __str_11                           08BF R
  0 __str_12                           08C2 R
  0 __str_13                           08D6 R
  0 __str_14                           08D8 R
  0 __str_15                           08DB R
  0 __str_16                           08DE R
  0 __str_17                           08F2 R
  0 __str_18                           08F4 R
  0 __str_19                           08FE R
  0 __str_2                            063E R
  0 __str_20                           0907 R
  0 __str_21                           090C R
  0 __str_22                           090E R
  0 __str_23                           091A R
  0 __str_24                           0928 R
  0 __str_3                            087F R
  0 __str_4                            0880 R
  0 __str_5                            0882 R
  0 __str_6                            08A0 R
  0 __str_7                            08A3 R
  0 __str_8                            08A6 R
  0 __str_9                            08BA R
    _add_TIM                           **** GX
  1 _bob                               0004 GR
  1 _bucket                            000C GR
  1 _clkA                              0021 GR
  1 _clkB                              0024 GR
  1 _clkC                              0027 GR
    _clock                             **** GX
  1 _clockToSync                       001E GR
  1 _current_rand                      0000 R
  0 _decreaseOffStep                   09FD GR
  0 _decreasePulses                    0BCE GR
  0 _decreaseSteps                     0AE4 GR
  0 _decreaseSwing                     0CB0 GR
    _delay                             **** GX
  1 _delayA                            0019 GR
  1 _delayB                            001A GR
  1 _delayC                            001B GR
    _disable_interrupts                **** GX
  1 _drumA                             002B GR
  1 _drumB                             004B GR
  1 _drumC                             006B GR
    _enable_interrupts                 **** GX
  1 _f                                 0014 GR
  0 _fillDrumA                         00CF GR
  0 _fillDrumB                         029F GR
  0 _fillDrumC                         046F GR
  1 _first                             0012 GR
  1 _g                                 001C GR
  1 _i                                 000D GR
  0 _increaseOffStep                   0966 GR
  0 _increasePulses                    0B59 GR
  0 _increaseSteps                     0A6F GR
  0 _increaseSwing                     0C43 GR
  1 _joy                               0009 GR
    _joypad                            **** GX
  1 _last                              0013 GR
  0 _main                              0EC7 GR
  0 _makeASound                        0030 GR
  0 _makeBSound                        0069 GR
  0 _makeCSound                        009C GR
  0 _master                            0E97 GR
  1 _modus                             0007 GR
  1 _numberOfPulsesA                   001F GR
  1 _numberOfPulsesB                   0022 GR
  1 _numberOfPulsesC                   0025 GR
  1 _offStepA                          0028 GR
  1 _offStepB                          0029 GR
  1 _offStepC                          002A GR
  1 _pad                               000A GR
  1 _padext                            0008 GR
  0 _player                            0EAC GR
  1 _pop                               0006 GR
    _printf                            **** GX
    _puts                              **** GX
  0 _rand                              0000 GR
  1 _randA                             000F GR
  1 _randB                             0010 GR
  1 _randC                             0011 GR
  1 _samp_freq                         0001 GR
  1 _seed                              008B GR
  1 _seldrum                           000B GR
    _set_interrupts                    **** GX
  0 _setupDrum                         092A GR
  0 _slave                             0E59 GR
  1 _syncToDrum                        001D GR
  1 _tempo                             0002 GR
  0 _tick                              0D22 GR
  0 _tim                               0EC3 GR
  1 _todd                              0005 GR
  1 _totalStepsA                       0020 GR
  1 _totalStepsB                       0023 GR
  1 _totalStepsC                       0026 GR
  0 _updateUI                          063F GR
    _wait_vbl_done                     **** GX
    _waitpadup                         **** GX
  1 _watch                             0003 GR
  1 _x                                 0015 GR
  1 _xA                                0016 GR
  1 _xB                                0017 GR
  1 _xC                                0018 GR
  1 _y                                 000E GR

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size 11A7   flags 0
   1 _DATA                              size   8D   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size   1B   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
