                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Mon Mar 30 10:52:32 2020
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc558910
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _tim
                             13 	.globl _player
                             14 	.globl _master
                             15 	.globl _slave
                             16 	.globl _tick
                             17 	.globl _decreaseSwing
                             18 	.globl _increaseSwing
                             19 	.globl _decreasePulses
                             20 	.globl _increasePulses
                             21 	.globl _decreaseSteps
                             22 	.globl _increaseSteps
                             23 	.globl _decreaseOffStep
                             24 	.globl _increaseOffStep
                             25 	.globl _setupDrum
                             26 	.globl _updateUI
                             27 	.globl _fillDrumC
                             28 	.globl _fillDrumB
                             29 	.globl _fillDrumA
                             30 	.globl _makeCSound
                             31 	.globl _makeBSound
                             32 	.globl _makeASound
                             33 	.globl _rand
                             34 	.globl _drumC
                             35 	.globl _drumB
                             36 	.globl _drumA
                             37 	.globl _offStepC
                             38 	.globl _offStepB
                             39 	.globl _offStepA
                             40 	.globl _clkC
                             41 	.globl _totalStepsC
                             42 	.globl _numberOfPulsesC
                             43 	.globl _clkB
                             44 	.globl _totalStepsB
                             45 	.globl _numberOfPulsesB
                             46 	.globl _clkA
                             47 	.globl _totalStepsA
                             48 	.globl _numberOfPulsesA
                             49 	.globl _clockToSync
                             50 	.globl _syncToDrum
                             51 	.globl _g
                             52 	.globl _delayC
                             53 	.globl _delayB
                             54 	.globl _delayA
                             55 	.globl _xC
                             56 	.globl _xB
                             57 	.globl _xA
                             58 	.globl _x
                             59 	.globl _f
                             60 	.globl _last
                             61 	.globl _first
                             62 	.globl _randC
                             63 	.globl _randB
                             64 	.globl _randA
                             65 	.globl _y
                             66 	.globl _i
                             67 	.globl _bucket
                             68 	.globl _seldrum
                             69 	.globl _pad
                             70 	.globl _joy
                             71 	.globl _padext
                             72 	.globl _modus
                             73 	.globl _pop
                             74 	.globl _todd
                             75 	.globl _bob
                             76 	.globl _watch
                             77 	.globl _tempo
                             78 	.globl _samp_freq
                             79 ;--------------------------------------------------------
                             80 ; special function registers
                             81 ;--------------------------------------------------------
                             82 ;--------------------------------------------------------
                             83 ; special function bits 
                             84 ;--------------------------------------------------------
                             85 ;--------------------------------------------------------
                             86 ; internal ram data
                             87 ;--------------------------------------------------------
                             88 	.area _DATA
   0000                      89 _current_rand:
   0000                      90 	.ds 1
   0001                      91 _samp_freq::
   0001                      92 	.ds 1
   0002                      93 _tempo::
   0002                      94 	.ds 1
   0003                      95 _watch::
   0003                      96 	.ds 1
   0004                      97 _bob::
   0004                      98 	.ds 1
   0005                      99 _todd::
   0005                     100 	.ds 1
   0006                     101 _pop::
   0006                     102 	.ds 1
   0007                     103 _modus::
   0007                     104 	.ds 1
   0008                     105 _padext::
   0008                     106 	.ds 1
   0009                     107 _joy::
   0009                     108 	.ds 1
   000A                     109 _pad::
   000A                     110 	.ds 1
   000B                     111 _seldrum::
   000B                     112 	.ds 1
   000C                     113 _bucket::
   000C                     114 	.ds 1
   000D                     115 _i::
   000D                     116 	.ds 1
   000E                     117 _y::
   000E                     118 	.ds 1
   000F                     119 _randA::
   000F                     120 	.ds 1
   0010                     121 _randB::
   0010                     122 	.ds 1
   0011                     123 _randC::
   0011                     124 	.ds 1
   0012                     125 _first::
   0012                     126 	.ds 1
   0013                     127 _last::
   0013                     128 	.ds 1
   0014                     129 _f::
   0014                     130 	.ds 1
   0015                     131 _x::
   0015                     132 	.ds 1
   0016                     133 _xA::
   0016                     134 	.ds 1
   0017                     135 _xB::
   0017                     136 	.ds 1
   0018                     137 _xC::
   0018                     138 	.ds 1
   0019                     139 _delayA::
   0019                     140 	.ds 1
   001A                     141 _delayB::
   001A                     142 	.ds 1
   001B                     143 _delayC::
   001B                     144 	.ds 1
   001C                     145 _g::
   001C                     146 	.ds 1
   001D                     147 _syncToDrum::
   001D                     148 	.ds 1
   001E                     149 _clockToSync::
   001E                     150 	.ds 1
   001F                     151 _numberOfPulsesA::
   001F                     152 	.ds 1
   0020                     153 _totalStepsA::
   0020                     154 	.ds 1
   0021                     155 _clkA::
   0021                     156 	.ds 1
   0022                     157 _numberOfPulsesB::
   0022                     158 	.ds 1
   0023                     159 _totalStepsB::
   0023                     160 	.ds 1
   0024                     161 _clkB::
   0024                     162 	.ds 1
   0025                     163 _numberOfPulsesC::
   0025                     164 	.ds 1
   0026                     165 _totalStepsC::
   0026                     166 	.ds 1
   0027                     167 _clkC::
   0027                     168 	.ds 1
   0028                     169 _offStepA::
   0028                     170 	.ds 1
   0029                     171 _offStepB::
   0029                     172 	.ds 1
   002A                     173 _offStepC::
   002A                     174 	.ds 1
   002B                     175 _drumA::
   002B                     176 	.ds 32
   004B                     177 _drumB::
   004B                     178 	.ds 32
   006B                     179 _drumC::
   006B                     180 	.ds 32
                            181 ;--------------------------------------------------------
                            182 ; overlayable items in internal ram 
                            183 ;--------------------------------------------------------
                            184 	.area _OVERLAY
                            185 ;--------------------------------------------------------
                            186 ; indirectly addressable internal ram data
                            187 ;--------------------------------------------------------
                            188 	.area _ISEG
                            189 ;--------------------------------------------------------
                            190 ; bit data
                            191 ;--------------------------------------------------------
                            192 	.area _BSEG
                            193 ;--------------------------------------------------------
                            194 ; external ram data
                            195 ;--------------------------------------------------------
                            196 	.area _XSEG
                            197 ;--------------------------------------------------------
                            198 ; global & static initialisations
                            199 ;--------------------------------------------------------
                            200 	.area _GSINIT
                            201 	.area _GSFINAL
                            202 	.area _GSINIT
                            203 ;	square.c 55
                            204 ;	square.c 900
                            205 ;	genArrayInit
                            206 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 2B 00            207 	ld	hl,#_drumA
   0003 CD 00 00            208 	call	__initrleblock
   0006 E0 00               209 	.db	-32,0x00
   0008 00                  210 	.db	0
                            211 ;	square.c 56
                            212 ;	square.c 900
                            213 ;	genArrayInit
                            214 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0009 21 4B 00            215 	ld	hl,#_drumB
   000C CD 00 00            216 	call	__initrleblock
   000F E0 00               217 	.db	-32,0x00
   0011 00                  218 	.db	0
                            219 ;	square.c 57
                            220 ;	square.c 900
                            221 ;	genArrayInit
                            222 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0012 21 6B 00            223 	ld	hl,#_drumC
   0015 CD 00 00            224 	call	__initrleblock
   0018 E0 00               225 	.db	-32,0x00
   001A 00                  226 	.db	0
                            227 ;--------------------------------------------------------
                            228 ; Home
                            229 ;--------------------------------------------------------
                            230 	.area _HOME
                            231 	.area _CODE
                            232 ;--------------------------------------------------------
                            233 ; code
                            234 ;--------------------------------------------------------
                            235 	.area _CODE
                            236 ;	square.c 60
                            237 ;	genLabel
                            238 ;	genFunction
                            239 ;	---------------------------------
                            240 ; Function rand
                            241 ; ---------------------------------
   0000                     242 ___rand_start:
   0000                     243 _rand:
   0000 E8 FE               244 	lda	sp,-2(sp)
                            245 ;	square.c 63
                            246 ;	genCall
                            247 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0002 CD 00 00            248 	call	_clock
   0005 42                  249 	ld	b,d
   0006 4B                  250 	ld	c,e
                            251 ;	genCast
                            252 ;	AOP_HL for _current_rand
                            253 ;	AOP_STK for _rand_sloc0_1_0
   0007 21 00 00            254 	ld	hl,#_current_rand
   000A 7E                  255 	ld	a,(hl)
   000B F8 00               256 	lda	hl,0(sp)
   000D 22                  257 	ld	(hl+),a
   000E 36 00               258 	ld	(hl),#0x00
                            259 ;	genIpush
                            260 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0010 C5                  261 	push	bc
                            262 ;	genIpush
                            263 ;	AOP_STK for _rand_sloc0_1_0
   0011 2B                  264 	dec	hl
   0012 2A                  265 	ld	a,(hl+)
   0013 66                  266 	ld	h,(hl)
   0014 6F                  267 	ld	l,a
   0015 E5                  268 	push	hl
                            269 ;	genCall
   0016 CD 00 00            270 	call	__muluint_rrx_s
   0019 42                  271 	ld	b,d
   001A 4B                  272 	ld	c,e
   001B E8 04               273 	lda	sp,4(sp)
                            274 ;	genPlus
                            275 ;	genPlusIncr
                            276 ;	Can't optimise plus by inc, falling back to the normal way
   001D 79                  277 	ld	a,c
   001E C6 7B               278 	add	a,#0x7B
   0020 4F                  279 	ld	c,a
   0021 78                  280 	ld	a,b
   0022 CE 00               281 	adc	a,#0x00
                            282 ;	genAnd
   0024 47                  283 	ld	b,a
   0025 E6 07               284 	and	a,#0x07
   0027 47                  285 	ld	b,a
                            286 ;	genCast
                            287 ;	AOP_HL for _current_rand
   0028 21 00 00            288 	ld	hl,#_current_rand
   002B 71                  289 	ld	(hl),c
                            290 ;	square.c 64
                            291 ;	genRet
                            292 ;	AOP_HL for _current_rand
   002C 5E                  293 	ld	e,(hl)
                            294 ;	genLabel
   002D                     295 00101$:
                            296 ;	genEndFunction
   002D E8 02               297 	lda	sp,2(sp)
   002F C9                  298 	ret
   0030                     299 ___rand_end:
                            300 ;	square.c 67
                            301 ;	genLabel
                            302 ;	genFunction
                            303 ;	---------------------------------
                            304 ; Function makeASound
                            305 ; ---------------------------------
   0030                     306 ___makeASound_start:
   0030                     307 _makeASound:
   0030 E8 FD               308 	lda	sp,-3(sp)
                            309 ;	square.c 69
                            310 ;	genAssign
   0032 01 10 FF            311 	ld	bc,#0xFF10
                            312 ;	genAssign (pointer)
   0035 3E 29               313 	ld	a,#0x29
   0037 02                  314 	ld	(bc),a
                            315 ;	square.c 70
                            316 ;	genAssign
   0038 01 11 FF            317 	ld	bc,#0xFF11
                            318 ;	genAssign (pointer)
   003B 3E 4F               319 	ld	a,#0x4F
   003D 02                  320 	ld	(bc),a
                            321 ;	square.c 71
                            322 ;	genAssign
   003E 01 12 FF            323 	ld	bc,#0xFF12
                            324 ;	genAssign (pointer)
   0041 3E F1               325 	ld	a,#0xF1
   0043 02                  326 	ld	(bc),a
                            327 ;	square.c 72
                            328 ;	genAssign
   0044 01 13 FF            329 	ld	bc,#0xFF13
                            330 ;	genAssign (pointer)
   0047 3E 6F               331 	ld	a,#0x6F
   0049 02                  332 	ld	(bc),a
                            333 ;	square.c 73
                            334 ;	genAssign
   004A 01 14 FF            335 	ld	bc,#0xFF14
                            336 ;	genAssign (pointer)
   004D 3E C4               337 	ld	a,#0xC4
   004F 02                  338 	ld	(bc),a
                            339 ;	square.c 74
                            340 ;	genAssign
   0050 01 25 FF            341 	ld	bc,#0xFF25
                            342 ;	genAssign
                            343 ;	AOP_STK for _makeASound_sloc0_1_0
   0053 F8 01               344 	lda	hl,1(sp)
   0055 36 25               345 	ld	(hl),#0x25
   0057 23                  346 	inc	hl
   0058 36 FF               347 	ld	(hl),#0xFF
                            348 ;	genPointerGet
                            349 ;	AOP_STK for _makeASound_sloc0_1_0
                            350 ;	AOP_STK for _makeASound_sloc1_1_0
   005A 2B                  351 	dec	hl
   005B 5E                  352 	ld	e,(hl)
   005C 23                  353 	inc	hl
   005D 56                  354 	ld	d,(hl)
   005E 1A                  355 	ld	a,(de)
   005F 2B                  356 	dec	hl
   0060 2B                  357 	dec	hl
                            358 ;	genOr
                            359 ;	AOP_STK for _makeASound_sloc1_1_0
   0061 77                  360 	ld      (hl),a
   0062 7F                  361 	ld      a,a
   0063 F6 FF               362 	or	a,#0xFF
                            363 ;	genAssign (pointer)
   0065 02                  364 	ld	(bc),a
                            365 ;	genLabel
   0066                     366 00101$:
                            367 ;	genEndFunction
   0066 E8 03               368 	lda	sp,3(sp)
   0068 C9                  369 	ret
   0069                     370 ___makeASound_end:
                            371 ;	square.c 77
                            372 ;	genLabel
                            373 ;	genFunction
                            374 ;	---------------------------------
                            375 ; Function makeBSound
                            376 ; ---------------------------------
   0069                     377 ___makeBSound_start:
   0069                     378 _makeBSound:
   0069 E8 FD               379 	lda	sp,-3(sp)
                            380 ;	square.c 79
                            381 ;	genAssign
   006B 01 16 FF            382 	ld	bc,#0xFF16
                            383 ;	genAssign (pointer)
   006E 3E 4A               384 	ld	a,#0x4A
   0070 02                  385 	ld	(bc),a
                            386 ;	square.c 80
                            387 ;	genAssign
   0071 01 17 FF            388 	ld	bc,#0xFF17
                            389 ;	genAssign (pointer)
   0074 3E 15               390 	ld	a,#0x15
   0076 02                  391 	ld	(bc),a
                            392 ;	square.c 81
                            393 ;	genAssign
   0077 01 18 FF            394 	ld	bc,#0xFF18
                            395 ;	genAssign (pointer)
   007A 3E 27               396 	ld	a,#0x27
   007C 02                  397 	ld	(bc),a
                            398 ;	square.c 82
                            399 ;	genAssign
   007D 01 19 FF            400 	ld	bc,#0xFF19
                            401 ;	genAssign (pointer)
   0080 3E C7               402 	ld	a,#0xC7
   0082 02                  403 	ld	(bc),a
                            404 ;	square.c 83
                            405 ;	genAssign
   0083 01 25 FF            406 	ld	bc,#0xFF25
                            407 ;	genAssign
                            408 ;	AOP_STK for _makeBSound_sloc0_1_0
   0086 F8 01               409 	lda	hl,1(sp)
   0088 36 25               410 	ld	(hl),#0x25
   008A 23                  411 	inc	hl
   008B 36 FF               412 	ld	(hl),#0xFF
                            413 ;	genPointerGet
                            414 ;	AOP_STK for _makeBSound_sloc0_1_0
                            415 ;	AOP_STK for _makeBSound_sloc1_1_0
   008D 2B                  416 	dec	hl
   008E 5E                  417 	ld	e,(hl)
   008F 23                  418 	inc	hl
   0090 56                  419 	ld	d,(hl)
   0091 1A                  420 	ld	a,(de)
   0092 2B                  421 	dec	hl
   0093 2B                  422 	dec	hl
                            423 ;	genOr
                            424 ;	AOP_STK for _makeBSound_sloc1_1_0
   0094 77                  425 	ld      (hl),a
   0095 7F                  426 	ld      a,a
   0096 F6 FF               427 	or	a,#0xFF
                            428 ;	genAssign (pointer)
   0098 02                  429 	ld	(bc),a
                            430 ;	genLabel
   0099                     431 00101$:
                            432 ;	genEndFunction
   0099 E8 03               433 	lda	sp,3(sp)
   009B C9                  434 	ret
   009C                     435 ___makeBSound_end:
                            436 ;	square.c 86
                            437 ;	genLabel
                            438 ;	genFunction
                            439 ;	---------------------------------
                            440 ; Function makeCSound
                            441 ; ---------------------------------
   009C                     442 ___makeCSound_start:
   009C                     443 _makeCSound:
   009C E8 FD               444 	lda	sp,-3(sp)
                            445 ;	square.c 88
                            446 ;	genAssign
   009E 01 20 FF            447 	ld	bc,#0xFF20
                            448 ;	genAssign (pointer)
   00A1 3E 10               449 	ld	a,#0x10
   00A3 02                  450 	ld	(bc),a
                            451 ;	square.c 89
                            452 ;	genAssign
   00A4 01 21 FF            453 	ld	bc,#0xFF21
                            454 ;	genAssign (pointer)
   00A7 3E 24               455 	ld	a,#0x24
   00A9 02                  456 	ld	(bc),a
                            457 ;	square.c 90
                            458 ;	genAssign
   00AA 01 22 FF            459 	ld	bc,#0xFF22
                            460 ;	genAssign (pointer)
   00AD 3E 31               461 	ld	a,#0x31
   00AF 02                  462 	ld	(bc),a
                            463 ;	square.c 91
                            464 ;	genAssign
   00B0 01 23 FF            465 	ld	bc,#0xFF23
                            466 ;	genAssign (pointer)
   00B3 3E C0               467 	ld	a,#0xC0
   00B5 02                  468 	ld	(bc),a
                            469 ;	square.c 92
                            470 ;	genAssign
   00B6 01 25 FF            471 	ld	bc,#0xFF25
                            472 ;	genAssign
                            473 ;	AOP_STK for _makeCSound_sloc0_1_0
   00B9 F8 01               474 	lda	hl,1(sp)
   00BB 36 25               475 	ld	(hl),#0x25
   00BD 23                  476 	inc	hl
   00BE 36 FF               477 	ld	(hl),#0xFF
                            478 ;	genPointerGet
                            479 ;	AOP_STK for _makeCSound_sloc0_1_0
                            480 ;	AOP_STK for _makeCSound_sloc1_1_0
   00C0 2B                  481 	dec	hl
   00C1 5E                  482 	ld	e,(hl)
   00C2 23                  483 	inc	hl
   00C3 56                  484 	ld	d,(hl)
   00C4 1A                  485 	ld	a,(de)
   00C5 2B                  486 	dec	hl
   00C6 2B                  487 	dec	hl
                            488 ;	genOr
                            489 ;	AOP_STK for _makeCSound_sloc1_1_0
   00C7 77                  490 	ld      (hl),a
   00C8 7F                  491 	ld      a,a
   00C9 F6 FF               492 	or	a,#0xFF
                            493 ;	genAssign (pointer)
   00CB 02                  494 	ld	(bc),a
                            495 ;	genLabel
   00CC                     496 00101$:
                            497 ;	genEndFunction
   00CC E8 03               498 	lda	sp,3(sp)
   00CE C9                  499 	ret
   00CF                     500 ___makeCSound_end:
                            501 ;	square.c 97
                            502 ;	genLabel
                            503 ;	genFunction
                            504 ;	---------------------------------
                            505 ; Function fillDrumA
                            506 ; ---------------------------------
   00CF                     507 ___fillDrumA_start:
   00CF                     508 _fillDrumA:
   00CF E8 FA               509 	lda	sp,-6(sp)
                            510 ;	square.c 98
                            511 ;	genAssign
                            512 ;	AOP_HL for _bucket
   00D1 21 0C 00            513 	ld	hl,#_bucket
   00D4 36 00               514 	ld	(hl),#0x00
                            515 ;	square.c 99
                            516 ;	genAssign
                            517 ;	AOP_HL for _i
   00D6 21 0D 00            518 	ld	hl,#_i
   00D9 36 00               519 	ld	(hl),#0x00
                            520 ;	genLabel
   00DB                     521 00118$:
                            522 ;	genCmpLt
                            523 ;	AOP_HL for _i
                            524 ;	AOP_HL for _totalStepsA
   00DB 21 0D 00            525 	ld	hl,#_i
   00DE 7E                  526 	ld	a,(hl)
   00DF 21 20 00            527 	ld	hl,#_totalStepsA
   00E2 96                  528 	sub	a,(hl)
   00E3 D2 3C 01            529 	jp	nc,00121$
                            530 ;	square.c 101
                            531 ;	genPlus
                            532 ;	AOP_HL for _bucket
                            533 ;	AOP_HL for _numberOfPulsesA
                            534 ;	Can't optimise plus by inc, falling back to the normal way
   00E6 21 0C 00            535 	ld	hl,#_bucket
   00E9 7E                  536 	ld	a,(hl)
   00EA 21 1F 00            537 	ld	hl,#_numberOfPulsesA
   00ED 86                  538 	add	a,(hl)
   00EE 21 0C 00            539 	ld	hl,#_bucket
   00F1 77                  540 	ld	(hl),a
                            541 ;	square.c 102
                            542 ;	genMinus
                            543 ;	AOP_HL for _totalStepsA
   00F2 21 20 00            544 	ld	hl,#_totalStepsA
   00F5 7E                  545 	ld	a,(hl)
   00F6 C6 FF               546 	add	a,#0xFF
                            547 ;	genCmpGt
                            548 ;	AOP_HL for _bucket
   00F8 4F                  549 	ld	c,a
   00F9 21 0C 00            550 	ld	hl,#_bucket
   00FC 96                  551 	sub	a,(hl)
   00FD D2 1B 01            552 	jp	nc,00104$
                            553 ;	square.c 104
                            554 ;	genMinus
                            555 ;	AOP_HL for _bucket
                            556 ;	AOP_HL for _totalStepsA
   0100 7E                  557 	ld	a,(hl)
   0101 21 20 00            558 	ld	hl,#_totalStepsA
   0104 96                  559 	sub	a,(hl)
   0105 21 0C 00            560 	ld	hl,#_bucket
   0108 77                  561 	ld	(hl),a
                            562 ;	square.c 105
                            563 ;	genPlus
                            564 ;	AOP_HL for _i
                            565 ;	Can't optimise plus by inc, falling back to the normal way
   0109 3E 2B               566 	ld	a,#<_drumA
   010B 21 0D 00            567 	ld	hl,#_i
   010E 86                  568 	add	a,(hl)
   010F 4F                  569 	ld	c,a
   0110 3E 00               570 	ld	a,#>_drumA
   0112 CE 00               571 	adc	a,#0x00
   0114 47                  572 	ld	b,a
                            573 ;	genAssign (pointer)
   0115 3E 01               574 	ld	a,#0x01
   0117 02                  575 	ld	(bc),a
                            576 ;	genGoto
   0118 C3 35 01            577 	jp	00120$
                            578 ;	genLabel
   011B                     579 00104$:
                            580 ;	square.c 107
                            581 ;	genCmpLt
                            582 ;	AOP_HL for _bucket
                            583 ;	AOP_HL for _totalStepsA
   011B 21 0C 00            584 	ld	hl,#_bucket
   011E 7E                  585 	ld	a,(hl)
   011F 21 20 00            586 	ld	hl,#_totalStepsA
   0122 96                  587 	sub	a,(hl)
   0123 D2 35 01            588 	jp	nc,00120$
                            589 ;	square.c 109
                            590 ;	genPlus
                            591 ;	AOP_HL for _i
                            592 ;	Can't optimise plus by inc, falling back to the normal way
   0126 3E 2B               593 	ld	a,#<_drumA
   0128 21 0D 00            594 	ld	hl,#_i
   012B 86                  595 	add	a,(hl)
   012C 4F                  596 	ld	c,a
   012D 3E 00               597 	ld	a,#>_drumA
   012F CE 00               598 	adc	a,#0x00
   0131 47                  599 	ld	b,a
                            600 ;	genAssign (pointer)
   0132 3E 00               601 	ld	a,#0x00
   0134 02                  602 	ld	(bc),a
                            603 ;	genLabel
   0135                     604 00120$:
                            605 ;	square.c 99
                            606 ;	genPlus
                            607 ;	AOP_HL for _i
                            608 ;	genPlusIncr
   0135 21 0D 00            609 	ld	hl,#_i
   0138 34                  610 	inc	(hl)
                            611 ;	genGoto
   0139 C3 DB 00            612 	jp	00118$
                            613 ;	genLabel
   013C                     614 00121$:
                            615 ;	square.c 112
                            616 ;	genPointerGet
                            617 ;	AOP_HL for _first
   013C 11 2B 00            618 	ld	de,#_drumA
   013F 1A                  619 	ld	a,(de)
   0140 21 12 00            620 	ld	hl,#_first
   0143 77                  621 	ld	(hl),a
                            622 ;	square.c 113
                            623 ;	genIpush
                            624 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0144 21 9E 02            625 	ld	hl,#__str_0
   0147 E5                  626 	push	hl
                            627 ;	genCall
   0148 CD 00 00            628 	call	_printf
   014B E8 02               629 	lda	sp,2(sp)
                            630 ;	square.c 114
                            631 ;	genCmpGt
                            632 ;	AOP_HL for _numberOfPulsesA
                            633 ;	AOP_STK for _fillDrumA_sloc3_1_0
   014D 3E 00               634 	ld	a,#0x00
   014F 21 1F 00            635 	ld	hl,#_numberOfPulsesA
   0152 96                  636 	sub	a,(hl)
   0153 3E 00               637 	ld	a,#0x00
   0155 17                  638 	rla
   0156 F8 00               639 	lda	hl,0(sp)
   0158 77                  640 	ld	(hl),a
                            641 ;	genIfx
                            642 ;	AOP_STK for _fillDrumA_sloc3_1_0
   0159 AF                  643 	xor	a,a
   015A B6                  644 	or	a,(hl)
   015B CA EB 01            645 	jp	z,00113$
                            646 ;	genCmpEq
                            647 ;	AOP_HL for _first
                            648 ; genCmpEq: left 1, right 1, result 0
   015E 21 12 00            649 	ld	hl,#_first
   0161 7E                  650 	ld	a,(hl)
   0162 FE 01               651 	cp	a,#0x01
   0164 CA EB 01            652 	jp	z,00113$
   0167                     653 00153$:
                            654 ;	square.c 116
                            655 ;	genAssign
                            656 ;	AOP_HL for _f
   0167 21 14 00            657 	ld	hl,#_f
   016A 36 00               658 	ld	(hl),#0x00
                            659 ;	genLabel
   016C                     660 00108$:
                            661 ;	genCmpLt
                            662 ;	AOP_HL for _f
                            663 ;	AOP_HL for _totalStepsA
   016C 21 14 00            664 	ld	hl,#_f
   016F 7E                  665 	ld	a,(hl)
   0170 21 20 00            666 	ld	hl,#_totalStepsA
   0173 96                  667 	sub	a,(hl)
   0174 D2 EB 01            668 	jp	nc,00113$
                            669 ;	square.c 117
                            670 ;	genAssign
                            671 ;	AOP_HL for _x
   0177 21 15 00            672 	ld	hl,#_x
   017A 36 00               673 	ld	(hl),#0x00
                            674 ;	genLabel
   017C                     675 00122$:
                            676 ;	genCmpLt
                            677 ;	AOP_HL for _x
                            678 ;	AOP_HL for _totalStepsA
   017C 21 15 00            679 	ld	hl,#_x
   017F 7E                  680 	ld	a,(hl)
   0180 21 20 00            681 	ld	hl,#_totalStepsA
   0183 96                  682 	sub	a,(hl)
   0184 3E 00               683 	ld	a,#0x00
   0186 17                  684 	rla
   0187 47                  685 	ld	b,a
                            686 ;	genIfx
   0188 AF                  687 	xor	a,a
   0189 B0                  688 	or	a,b
   018A CA C5 01            689 	jp	z,00125$
                            690 ;	square.c 118
                            691 ;	genPlus
                            692 ;	AOP_HL for _x
                            693 ;	AOP_STK for _fillDrumA_sloc0_1_0
                            694 ;	Can't optimise plus by inc, falling back to the normal way
   018D 11 2B 00            695 	ld	de,#_drumA
   0190 21 15 00            696 	ld	hl,#_x
   0193 6E                  697 	ld	l,(hl)
   0194 26 00               698 	ld	h,#0x00
   0196 19                  699 	add	hl,de
   0197 7D                  700 	ld	a,l
   0198 54                  701 	ld	d,h
   0199 F8 04               702 	lda	hl,4(sp)
   019B 22                  703 	ld	(hl+),a
   019C 72                  704 	ld	(hl),d
                            705 ;	genPlus
                            706 ;	AOP_HL for _x
                            707 ;	AOP_STK for _fillDrumA_sloc1_1_0
                            708 ;	genPlusIncr
                            709 ;	Can't optimise plus by inc, falling back to the normal way
   019D 21 15 00            710 	ld	hl,#_x
   01A0 7E                  711 	ld	a,(hl)
   01A1 C6 01               712 	add	a,#0x01
   01A3 F8 03               713 	lda	hl,3(sp)
   01A5 77                  714 	ld	(hl),a
                            715 ;	genPlus
                            716 ;	AOP_STK for _fillDrumA_sloc1_1_0
                            717 ;	AOP_STK for _fillDrumA_sloc2_1_0
                            718 ;	Can't optimise plus by inc, falling back to the normal way
   01A6 11 2B 00            719 	ld	de,#_drumA
   01A9 6E                  720 	ld	l,(hl)
   01AA 26 00               721 	ld	h,#0x00
   01AC 19                  722 	add	hl,de
   01AD 7D                  723 	ld	a,l
   01AE 54                  724 	ld	d,h
   01AF F8 01               725 	lda	hl,1(sp)
                            726 ;	genPointerGet
                            727 ;	AOP_STK for _fillDrumA_sloc2_1_0
   01B1 22                  728 	ld	(hl+),a
   01B2 72                  729 	ld	(hl),d
   01B3 5F                  730 	ld	e,a
   01B4 1A                  731 	ld	a,(de)
                            732 ;	genAssign (pointer)
                            733 ;	AOP_STK for _fillDrumA_sloc0_1_0
   01B5 23                  734 	inc	hl
   01B6 23                  735 	inc	hl
   01B7 5E                  736 	ld	e,(hl)
   01B8 23                  737 	inc	hl
   01B9 56                  738 	ld	d,(hl)
   01BA 12                  739 	ld	(de),a
                            740 ;	square.c 117
                            741 ;	genAssign
                            742 ;	AOP_STK for _fillDrumA_sloc1_1_0
   01BB 2B                  743 	dec	hl
   01BC 2B                  744 	dec	hl
   01BD 4E                  745 	ld	c,(hl)
                            746 ;	genAssign
                            747 ;	AOP_HL for _x
   01BE 21 15 00            748 	ld	hl,#_x
   01C1 71                  749 	ld	(hl),c
                            750 ;	genGoto
   01C2 C3 7C 01            751 	jp	00122$
                            752 ;	genLabel
   01C5                     753 00125$:
                            754 ;	square.c 120
                            755 ;	genMinus
                            756 ;	AOP_HL for _totalStepsA
   01C5 21 20 00            757 	ld	hl,#_totalStepsA
   01C8 7E                  758 	ld	a,(hl)
   01C9 C6 FF               759 	add	a,#0xFF
   01CB 4F                  760 	ld	c,a
                            761 ;	genPlus
                            762 ;	Can't optimise plus by inc, falling back to the normal way
   01CC 3E 2B               763 	ld	a,#<_drumA
   01CE 81                  764 	add	a,c
   01CF 4F                  765 	ld	c,a
   01D0 3E 00               766 	ld	a,#>_drumA
   01D2 CE 00               767 	adc	a,#0x00
   01D4 47                  768 	ld	b,a
                            769 ;	genAssign (pointer)
                            770 ;	AOP_HL for _first
   01D5 21 12 00            771 	ld	hl,#_first
   01D8 7E                  772 	ld	a,(hl)
   01D9 02                  773 	ld	(bc),a
                            774 ;	square.c 121
                            775 ;	genPointerGet
   01DA 11 2B 00            776 	ld	de,#_drumA
   01DD 1A                  777 	ld	a,(de)
                            778 ;	genCmpEq
                            779 ; genCmpEq: left 1, right 1, result 0
   01DE 4F                  780 	ld	c,a
   01DF FE 01               781 	cp	a,#0x01
   01E1 CA EB 01            782 	jp	z,00113$
   01E4                     783 00154$:
                            784 ;	square.c 116
                            785 ;	genPlus
                            786 ;	AOP_HL for _f
                            787 ;	genPlusIncr
   01E4 21 14 00            788 	ld	hl,#_f
   01E7 34                  789 	inc	(hl)
                            790 ;	genGoto
   01E8 C3 6C 01            791 	jp	00108$
                            792 ;	genLabel
   01EB                     793 00113$:
                            794 ;	square.c 129
                            795 ;	genMinus
                            796 ;	AOP_HL for _totalStepsA
   01EB 21 20 00            797 	ld	hl,#_totalStepsA
   01EE 7E                  798 	ld	a,(hl)
   01EF C6 FF               799 	add	a,#0xFF
   01F1 4F                  800 	ld	c,a
                            801 ;	genPlus
                            802 ;	Can't optimise plus by inc, falling back to the normal way
   01F2 3E 2B               803 	ld	a,#<_drumA
   01F4 81                  804 	add	a,c
   01F5 4F                  805 	ld	c,a
   01F6 3E 00               806 	ld	a,#>_drumA
   01F8 CE 00               807 	adc	a,#0x00
   01FA 47                  808 	ld	b,a
                            809 ;	genPointerGet
                            810 ;	AOP_HL for _last
   01FB 0A                  811 	ld	a,(bc)
   01FC 21 13 00            812 	ld	hl,#_last
   01FF 77                  813 	ld	(hl),a
                            814 ;	square.c 130
                            815 ;	genIfx
                            816 ;	AOP_STK for _fillDrumA_sloc3_1_0
   0200 AF                  817 	xor	a,a
   0201 F8 00               818 	lda	hl,0(sp)
   0203 B6                  819 	or	a,(hl)
   0204 CA 7B 02            820 	jp	z,00116$
                            821 ;	genCmpEq
                            822 ;	AOP_HL for _offStepA
                            823 ; genCmpEq: left 1, right 1, result 0
   0207 21 28 00            824 	ld	hl,#_offStepA
   020A 7E                  825 	ld	a,(hl)
   020B B7                  826 	or	a,a
   020C CA 7B 02            827 	jp	z,00116$
   020F                     828 00155$:
                            829 ;	square.c 132
                            830 ;	genAssign
                            831 ;	AOP_HL for _f
   020F 21 14 00            832 	ld	hl,#_f
   0212 36 00               833 	ld	(hl),#0x00
                            834 ;	genLabel
   0214                     835 00130$:
                            836 ;	genCmpLt
                            837 ;	AOP_HL for _f
                            838 ;	AOP_HL for _offStepA
   0214 21 14 00            839 	ld	hl,#_f
   0217 7E                  840 	ld	a,(hl)
   0218 21 28 00            841 	ld	hl,#_offStepA
   021B 96                  842 	sub	a,(hl)
   021C D2 7B 02            843 	jp	nc,00116$
                            844 ;	square.c 133
                            845 ;	genAssign
                            846 ;	AOP_HL for _totalStepsA
                            847 ;	AOP_HL for _x
   021F 21 20 00            848 	ld	hl,#_totalStepsA
   0222 7E                  849 	ld	a,(hl)
   0223 21 15 00            850 	ld	hl,#_x
   0226 77                  851 	ld	(hl),a
                            852 ;	genLabel
   0227                     853 00126$:
                            854 ;	genCmpGt
                            855 ;	AOP_HL for _x
                            856 ;	AOP_STK for _fillDrumA_sloc3_1_0
   0227 3E 00               857 	ld	a,#0x00
   0229 21 15 00            858 	ld	hl,#_x
   022C 96                  859 	sub	a,(hl)
   022D 3E 00               860 	ld	a,#0x00
   022F 17                  861 	rla
   0230 F8 00               862 	lda	hl,0(sp)
   0232 77                  863 	ld	(hl),a
                            864 ;	genIfx
                            865 ;	AOP_STK for _fillDrumA_sloc3_1_0
   0233 AF                  866 	xor	a,a
   0234 B6                  867 	or	a,(hl)
   0235 CA 6C 02            868 	jp	z,00129$
                            869 ;	square.c 134
                            870 ;	genPlus
                            871 ;	AOP_HL for _x
                            872 ;	AOP_STK for _fillDrumA_sloc2_1_0
                            873 ;	Can't optimise plus by inc, falling back to the normal way
   0238 11 2B 00            874 	ld	de,#_drumA
   023B 21 15 00            875 	ld	hl,#_x
   023E 6E                  876 	ld	l,(hl)
   023F 26 00               877 	ld	h,#0x00
   0241 19                  878 	add	hl,de
   0242 7D                  879 	ld	a,l
   0243 54                  880 	ld	d,h
   0244 F8 01               881 	lda	hl,1(sp)
   0246 22                  882 	ld	(hl+),a
   0247 72                  883 	ld	(hl),d
                            884 ;	genMinus
                            885 ;	AOP_HL for _x
   0248 21 15 00            886 	ld	hl,#_x
   024B 7E                  887 	ld	a,(hl)
   024C C6 FF               888 	add	a,#0xFF
   024E 47                  889 	ld	b,a
                            890 ;	genPlus
                            891 ;	AOP_STK for _fillDrumA_sloc0_1_0
                            892 ;	Can't optimise plus by inc, falling back to the normal way
   024F 11 2B 00            893 	ld	de,#_drumA
   0252 68                  894 	ld	l,b
   0253 26 00               895 	ld	h,#0x00
   0255 19                  896 	add	hl,de
   0256 7D                  897 	ld	a,l
   0257 54                  898 	ld	d,h
   0258 F8 04               899 	lda	hl,4(sp)
                            900 ;	genPointerGet
                            901 ;	AOP_STK for _fillDrumA_sloc0_1_0
   025A 22                  902 	ld	(hl+),a
   025B 72                  903 	ld	(hl),d
   025C 5F                  904 	ld	e,a
   025D 1A                  905 	ld	a,(de)
                            906 ;	genAssign (pointer)
                            907 ;	AOP_STK for _fillDrumA_sloc2_1_0
   025E F8 01               908 	lda	hl,1(sp)
   0260 5E                  909 	ld	e,(hl)
   0261 23                  910 	inc	hl
   0262 56                  911 	ld	d,(hl)
   0263 12                  912 	ld	(de),a
                            913 ;	square.c 133
                            914 ;	genAssign
   0264 48                  915 	ld	c,b
                            916 ;	genAssign
                            917 ;	AOP_HL for _x
   0265 21 15 00            918 	ld	hl,#_x
   0268 71                  919 	ld	(hl),c
                            920 ;	genGoto
   0269 C3 27 02            921 	jp	00126$
                            922 ;	genLabel
   026C                     923 00129$:
                            924 ;	square.c 136
                            925 ;	genAssign (pointer)
                            926 ;	AOP_HL for _last
   026C 11 2B 00            927 	ld	de,#_drumA
   026F 21 13 00            928 	ld	hl,#_last
   0272 7E                  929 	ld	a,(hl)
   0273 12                  930 	ld	(de),a
                            931 ;	square.c 132
                            932 ;	genPlus
                            933 ;	AOP_HL for _f
                            934 ;	genPlusIncr
   0274 21 14 00            935 	ld	hl,#_f
   0277 34                  936 	inc	(hl)
                            937 ;	genGoto
   0278 C3 14 02            938 	jp	00130$
                            939 ;	genLabel
   027B                     940 00116$:
                            941 ;	square.c 139
                            942 ;	genCall
                            943 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   027B CD 00 00            944 	call	_rand
                            945 ;	AOP_HL for _randA
   027E 21 0F 00            946 	ld	hl,#_randA
   0281 73                  947 	ld	(hl),e
                            948 ;	square.c 140
                            949 ;	genIpush
                            950 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0282 3E 1E               951 	ld	a,#0x1E
   0284 F5                  952 	push	af
   0285 33                  953 	inc	sp
                            954 ;	genIpush
                            955 ;	AOP_HL for _randA
   0286 21 0F 00            956 	ld	hl,#_randA
   0289 7E                  957 	ld	a,(hl)
   028A F5                  958 	push	af
   028B 33                  959 	inc	sp
                            960 ;	genCall
   028C CD 00 00            961 	call	__moduchar_rrx_s
   028F 4B                  962 	ld	c,e
   0290 E8 02               963 	lda	sp,2(sp)
                            964 ;	genPlus
                            965 ;	AOP_HL for _delayA
                            966 ;	AOP_HL for _xA
                            967 ;	Can't optimise plus by inc, falling back to the normal way
   0292 21 19 00            968 	ld	hl,#_delayA
   0295 7E                  969 	ld	a,(hl)
   0296 81                  970 	add	a,c
   0297 21 16 00            971 	ld	hl,#_xA
   029A 77                  972 	ld	(hl),a
                            973 ;	genLabel
   029B                     974 00134$:
                            975 ;	genEndFunction
   029B E8 06               976 	lda	sp,6(sp)
   029D C9                  977 	ret
   029E                     978 ___fillDrumA_end:
   029E                     979 __str_0:
   029E 00                  980 	.db 0x00
                            981 ;	square.c 144
                            982 ;	genLabel
                            983 ;	genFunction
                            984 ;	---------------------------------
                            985 ; Function fillDrumB
                            986 ; ---------------------------------
   029F                     987 ___fillDrumB_start:
   029F                     988 _fillDrumB:
   029F E8 FA               989 	lda	sp,-6(sp)
                            990 ;	square.c 145
                            991 ;	genAssign
                            992 ;	AOP_HL for _bucket
   02A1 21 0C 00            993 	ld	hl,#_bucket
   02A4 36 00               994 	ld	(hl),#0x00
                            995 ;	square.c 146
                            996 ;	genAssign
                            997 ;	AOP_HL for _i
   02A6 21 0D 00            998 	ld	hl,#_i
   02A9 36 00               999 	ld	(hl),#0x00
                           1000 ;	genLabel
   02AB                    1001 00118$:
                           1002 ;	genCmpLt
                           1003 ;	AOP_HL for _i
                           1004 ;	AOP_HL for _totalStepsB
   02AB 21 0D 00           1005 	ld	hl,#_i
   02AE 7E                 1006 	ld	a,(hl)
   02AF 21 23 00           1007 	ld	hl,#_totalStepsB
   02B2 96                 1008 	sub	a,(hl)
   02B3 D2 0C 03           1009 	jp	nc,00121$
                           1010 ;	square.c 148
                           1011 ;	genPlus
                           1012 ;	AOP_HL for _bucket
                           1013 ;	AOP_HL for _numberOfPulsesB
                           1014 ;	Can't optimise plus by inc, falling back to the normal way
   02B6 21 0C 00           1015 	ld	hl,#_bucket
   02B9 7E                 1016 	ld	a,(hl)
   02BA 21 22 00           1017 	ld	hl,#_numberOfPulsesB
   02BD 86                 1018 	add	a,(hl)
   02BE 21 0C 00           1019 	ld	hl,#_bucket
   02C1 77                 1020 	ld	(hl),a
                           1021 ;	square.c 149
                           1022 ;	genMinus
                           1023 ;	AOP_HL for _totalStepsB
   02C2 21 23 00           1024 	ld	hl,#_totalStepsB
   02C5 7E                 1025 	ld	a,(hl)
   02C6 C6 FF              1026 	add	a,#0xFF
                           1027 ;	genCmpGt
                           1028 ;	AOP_HL for _bucket
   02C8 4F                 1029 	ld	c,a
   02C9 21 0C 00           1030 	ld	hl,#_bucket
   02CC 96                 1031 	sub	a,(hl)
   02CD D2 EB 02           1032 	jp	nc,00104$
                           1033 ;	square.c 151
                           1034 ;	genMinus
                           1035 ;	AOP_HL for _bucket
                           1036 ;	AOP_HL for _totalStepsB
   02D0 7E                 1037 	ld	a,(hl)
   02D1 21 23 00           1038 	ld	hl,#_totalStepsB
   02D4 96                 1039 	sub	a,(hl)
   02D5 21 0C 00           1040 	ld	hl,#_bucket
   02D8 77                 1041 	ld	(hl),a
                           1042 ;	square.c 152
                           1043 ;	genPlus
                           1044 ;	AOP_HL for _i
                           1045 ;	Can't optimise plus by inc, falling back to the normal way
   02D9 3E 4B              1046 	ld	a,#<_drumB
   02DB 21 0D 00           1047 	ld	hl,#_i
   02DE 86                 1048 	add	a,(hl)
   02DF 4F                 1049 	ld	c,a
   02E0 3E 00              1050 	ld	a,#>_drumB
   02E2 CE 00              1051 	adc	a,#0x00
   02E4 47                 1052 	ld	b,a
                           1053 ;	genAssign (pointer)
   02E5 3E 01              1054 	ld	a,#0x01
   02E7 02                 1055 	ld	(bc),a
                           1056 ;	genGoto
   02E8 C3 05 03           1057 	jp	00120$
                           1058 ;	genLabel
   02EB                    1059 00104$:
                           1060 ;	square.c 154
                           1061 ;	genCmpLt
                           1062 ;	AOP_HL for _bucket
                           1063 ;	AOP_HL for _totalStepsB
   02EB 21 0C 00           1064 	ld	hl,#_bucket
   02EE 7E                 1065 	ld	a,(hl)
   02EF 21 23 00           1066 	ld	hl,#_totalStepsB
   02F2 96                 1067 	sub	a,(hl)
   02F3 D2 05 03           1068 	jp	nc,00120$
                           1069 ;	square.c 156
                           1070 ;	genPlus
                           1071 ;	AOP_HL for _i
                           1072 ;	Can't optimise plus by inc, falling back to the normal way
   02F6 3E 4B              1073 	ld	a,#<_drumB
   02F8 21 0D 00           1074 	ld	hl,#_i
   02FB 86                 1075 	add	a,(hl)
   02FC 4F                 1076 	ld	c,a
   02FD 3E 00              1077 	ld	a,#>_drumB
   02FF CE 00              1078 	adc	a,#0x00
   0301 47                 1079 	ld	b,a
                           1080 ;	genAssign (pointer)
   0302 3E 00              1081 	ld	a,#0x00
   0304 02                 1082 	ld	(bc),a
                           1083 ;	genLabel
   0305                    1084 00120$:
                           1085 ;	square.c 146
                           1086 ;	genPlus
                           1087 ;	AOP_HL for _i
                           1088 ;	genPlusIncr
   0305 21 0D 00           1089 	ld	hl,#_i
   0308 34                 1090 	inc	(hl)
                           1091 ;	genGoto
   0309 C3 AB 02           1092 	jp	00118$
                           1093 ;	genLabel
   030C                    1094 00121$:
                           1095 ;	square.c 159
                           1096 ;	genPointerGet
                           1097 ;	AOP_HL for _first
   030C 11 4B 00           1098 	ld	de,#_drumB
   030F 1A                 1099 	ld	a,(de)
   0310 21 12 00           1100 	ld	hl,#_first
   0313 77                 1101 	ld	(hl),a
                           1102 ;	square.c 160
                           1103 ;	genIpush
                           1104 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0314 21 6E 04           1105 	ld	hl,#__str_1
   0317 E5                 1106 	push	hl
                           1107 ;	genCall
   0318 CD 00 00           1108 	call	_printf
   031B E8 02              1109 	lda	sp,2(sp)
                           1110 ;	square.c 161
                           1111 ;	genCmpGt
                           1112 ;	AOP_HL for _numberOfPulsesB
                           1113 ;	AOP_STK for _fillDrumB_sloc3_1_0
   031D 3E 00              1114 	ld	a,#0x00
   031F 21 22 00           1115 	ld	hl,#_numberOfPulsesB
   0322 96                 1116 	sub	a,(hl)
   0323 3E 00              1117 	ld	a,#0x00
   0325 17                 1118 	rla
   0326 F8 00              1119 	lda	hl,0(sp)
   0328 77                 1120 	ld	(hl),a
                           1121 ;	genIfx
                           1122 ;	AOP_STK for _fillDrumB_sloc3_1_0
   0329 AF                 1123 	xor	a,a
   032A B6                 1124 	or	a,(hl)
   032B CA BB 03           1125 	jp	z,00113$
                           1126 ;	genCmpEq
                           1127 ;	AOP_HL for _first
                           1128 ; genCmpEq: left 1, right 1, result 0
   032E 21 12 00           1129 	ld	hl,#_first
   0331 7E                 1130 	ld	a,(hl)
   0332 FE 01              1131 	cp	a,#0x01
   0334 CA BB 03           1132 	jp	z,00113$
   0337                    1133 00153$:
                           1134 ;	square.c 163
                           1135 ;	genAssign
                           1136 ;	AOP_HL for _f
   0337 21 14 00           1137 	ld	hl,#_f
   033A 36 00              1138 	ld	(hl),#0x00
                           1139 ;	genLabel
   033C                    1140 00108$:
                           1141 ;	genCmpLt
                           1142 ;	AOP_HL for _f
                           1143 ;	AOP_HL for _totalStepsB
   033C 21 14 00           1144 	ld	hl,#_f
   033F 7E                 1145 	ld	a,(hl)
   0340 21 23 00           1146 	ld	hl,#_totalStepsB
   0343 96                 1147 	sub	a,(hl)
   0344 D2 BB 03           1148 	jp	nc,00113$
                           1149 ;	square.c 164
                           1150 ;	genAssign
                           1151 ;	AOP_HL for _x
   0347 21 15 00           1152 	ld	hl,#_x
   034A 36 00              1153 	ld	(hl),#0x00
                           1154 ;	genLabel
   034C                    1155 00122$:
                           1156 ;	genCmpLt
                           1157 ;	AOP_HL for _x
                           1158 ;	AOP_HL for _totalStepsB
   034C 21 15 00           1159 	ld	hl,#_x
   034F 7E                 1160 	ld	a,(hl)
   0350 21 23 00           1161 	ld	hl,#_totalStepsB
   0353 96                 1162 	sub	a,(hl)
   0354 3E 00              1163 	ld	a,#0x00
   0356 17                 1164 	rla
   0357 47                 1165 	ld	b,a
                           1166 ;	genIfx
   0358 AF                 1167 	xor	a,a
   0359 B0                 1168 	or	a,b
   035A CA 95 03           1169 	jp	z,00125$
                           1170 ;	square.c 165
                           1171 ;	genPlus
                           1172 ;	AOP_HL for _x
                           1173 ;	AOP_STK for _fillDrumB_sloc0_1_0
                           1174 ;	Can't optimise plus by inc, falling back to the normal way
   035D 11 4B 00           1175 	ld	de,#_drumB
   0360 21 15 00           1176 	ld	hl,#_x
   0363 6E                 1177 	ld	l,(hl)
   0364 26 00              1178 	ld	h,#0x00
   0366 19                 1179 	add	hl,de
   0367 7D                 1180 	ld	a,l
   0368 54                 1181 	ld	d,h
   0369 F8 04              1182 	lda	hl,4(sp)
   036B 22                 1183 	ld	(hl+),a
   036C 72                 1184 	ld	(hl),d
                           1185 ;	genPlus
                           1186 ;	AOP_HL for _x
                           1187 ;	AOP_STK for _fillDrumB_sloc1_1_0
                           1188 ;	genPlusIncr
                           1189 ;	Can't optimise plus by inc, falling back to the normal way
   036D 21 15 00           1190 	ld	hl,#_x
   0370 7E                 1191 	ld	a,(hl)
   0371 C6 01              1192 	add	a,#0x01
   0373 F8 03              1193 	lda	hl,3(sp)
   0375 77                 1194 	ld	(hl),a
                           1195 ;	genPlus
                           1196 ;	AOP_STK for _fillDrumB_sloc1_1_0
                           1197 ;	AOP_STK for _fillDrumB_sloc2_1_0
                           1198 ;	Can't optimise plus by inc, falling back to the normal way
   0376 11 4B 00           1199 	ld	de,#_drumB
   0379 6E                 1200 	ld	l,(hl)
   037A 26 00              1201 	ld	h,#0x00
   037C 19                 1202 	add	hl,de
   037D 7D                 1203 	ld	a,l
   037E 54                 1204 	ld	d,h
   037F F8 01              1205 	lda	hl,1(sp)
                           1206 ;	genPointerGet
                           1207 ;	AOP_STK for _fillDrumB_sloc2_1_0
   0381 22                 1208 	ld	(hl+),a
   0382 72                 1209 	ld	(hl),d
   0383 5F                 1210 	ld	e,a
   0384 1A                 1211 	ld	a,(de)
                           1212 ;	genAssign (pointer)
                           1213 ;	AOP_STK for _fillDrumB_sloc0_1_0
   0385 23                 1214 	inc	hl
   0386 23                 1215 	inc	hl
   0387 5E                 1216 	ld	e,(hl)
   0388 23                 1217 	inc	hl
   0389 56                 1218 	ld	d,(hl)
   038A 12                 1219 	ld	(de),a
                           1220 ;	square.c 164
                           1221 ;	genAssign
                           1222 ;	AOP_STK for _fillDrumB_sloc1_1_0
   038B 2B                 1223 	dec	hl
   038C 2B                 1224 	dec	hl
   038D 4E                 1225 	ld	c,(hl)
                           1226 ;	genAssign
                           1227 ;	AOP_HL for _x
   038E 21 15 00           1228 	ld	hl,#_x
   0391 71                 1229 	ld	(hl),c
                           1230 ;	genGoto
   0392 C3 4C 03           1231 	jp	00122$
                           1232 ;	genLabel
   0395                    1233 00125$:
                           1234 ;	square.c 167
                           1235 ;	genMinus
                           1236 ;	AOP_HL for _totalStepsB
   0395 21 23 00           1237 	ld	hl,#_totalStepsB
   0398 7E                 1238 	ld	a,(hl)
   0399 C6 FF              1239 	add	a,#0xFF
   039B 4F                 1240 	ld	c,a
                           1241 ;	genPlus
                           1242 ;	Can't optimise plus by inc, falling back to the normal way
   039C 3E 4B              1243 	ld	a,#<_drumB
   039E 81                 1244 	add	a,c
   039F 4F                 1245 	ld	c,a
   03A0 3E 00              1246 	ld	a,#>_drumB
   03A2 CE 00              1247 	adc	a,#0x00
   03A4 47                 1248 	ld	b,a
                           1249 ;	genAssign (pointer)
                           1250 ;	AOP_HL for _first
   03A5 21 12 00           1251 	ld	hl,#_first
   03A8 7E                 1252 	ld	a,(hl)
   03A9 02                 1253 	ld	(bc),a
                           1254 ;	square.c 168
                           1255 ;	genPointerGet
   03AA 11 4B 00           1256 	ld	de,#_drumB
   03AD 1A                 1257 	ld	a,(de)
                           1258 ;	genCmpEq
                           1259 ; genCmpEq: left 1, right 1, result 0
   03AE 4F                 1260 	ld	c,a
   03AF FE 01              1261 	cp	a,#0x01
   03B1 CA BB 03           1262 	jp	z,00113$
   03B4                    1263 00154$:
                           1264 ;	square.c 163
                           1265 ;	genPlus
                           1266 ;	AOP_HL for _f
                           1267 ;	genPlusIncr
   03B4 21 14 00           1268 	ld	hl,#_f
   03B7 34                 1269 	inc	(hl)
                           1270 ;	genGoto
   03B8 C3 3C 03           1271 	jp	00108$
                           1272 ;	genLabel
   03BB                    1273 00113$:
                           1274 ;	square.c 175
                           1275 ;	genMinus
                           1276 ;	AOP_HL for _totalStepsB
   03BB 21 23 00           1277 	ld	hl,#_totalStepsB
   03BE 7E                 1278 	ld	a,(hl)
   03BF C6 FF              1279 	add	a,#0xFF
   03C1 4F                 1280 	ld	c,a
                           1281 ;	genPlus
                           1282 ;	Can't optimise plus by inc, falling back to the normal way
   03C2 3E 4B              1283 	ld	a,#<_drumB
   03C4 81                 1284 	add	a,c
   03C5 4F                 1285 	ld	c,a
   03C6 3E 00              1286 	ld	a,#>_drumB
   03C8 CE 00              1287 	adc	a,#0x00
   03CA 47                 1288 	ld	b,a
                           1289 ;	genPointerGet
                           1290 ;	AOP_HL for _last
   03CB 0A                 1291 	ld	a,(bc)
   03CC 21 13 00           1292 	ld	hl,#_last
   03CF 77                 1293 	ld	(hl),a
                           1294 ;	square.c 176
                           1295 ;	genIfx
                           1296 ;	AOP_STK for _fillDrumB_sloc3_1_0
   03D0 AF                 1297 	xor	a,a
   03D1 F8 00              1298 	lda	hl,0(sp)
   03D3 B6                 1299 	or	a,(hl)
   03D4 CA 4B 04           1300 	jp	z,00116$
                           1301 ;	genCmpEq
                           1302 ;	AOP_HL for _offStepB
                           1303 ; genCmpEq: left 1, right 1, result 0
   03D7 21 29 00           1304 	ld	hl,#_offStepB
   03DA 7E                 1305 	ld	a,(hl)
   03DB B7                 1306 	or	a,a
   03DC CA 4B 04           1307 	jp	z,00116$
   03DF                    1308 00155$:
                           1309 ;	square.c 178
                           1310 ;	genAssign
                           1311 ;	AOP_HL for _f
   03DF 21 14 00           1312 	ld	hl,#_f
   03E2 36 00              1313 	ld	(hl),#0x00
                           1314 ;	genLabel
   03E4                    1315 00130$:
                           1316 ;	genCmpLt
                           1317 ;	AOP_HL for _f
                           1318 ;	AOP_HL for _offStepB
   03E4 21 14 00           1319 	ld	hl,#_f
   03E7 7E                 1320 	ld	a,(hl)
   03E8 21 29 00           1321 	ld	hl,#_offStepB
   03EB 96                 1322 	sub	a,(hl)
   03EC D2 4B 04           1323 	jp	nc,00116$
                           1324 ;	square.c 179
                           1325 ;	genAssign
                           1326 ;	AOP_HL for _totalStepsB
                           1327 ;	AOP_HL for _x
   03EF 21 23 00           1328 	ld	hl,#_totalStepsB
   03F2 7E                 1329 	ld	a,(hl)
   03F3 21 15 00           1330 	ld	hl,#_x
   03F6 77                 1331 	ld	(hl),a
                           1332 ;	genLabel
   03F7                    1333 00126$:
                           1334 ;	genCmpGt
                           1335 ;	AOP_HL for _x
                           1336 ;	AOP_STK for _fillDrumB_sloc3_1_0
   03F7 3E 00              1337 	ld	a,#0x00
   03F9 21 15 00           1338 	ld	hl,#_x
   03FC 96                 1339 	sub	a,(hl)
   03FD 3E 00              1340 	ld	a,#0x00
   03FF 17                 1341 	rla
   0400 F8 00              1342 	lda	hl,0(sp)
   0402 77                 1343 	ld	(hl),a
                           1344 ;	genIfx
                           1345 ;	AOP_STK for _fillDrumB_sloc3_1_0
   0403 AF                 1346 	xor	a,a
   0404 B6                 1347 	or	a,(hl)
   0405 CA 3C 04           1348 	jp	z,00129$
                           1349 ;	square.c 180
                           1350 ;	genPlus
                           1351 ;	AOP_HL for _x
                           1352 ;	AOP_STK for _fillDrumB_sloc2_1_0
                           1353 ;	Can't optimise plus by inc, falling back to the normal way
   0408 11 4B 00           1354 	ld	de,#_drumB
   040B 21 15 00           1355 	ld	hl,#_x
   040E 6E                 1356 	ld	l,(hl)
   040F 26 00              1357 	ld	h,#0x00
   0411 19                 1358 	add	hl,de
   0412 7D                 1359 	ld	a,l
   0413 54                 1360 	ld	d,h
   0414 F8 01              1361 	lda	hl,1(sp)
   0416 22                 1362 	ld	(hl+),a
   0417 72                 1363 	ld	(hl),d
                           1364 ;	genMinus
                           1365 ;	AOP_HL for _x
   0418 21 15 00           1366 	ld	hl,#_x
   041B 7E                 1367 	ld	a,(hl)
   041C C6 FF              1368 	add	a,#0xFF
   041E 47                 1369 	ld	b,a
                           1370 ;	genPlus
                           1371 ;	AOP_STK for _fillDrumB_sloc0_1_0
                           1372 ;	Can't optimise plus by inc, falling back to the normal way
   041F 11 4B 00           1373 	ld	de,#_drumB
   0422 68                 1374 	ld	l,b
   0423 26 00              1375 	ld	h,#0x00
   0425 19                 1376 	add	hl,de
   0426 7D                 1377 	ld	a,l
   0427 54                 1378 	ld	d,h
   0428 F8 04              1379 	lda	hl,4(sp)
                           1380 ;	genPointerGet
                           1381 ;	AOP_STK for _fillDrumB_sloc0_1_0
   042A 22                 1382 	ld	(hl+),a
   042B 72                 1383 	ld	(hl),d
   042C 5F                 1384 	ld	e,a
   042D 1A                 1385 	ld	a,(de)
                           1386 ;	genAssign (pointer)
                           1387 ;	AOP_STK for _fillDrumB_sloc2_1_0
   042E F8 01              1388 	lda	hl,1(sp)
   0430 5E                 1389 	ld	e,(hl)
   0431 23                 1390 	inc	hl
   0432 56                 1391 	ld	d,(hl)
   0433 12                 1392 	ld	(de),a
                           1393 ;	square.c 179
                           1394 ;	genAssign
   0434 48                 1395 	ld	c,b
                           1396 ;	genAssign
                           1397 ;	AOP_HL for _x
   0435 21 15 00           1398 	ld	hl,#_x
   0438 71                 1399 	ld	(hl),c
                           1400 ;	genGoto
   0439 C3 F7 03           1401 	jp	00126$
                           1402 ;	genLabel
   043C                    1403 00129$:
                           1404 ;	square.c 182
                           1405 ;	genAssign (pointer)
                           1406 ;	AOP_HL for _last
   043C 11 4B 00           1407 	ld	de,#_drumB
   043F 21 13 00           1408 	ld	hl,#_last
   0442 7E                 1409 	ld	a,(hl)
   0443 12                 1410 	ld	(de),a
                           1411 ;	square.c 178
                           1412 ;	genPlus
                           1413 ;	AOP_HL for _f
                           1414 ;	genPlusIncr
   0444 21 14 00           1415 	ld	hl,#_f
   0447 34                 1416 	inc	(hl)
                           1417 ;	genGoto
   0448 C3 E4 03           1418 	jp	00130$
                           1419 ;	genLabel
   044B                    1420 00116$:
                           1421 ;	square.c 185
                           1422 ;	genCall
                           1423 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   044B CD 00 00           1424 	call	_rand
                           1425 ;	AOP_HL for _randB
   044E 21 10 00           1426 	ld	hl,#_randB
   0451 73                 1427 	ld	(hl),e
                           1428 ;	square.c 186
                           1429 ;	genIpush
                           1430 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0452 3E 1E              1431 	ld	a,#0x1E
   0454 F5                 1432 	push	af
   0455 33                 1433 	inc	sp
                           1434 ;	genIpush
                           1435 ;	AOP_HL for _randB
   0456 21 10 00           1436 	ld	hl,#_randB
   0459 7E                 1437 	ld	a,(hl)
   045A F5                 1438 	push	af
   045B 33                 1439 	inc	sp
                           1440 ;	genCall
   045C CD 00 00           1441 	call	__moduchar_rrx_s
   045F 4B                 1442 	ld	c,e
   0460 E8 02              1443 	lda	sp,2(sp)
                           1444 ;	genPlus
                           1445 ;	AOP_HL for _delayB
                           1446 ;	AOP_HL for _xB
                           1447 ;	Can't optimise plus by inc, falling back to the normal way
   0462 21 1A 00           1448 	ld	hl,#_delayB
   0465 7E                 1449 	ld	a,(hl)
   0466 81                 1450 	add	a,c
   0467 21 17 00           1451 	ld	hl,#_xB
   046A 77                 1452 	ld	(hl),a
                           1453 ;	genLabel
   046B                    1454 00134$:
                           1455 ;	genEndFunction
   046B E8 06              1456 	lda	sp,6(sp)
   046D C9                 1457 	ret
   046E                    1458 ___fillDrumB_end:
   046E                    1459 __str_1:
   046E 00                 1460 	.db 0x00
                           1461 ;	square.c 190
                           1462 ;	genLabel
                           1463 ;	genFunction
                           1464 ;	---------------------------------
                           1465 ; Function fillDrumC
                           1466 ; ---------------------------------
   046F                    1467 ___fillDrumC_start:
   046F                    1468 _fillDrumC:
   046F E8 FA              1469 	lda	sp,-6(sp)
                           1470 ;	square.c 191
                           1471 ;	genAssign
                           1472 ;	AOP_HL for _bucket
   0471 21 0C 00           1473 	ld	hl,#_bucket
   0474 36 00              1474 	ld	(hl),#0x00
                           1475 ;	square.c 192
                           1476 ;	genAssign
                           1477 ;	AOP_HL for _i
   0476 21 0D 00           1478 	ld	hl,#_i
   0479 36 00              1479 	ld	(hl),#0x00
                           1480 ;	genLabel
   047B                    1481 00118$:
                           1482 ;	genCmpLt
                           1483 ;	AOP_HL for _i
                           1484 ;	AOP_HL for _totalStepsC
   047B 21 0D 00           1485 	ld	hl,#_i
   047E 7E                 1486 	ld	a,(hl)
   047F 21 26 00           1487 	ld	hl,#_totalStepsC
   0482 96                 1488 	sub	a,(hl)
   0483 D2 DC 04           1489 	jp	nc,00121$
                           1490 ;	square.c 194
                           1491 ;	genPlus
                           1492 ;	AOP_HL for _bucket
                           1493 ;	AOP_HL for _numberOfPulsesC
                           1494 ;	Can't optimise plus by inc, falling back to the normal way
   0486 21 0C 00           1495 	ld	hl,#_bucket
   0489 7E                 1496 	ld	a,(hl)
   048A 21 25 00           1497 	ld	hl,#_numberOfPulsesC
   048D 86                 1498 	add	a,(hl)
   048E 21 0C 00           1499 	ld	hl,#_bucket
   0491 77                 1500 	ld	(hl),a
                           1501 ;	square.c 195
                           1502 ;	genMinus
                           1503 ;	AOP_HL for _totalStepsC
   0492 21 26 00           1504 	ld	hl,#_totalStepsC
   0495 7E                 1505 	ld	a,(hl)
   0496 C6 FF              1506 	add	a,#0xFF
                           1507 ;	genCmpGt
                           1508 ;	AOP_HL for _bucket
   0498 4F                 1509 	ld	c,a
   0499 21 0C 00           1510 	ld	hl,#_bucket
   049C 96                 1511 	sub	a,(hl)
   049D D2 BB 04           1512 	jp	nc,00104$
                           1513 ;	square.c 197
                           1514 ;	genMinus
                           1515 ;	AOP_HL for _bucket
                           1516 ;	AOP_HL for _totalStepsC
   04A0 7E                 1517 	ld	a,(hl)
   04A1 21 26 00           1518 	ld	hl,#_totalStepsC
   04A4 96                 1519 	sub	a,(hl)
   04A5 21 0C 00           1520 	ld	hl,#_bucket
   04A8 77                 1521 	ld	(hl),a
                           1522 ;	square.c 198
                           1523 ;	genPlus
                           1524 ;	AOP_HL for _i
                           1525 ;	Can't optimise plus by inc, falling back to the normal way
   04A9 3E 6B              1526 	ld	a,#<_drumC
   04AB 21 0D 00           1527 	ld	hl,#_i
   04AE 86                 1528 	add	a,(hl)
   04AF 4F                 1529 	ld	c,a
   04B0 3E 00              1530 	ld	a,#>_drumC
   04B2 CE 00              1531 	adc	a,#0x00
   04B4 47                 1532 	ld	b,a
                           1533 ;	genAssign (pointer)
   04B5 3E 01              1534 	ld	a,#0x01
   04B7 02                 1535 	ld	(bc),a
                           1536 ;	genGoto
   04B8 C3 D5 04           1537 	jp	00120$
                           1538 ;	genLabel
   04BB                    1539 00104$:
                           1540 ;	square.c 200
                           1541 ;	genCmpLt
                           1542 ;	AOP_HL for _bucket
                           1543 ;	AOP_HL for _totalStepsC
   04BB 21 0C 00           1544 	ld	hl,#_bucket
   04BE 7E                 1545 	ld	a,(hl)
   04BF 21 26 00           1546 	ld	hl,#_totalStepsC
   04C2 96                 1547 	sub	a,(hl)
   04C3 D2 D5 04           1548 	jp	nc,00120$
                           1549 ;	square.c 202
                           1550 ;	genPlus
                           1551 ;	AOP_HL for _i
                           1552 ;	Can't optimise plus by inc, falling back to the normal way
   04C6 3E 6B              1553 	ld	a,#<_drumC
   04C8 21 0D 00           1554 	ld	hl,#_i
   04CB 86                 1555 	add	a,(hl)
   04CC 4F                 1556 	ld	c,a
   04CD 3E 00              1557 	ld	a,#>_drumC
   04CF CE 00              1558 	adc	a,#0x00
   04D1 47                 1559 	ld	b,a
                           1560 ;	genAssign (pointer)
   04D2 3E 00              1561 	ld	a,#0x00
   04D4 02                 1562 	ld	(bc),a
                           1563 ;	genLabel
   04D5                    1564 00120$:
                           1565 ;	square.c 192
                           1566 ;	genPlus
                           1567 ;	AOP_HL for _i
                           1568 ;	genPlusIncr
   04D5 21 0D 00           1569 	ld	hl,#_i
   04D8 34                 1570 	inc	(hl)
                           1571 ;	genGoto
   04D9 C3 7B 04           1572 	jp	00118$
                           1573 ;	genLabel
   04DC                    1574 00121$:
                           1575 ;	square.c 205
                           1576 ;	genPointerGet
                           1577 ;	AOP_HL for _first
   04DC 11 6B 00           1578 	ld	de,#_drumC
   04DF 1A                 1579 	ld	a,(de)
   04E0 21 12 00           1580 	ld	hl,#_first
   04E3 77                 1581 	ld	(hl),a
                           1582 ;	square.c 206
                           1583 ;	genIpush
                           1584 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   04E4 21 3E 06           1585 	ld	hl,#__str_2
   04E7 E5                 1586 	push	hl
                           1587 ;	genCall
   04E8 CD 00 00           1588 	call	_printf
   04EB E8 02              1589 	lda	sp,2(sp)
                           1590 ;	square.c 207
                           1591 ;	genCmpGt
                           1592 ;	AOP_HL for _numberOfPulsesC
                           1593 ;	AOP_STK for _fillDrumC_sloc3_1_0
   04ED 3E 00              1594 	ld	a,#0x00
   04EF 21 25 00           1595 	ld	hl,#_numberOfPulsesC
   04F2 96                 1596 	sub	a,(hl)
   04F3 3E 00              1597 	ld	a,#0x00
   04F5 17                 1598 	rla
   04F6 F8 00              1599 	lda	hl,0(sp)
   04F8 77                 1600 	ld	(hl),a
                           1601 ;	genIfx
                           1602 ;	AOP_STK for _fillDrumC_sloc3_1_0
   04F9 AF                 1603 	xor	a,a
   04FA B6                 1604 	or	a,(hl)
   04FB CA 8B 05           1605 	jp	z,00113$
                           1606 ;	genCmpEq
                           1607 ;	AOP_HL for _first
                           1608 ; genCmpEq: left 1, right 1, result 0
   04FE 21 12 00           1609 	ld	hl,#_first
   0501 7E                 1610 	ld	a,(hl)
   0502 FE 01              1611 	cp	a,#0x01
   0504 CA 8B 05           1612 	jp	z,00113$
   0507                    1613 00153$:
                           1614 ;	square.c 209
                           1615 ;	genAssign
                           1616 ;	AOP_HL for _f
   0507 21 14 00           1617 	ld	hl,#_f
   050A 36 00              1618 	ld	(hl),#0x00
                           1619 ;	genLabel
   050C                    1620 00108$:
                           1621 ;	genCmpLt
                           1622 ;	AOP_HL for _f
                           1623 ;	AOP_HL for _totalStepsC
   050C 21 14 00           1624 	ld	hl,#_f
   050F 7E                 1625 	ld	a,(hl)
   0510 21 26 00           1626 	ld	hl,#_totalStepsC
   0513 96                 1627 	sub	a,(hl)
   0514 D2 8B 05           1628 	jp	nc,00113$
                           1629 ;	square.c 210
                           1630 ;	genAssign
                           1631 ;	AOP_HL for _x
   0517 21 15 00           1632 	ld	hl,#_x
   051A 36 00              1633 	ld	(hl),#0x00
                           1634 ;	genLabel
   051C                    1635 00122$:
                           1636 ;	genCmpLt
                           1637 ;	AOP_HL for _x
                           1638 ;	AOP_HL for _totalStepsC
   051C 21 15 00           1639 	ld	hl,#_x
   051F 7E                 1640 	ld	a,(hl)
   0520 21 26 00           1641 	ld	hl,#_totalStepsC
   0523 96                 1642 	sub	a,(hl)
   0524 3E 00              1643 	ld	a,#0x00
   0526 17                 1644 	rla
   0527 47                 1645 	ld	b,a
                           1646 ;	genIfx
   0528 AF                 1647 	xor	a,a
   0529 B0                 1648 	or	a,b
   052A CA 65 05           1649 	jp	z,00125$
                           1650 ;	square.c 211
                           1651 ;	genPlus
                           1652 ;	AOP_HL for _x
                           1653 ;	AOP_STK for _fillDrumC_sloc0_1_0
                           1654 ;	Can't optimise plus by inc, falling back to the normal way
   052D 11 6B 00           1655 	ld	de,#_drumC
   0530 21 15 00           1656 	ld	hl,#_x
   0533 6E                 1657 	ld	l,(hl)
   0534 26 00              1658 	ld	h,#0x00
   0536 19                 1659 	add	hl,de
   0537 7D                 1660 	ld	a,l
   0538 54                 1661 	ld	d,h
   0539 F8 04              1662 	lda	hl,4(sp)
   053B 22                 1663 	ld	(hl+),a
   053C 72                 1664 	ld	(hl),d
                           1665 ;	genPlus
                           1666 ;	AOP_HL for _x
                           1667 ;	AOP_STK for _fillDrumC_sloc1_1_0
                           1668 ;	genPlusIncr
                           1669 ;	Can't optimise plus by inc, falling back to the normal way
   053D 21 15 00           1670 	ld	hl,#_x
   0540 7E                 1671 	ld	a,(hl)
   0541 C6 01              1672 	add	a,#0x01
   0543 F8 03              1673 	lda	hl,3(sp)
   0545 77                 1674 	ld	(hl),a
                           1675 ;	genPlus
                           1676 ;	AOP_STK for _fillDrumC_sloc1_1_0
                           1677 ;	AOP_STK for _fillDrumC_sloc2_1_0
                           1678 ;	Can't optimise plus by inc, falling back to the normal way
   0546 11 6B 00           1679 	ld	de,#_drumC
   0549 6E                 1680 	ld	l,(hl)
   054A 26 00              1681 	ld	h,#0x00
   054C 19                 1682 	add	hl,de
   054D 7D                 1683 	ld	a,l
   054E 54                 1684 	ld	d,h
   054F F8 01              1685 	lda	hl,1(sp)
                           1686 ;	genPointerGet
                           1687 ;	AOP_STK for _fillDrumC_sloc2_1_0
   0551 22                 1688 	ld	(hl+),a
   0552 72                 1689 	ld	(hl),d
   0553 5F                 1690 	ld	e,a
   0554 1A                 1691 	ld	a,(de)
                           1692 ;	genAssign (pointer)
                           1693 ;	AOP_STK for _fillDrumC_sloc0_1_0
   0555 23                 1694 	inc	hl
   0556 23                 1695 	inc	hl
   0557 5E                 1696 	ld	e,(hl)
   0558 23                 1697 	inc	hl
   0559 56                 1698 	ld	d,(hl)
   055A 12                 1699 	ld	(de),a
                           1700 ;	square.c 210
                           1701 ;	genAssign
                           1702 ;	AOP_STK for _fillDrumC_sloc1_1_0
   055B 2B                 1703 	dec	hl
   055C 2B                 1704 	dec	hl
   055D 4E                 1705 	ld	c,(hl)
                           1706 ;	genAssign
                           1707 ;	AOP_HL for _x
   055E 21 15 00           1708 	ld	hl,#_x
   0561 71                 1709 	ld	(hl),c
                           1710 ;	genGoto
   0562 C3 1C 05           1711 	jp	00122$
                           1712 ;	genLabel
   0565                    1713 00125$:
                           1714 ;	square.c 213
                           1715 ;	genMinus
                           1716 ;	AOP_HL for _totalStepsC
   0565 21 26 00           1717 	ld	hl,#_totalStepsC
   0568 7E                 1718 	ld	a,(hl)
   0569 C6 FF              1719 	add	a,#0xFF
   056B 4F                 1720 	ld	c,a
                           1721 ;	genPlus
                           1722 ;	Can't optimise plus by inc, falling back to the normal way
   056C 3E 6B              1723 	ld	a,#<_drumC
   056E 81                 1724 	add	a,c
   056F 4F                 1725 	ld	c,a
   0570 3E 00              1726 	ld	a,#>_drumC
   0572 CE 00              1727 	adc	a,#0x00
   0574 47                 1728 	ld	b,a
                           1729 ;	genAssign (pointer)
                           1730 ;	AOP_HL for _first
   0575 21 12 00           1731 	ld	hl,#_first
   0578 7E                 1732 	ld	a,(hl)
   0579 02                 1733 	ld	(bc),a
                           1734 ;	square.c 214
                           1735 ;	genPointerGet
   057A 11 6B 00           1736 	ld	de,#_drumC
   057D 1A                 1737 	ld	a,(de)
                           1738 ;	genCmpEq
                           1739 ; genCmpEq: left 1, right 1, result 0
   057E 4F                 1740 	ld	c,a
   057F FE 01              1741 	cp	a,#0x01
   0581 CA 8B 05           1742 	jp	z,00113$
   0584                    1743 00154$:
                           1744 ;	square.c 209
                           1745 ;	genPlus
                           1746 ;	AOP_HL for _f
                           1747 ;	genPlusIncr
   0584 21 14 00           1748 	ld	hl,#_f
   0587 34                 1749 	inc	(hl)
                           1750 ;	genGoto
   0588 C3 0C 05           1751 	jp	00108$
                           1752 ;	genLabel
   058B                    1753 00113$:
                           1754 ;	square.c 220
                           1755 ;	genMinus
                           1756 ;	AOP_HL for _totalStepsC
   058B 21 26 00           1757 	ld	hl,#_totalStepsC
   058E 7E                 1758 	ld	a,(hl)
   058F C6 FF              1759 	add	a,#0xFF
   0591 4F                 1760 	ld	c,a
                           1761 ;	genPlus
                           1762 ;	Can't optimise plus by inc, falling back to the normal way
   0592 3E 6B              1763 	ld	a,#<_drumC
   0594 81                 1764 	add	a,c
   0595 4F                 1765 	ld	c,a
   0596 3E 00              1766 	ld	a,#>_drumC
   0598 CE 00              1767 	adc	a,#0x00
   059A 47                 1768 	ld	b,a
                           1769 ;	genPointerGet
                           1770 ;	AOP_HL for _last
   059B 0A                 1771 	ld	a,(bc)
   059C 21 13 00           1772 	ld	hl,#_last
   059F 77                 1773 	ld	(hl),a
                           1774 ;	square.c 221
                           1775 ;	genIfx
                           1776 ;	AOP_STK for _fillDrumC_sloc3_1_0
   05A0 AF                 1777 	xor	a,a
   05A1 F8 00              1778 	lda	hl,0(sp)
   05A3 B6                 1779 	or	a,(hl)
   05A4 CA 1B 06           1780 	jp	z,00116$
                           1781 ;	genCmpEq
                           1782 ;	AOP_HL for _offStepC
                           1783 ; genCmpEq: left 1, right 1, result 0
   05A7 21 2A 00           1784 	ld	hl,#_offStepC
   05AA 7E                 1785 	ld	a,(hl)
   05AB B7                 1786 	or	a,a
   05AC CA 1B 06           1787 	jp	z,00116$
   05AF                    1788 00155$:
                           1789 ;	square.c 223
                           1790 ;	genAssign
                           1791 ;	AOP_HL for _f
   05AF 21 14 00           1792 	ld	hl,#_f
   05B2 36 00              1793 	ld	(hl),#0x00
                           1794 ;	genLabel
   05B4                    1795 00130$:
                           1796 ;	genCmpLt
                           1797 ;	AOP_HL for _f
                           1798 ;	AOP_HL for _offStepC
   05B4 21 14 00           1799 	ld	hl,#_f
   05B7 7E                 1800 	ld	a,(hl)
   05B8 21 2A 00           1801 	ld	hl,#_offStepC
   05BB 96                 1802 	sub	a,(hl)
   05BC D2 1B 06           1803 	jp	nc,00116$
                           1804 ;	square.c 224
                           1805 ;	genAssign
                           1806 ;	AOP_HL for _totalStepsC
                           1807 ;	AOP_HL for _x
   05BF 21 26 00           1808 	ld	hl,#_totalStepsC
   05C2 7E                 1809 	ld	a,(hl)
   05C3 21 15 00           1810 	ld	hl,#_x
   05C6 77                 1811 	ld	(hl),a
                           1812 ;	genLabel
   05C7                    1813 00126$:
                           1814 ;	genCmpGt
                           1815 ;	AOP_HL for _x
                           1816 ;	AOP_STK for _fillDrumC_sloc3_1_0
   05C7 3E 00              1817 	ld	a,#0x00
   05C9 21 15 00           1818 	ld	hl,#_x
   05CC 96                 1819 	sub	a,(hl)
   05CD 3E 00              1820 	ld	a,#0x00
   05CF 17                 1821 	rla
   05D0 F8 00              1822 	lda	hl,0(sp)
   05D2 77                 1823 	ld	(hl),a
                           1824 ;	genIfx
                           1825 ;	AOP_STK for _fillDrumC_sloc3_1_0
   05D3 AF                 1826 	xor	a,a
   05D4 B6                 1827 	or	a,(hl)
   05D5 CA 0C 06           1828 	jp	z,00129$
                           1829 ;	square.c 225
                           1830 ;	genPlus
                           1831 ;	AOP_HL for _x
                           1832 ;	AOP_STK for _fillDrumC_sloc2_1_0
                           1833 ;	Can't optimise plus by inc, falling back to the normal way
   05D8 11 6B 00           1834 	ld	de,#_drumC
   05DB 21 15 00           1835 	ld	hl,#_x
   05DE 6E                 1836 	ld	l,(hl)
   05DF 26 00              1837 	ld	h,#0x00
   05E1 19                 1838 	add	hl,de
   05E2 7D                 1839 	ld	a,l
   05E3 54                 1840 	ld	d,h
   05E4 F8 01              1841 	lda	hl,1(sp)
   05E6 22                 1842 	ld	(hl+),a
   05E7 72                 1843 	ld	(hl),d
                           1844 ;	genMinus
                           1845 ;	AOP_HL for _x
   05E8 21 15 00           1846 	ld	hl,#_x
   05EB 7E                 1847 	ld	a,(hl)
   05EC C6 FF              1848 	add	a,#0xFF
   05EE 47                 1849 	ld	b,a
                           1850 ;	genPlus
                           1851 ;	AOP_STK for _fillDrumC_sloc0_1_0
                           1852 ;	Can't optimise plus by inc, falling back to the normal way
   05EF 11 6B 00           1853 	ld	de,#_drumC
   05F2 68                 1854 	ld	l,b
   05F3 26 00              1855 	ld	h,#0x00
   05F5 19                 1856 	add	hl,de
   05F6 7D                 1857 	ld	a,l
   05F7 54                 1858 	ld	d,h
   05F8 F8 04              1859 	lda	hl,4(sp)
                           1860 ;	genPointerGet
                           1861 ;	AOP_STK for _fillDrumC_sloc0_1_0
   05FA 22                 1862 	ld	(hl+),a
   05FB 72                 1863 	ld	(hl),d
   05FC 5F                 1864 	ld	e,a
   05FD 1A                 1865 	ld	a,(de)
                           1866 ;	genAssign (pointer)
                           1867 ;	AOP_STK for _fillDrumC_sloc2_1_0
   05FE F8 01              1868 	lda	hl,1(sp)
   0600 5E                 1869 	ld	e,(hl)
   0601 23                 1870 	inc	hl
   0602 56                 1871 	ld	d,(hl)
   0603 12                 1872 	ld	(de),a
                           1873 ;	square.c 224
                           1874 ;	genAssign
   0604 48                 1875 	ld	c,b
                           1876 ;	genAssign
                           1877 ;	AOP_HL for _x
   0605 21 15 00           1878 	ld	hl,#_x
   0608 71                 1879 	ld	(hl),c
                           1880 ;	genGoto
   0609 C3 C7 05           1881 	jp	00126$
                           1882 ;	genLabel
   060C                    1883 00129$:
                           1884 ;	square.c 227
                           1885 ;	genAssign (pointer)
                           1886 ;	AOP_HL for _last
   060C 11 6B 00           1887 	ld	de,#_drumC
   060F 21 13 00           1888 	ld	hl,#_last
   0612 7E                 1889 	ld	a,(hl)
   0613 12                 1890 	ld	(de),a
                           1891 ;	square.c 223
                           1892 ;	genPlus
                           1893 ;	AOP_HL for _f
                           1894 ;	genPlusIncr
   0614 21 14 00           1895 	ld	hl,#_f
   0617 34                 1896 	inc	(hl)
                           1897 ;	genGoto
   0618 C3 B4 05           1898 	jp	00130$
                           1899 ;	genLabel
   061B                    1900 00116$:
                           1901 ;	square.c 230
                           1902 ;	genCall
                           1903 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   061B CD 00 00           1904 	call	_rand
                           1905 ;	AOP_HL for _randC
   061E 21 11 00           1906 	ld	hl,#_randC
   0621 73                 1907 	ld	(hl),e
                           1908 ;	square.c 231
                           1909 ;	genIpush
                           1910 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0622 3E 1E              1911 	ld	a,#0x1E
   0624 F5                 1912 	push	af
   0625 33                 1913 	inc	sp
                           1914 ;	genIpush
                           1915 ;	AOP_HL for _randC
   0626 21 11 00           1916 	ld	hl,#_randC
   0629 7E                 1917 	ld	a,(hl)
   062A F5                 1918 	push	af
   062B 33                 1919 	inc	sp
                           1920 ;	genCall
   062C CD 00 00           1921 	call	__moduchar_rrx_s
   062F 4B                 1922 	ld	c,e
   0630 E8 02              1923 	lda	sp,2(sp)
                           1924 ;	genPlus
                           1925 ;	AOP_HL for _delayC
                           1926 ;	AOP_HL for _xC
                           1927 ;	Can't optimise plus by inc, falling back to the normal way
   0632 21 1B 00           1928 	ld	hl,#_delayC
   0635 7E                 1929 	ld	a,(hl)
   0636 81                 1930 	add	a,c
   0637 21 18 00           1931 	ld	hl,#_xC
   063A 77                 1932 	ld	(hl),a
                           1933 ;	genLabel
   063B                    1934 00134$:
                           1935 ;	genEndFunction
   063B E8 06              1936 	lda	sp,6(sp)
   063D C9                 1937 	ret
   063E                    1938 ___fillDrumC_end:
   063E                    1939 __str_2:
   063E 00                 1940 	.db 0x00
                           1941 ;	square.c 236
                           1942 ;	genLabel
                           1943 ;	genFunction
                           1944 ;	---------------------------------
                           1945 ; Function updateUI
                           1946 ; ---------------------------------
   063F                    1947 ___updateUI_start:
   063F                    1948 _updateUI:
   063F E8 FA              1949 	lda	sp,-6(sp)
                           1950 ;	square.c 238
                           1951 ;	genIpush
                           1952 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0641 21 7F 08           1953 	ld	hl,#__str_3
   0644 E5                 1954 	push	hl
                           1955 ;	genCall
   0645 CD 00 00           1956 	call	_puts
   0648 E8 02              1957 	lda	sp,2(sp)
                           1958 ;	square.c 240
                           1959 ;	genIpush
                           1960 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   064A 21 80 08           1961 	ld	hl,#__str_4
   064D E5                 1962 	push	hl
                           1963 ;	genCall
   064E CD 00 00           1964 	call	_puts
   0651 E8 02              1965 	lda	sp,2(sp)
                           1966 ;	square.c 241
                           1967 ;	genIpush
                           1968 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0653 21 82 08           1969 	ld	hl,#__str_5
   0656 E5                 1970 	push	hl
                           1971 ;	genCall
   0657 CD 00 00           1972 	call	_puts
   065A E8 02              1973 	lda	sp,2(sp)
                           1974 ;	square.c 242
                           1975 ;	genCmpEq
                           1976 ;	AOP_HL for _seldrum
                           1977 ; genCmpEq: left 1, right 1, result 0
   065C 21 0B 00           1978 	ld	hl,#_seldrum
   065F 7E                 1979 	ld	a,(hl)
   0660 B7                 1980 	or	a,a
   0661 C2 75 06           1981 	jp	nz,00102$
   0664 18 03              1982 	jr	00127$
   0666                    1983 00126$:
   0666 C3 75 06           1984 	jp	00102$
   0669                    1985 00127$:
                           1986 ;	square.c 244
                           1987 ;	genIpush
                           1988 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0669 21 A0 08           1989 	ld	hl,#__str_6
   066C E5                 1990 	push	hl
                           1991 ;	genCall
   066D CD 00 00           1992 	call	_printf
   0670 E8 02              1993 	lda	sp,2(sp)
                           1994 ;	genGoto
   0672 C3 7E 06           1995 	jp	00103$
                           1996 ;	genLabel
   0675                    1997 00102$:
                           1998 ;	square.c 248
                           1999 ;	genIpush
                           2000 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0675 21 A3 08           2001 	ld	hl,#__str_7
   0678 E5                 2002 	push	hl
                           2003 ;	genCall
   0679 CD 00 00           2004 	call	_printf
   067C E8 02              2005 	lda	sp,2(sp)
                           2006 ;	genLabel
   067E                    2007 00103$:
                           2008 ;	square.c 250
                           2009 ;	genCast
                           2010 ;	AOP_HL for _xA
   067E 21 16 00           2011 	ld	hl,#_xA
   0681 4E                 2012 	ld	c,(hl)
   0682 7E                 2013 	ld	a,(hl)
   0683 17                 2014 	rla	
   0684 9F                 2015 	sbc	a,a
   0685 47                 2016 	ld	b,a
                           2017 ;	genCast
                           2018 ;	AOP_HL for _offStepA
                           2019 ;	AOP_STK for _updateUI_sloc0_1_0
   0686 21 28 00           2020 	ld	hl,#_offStepA
   0689 7E                 2021 	ld	a,(hl)
   068A F8 04              2022 	lda	hl,4(sp)
   068C 77                 2023 	ld	(hl),a
   068D 21 28 00           2024 	ld	hl,#_offStepA
   0690 7E                 2025 	ld	a,(hl)
   0691 17                 2026 	rla	
   0692 9F                 2027 	sbc	a,a
   0693 F8 05              2028 	lda	hl,5(sp)
   0695 77                 2029 	ld	(hl),a
                           2030 ;	genCast
                           2031 ;	AOP_HL for _numberOfPulsesA
                           2032 ;	AOP_STK for _updateUI_sloc1_1_0
   0696 21 1F 00           2033 	ld	hl,#_numberOfPulsesA
   0699 7E                 2034 	ld	a,(hl)
   069A F8 02              2035 	lda	hl,2(sp)
   069C 77                 2036 	ld	(hl),a
   069D 21 1F 00           2037 	ld	hl,#_numberOfPulsesA
   06A0 7E                 2038 	ld	a,(hl)
   06A1 17                 2039 	rla	
   06A2 9F                 2040 	sbc	a,a
   06A3 F8 03              2041 	lda	hl,3(sp)
   06A5 77                 2042 	ld	(hl),a
                           2043 ;	genCast
                           2044 ;	AOP_HL for _totalStepsA
                           2045 ;	AOP_STK for _updateUI_sloc2_1_0
   06A6 21 20 00           2046 	ld	hl,#_totalStepsA
   06A9 7E                 2047 	ld	a,(hl)
   06AA F8 00              2048 	lda	hl,0(sp)
   06AC 77                 2049 	ld	(hl),a
   06AD 21 20 00           2050 	ld	hl,#_totalStepsA
   06B0 7E                 2051 	ld	a,(hl)
   06B1 17                 2052 	rla	
   06B2 9F                 2053 	sbc	a,a
   06B3 F8 01              2054 	lda	hl,1(sp)
   06B5 77                 2055 	ld	(hl),a
                           2056 ;	genIpush
                           2057 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06B6 C5                 2058 	push	bc
                           2059 ;	genIpush
                           2060 ;	AOP_STK for _updateUI_sloc0_1_0
   06B7 F8 06              2061 	lda	hl,6(sp)
   06B9 2A                 2062 	ld	a,(hl+)
   06BA 66                 2063 	ld	h,(hl)
   06BB 6F                 2064 	ld	l,a
   06BC E5                 2065 	push	hl
                           2066 ;	genIpush
                           2067 ;	AOP_STK for _updateUI_sloc1_1_0
   06BD F8 06              2068 	lda	hl,6(sp)
   06BF 2A                 2069 	ld	a,(hl+)
   06C0 66                 2070 	ld	h,(hl)
   06C1 6F                 2071 	ld	l,a
   06C2 E5                 2072 	push	hl
                           2073 ;	genIpush
                           2074 ;	AOP_STK for _updateUI_sloc2_1_0
   06C3 F8 06              2075 	lda	hl,6(sp)
   06C5 2A                 2076 	ld	a,(hl+)
   06C6 66                 2077 	ld	h,(hl)
   06C7 6F                 2078 	ld	l,a
   06C8 E5                 2079 	push	hl
                           2080 ;	genIpush
   06C9 21 A6 08           2081 	ld	hl,#__str_8
   06CC E5                 2082 	push	hl
                           2083 ;	genCall
   06CD CD 00 00           2084 	call	_printf
   06D0 E8 0A              2085 	lda	sp,10(sp)
                           2086 ;	square.c 251
                           2087 ;	genIpush
                           2088 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06D2 21 BA 08           2089 	ld	hl,#__str_9
   06D5 E5                 2090 	push	hl
                           2091 ;	genCall
   06D6 CD 00 00           2092 	call	_printf
   06D9 E8 02              2093 	lda	sp,2(sp)
                           2094 ;	square.c 252
                           2095 ;	genCmpEq
                           2096 ;	AOP_HL for _seldrum
                           2097 ; genCmpEq: left 1, right 1, result 0
   06DB 21 0B 00           2098 	ld	hl,#_seldrum
   06DE 7E                 2099 	ld	a,(hl)
   06DF FE 01              2100 	cp	a,#0x01
   06E1 C2 F5 06           2101 	jp	nz,00105$
   06E4 18 03              2102 	jr	00129$
   06E6                    2103 00128$:
   06E6 C3 F5 06           2104 	jp	00105$
   06E9                    2105 00129$:
                           2106 ;	square.c 254
                           2107 ;	genIpush
                           2108 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06E9 21 BC 08           2109 	ld	hl,#__str_10
   06EC E5                 2110 	push	hl
                           2111 ;	genCall
   06ED CD 00 00           2112 	call	_printf
   06F0 E8 02              2113 	lda	sp,2(sp)
                           2114 ;	genGoto
   06F2 C3 FE 06           2115 	jp	00106$
                           2116 ;	genLabel
   06F5                    2117 00105$:
                           2118 ;	square.c 258
                           2119 ;	genIpush
                           2120 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06F5 21 BF 08           2121 	ld	hl,#__str_11
   06F8 E5                 2122 	push	hl
                           2123 ;	genCall
   06F9 CD 00 00           2124 	call	_printf
   06FC E8 02              2125 	lda	sp,2(sp)
                           2126 ;	genLabel
   06FE                    2127 00106$:
                           2128 ;	square.c 260
                           2129 ;	genCast
                           2130 ;	AOP_HL for _xB
   06FE 21 17 00           2131 	ld	hl,#_xB
   0701 4E                 2132 	ld	c,(hl)
   0702 7E                 2133 	ld	a,(hl)
   0703 17                 2134 	rla	
   0704 9F                 2135 	sbc	a,a
   0705 47                 2136 	ld	b,a
                           2137 ;	genCast
                           2138 ;	AOP_HL for _offStepB
                           2139 ;	AOP_STK for _updateUI_sloc2_1_0
   0706 21 29 00           2140 	ld	hl,#_offStepB
   0709 7E                 2141 	ld	a,(hl)
   070A F8 00              2142 	lda	hl,0(sp)
   070C 77                 2143 	ld	(hl),a
   070D 21 29 00           2144 	ld	hl,#_offStepB
   0710 7E                 2145 	ld	a,(hl)
   0711 17                 2146 	rla	
   0712 9F                 2147 	sbc	a,a
   0713 F8 01              2148 	lda	hl,1(sp)
   0715 77                 2149 	ld	(hl),a
                           2150 ;	genCast
                           2151 ;	AOP_HL for _numberOfPulsesB
                           2152 ;	AOP_STK for _updateUI_sloc1_1_0
   0716 21 22 00           2153 	ld	hl,#_numberOfPulsesB
   0719 7E                 2154 	ld	a,(hl)
   071A F8 02              2155 	lda	hl,2(sp)
   071C 77                 2156 	ld	(hl),a
   071D 21 22 00           2157 	ld	hl,#_numberOfPulsesB
   0720 7E                 2158 	ld	a,(hl)
   0721 17                 2159 	rla	
   0722 9F                 2160 	sbc	a,a
   0723 F8 03              2161 	lda	hl,3(sp)
   0725 77                 2162 	ld	(hl),a
                           2163 ;	genCast
                           2164 ;	AOP_HL for _totalStepsB
                           2165 ;	AOP_STK for _updateUI_sloc0_1_0
   0726 21 23 00           2166 	ld	hl,#_totalStepsB
   0729 7E                 2167 	ld	a,(hl)
   072A F8 04              2168 	lda	hl,4(sp)
   072C 77                 2169 	ld	(hl),a
   072D 21 23 00           2170 	ld	hl,#_totalStepsB
   0730 7E                 2171 	ld	a,(hl)
   0731 17                 2172 	rla	
   0732 9F                 2173 	sbc	a,a
   0733 F8 05              2174 	lda	hl,5(sp)
   0735 77                 2175 	ld	(hl),a
                           2176 ;	genIpush
                           2177 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0736 C5                 2178 	push	bc
                           2179 ;	genIpush
                           2180 ;	AOP_STK for _updateUI_sloc2_1_0
   0737 F8 02              2181 	lda	hl,2(sp)
   0739 2A                 2182 	ld	a,(hl+)
   073A 66                 2183 	ld	h,(hl)
   073B 6F                 2184 	ld	l,a
   073C E5                 2185 	push	hl
                           2186 ;	genIpush
                           2187 ;	AOP_STK for _updateUI_sloc1_1_0
   073D F8 06              2188 	lda	hl,6(sp)
   073F 2A                 2189 	ld	a,(hl+)
   0740 66                 2190 	ld	h,(hl)
   0741 6F                 2191 	ld	l,a
   0742 E5                 2192 	push	hl
                           2193 ;	genIpush
                           2194 ;	AOP_STK for _updateUI_sloc0_1_0
   0743 F8 0A              2195 	lda	hl,10(sp)
   0745 2A                 2196 	ld	a,(hl+)
   0746 66                 2197 	ld	h,(hl)
   0747 6F                 2198 	ld	l,a
   0748 E5                 2199 	push	hl
                           2200 ;	genIpush
   0749 21 C2 08           2201 	ld	hl,#__str_12
   074C E5                 2202 	push	hl
                           2203 ;	genCall
   074D CD 00 00           2204 	call	_printf
   0750 E8 0A              2205 	lda	sp,10(sp)
                           2206 ;	square.c 261
                           2207 ;	genIpush
                           2208 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0752 21 D6 08           2209 	ld	hl,#__str_13
   0755 E5                 2210 	push	hl
                           2211 ;	genCall
   0756 CD 00 00           2212 	call	_printf
   0759 E8 02              2213 	lda	sp,2(sp)
                           2214 ;	square.c 262
                           2215 ;	genCmpEq
                           2216 ;	AOP_HL for _seldrum
                           2217 ; genCmpEq: left 1, right 1, result 0
   075B 21 0B 00           2218 	ld	hl,#_seldrum
   075E 7E                 2219 	ld	a,(hl)
   075F FE 02              2220 	cp	a,#0x02
   0761 C2 75 07           2221 	jp	nz,00108$
   0764 18 03              2222 	jr	00131$
   0766                    2223 00130$:
   0766 C3 75 07           2224 	jp	00108$
   0769                    2225 00131$:
                           2226 ;	square.c 264
                           2227 ;	genIpush
                           2228 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0769 21 D8 08           2229 	ld	hl,#__str_14
   076C E5                 2230 	push	hl
                           2231 ;	genCall
   076D CD 00 00           2232 	call	_printf
   0770 E8 02              2233 	lda	sp,2(sp)
                           2234 ;	genGoto
   0772 C3 7E 07           2235 	jp	00109$
                           2236 ;	genLabel
   0775                    2237 00108$:
                           2238 ;	square.c 268
                           2239 ;	genIpush
                           2240 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0775 21 DB 08           2241 	ld	hl,#__str_15
   0778 E5                 2242 	push	hl
                           2243 ;	genCall
   0779 CD 00 00           2244 	call	_printf
   077C E8 02              2245 	lda	sp,2(sp)
                           2246 ;	genLabel
   077E                    2247 00109$:
                           2248 ;	square.c 270
                           2249 ;	genCast
                           2250 ;	AOP_HL for _xC
   077E 21 18 00           2251 	ld	hl,#_xC
   0781 4E                 2252 	ld	c,(hl)
   0782 7E                 2253 	ld	a,(hl)
   0783 17                 2254 	rla	
   0784 9F                 2255 	sbc	a,a
   0785 47                 2256 	ld	b,a
                           2257 ;	genCast
                           2258 ;	AOP_HL for _offStepC
                           2259 ;	AOP_STK for _updateUI_sloc2_1_0
   0786 21 2A 00           2260 	ld	hl,#_offStepC
   0789 7E                 2261 	ld	a,(hl)
   078A F8 00              2262 	lda	hl,0(sp)
   078C 77                 2263 	ld	(hl),a
   078D 21 2A 00           2264 	ld	hl,#_offStepC
   0790 7E                 2265 	ld	a,(hl)
   0791 17                 2266 	rla	
   0792 9F                 2267 	sbc	a,a
   0793 F8 01              2268 	lda	hl,1(sp)
   0795 77                 2269 	ld	(hl),a
                           2270 ;	genCast
                           2271 ;	AOP_HL for _numberOfPulsesC
                           2272 ;	AOP_STK for _updateUI_sloc1_1_0
   0796 21 25 00           2273 	ld	hl,#_numberOfPulsesC
   0799 7E                 2274 	ld	a,(hl)
   079A F8 02              2275 	lda	hl,2(sp)
   079C 77                 2276 	ld	(hl),a
   079D 21 25 00           2277 	ld	hl,#_numberOfPulsesC
   07A0 7E                 2278 	ld	a,(hl)
   07A1 17                 2279 	rla	
   07A2 9F                 2280 	sbc	a,a
   07A3 F8 03              2281 	lda	hl,3(sp)
   07A5 77                 2282 	ld	(hl),a
                           2283 ;	genCast
                           2284 ;	AOP_HL for _totalStepsC
                           2285 ;	AOP_STK for _updateUI_sloc0_1_0
   07A6 21 26 00           2286 	ld	hl,#_totalStepsC
   07A9 7E                 2287 	ld	a,(hl)
   07AA F8 04              2288 	lda	hl,4(sp)
   07AC 77                 2289 	ld	(hl),a
   07AD 21 26 00           2290 	ld	hl,#_totalStepsC
   07B0 7E                 2291 	ld	a,(hl)
   07B1 17                 2292 	rla	
   07B2 9F                 2293 	sbc	a,a
   07B3 F8 05              2294 	lda	hl,5(sp)
   07B5 77                 2295 	ld	(hl),a
                           2296 ;	genIpush
                           2297 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07B6 C5                 2298 	push	bc
                           2299 ;	genIpush
                           2300 ;	AOP_STK for _updateUI_sloc2_1_0
   07B7 F8 02              2301 	lda	hl,2(sp)
   07B9 2A                 2302 	ld	a,(hl+)
   07BA 66                 2303 	ld	h,(hl)
   07BB 6F                 2304 	ld	l,a
   07BC E5                 2305 	push	hl
                           2306 ;	genIpush
                           2307 ;	AOP_STK for _updateUI_sloc1_1_0
   07BD F8 06              2308 	lda	hl,6(sp)
   07BF 2A                 2309 	ld	a,(hl+)
   07C0 66                 2310 	ld	h,(hl)
   07C1 6F                 2311 	ld	l,a
   07C2 E5                 2312 	push	hl
                           2313 ;	genIpush
                           2314 ;	AOP_STK for _updateUI_sloc0_1_0
   07C3 F8 0A              2315 	lda	hl,10(sp)
   07C5 2A                 2316 	ld	a,(hl+)
   07C6 66                 2317 	ld	h,(hl)
   07C7 6F                 2318 	ld	l,a
   07C8 E5                 2319 	push	hl
                           2320 ;	genIpush
   07C9 21 DE 08           2321 	ld	hl,#__str_16
   07CC E5                 2322 	push	hl
                           2323 ;	genCall
   07CD CD 00 00           2324 	call	_printf
   07D0 E8 0A              2325 	lda	sp,10(sp)
                           2326 ;	square.c 271
                           2327 ;	genIpush
                           2328 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07D2 21 F2 08           2329 	ld	hl,#__str_17
   07D5 E5                 2330 	push	hl
                           2331 ;	genCall
   07D6 CD 00 00           2332 	call	_printf
   07D9 E8 02              2333 	lda	sp,2(sp)
                           2334 ;	square.c 272
                           2335 ;	genCmpEq
                           2336 ;	AOP_HL for _modus
                           2337 ; genCmpEq: left 1, right 1, result 1
   07DB 21 07 00           2338 	ld	hl,#_modus
   07DE 7E                 2339 	ld	a,(hl)
   07DF FE 01              2340 	cp	a,#0x01
   07E1 C2 E8 07           2341 	jp	nz,00132$
   07E4 3E 01              2342 	ld	a,#0x01
   07E6 18 01              2343 	jr	00133$
   07E8                    2344 00132$:
   07E8 AF                 2345 	xor	a,a
   07E9                    2346 00133$:
   07E9 4F                 2347 	ld	c,a
                           2348 ;	genIfx
   07EA AF                 2349 	xor	a,a
   07EB B1                 2350 	or	a,c
   07EC C2 13 08           2351 	jp	nz,00111$
                           2352 ;	square.c 274
                           2353 ;	genCast
                           2354 ;	AOP_HL for _tempo
                           2355 ;	AOP_STK for _updateUI_sloc2_1_0
   07EF 21 02 00           2356 	ld	hl,#_tempo
   07F2 7E                 2357 	ld	a,(hl)
   07F3 F8 00              2358 	lda	hl,0(sp)
   07F5 77                 2359 	ld	(hl),a
   07F6 21 02 00           2360 	ld	hl,#_tempo
   07F9 7E                 2361 	ld	a,(hl)
   07FA 17                 2362 	rla	
   07FB 9F                 2363 	sbc	a,a
   07FC F8 01              2364 	lda	hl,1(sp)
   07FE 77                 2365 	ld	(hl),a
                           2366 ;	genIpush
                           2367 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   07FF C5                 2368 	push	bc
                           2369 ;	AOP_STK for _updateUI_sloc2_1_0
   0800 2B                 2370 	dec	hl
   0801 2A                 2371 	ld	a,(hl+)
   0802 66                 2372 	ld	h,(hl)
   0803 6F                 2373 	ld	l,a
   0804 E5                 2374 	push	hl
                           2375 ;	genIpush
   0805 21 F4 08           2376 	ld	hl,#__str_18
   0808 E5                 2377 	push	hl
                           2378 ;	genCall
   0809 CD 00 00           2379 	call	_printf
   080C E8 04              2380 	lda	sp,4(sp)
   080E E1                 2381 	pop	hl
   080F 4D                 2382 	ld	c,l
                           2383 ;	genGoto
   0810 C3 1F 08           2384 	jp	00112$
                           2385 ;	genLabel
   0813                    2386 00111$:
                           2387 ;	square.c 278
                           2388 ;	genIpush
                           2389 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0813 C5                 2390 	push	bc
   0814 21 FE 08           2391 	ld	hl,#__str_19
   0817 E5                 2392 	push	hl
                           2393 ;	genCall
   0818 CD 00 00           2394 	call	_printf
   081B E8 02              2395 	lda	sp,2(sp)
   081D E1                 2396 	pop	hl
   081E 4D                 2397 	ld	c,l
                           2398 ;	genLabel
   081F                    2399 00112$:
                           2400 ;	square.c 280
                           2401 ;	genCmpEq
                           2402 ;	AOP_HL for _syncToDrum
                           2403 ; genCmpEq: left 1, right 1, result 0
   081F 21 1D 00           2404 	ld	hl,#_syncToDrum
   0822 7E                 2405 	ld	a,(hl)
   0823 FE 01              2406 	cp	a,#0x01
   0825 C2 39 08           2407 	jp	nz,00114$
   0828 18 03              2408 	jr	00135$
   082A                    2409 00134$:
   082A C3 39 08           2410 	jp	00114$
   082D                    2411 00135$:
                           2412 ;	square.c 282
                           2413 ;	genIpush
                           2414 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   082D C5                 2415 	push	bc
   082E 21 07 09           2416 	ld	hl,#__str_20
   0831 E5                 2417 	push	hl
                           2418 ;	genCall
   0832 CD 00 00           2419 	call	_printf
   0835 E8 02              2420 	lda	sp,2(sp)
   0837 E1                 2421 	pop	hl
   0838 4D                 2422 	ld	c,l
                           2423 ;	genLabel
   0839                    2424 00114$:
                           2425 ;	square.c 284
                           2426 ;	genIpush
                           2427 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0839 C5                 2428 	push	bc
   083A 21 0C 09           2429 	ld	hl,#__str_21
   083D E5                 2430 	push	hl
                           2431 ;	genCall
   083E CD 00 00           2432 	call	_printf
   0841 E8 02              2433 	lda	sp,2(sp)
   0843 E1                 2434 	pop	hl
   0844 4D                 2435 	ld	c,l
                           2436 ;	square.c 285
                           2437 ;	genIfx
   0845 AF                 2438 	xor	a,a
   0846 B1                 2439 	or	a,c
   0847 CA 56 08           2440 	jp	z,00116$
                           2441 ;	square.c 287
                           2442 ;	genIpush
                           2443 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   084A 21 0E 09           2444 	ld	hl,#__str_22
   084D E5                 2445 	push	hl
                           2446 ;	genCall
   084E CD 00 00           2447 	call	_printf
   0851 E8 02              2448 	lda	sp,2(sp)
                           2449 ;	genGoto
   0853 C3 5F 08           2450 	jp	00117$
                           2451 ;	genLabel
   0856                    2452 00116$:
                           2453 ;	square.c 291
                           2454 ;	genIpush
                           2455 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0856 21 1A 09           2456 	ld	hl,#__str_23
   0859 E5                 2457 	push	hl
                           2458 ;	genCall
   085A CD 00 00           2459 	call	_printf
   085D E8 02              2460 	lda	sp,2(sp)
                           2461 ;	genLabel
   085F                    2462 00117$:
                           2463 ;	square.c 293
                           2464 ;	genIpush
                           2465 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   085F 21 28 09           2466 	ld	hl,#__str_24
   0862 E5                 2467 	push	hl
                           2468 ;	genCall
   0863 CD 00 00           2469 	call	_printf
   0866 E8 02              2470 	lda	sp,2(sp)
                           2471 ;	square.c 294
                           2472 ;	genAssign
   0868 01 40 FF           2473 	ld	bc,#0xFF40
                           2474 ;	genAssign
                           2475 ;	AOP_STK for _updateUI_sloc2_1_0
   086B F8 00              2476 	lda	hl,0(sp)
   086D 36 40              2477 	ld	(hl),#0x40
   086F 23                 2478 	inc	hl
   0870 36 FF              2479 	ld	(hl),#0xFF
                           2480 ;	genPointerGet
                           2481 ;	AOP_STK for _updateUI_sloc2_1_0
                           2482 ;	AOP_STK for _updateUI_sloc1_1_0
   0872 2B                 2483 	dec	hl
   0873 5E                 2484 	ld	e,(hl)
   0874 23                 2485 	inc	hl
   0875 56                 2486 	ld	d,(hl)
   0876 1A                 2487 	ld	a,(de)
   0877 23                 2488 	inc	hl
                           2489 ;	genOr
                           2490 ;	AOP_STK for _updateUI_sloc1_1_0
   0878 77                 2491 	ld      (hl),a
                           2492 ; Removed redundent load
   0879 F6 01              2493 	or	a,#0x01
                           2494 ;	genAssign (pointer)
   087B 02                 2495 	ld	(bc),a
                           2496 ;	genLabel
   087C                    2497 00118$:
                           2498 ;	genEndFunction
   087C E8 06              2499 	lda	sp,6(sp)
   087E C9                 2500 	ret
   087F                    2501 ___updateUI_end:
   087F                    2502 __str_3:
   087F 00                 2503 	.db 0x00
   0880                    2504 __str_4:
   0880 0A                 2505 	.db 0x0A
   0881 00                 2506 	.db 0x00
   0882                    2507 __str_5:
   0882 53 51 55 41 52 45  2508 	.ascii "SQUARE GB "
        20 47 42 20
   088C 0A                 2509 	.db 0x0A
   088D 20                 2510 	.ascii " "
   088E 0A                 2511 	.db 0x0A
   088F 20                 2512 	.ascii " "
   0890 0A                 2513 	.db 0x0A
   0891 20                 2514 	.ascii " "
   0892 0A                 2515 	.db 0x0A
   0893 20                 2516 	.ascii " "
   0894 0A                 2517 	.db 0x0A
   0895 20                 2518 	.ascii " "
   0896 0A                 2519 	.db 0x0A
   0897 20                 2520 	.ascii " "
   0898 0A                 2521 	.db 0x0A
   0899 20                 2522 	.ascii " "
   089A 0A                 2523 	.db 0x0A
   089B 20                 2524 	.ascii " "
   089C 0A                 2525 	.db 0x0A
   089D 20                 2526 	.ascii " "
   089E 0A                 2527 	.db 0x0A
   089F 00                 2528 	.db 0x00
   08A0                    2529 __str_6:
   08A0 2A 20              2530 	.ascii "* "
   08A2 00                 2531 	.db 0x00
   08A3                    2532 __str_7:
   08A3 41 20              2533 	.ascii "A "
   08A5 00                 2534 	.db 0x00
   08A6                    2535 __str_8:
   08A6 53 3A 25 64 20 50  2536 	.ascii "S:%d P:%d O:%d R:%d"
        3A 25 64 20 4F 3A
        25 64 20 52 3A 25
        64
   08B9 00                 2537 	.db 0x00
   08BA                    2538 __str_9:
   08BA 0A                 2539 	.db 0x0A
   08BB 00                 2540 	.db 0x00
   08BC                    2541 __str_10:
   08BC 2A 20              2542 	.ascii "* "
   08BE 00                 2543 	.db 0x00
   08BF                    2544 __str_11:
   08BF 42 20              2545 	.ascii "B "
   08C1 00                 2546 	.db 0x00
   08C2                    2547 __str_12:
   08C2 53 3A 25 64 20 50  2548 	.ascii "S:%d P:%d O:%d R:%d"
        3A 25 64 20 4F 3A
        25 64 20 52 3A 25
        64
   08D5 00                 2549 	.db 0x00
   08D6                    2550 __str_13:
   08D6 0A                 2551 	.db 0x0A
   08D7 00                 2552 	.db 0x00
   08D8                    2553 __str_14:
   08D8 2A 20              2554 	.ascii "* "
   08DA 00                 2555 	.db 0x00
   08DB                    2556 __str_15:
   08DB 43 20              2557 	.ascii "C "
   08DD 00                 2558 	.db 0x00
   08DE                    2559 __str_16:
   08DE 53 3A 25 64 20 50  2560 	.ascii "S:%d P:%d O:%d R:%d"
        3A 25 64 20 4F 3A
        25 64 20 52 3A 25
        64
   08F1 00                 2561 	.db 0x00
   08F2                    2562 __str_17:
   08F2 0A                 2563 	.db 0x0A
   08F3 00                 2564 	.db 0x00
   08F4                    2565 __str_18:
   08F4 54 65 6D 70 6F 3A  2566 	.ascii "Tempo: %d"
        20 25 64
   08FD 00                 2567 	.db 0x00
   08FE                    2568 __str_19:
   08FE 54 65 6D 70 6F 3A  2569 	.ascii "Tempo: P"
        20 50
   0906 00                 2570 	.db 0x00
   0907                    2571 __str_20:
   0907 20 53 59 4E        2572 	.ascii " SYN"
   090B 00                 2573 	.db 0x00
   090C                    2574 __str_21:
   090C 0A                 2575 	.db 0x0A
   090D 00                 2576 	.db 0x00
   090E                    2577 __str_22:
   090E 4D 6F 64 75 73 3A  2578 	.ascii "Modus: Sync"
        20 53 79 6E 63
   0919 00                 2579 	.db 0x00
   091A                    2580 __str_23:
   091A 4D 6F 64 75 73 3A  2581 	.ascii "Modus: Master"
        20 4D 61 73 74 65
        72
   0927 00                 2582 	.db 0x00
   0928                    2583 __str_24:
   0928 0A                 2584 	.db 0x0A
   0929 00                 2585 	.db 0x00
                           2586 ;	square.c 298
                           2587 ;	genLabel
                           2588 ;	genFunction
                           2589 ;	---------------------------------
                           2590 ; Function setupDrum
                           2591 ; ---------------------------------
   092A                    2592 ___setupDrum_start:
   092A                    2593 _setupDrum:
                           2594 	
                           2595 ;	square.c 300
                           2596 ;	genCmpEq
                           2597 ;	AOP_HL for _seldrum
                           2598 ; genCmpEq: left 1, right 1, result 0
   092A 21 0B 00           2599 	ld	hl,#_seldrum
   092D 7E                 2600 	ld	a,(hl)
   092E B7                 2601 	or	a,a
   092F CA 47 09           2602 	jp	z,00101$
   0932                    2603 00111$:
                           2604 ;	genCmpEq
                           2605 ;	AOP_HL for _seldrum
                           2606 ; genCmpEq: left 1, right 1, result 0
   0932 21 0B 00           2607 	ld	hl,#_seldrum
   0935 7E                 2608 	ld	a,(hl)
   0936 FE 01              2609 	cp	a,#0x01
   0938 CA 4D 09           2610 	jp	z,00102$
   093B                    2611 00112$:
                           2612 ;	genCmpEq
                           2613 ;	AOP_HL for _seldrum
                           2614 ; genCmpEq: left 1, right 1, result 0
   093B 21 0B 00           2615 	ld	hl,#_seldrum
   093E 7E                 2616 	ld	a,(hl)
   093F FE 02              2617 	cp	a,#0x02
   0941 CA 53 09           2618 	jp	z,00103$
   0944                    2619 00113$:
                           2620 ;	genGoto
   0944 C3 59 09           2621 	jp	00104$
                           2622 ;	square.c 303
                           2623 ;	genLabel
   0947                    2624 00101$:
                           2625 ;	genCall
                           2626 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0947 CD CF 00           2627 	call	_fillDrumA
                           2628 ;	square.c 304
                           2629 ;	genGoto
   094A C3 62 09           2630 	jp	00105$
                           2631 ;	square.c 306
                           2632 ;	genLabel
   094D                    2633 00102$:
                           2634 ;	genCall
                           2635 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   094D CD 9F 02           2636 	call	_fillDrumB
                           2637 ;	square.c 307
                           2638 ;	genGoto
   0950 C3 62 09           2639 	jp	00105$
                           2640 ;	square.c 309
                           2641 ;	genLabel
   0953                    2642 00103$:
                           2643 ;	genCall
                           2644 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0953 CD 6F 04           2645 	call	_fillDrumC
                           2646 ;	square.c 310
                           2647 ;	genGoto
   0956 C3 62 09           2648 	jp	00105$
                           2649 ;	square.c 312
                           2650 ;	genLabel
   0959                    2651 00104$:
                           2652 ;	genCall
                           2653 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0959 CD CF 00           2654 	call	_fillDrumA
                           2655 ;	square.c 313
                           2656 ;	genCall
                           2657 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   095C CD 9F 02           2658 	call	_fillDrumB
                           2659 ;	square.c 314
                           2660 ;	genCall
                           2661 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   095F CD 6F 04           2662 	call	_fillDrumC
                           2663 ;	square.c 315
                           2664 ;	genLabel
   0962                    2665 00105$:
                           2666 ;	square.c 316
                           2667 ;	genCall
                           2668 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0962 CD 3F 06           2669 	call	_updateUI
                           2670 ;	genLabel
   0965                    2671 00106$:
                           2672 ;	genEndFunction
                           2673 	
   0965 C9                 2674 	ret
   0966                    2675 ___setupDrum_end:
                           2676 ;	square.c 321
                           2677 ;	genLabel
                           2678 ;	genFunction
                           2679 ;	---------------------------------
                           2680 ; Function increaseOffStep
                           2681 ; ---------------------------------
   0966                    2682 ___increaseOffStep_start:
   0966                    2683 _increaseOffStep:
   0966 E8 FE              2684 	lda	sp,-2(sp)
                           2685 ;	square.c 323
                           2686 ;	genAssign
   0968 0E 00              2687 	ld	c,#0x00
                           2688 ;	square.c 324
                           2689 ;	genAssign
                           2690 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   096A F8 01              2691 	lda	hl,1(sp)
   096C 36 01              2692 	ld	(hl),#0x01
                           2693 ;	square.c 325
                           2694 ;	genCmpEq
                           2695 ;	AOP_HL for _seldrum
                           2696 ; genCmpEq: left 1, right 1, result 1
   096E 21 0B 00           2697 	ld	hl,#_seldrum
   0971 7E                 2698 	ld	a,(hl)
   0972 B7                 2699 	or	a,a
   0973 C2 7A 09           2700 	jp	nz,00120$
   0976 3E 01              2701 	ld	a,#0x01
   0978 18 01              2702 	jr	00121$
   097A                    2703 00120$:
   097A AF                 2704 	xor	a,a
   097B                    2705 00121$:
   097B 47                 2706 	ld	b,a
                           2707 ;	genIfx
   097C AF                 2708 	xor	a,a
   097D B0                 2709 	or	a,b
   097E C2 96 09           2710 	jp	nz,00101$
                           2711 ;	genCmpEq
                           2712 ;	AOP_HL for _seldrum
                           2713 ; genCmpEq: left 1, right 1, result 0
   0981 21 0B 00           2714 	ld	hl,#_seldrum
   0984 7E                 2715 	ld	a,(hl)
   0985 FE 01              2716 	cp	a,#0x01
   0987 CA A4 09           2717 	jp	z,00102$
   098A                    2718 00122$:
                           2719 ;	genCmpEq
                           2720 ;	AOP_HL for _seldrum
                           2721 ; genCmpEq: left 1, right 1, result 0
   098A 21 0B 00           2722 	ld	hl,#_seldrum
   098D 7E                 2723 	ld	a,(hl)
   098E FE 02              2724 	cp	a,#0x02
   0990 CA B2 09           2725 	jp	z,00103$
   0993                    2726 00123$:
                           2727 ;	genGoto
   0993 C3 BD 09           2728 	jp	00104$
                           2729 ;	square.c 328
                           2730 ;	genLabel
   0996                    2731 00101$:
                           2732 ;	genAssign
                           2733 ;	AOP_HL for _offStepA
   0996 21 28 00           2734 	ld	hl,#_offStepA
   0999 4E                 2735 	ld	c,(hl)
                           2736 ;	square.c 329
                           2737 ;	genAssign
                           2738 ;	AOP_HL for _totalStepsA
                           2739 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   099A 21 20 00           2740 	ld	hl,#_totalStepsA
   099D 7E                 2741 	ld	a,(hl)
   099E F8 01              2742 	lda	hl,1(sp)
   09A0 77                 2743 	ld	(hl),a
                           2744 ;	square.c 330
                           2745 ;	genGoto
   09A1 C3 BD 09           2746 	jp	00104$
                           2747 ;	square.c 332
                           2748 ;	genLabel
   09A4                    2749 00102$:
                           2750 ;	genAssign
                           2751 ;	AOP_HL for _offStepB
   09A4 21 29 00           2752 	ld	hl,#_offStepB
   09A7 4E                 2753 	ld	c,(hl)
                           2754 ;	square.c 333
                           2755 ;	genAssign
                           2756 ;	AOP_HL for _totalStepsB
                           2757 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   09A8 21 23 00           2758 	ld	hl,#_totalStepsB
   09AB 7E                 2759 	ld	a,(hl)
   09AC F8 01              2760 	lda	hl,1(sp)
   09AE 77                 2761 	ld	(hl),a
                           2762 ;	square.c 334
                           2763 ;	genGoto
   09AF C3 BD 09           2764 	jp	00104$
                           2765 ;	square.c 336
                           2766 ;	genLabel
   09B2                    2767 00103$:
                           2768 ;	genAssign
                           2769 ;	AOP_HL for _offStepC
   09B2 21 2A 00           2770 	ld	hl,#_offStepC
   09B5 4E                 2771 	ld	c,(hl)
                           2772 ;	square.c 337
                           2773 ;	genAssign
                           2774 ;	AOP_HL for _totalStepsC
                           2775 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   09B6 21 26 00           2776 	ld	hl,#_totalStepsC
   09B9 7E                 2777 	ld	a,(hl)
   09BA F8 01              2778 	lda	hl,1(sp)
   09BC 77                 2779 	ld	(hl),a
                           2780 ;	square.c 339
                           2781 ;	genLabel
   09BD                    2782 00104$:
                           2783 ;	square.c 340
                           2784 ;	genPlus
                           2785 ;	genPlusIncr
                           2786 ; Removed redundent load
   09BD 0C                 2787 	inc	c
                           2788 ;	square.c 341
                           2789 ;	genMinus
                           2790 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
                           2791 ;	AOP_STK for _increaseOffStep_sloc0_1_0
   09BE F8 01              2792 	lda	hl,1(sp)
   09C0 7E                 2793 	ld	a,(hl)
   09C1 C6 FF              2794 	add	a,#0xFF
   09C3 2B                 2795 	dec	hl
                           2796 ;	genCmpGt
                           2797 ;	AOP_STK for _increaseOffStep_sloc0_1_0
   09C4 77                 2798 	ld      (hl),a
                           2799 ; Removed redundent load
   09C5 91                 2800 	sub	a,c
   09C6 D2 CB 09           2801 	jp	nc,00106$
                           2802 ;	square.c 343
                           2803 ;	genAssign
   09C9 0E 00              2804 	ld	c,#0x00
                           2805 ;	genLabel
   09CB                    2806 00106$:
                           2807 ;	square.c 345
                           2808 ;	genIfx
   09CB AF                 2809 	xor	a,a
   09CC B0                 2810 	or	a,b
   09CD C2 E5 09           2811 	jp	nz,00107$
                           2812 ;	genCmpEq
                           2813 ;	AOP_HL for _seldrum
                           2814 ; genCmpEq: left 1, right 1, result 0
   09D0 21 0B 00           2815 	ld	hl,#_seldrum
   09D3 7E                 2816 	ld	a,(hl)
   09D4 FE 01              2817 	cp	a,#0x01
   09D6 CA EC 09           2818 	jp	z,00108$
   09D9                    2819 00124$:
                           2820 ;	genCmpEq
                           2821 ;	AOP_HL for _seldrum
                           2822 ; genCmpEq: left 1, right 1, result 0
   09D9 21 0B 00           2823 	ld	hl,#_seldrum
   09DC 7E                 2824 	ld	a,(hl)
   09DD FE 02              2825 	cp	a,#0x02
   09DF CA F3 09           2826 	jp	z,00109$
   09E2                    2827 00125$:
                           2828 ;	genGoto
   09E2 C3 F7 09           2829 	jp	00110$
                           2830 ;	square.c 348
                           2831 ;	genLabel
   09E5                    2832 00107$:
                           2833 ;	genAssign
                           2834 ;	AOP_HL for _offStepA
   09E5 21 28 00           2835 	ld	hl,#_offStepA
   09E8 71                 2836 	ld	(hl),c
                           2837 ;	square.c 349
                           2838 ;	genGoto
   09E9 C3 F7 09           2839 	jp	00110$
                           2840 ;	square.c 351
                           2841 ;	genLabel
   09EC                    2842 00108$:
                           2843 ;	genAssign
                           2844 ;	AOP_HL for _offStepB
   09EC 21 29 00           2845 	ld	hl,#_offStepB
   09EF 71                 2846 	ld	(hl),c
                           2847 ;	square.c 352
                           2848 ;	genGoto
   09F0 C3 F7 09           2849 	jp	00110$
                           2850 ;	square.c 354
                           2851 ;	genLabel
   09F3                    2852 00109$:
                           2853 ;	genAssign
                           2854 ;	AOP_HL for _offStepC
   09F3 21 2A 00           2855 	ld	hl,#_offStepC
   09F6 71                 2856 	ld	(hl),c
                           2857 ;	square.c 356
                           2858 ;	genLabel
   09F7                    2859 00110$:
                           2860 ;	square.c 357
                           2861 ;	genCall
                           2862 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   09F7 CD 2A 09           2863 	call	_setupDrum
                           2864 ;	genLabel
   09FA                    2865 00111$:
                           2866 ;	genEndFunction
   09FA E8 02              2867 	lda	sp,2(sp)
   09FC C9                 2868 	ret
   09FD                    2869 ___increaseOffStep_end:
                           2870 ;	square.c 360
                           2871 ;	genLabel
                           2872 ;	genFunction
                           2873 ;	---------------------------------
                           2874 ; Function decreaseOffStep
                           2875 ; ---------------------------------
   09FD                    2876 ___decreaseOffStep_start:
   09FD                    2877 _decreaseOffStep:
                           2878 	
                           2879 ;	square.c 362
                           2880 ;	genAssign
   09FD 0E 00              2881 	ld	c,#0x00
                           2882 ;	square.c 364
                           2883 ;	genCmpEq
                           2884 ;	AOP_HL for _seldrum
                           2885 ; genCmpEq: left 1, right 1, result 1
   09FF 21 0B 00           2886 	ld	hl,#_seldrum
   0A02 7E                 2887 	ld	a,(hl)
   0A03 B7                 2888 	or	a,a
   0A04 C2 0B 0A           2889 	jp	nz,00120$
   0A07 3E 01              2890 	ld	a,#0x01
   0A09 18 01              2891 	jr	00121$
   0A0B                    2892 00120$:
   0A0B AF                 2893 	xor	a,a
   0A0C                    2894 00121$:
   0A0C 47                 2895 	ld	b,a
                           2896 ;	genIfx
   0A0D AF                 2897 	xor	a,a
   0A0E B0                 2898 	or	a,b
   0A0F C2 27 0A           2899 	jp	nz,00101$
                           2900 ;	genCmpEq
                           2901 ;	AOP_HL for _seldrum
                           2902 ; genCmpEq: left 1, right 1, result 0
   0A12 21 0B 00           2903 	ld	hl,#_seldrum
   0A15 7E                 2904 	ld	a,(hl)
   0A16 FE 01              2905 	cp	a,#0x01
   0A18 CA 2E 0A           2906 	jp	z,00102$
   0A1B                    2907 00122$:
                           2908 ;	genCmpEq
                           2909 ;	AOP_HL for _seldrum
                           2910 ; genCmpEq: left 1, right 1, result 0
   0A1B 21 0B 00           2911 	ld	hl,#_seldrum
   0A1E 7E                 2912 	ld	a,(hl)
   0A1F FE 02              2913 	cp	a,#0x02
   0A21 CA 35 0A           2914 	jp	z,00103$
   0A24                    2915 00123$:
                           2916 ;	genGoto
   0A24 C3 39 0A           2917 	jp	00104$
                           2918 ;	square.c 367
                           2919 ;	genLabel
   0A27                    2920 00101$:
                           2921 ;	genAssign
                           2922 ;	AOP_HL for _offStepA
   0A27 21 28 00           2923 	ld	hl,#_offStepA
   0A2A 4E                 2924 	ld	c,(hl)
                           2925 ;	square.c 369
                           2926 ;	genGoto
   0A2B C3 39 0A           2927 	jp	00104$
                           2928 ;	square.c 371
                           2929 ;	genLabel
   0A2E                    2930 00102$:
                           2931 ;	genAssign
                           2932 ;	AOP_HL for _offStepB
   0A2E 21 29 00           2933 	ld	hl,#_offStepB
   0A31 4E                 2934 	ld	c,(hl)
                           2935 ;	square.c 373
                           2936 ;	genGoto
   0A32 C3 39 0A           2937 	jp	00104$
                           2938 ;	square.c 375
                           2939 ;	genLabel
   0A35                    2940 00103$:
                           2941 ;	genAssign
                           2942 ;	AOP_HL for _offStepC
   0A35 21 2A 00           2943 	ld	hl,#_offStepC
   0A38 4E                 2944 	ld	c,(hl)
                           2945 ;	square.c 378
                           2946 ;	genLabel
   0A39                    2947 00104$:
                           2948 ;	square.c 380
                           2949 ;	genCmpEq
                           2950 ; genCmpEq: left 1, right 1, result 0
   0A39 79                 2951 	ld	a,c
   0A3A B7                 2952 	or	a,a
   0A3B CA 3F 0A           2953 	jp	z,00106$
   0A3E                    2954 00124$:
                           2955 ;	square.c 382
                           2956 ;	genMinus
   0A3E 0D                 2957 	dec	c
                           2958 ;	genLabel
   0A3F                    2959 00106$:
                           2960 ;	square.c 384
                           2961 ;	genIfx
   0A3F AF                 2962 	xor	a,a
   0A40 B0                 2963 	or	a,b
   0A41 C2 59 0A           2964 	jp	nz,00107$
                           2965 ;	genCmpEq
                           2966 ;	AOP_HL for _seldrum
                           2967 ; genCmpEq: left 1, right 1, result 0
   0A44 21 0B 00           2968 	ld	hl,#_seldrum
   0A47 7E                 2969 	ld	a,(hl)
   0A48 FE 01              2970 	cp	a,#0x01
   0A4A CA 60 0A           2971 	jp	z,00108$
   0A4D                    2972 00125$:
                           2973 ;	genCmpEq
                           2974 ;	AOP_HL for _seldrum
                           2975 ; genCmpEq: left 1, right 1, result 0
   0A4D 21 0B 00           2976 	ld	hl,#_seldrum
   0A50 7E                 2977 	ld	a,(hl)
   0A51 FE 02              2978 	cp	a,#0x02
   0A53 CA 67 0A           2979 	jp	z,00109$
   0A56                    2980 00126$:
                           2981 ;	genGoto
   0A56 C3 6B 0A           2982 	jp	00110$
                           2983 ;	square.c 387
                           2984 ;	genLabel
   0A59                    2985 00107$:
                           2986 ;	genAssign
                           2987 ;	AOP_HL for _offStepA
   0A59 21 28 00           2988 	ld	hl,#_offStepA
   0A5C 71                 2989 	ld	(hl),c
                           2990 ;	square.c 388
                           2991 ;	genGoto
   0A5D C3 6B 0A           2992 	jp	00110$
                           2993 ;	square.c 390
                           2994 ;	genLabel
   0A60                    2995 00108$:
                           2996 ;	genAssign
                           2997 ;	AOP_HL for _offStepB
   0A60 21 29 00           2998 	ld	hl,#_offStepB
   0A63 71                 2999 	ld	(hl),c
                           3000 ;	square.c 391
                           3001 ;	genGoto
   0A64 C3 6B 0A           3002 	jp	00110$
                           3003 ;	square.c 393
                           3004 ;	genLabel
   0A67                    3005 00109$:
                           3006 ;	genAssign
                           3007 ;	AOP_HL for _offStepC
   0A67 21 2A 00           3008 	ld	hl,#_offStepC
   0A6A 71                 3009 	ld	(hl),c
                           3010 ;	square.c 395
                           3011 ;	genLabel
   0A6B                    3012 00110$:
                           3013 ;	square.c 396
                           3014 ;	genCall
                           3015 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A6B CD 2A 09           3016 	call	_setupDrum
                           3017 ;	genLabel
   0A6E                    3018 00111$:
                           3019 ;	genEndFunction
                           3020 	
   0A6E C9                 3021 	ret
   0A6F                    3022 ___decreaseOffStep_end:
                           3023 ;	square.c 399
                           3024 ;	genLabel
                           3025 ;	genFunction
                           3026 ;	---------------------------------
                           3027 ; Function increaseSteps
                           3028 ; ---------------------------------
   0A6F                    3029 ___increaseSteps_start:
   0A6F                    3030 _increaseSteps:
                           3031 	
                           3032 ;	square.c 401
                           3033 ;	genAssign
   0A6F 0E 01              3034 	ld	c,#0x01
                           3035 ;	square.c 402
                           3036 ;	genCmpEq
                           3037 ;	AOP_HL for _seldrum
                           3038 ; genCmpEq: left 1, right 1, result 1
   0A71 21 0B 00           3039 	ld	hl,#_seldrum
   0A74 7E                 3040 	ld	a,(hl)
   0A75 B7                 3041 	or	a,a
   0A76 C2 7D 0A           3042 	jp	nz,00120$
   0A79 3E 01              3043 	ld	a,#0x01
   0A7B 18 01              3044 	jr	00121$
   0A7D                    3045 00120$:
   0A7D AF                 3046 	xor	a,a
   0A7E                    3047 00121$:
   0A7E 47                 3048 	ld	b,a
                           3049 ;	genIfx
   0A7F AF                 3050 	xor	a,a
   0A80 B0                 3051 	or	a,b
   0A81 C2 99 0A           3052 	jp	nz,00101$
                           3053 ;	genCmpEq
                           3054 ;	AOP_HL for _seldrum
                           3055 ; genCmpEq: left 1, right 1, result 0
   0A84 21 0B 00           3056 	ld	hl,#_seldrum
   0A87 7E                 3057 	ld	a,(hl)
   0A88 FE 01              3058 	cp	a,#0x01
   0A8A CA A0 0A           3059 	jp	z,00102$
   0A8D                    3060 00122$:
                           3061 ;	genCmpEq
                           3062 ;	AOP_HL for _seldrum
                           3063 ; genCmpEq: left 1, right 1, result 0
   0A8D 21 0B 00           3064 	ld	hl,#_seldrum
   0A90 7E                 3065 	ld	a,(hl)
   0A91 FE 02              3066 	cp	a,#0x02
   0A93 CA A7 0A           3067 	jp	z,00103$
   0A96                    3068 00123$:
                           3069 ;	genGoto
   0A96 C3 AB 0A           3070 	jp	00104$
                           3071 ;	square.c 405
                           3072 ;	genLabel
   0A99                    3073 00101$:
                           3074 ;	genAssign
                           3075 ;	AOP_HL for _totalStepsA
   0A99 21 20 00           3076 	ld	hl,#_totalStepsA
   0A9C 4E                 3077 	ld	c,(hl)
                           3078 ;	square.c 406
                           3079 ;	genGoto
   0A9D C3 AB 0A           3080 	jp	00104$
                           3081 ;	square.c 408
                           3082 ;	genLabel
   0AA0                    3083 00102$:
                           3084 ;	genAssign
                           3085 ;	AOP_HL for _totalStepsB
   0AA0 21 23 00           3086 	ld	hl,#_totalStepsB
   0AA3 4E                 3087 	ld	c,(hl)
                           3088 ;	square.c 409
                           3089 ;	genGoto
   0AA4 C3 AB 0A           3090 	jp	00104$
                           3091 ;	square.c 411
                           3092 ;	genLabel
   0AA7                    3093 00103$:
                           3094 ;	genAssign
                           3095 ;	AOP_HL for _totalStepsC
   0AA7 21 26 00           3096 	ld	hl,#_totalStepsC
   0AAA 4E                 3097 	ld	c,(hl)
                           3098 ;	square.c 413
                           3099 ;	genLabel
   0AAB                    3100 00104$:
                           3101 ;	square.c 414
                           3102 ;	genPlus
                           3103 ;	genPlusIncr
                           3104 ; Removed redundent load
   0AAB 0C                 3105 	inc	c
                           3106 ;	square.c 415
                           3107 ;	genCmpGt
   0AAC 3E 20              3108 	ld	a,#0x20
   0AAE 91                 3109 	sub	a,c
   0AAF D2 B4 0A           3110 	jp	nc,00106$
                           3111 ;	square.c 417
                           3112 ;	genAssign
   0AB2 0E 01              3113 	ld	c,#0x01
                           3114 ;	genLabel
   0AB4                    3115 00106$:
                           3116 ;	square.c 419
                           3117 ;	genIfx
   0AB4 AF                 3118 	xor	a,a
   0AB5 B0                 3119 	or	a,b
   0AB6 C2 CE 0A           3120 	jp	nz,00107$
                           3121 ;	genCmpEq
                           3122 ;	AOP_HL for _seldrum
                           3123 ; genCmpEq: left 1, right 1, result 0
   0AB9 21 0B 00           3124 	ld	hl,#_seldrum
   0ABC 7E                 3125 	ld	a,(hl)
   0ABD FE 01              3126 	cp	a,#0x01
   0ABF CA D5 0A           3127 	jp	z,00108$
   0AC2                    3128 00124$:
                           3129 ;	genCmpEq
                           3130 ;	AOP_HL for _seldrum
                           3131 ; genCmpEq: left 1, right 1, result 0
   0AC2 21 0B 00           3132 	ld	hl,#_seldrum
   0AC5 7E                 3133 	ld	a,(hl)
   0AC6 FE 02              3134 	cp	a,#0x02
   0AC8 CA DC 0A           3135 	jp	z,00109$
   0ACB                    3136 00125$:
                           3137 ;	genGoto
   0ACB C3 E0 0A           3138 	jp	00110$
                           3139 ;	square.c 422
                           3140 ;	genLabel
   0ACE                    3141 00107$:
                           3142 ;	genAssign
                           3143 ;	AOP_HL for _totalStepsA
   0ACE 21 20 00           3144 	ld	hl,#_totalStepsA
   0AD1 71                 3145 	ld	(hl),c
                           3146 ;	square.c 423
                           3147 ;	genGoto
   0AD2 C3 E0 0A           3148 	jp	00110$
                           3149 ;	square.c 425
                           3150 ;	genLabel
   0AD5                    3151 00108$:
                           3152 ;	genAssign
                           3153 ;	AOP_HL for _totalStepsB
   0AD5 21 23 00           3154 	ld	hl,#_totalStepsB
   0AD8 71                 3155 	ld	(hl),c
                           3156 ;	square.c 426
                           3157 ;	genGoto
   0AD9 C3 E0 0A           3158 	jp	00110$
                           3159 ;	square.c 428
                           3160 ;	genLabel
   0ADC                    3161 00109$:
                           3162 ;	genAssign
                           3163 ;	AOP_HL for _totalStepsC
   0ADC 21 26 00           3164 	ld	hl,#_totalStepsC
   0ADF 71                 3165 	ld	(hl),c
                           3166 ;	square.c 430
                           3167 ;	genLabel
   0AE0                    3168 00110$:
                           3169 ;	square.c 431
                           3170 ;	genCall
                           3171 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0AE0 CD 2A 09           3172 	call	_setupDrum
                           3173 ;	genLabel
   0AE3                    3174 00111$:
                           3175 ;	genEndFunction
                           3176 	
   0AE3 C9                 3177 	ret
   0AE4                    3178 ___increaseSteps_end:
                           3179 ;	square.c 434
                           3180 ;	genLabel
                           3181 ;	genFunction
                           3182 ;	---------------------------------
                           3183 ; Function decreaseSteps
                           3184 ; ---------------------------------
   0AE4                    3185 ___decreaseSteps_start:
   0AE4                    3186 _decreaseSteps:
                           3187 	
                           3188 ;	square.c 436
                           3189 ;	genAssign
   0AE4 0E 01              3190 	ld	c,#0x01
                           3191 ;	square.c 437
                           3192 ;	genCmpEq
                           3193 ;	AOP_HL for _seldrum
                           3194 ; genCmpEq: left 1, right 1, result 1
   0AE6 21 0B 00           3195 	ld	hl,#_seldrum
   0AE9 7E                 3196 	ld	a,(hl)
   0AEA B7                 3197 	or	a,a
   0AEB C2 F2 0A           3198 	jp	nz,00120$
   0AEE 3E 01              3199 	ld	a,#0x01
   0AF0 18 01              3200 	jr	00121$
   0AF2                    3201 00120$:
   0AF2 AF                 3202 	xor	a,a
   0AF3                    3203 00121$:
   0AF3 47                 3204 	ld	b,a
                           3205 ;	genIfx
   0AF4 AF                 3206 	xor	a,a
   0AF5 B0                 3207 	or	a,b
   0AF6 C2 0E 0B           3208 	jp	nz,00101$
                           3209 ;	genCmpEq
                           3210 ;	AOP_HL for _seldrum
                           3211 ; genCmpEq: left 1, right 1, result 0
   0AF9 21 0B 00           3212 	ld	hl,#_seldrum
   0AFC 7E                 3213 	ld	a,(hl)
   0AFD FE 01              3214 	cp	a,#0x01
   0AFF CA 15 0B           3215 	jp	z,00102$
   0B02                    3216 00122$:
                           3217 ;	genCmpEq
                           3218 ;	AOP_HL for _seldrum
                           3219 ; genCmpEq: left 1, right 1, result 0
   0B02 21 0B 00           3220 	ld	hl,#_seldrum
   0B05 7E                 3221 	ld	a,(hl)
   0B06 FE 02              3222 	cp	a,#0x02
   0B08 CA 1C 0B           3223 	jp	z,00103$
   0B0B                    3224 00123$:
                           3225 ;	genGoto
   0B0B C3 20 0B           3226 	jp	00104$
                           3227 ;	square.c 440
                           3228 ;	genLabel
   0B0E                    3229 00101$:
                           3230 ;	genAssign
                           3231 ;	AOP_HL for _totalStepsA
   0B0E 21 20 00           3232 	ld	hl,#_totalStepsA
   0B11 4E                 3233 	ld	c,(hl)
                           3234 ;	square.c 441
                           3235 ;	genGoto
   0B12 C3 20 0B           3236 	jp	00104$
                           3237 ;	square.c 443
                           3238 ;	genLabel
   0B15                    3239 00102$:
                           3240 ;	genAssign
                           3241 ;	AOP_HL for _totalStepsB
   0B15 21 23 00           3242 	ld	hl,#_totalStepsB
   0B18 4E                 3243 	ld	c,(hl)
                           3244 ;	square.c 444
                           3245 ;	genGoto
   0B19 C3 20 0B           3246 	jp	00104$
                           3247 ;	square.c 446
                           3248 ;	genLabel
   0B1C                    3249 00103$:
                           3250 ;	genAssign
                           3251 ;	AOP_HL for _totalStepsC
   0B1C 21 26 00           3252 	ld	hl,#_totalStepsC
   0B1F 4E                 3253 	ld	c,(hl)
                           3254 ;	square.c 448
                           3255 ;	genLabel
   0B20                    3256 00104$:
                           3257 ;	square.c 449
                           3258 ;	genMinus
   0B20 0D                 3259 	dec	c
                           3260 ;	square.c 450
                           3261 ;	genCmpLt
   0B21 79                 3262 	ld	a,c
   0B22 FE 01              3263 	cp	#0x01
   0B24 D2 29 0B           3264 	jp	nc,00106$
                           3265 ;	square.c 452
                           3266 ;	genAssign
   0B27 0E 20              3267 	ld	c,#0x20
                           3268 ;	genLabel
   0B29                    3269 00106$:
                           3270 ;	square.c 454
                           3271 ;	genIfx
   0B29 AF                 3272 	xor	a,a
   0B2A B0                 3273 	or	a,b
   0B2B C2 43 0B           3274 	jp	nz,00107$
                           3275 ;	genCmpEq
                           3276 ;	AOP_HL for _seldrum
                           3277 ; genCmpEq: left 1, right 1, result 0
   0B2E 21 0B 00           3278 	ld	hl,#_seldrum
   0B31 7E                 3279 	ld	a,(hl)
   0B32 FE 01              3280 	cp	a,#0x01
   0B34 CA 4A 0B           3281 	jp	z,00108$
   0B37                    3282 00124$:
                           3283 ;	genCmpEq
                           3284 ;	AOP_HL for _seldrum
                           3285 ; genCmpEq: left 1, right 1, result 0
   0B37 21 0B 00           3286 	ld	hl,#_seldrum
   0B3A 7E                 3287 	ld	a,(hl)
   0B3B FE 02              3288 	cp	a,#0x02
   0B3D CA 51 0B           3289 	jp	z,00109$
   0B40                    3290 00125$:
                           3291 ;	genGoto
   0B40 C3 55 0B           3292 	jp	00110$
                           3293 ;	square.c 457
                           3294 ;	genLabel
   0B43                    3295 00107$:
                           3296 ;	genAssign
                           3297 ;	AOP_HL for _totalStepsA
   0B43 21 20 00           3298 	ld	hl,#_totalStepsA
   0B46 71                 3299 	ld	(hl),c
                           3300 ;	square.c 458
                           3301 ;	genGoto
   0B47 C3 55 0B           3302 	jp	00110$
                           3303 ;	square.c 460
                           3304 ;	genLabel
   0B4A                    3305 00108$:
                           3306 ;	genAssign
                           3307 ;	AOP_HL for _totalStepsB
   0B4A 21 23 00           3308 	ld	hl,#_totalStepsB
   0B4D 71                 3309 	ld	(hl),c
                           3310 ;	square.c 461
                           3311 ;	genGoto
   0B4E C3 55 0B           3312 	jp	00110$
                           3313 ;	square.c 463
                           3314 ;	genLabel
   0B51                    3315 00109$:
                           3316 ;	genAssign
                           3317 ;	AOP_HL for _totalStepsC
   0B51 21 26 00           3318 	ld	hl,#_totalStepsC
   0B54 71                 3319 	ld	(hl),c
                           3320 ;	square.c 465
                           3321 ;	genLabel
   0B55                    3322 00110$:
                           3323 ;	square.c 466
                           3324 ;	genCall
                           3325 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B55 CD 2A 09           3326 	call	_setupDrum
                           3327 ;	genLabel
   0B58                    3328 00111$:
                           3329 ;	genEndFunction
                           3330 	
   0B58 C9                 3331 	ret
   0B59                    3332 ___decreaseSteps_end:
                           3333 ;	square.c 469
                           3334 ;	genLabel
                           3335 ;	genFunction
                           3336 ;	---------------------------------
                           3337 ; Function increasePulses
                           3338 ; ---------------------------------
   0B59                    3339 ___increasePulses_start:
   0B59                    3340 _increasePulses:
                           3341 	
                           3342 ;	square.c 471
                           3343 ;	genAssign
   0B59 0E 01              3344 	ld	c,#0x01
                           3345 ;	square.c 472
                           3346 ;	genCmpEq
                           3347 ;	AOP_HL for _seldrum
                           3348 ; genCmpEq: left 1, right 1, result 1
   0B5B 21 0B 00           3349 	ld	hl,#_seldrum
   0B5E 7E                 3350 	ld	a,(hl)
   0B5F B7                 3351 	or	a,a
   0B60 C2 67 0B           3352 	jp	nz,00120$
   0B63 3E 01              3353 	ld	a,#0x01
   0B65 18 01              3354 	jr	00121$
   0B67                    3355 00120$:
   0B67 AF                 3356 	xor	a,a
   0B68                    3357 00121$:
   0B68 47                 3358 	ld	b,a
                           3359 ;	genIfx
   0B69 AF                 3360 	xor	a,a
   0B6A B0                 3361 	or	a,b
   0B6B C2 83 0B           3362 	jp	nz,00101$
                           3363 ;	genCmpEq
                           3364 ;	AOP_HL for _seldrum
                           3365 ; genCmpEq: left 1, right 1, result 0
   0B6E 21 0B 00           3366 	ld	hl,#_seldrum
   0B71 7E                 3367 	ld	a,(hl)
   0B72 FE 01              3368 	cp	a,#0x01
   0B74 CA 8A 0B           3369 	jp	z,00102$
   0B77                    3370 00122$:
                           3371 ;	genCmpEq
                           3372 ;	AOP_HL for _seldrum
                           3373 ; genCmpEq: left 1, right 1, result 0
   0B77 21 0B 00           3374 	ld	hl,#_seldrum
   0B7A 7E                 3375 	ld	a,(hl)
   0B7B FE 02              3376 	cp	a,#0x02
   0B7D CA 91 0B           3377 	jp	z,00103$
   0B80                    3378 00123$:
                           3379 ;	genGoto
   0B80 C3 95 0B           3380 	jp	00104$
                           3381 ;	square.c 475
                           3382 ;	genLabel
   0B83                    3383 00101$:
                           3384 ;	genAssign
                           3385 ;	AOP_HL for _numberOfPulsesA
   0B83 21 1F 00           3386 	ld	hl,#_numberOfPulsesA
   0B86 4E                 3387 	ld	c,(hl)
                           3388 ;	square.c 476
                           3389 ;	genGoto
   0B87 C3 95 0B           3390 	jp	00104$
                           3391 ;	square.c 478
                           3392 ;	genLabel
   0B8A                    3393 00102$:
                           3394 ;	genAssign
                           3395 ;	AOP_HL for _numberOfPulsesB
   0B8A 21 22 00           3396 	ld	hl,#_numberOfPulsesB
   0B8D 4E                 3397 	ld	c,(hl)
                           3398 ;	square.c 479
                           3399 ;	genGoto
   0B8E C3 95 0B           3400 	jp	00104$
                           3401 ;	square.c 481
                           3402 ;	genLabel
   0B91                    3403 00103$:
                           3404 ;	genAssign
                           3405 ;	AOP_HL for _numberOfPulsesC
   0B91 21 25 00           3406 	ld	hl,#_numberOfPulsesC
   0B94 4E                 3407 	ld	c,(hl)
                           3408 ;	square.c 483
                           3409 ;	genLabel
   0B95                    3410 00104$:
                           3411 ;	square.c 484
                           3412 ;	genPlus
                           3413 ;	genPlusIncr
                           3414 ; Removed redundent load
   0B95 0C                 3415 	inc	c
                           3416 ;	square.c 485
                           3417 ;	genCmpGt
   0B96 3E 20              3418 	ld	a,#0x20
   0B98 91                 3419 	sub	a,c
   0B99 D2 9E 0B           3420 	jp	nc,00106$
                           3421 ;	square.c 487
                           3422 ;	genAssign
   0B9C 0E 01              3423 	ld	c,#0x01
                           3424 ;	genLabel
   0B9E                    3425 00106$:
                           3426 ;	square.c 489
                           3427 ;	genIfx
   0B9E AF                 3428 	xor	a,a
   0B9F B0                 3429 	or	a,b
   0BA0 C2 B8 0B           3430 	jp	nz,00107$
                           3431 ;	genCmpEq
                           3432 ;	AOP_HL for _seldrum
                           3433 ; genCmpEq: left 1, right 1, result 0
   0BA3 21 0B 00           3434 	ld	hl,#_seldrum
   0BA6 7E                 3435 	ld	a,(hl)
   0BA7 FE 01              3436 	cp	a,#0x01
   0BA9 CA BF 0B           3437 	jp	z,00108$
   0BAC                    3438 00124$:
                           3439 ;	genCmpEq
                           3440 ;	AOP_HL for _seldrum
                           3441 ; genCmpEq: left 1, right 1, result 0
   0BAC 21 0B 00           3442 	ld	hl,#_seldrum
   0BAF 7E                 3443 	ld	a,(hl)
   0BB0 FE 02              3444 	cp	a,#0x02
   0BB2 CA C6 0B           3445 	jp	z,00109$
   0BB5                    3446 00125$:
                           3447 ;	genGoto
   0BB5 C3 CA 0B           3448 	jp	00110$
                           3449 ;	square.c 492
                           3450 ;	genLabel
   0BB8                    3451 00107$:
                           3452 ;	genAssign
                           3453 ;	AOP_HL for _numberOfPulsesA
   0BB8 21 1F 00           3454 	ld	hl,#_numberOfPulsesA
   0BBB 71                 3455 	ld	(hl),c
                           3456 ;	square.c 493
                           3457 ;	genGoto
   0BBC C3 CA 0B           3458 	jp	00110$
                           3459 ;	square.c 495
                           3460 ;	genLabel
   0BBF                    3461 00108$:
                           3462 ;	genAssign
                           3463 ;	AOP_HL for _numberOfPulsesB
   0BBF 21 22 00           3464 	ld	hl,#_numberOfPulsesB
   0BC2 71                 3465 	ld	(hl),c
                           3466 ;	square.c 496
                           3467 ;	genGoto
   0BC3 C3 CA 0B           3468 	jp	00110$
                           3469 ;	square.c 498
                           3470 ;	genLabel
   0BC6                    3471 00109$:
                           3472 ;	genAssign
                           3473 ;	AOP_HL for _numberOfPulsesC
   0BC6 21 25 00           3474 	ld	hl,#_numberOfPulsesC
   0BC9 71                 3475 	ld	(hl),c
                           3476 ;	square.c 500
                           3477 ;	genLabel
   0BCA                    3478 00110$:
                           3479 ;	square.c 501
                           3480 ;	genCall
                           3481 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0BCA CD 2A 09           3482 	call	_setupDrum
                           3483 ;	genLabel
   0BCD                    3484 00111$:
                           3485 ;	genEndFunction
                           3486 	
   0BCD C9                 3487 	ret
   0BCE                    3488 ___increasePulses_end:
                           3489 ;	square.c 504
                           3490 ;	genLabel
                           3491 ;	genFunction
                           3492 ;	---------------------------------
                           3493 ; Function decreasePulses
                           3494 ; ---------------------------------
   0BCE                    3495 ___decreasePulses_start:
   0BCE                    3496 _decreasePulses:
                           3497 	
                           3498 ;	square.c 506
                           3499 ;	genAssign
   0BCE 0E 01              3500 	ld	c,#0x01
                           3501 ;	square.c 507
                           3502 ;	genCmpEq
                           3503 ;	AOP_HL for _seldrum
                           3504 ; genCmpEq: left 1, right 1, result 1
   0BD0 21 0B 00           3505 	ld	hl,#_seldrum
   0BD3 7E                 3506 	ld	a,(hl)
   0BD4 B7                 3507 	or	a,a
   0BD5 C2 DC 0B           3508 	jp	nz,00120$
   0BD8 3E 01              3509 	ld	a,#0x01
   0BDA 18 01              3510 	jr	00121$
   0BDC                    3511 00120$:
   0BDC AF                 3512 	xor	a,a
   0BDD                    3513 00121$:
   0BDD 47                 3514 	ld	b,a
                           3515 ;	genIfx
   0BDE AF                 3516 	xor	a,a
   0BDF B0                 3517 	or	a,b
   0BE0 C2 F8 0B           3518 	jp	nz,00101$
                           3519 ;	genCmpEq
                           3520 ;	AOP_HL for _seldrum
                           3521 ; genCmpEq: left 1, right 1, result 0
   0BE3 21 0B 00           3522 	ld	hl,#_seldrum
   0BE6 7E                 3523 	ld	a,(hl)
   0BE7 FE 01              3524 	cp	a,#0x01
   0BE9 CA FF 0B           3525 	jp	z,00102$
   0BEC                    3526 00122$:
                           3527 ;	genCmpEq
                           3528 ;	AOP_HL for _seldrum
                           3529 ; genCmpEq: left 1, right 1, result 0
   0BEC 21 0B 00           3530 	ld	hl,#_seldrum
   0BEF 7E                 3531 	ld	a,(hl)
   0BF0 FE 02              3532 	cp	a,#0x02
   0BF2 CA 06 0C           3533 	jp	z,00103$
   0BF5                    3534 00123$:
                           3535 ;	genGoto
   0BF5 C3 0A 0C           3536 	jp	00104$
                           3537 ;	square.c 510
                           3538 ;	genLabel
   0BF8                    3539 00101$:
                           3540 ;	genAssign
                           3541 ;	AOP_HL for _numberOfPulsesA
   0BF8 21 1F 00           3542 	ld	hl,#_numberOfPulsesA
   0BFB 4E                 3543 	ld	c,(hl)
                           3544 ;	square.c 511
                           3545 ;	genGoto
   0BFC C3 0A 0C           3546 	jp	00104$
                           3547 ;	square.c 513
                           3548 ;	genLabel
   0BFF                    3549 00102$:
                           3550 ;	genAssign
                           3551 ;	AOP_HL for _numberOfPulsesB
   0BFF 21 22 00           3552 	ld	hl,#_numberOfPulsesB
   0C02 4E                 3553 	ld	c,(hl)
                           3554 ;	square.c 514
                           3555 ;	genGoto
   0C03 C3 0A 0C           3556 	jp	00104$
                           3557 ;	square.c 516
                           3558 ;	genLabel
   0C06                    3559 00103$:
                           3560 ;	genAssign
                           3561 ;	AOP_HL for _numberOfPulsesC
   0C06 21 25 00           3562 	ld	hl,#_numberOfPulsesC
   0C09 4E                 3563 	ld	c,(hl)
                           3564 ;	square.c 518
                           3565 ;	genLabel
   0C0A                    3566 00104$:
                           3567 ;	square.c 519
                           3568 ;	genMinus
   0C0A 0D                 3569 	dec	c
                           3570 ;	square.c 520
                           3571 ;	genCmpLt
   0C0B 79                 3572 	ld	a,c
   0C0C FE 01              3573 	cp	#0x01
   0C0E D2 13 0C           3574 	jp	nc,00106$
                           3575 ;	square.c 522
                           3576 ;	genAssign
   0C11 0E 20              3577 	ld	c,#0x20
                           3578 ;	genLabel
   0C13                    3579 00106$:
                           3580 ;	square.c 524
                           3581 ;	genIfx
   0C13 AF                 3582 	xor	a,a
   0C14 B0                 3583 	or	a,b
   0C15 C2 2D 0C           3584 	jp	nz,00107$
                           3585 ;	genCmpEq
                           3586 ;	AOP_HL for _seldrum
                           3587 ; genCmpEq: left 1, right 1, result 0
   0C18 21 0B 00           3588 	ld	hl,#_seldrum
   0C1B 7E                 3589 	ld	a,(hl)
   0C1C FE 01              3590 	cp	a,#0x01
   0C1E CA 34 0C           3591 	jp	z,00108$
   0C21                    3592 00124$:
                           3593 ;	genCmpEq
                           3594 ;	AOP_HL for _seldrum
                           3595 ; genCmpEq: left 1, right 1, result 0
   0C21 21 0B 00           3596 	ld	hl,#_seldrum
   0C24 7E                 3597 	ld	a,(hl)
   0C25 FE 02              3598 	cp	a,#0x02
   0C27 CA 3B 0C           3599 	jp	z,00109$
   0C2A                    3600 00125$:
                           3601 ;	genGoto
   0C2A C3 3F 0C           3602 	jp	00110$
                           3603 ;	square.c 527
                           3604 ;	genLabel
   0C2D                    3605 00107$:
                           3606 ;	genAssign
                           3607 ;	AOP_HL for _numberOfPulsesA
   0C2D 21 1F 00           3608 	ld	hl,#_numberOfPulsesA
   0C30 71                 3609 	ld	(hl),c
                           3610 ;	square.c 528
                           3611 ;	genGoto
   0C31 C3 3F 0C           3612 	jp	00110$
                           3613 ;	square.c 530
                           3614 ;	genLabel
   0C34                    3615 00108$:
                           3616 ;	genAssign
                           3617 ;	AOP_HL for _numberOfPulsesB
   0C34 21 22 00           3618 	ld	hl,#_numberOfPulsesB
   0C37 71                 3619 	ld	(hl),c
                           3620 ;	square.c 531
                           3621 ;	genGoto
   0C38 C3 3F 0C           3622 	jp	00110$
                           3623 ;	square.c 533
                           3624 ;	genLabel
   0C3B                    3625 00109$:
                           3626 ;	genAssign
                           3627 ;	AOP_HL for _numberOfPulsesC
   0C3B 21 25 00           3628 	ld	hl,#_numberOfPulsesC
   0C3E 71                 3629 	ld	(hl),c
                           3630 ;	square.c 535
                           3631 ;	genLabel
   0C3F                    3632 00110$:
                           3633 ;	square.c 536
                           3634 ;	genCall
                           3635 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C3F CD 2A 09           3636 	call	_setupDrum
                           3637 ;	genLabel
   0C42                    3638 00111$:
                           3639 ;	genEndFunction
                           3640 	
   0C42 C9                 3641 	ret
   0C43                    3642 ___decreasePulses_end:
                           3643 ;	square.c 540
                           3644 ;	genLabel
                           3645 ;	genFunction
                           3646 ;	---------------------------------
                           3647 ; Function increaseSwing
                           3648 ; ---------------------------------
   0C43                    3649 ___increaseSwing_start:
   0C43                    3650 _increaseSwing:
                           3651 	
                           3652 ;	square.c 542
                           3653 ;	genAssign
   0C43 0E 00              3654 	ld	c,#0x00
                           3655 ;	square.c 543
                           3656 ;	genCmpEq
                           3657 ;	AOP_HL for _seldrum
                           3658 ; genCmpEq: left 1, right 1, result 1
   0C45 21 0B 00           3659 	ld	hl,#_seldrum
   0C48 7E                 3660 	ld	a,(hl)
   0C49 B7                 3661 	or	a,a
   0C4A C2 51 0C           3662 	jp	nz,00117$
   0C4D 3E 01              3663 	ld	a,#0x01
   0C4F 18 01              3664 	jr	00118$
   0C51                    3665 00117$:
   0C51 AF                 3666 	xor	a,a
   0C52                    3667 00118$:
   0C52 47                 3668 	ld	b,a
                           3669 ;	genIfx
   0C53 AF                 3670 	xor	a,a
   0C54 B0                 3671 	or	a,b
   0C55 C2 6D 0C           3672 	jp	nz,00101$
                           3673 ;	genCmpEq
                           3674 ;	AOP_HL for _seldrum
                           3675 ; genCmpEq: left 1, right 1, result 0
   0C58 21 0B 00           3676 	ld	hl,#_seldrum
   0C5B 7E                 3677 	ld	a,(hl)
   0C5C FE 01              3678 	cp	a,#0x01
   0C5E CA 74 0C           3679 	jp	z,00102$
   0C61                    3680 00119$:
                           3681 ;	genCmpEq
                           3682 ;	AOP_HL for _seldrum
                           3683 ; genCmpEq: left 1, right 1, result 0
   0C61 21 0B 00           3684 	ld	hl,#_seldrum
   0C64 7E                 3685 	ld	a,(hl)
   0C65 FE 02              3686 	cp	a,#0x02
   0C67 CA 7B 0C           3687 	jp	z,00103$
   0C6A                    3688 00120$:
                           3689 ;	genGoto
   0C6A C3 7F 0C           3690 	jp	00104$
                           3691 ;	square.c 546
                           3692 ;	genLabel
   0C6D                    3693 00101$:
                           3694 ;	genAssign
                           3695 ;	AOP_HL for _delayA
   0C6D 21 19 00           3696 	ld	hl,#_delayA
   0C70 4E                 3697 	ld	c,(hl)
                           3698 ;	square.c 547
                           3699 ;	genGoto
   0C71 C3 7F 0C           3700 	jp	00104$
                           3701 ;	square.c 549
                           3702 ;	genLabel
   0C74                    3703 00102$:
                           3704 ;	genAssign
                           3705 ;	AOP_HL for _delayB
   0C74 21 1A 00           3706 	ld	hl,#_delayB
   0C77 4E                 3707 	ld	c,(hl)
                           3708 ;	square.c 550
                           3709 ;	genGoto
   0C78 C3 7F 0C           3710 	jp	00104$
                           3711 ;	square.c 552
                           3712 ;	genLabel
   0C7B                    3713 00103$:
                           3714 ;	genAssign
                           3715 ;	AOP_HL for _delayC
   0C7B 21 1B 00           3716 	ld	hl,#_delayC
   0C7E 4E                 3717 	ld	c,(hl)
                           3718 ;	square.c 554
                           3719 ;	genLabel
   0C7F                    3720 00104$:
                           3721 ;	square.c 555
                           3722 ;	genPlus
                           3723 ;	genPlusIncr
                           3724 ; Removed redundent load
   0C7F 0C                 3725 	inc	c
                           3726 ;	square.c 556
                           3727 ;	genIfx
   0C80 AF                 3728 	xor	a,a
   0C81 B0                 3729 	or	a,b
   0C82 C2 9A 0C           3730 	jp	nz,00105$
                           3731 ;	genCmpEq
                           3732 ;	AOP_HL for _seldrum
                           3733 ; genCmpEq: left 1, right 1, result 0
   0C85 21 0B 00           3734 	ld	hl,#_seldrum
   0C88 7E                 3735 	ld	a,(hl)
   0C89 FE 01              3736 	cp	a,#0x01
   0C8B CA A1 0C           3737 	jp	z,00106$
   0C8E                    3738 00121$:
                           3739 ;	genCmpEq
                           3740 ;	AOP_HL for _seldrum
                           3741 ; genCmpEq: left 1, right 1, result 0
   0C8E 21 0B 00           3742 	ld	hl,#_seldrum
   0C91 7E                 3743 	ld	a,(hl)
   0C92 FE 02              3744 	cp	a,#0x02
   0C94 CA A8 0C           3745 	jp	z,00107$
   0C97                    3746 00122$:
                           3747 ;	genGoto
   0C97 C3 AC 0C           3748 	jp	00108$
                           3749 ;	square.c 559
                           3750 ;	genLabel
   0C9A                    3751 00105$:
                           3752 ;	genAssign
                           3753 ;	AOP_HL for _delayA
   0C9A 21 19 00           3754 	ld	hl,#_delayA
   0C9D 71                 3755 	ld	(hl),c
                           3756 ;	square.c 560
                           3757 ;	genGoto
   0C9E C3 AC 0C           3758 	jp	00108$
                           3759 ;	square.c 562
                           3760 ;	genLabel
   0CA1                    3761 00106$:
                           3762 ;	genAssign
                           3763 ;	AOP_HL for _delayB
   0CA1 21 1A 00           3764 	ld	hl,#_delayB
   0CA4 71                 3765 	ld	(hl),c
                           3766 ;	square.c 563
                           3767 ;	genGoto
   0CA5 C3 AC 0C           3768 	jp	00108$
                           3769 ;	square.c 565
                           3770 ;	genLabel
   0CA8                    3771 00107$:
                           3772 ;	genAssign
                           3773 ;	AOP_HL for _delayC
   0CA8 21 1B 00           3774 	ld	hl,#_delayC
   0CAB 71                 3775 	ld	(hl),c
                           3776 ;	square.c 567
                           3777 ;	genLabel
   0CAC                    3778 00108$:
                           3779 ;	square.c 568
                           3780 ;	genCall
                           3781 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CAC CD 2A 09           3782 	call	_setupDrum
                           3783 ;	genLabel
   0CAF                    3784 00109$:
                           3785 ;	genEndFunction
                           3786 	
   0CAF C9                 3787 	ret
   0CB0                    3788 ___increaseSwing_end:
                           3789 ;	square.c 571
                           3790 ;	genLabel
                           3791 ;	genFunction
                           3792 ;	---------------------------------
                           3793 ; Function decreaseSwing
                           3794 ; ---------------------------------
   0CB0                    3795 ___decreaseSwing_start:
   0CB0                    3796 _decreaseSwing:
                           3797 	
                           3798 ;	square.c 573
                           3799 ;	genAssign
   0CB0 0E 00              3800 	ld	c,#0x00
                           3801 ;	square.c 574
                           3802 ;	genCmpEq
                           3803 ;	AOP_HL for _seldrum
                           3804 ; genCmpEq: left 1, right 1, result 1
   0CB2 21 0B 00           3805 	ld	hl,#_seldrum
   0CB5 7E                 3806 	ld	a,(hl)
   0CB6 B7                 3807 	or	a,a
   0CB7 C2 BE 0C           3808 	jp	nz,00120$
   0CBA 3E 01              3809 	ld	a,#0x01
   0CBC 18 01              3810 	jr	00121$
   0CBE                    3811 00120$:
   0CBE AF                 3812 	xor	a,a
   0CBF                    3813 00121$:
   0CBF 47                 3814 	ld	b,a
                           3815 ;	genIfx
   0CC0 AF                 3816 	xor	a,a
   0CC1 B0                 3817 	or	a,b
   0CC2 C2 DA 0C           3818 	jp	nz,00101$
                           3819 ;	genCmpEq
                           3820 ;	AOP_HL for _seldrum
                           3821 ; genCmpEq: left 1, right 1, result 0
   0CC5 21 0B 00           3822 	ld	hl,#_seldrum
   0CC8 7E                 3823 	ld	a,(hl)
   0CC9 FE 01              3824 	cp	a,#0x01
   0CCB CA E1 0C           3825 	jp	z,00102$
   0CCE                    3826 00122$:
                           3827 ;	genCmpEq
                           3828 ;	AOP_HL for _seldrum
                           3829 ; genCmpEq: left 1, right 1, result 0
   0CCE 21 0B 00           3830 	ld	hl,#_seldrum
   0CD1 7E                 3831 	ld	a,(hl)
   0CD2 FE 02              3832 	cp	a,#0x02
   0CD4 CA E8 0C           3833 	jp	z,00103$
   0CD7                    3834 00123$:
                           3835 ;	genGoto
   0CD7 C3 EC 0C           3836 	jp	00104$
                           3837 ;	square.c 577
                           3838 ;	genLabel
   0CDA                    3839 00101$:
                           3840 ;	genAssign
                           3841 ;	AOP_HL for _delayA
   0CDA 21 19 00           3842 	ld	hl,#_delayA
   0CDD 4E                 3843 	ld	c,(hl)
                           3844 ;	square.c 578
                           3845 ;	genGoto
   0CDE C3 EC 0C           3846 	jp	00104$
                           3847 ;	square.c 580
                           3848 ;	genLabel
   0CE1                    3849 00102$:
                           3850 ;	genAssign
                           3851 ;	AOP_HL for _delayB
   0CE1 21 1A 00           3852 	ld	hl,#_delayB
   0CE4 4E                 3853 	ld	c,(hl)
                           3854 ;	square.c 581
                           3855 ;	genGoto
   0CE5 C3 EC 0C           3856 	jp	00104$
                           3857 ;	square.c 583
                           3858 ;	genLabel
   0CE8                    3859 00103$:
                           3860 ;	genAssign
                           3861 ;	AOP_HL for _delayC
   0CE8 21 1B 00           3862 	ld	hl,#_delayC
   0CEB 4E                 3863 	ld	c,(hl)
                           3864 ;	square.c 585
                           3865 ;	genLabel
   0CEC                    3866 00104$:
                           3867 ;	square.c 586
                           3868 ;	genCmpEq
                           3869 ; genCmpEq: left 1, right 1, result 0
   0CEC 79                 3870 	ld	a,c
   0CED B7                 3871 	or	a,a
   0CEE CA F2 0C           3872 	jp	z,00106$
   0CF1                    3873 00124$:
                           3874 ;	square.c 588
                           3875 ;	genMinus
   0CF1 0D                 3876 	dec	c
                           3877 ;	genLabel
   0CF2                    3878 00106$:
                           3879 ;	square.c 590
                           3880 ;	genIfx
   0CF2 AF                 3881 	xor	a,a
   0CF3 B0                 3882 	or	a,b
   0CF4 C2 0C 0D           3883 	jp	nz,00107$
                           3884 ;	genCmpEq
                           3885 ;	AOP_HL for _seldrum
                           3886 ; genCmpEq: left 1, right 1, result 0
   0CF7 21 0B 00           3887 	ld	hl,#_seldrum
   0CFA 7E                 3888 	ld	a,(hl)
   0CFB FE 01              3889 	cp	a,#0x01
   0CFD CA 13 0D           3890 	jp	z,00108$
   0D00                    3891 00125$:
                           3892 ;	genCmpEq
                           3893 ;	AOP_HL for _seldrum
                           3894 ; genCmpEq: left 1, right 1, result 0
   0D00 21 0B 00           3895 	ld	hl,#_seldrum
   0D03 7E                 3896 	ld	a,(hl)
   0D04 FE 02              3897 	cp	a,#0x02
   0D06 CA 1A 0D           3898 	jp	z,00109$
   0D09                    3899 00126$:
                           3900 ;	genGoto
   0D09 C3 1E 0D           3901 	jp	00110$
                           3902 ;	square.c 593
                           3903 ;	genLabel
   0D0C                    3904 00107$:
                           3905 ;	genAssign
                           3906 ;	AOP_HL for _delayA
   0D0C 21 19 00           3907 	ld	hl,#_delayA
   0D0F 71                 3908 	ld	(hl),c
                           3909 ;	square.c 594
                           3910 ;	genGoto
   0D10 C3 1E 0D           3911 	jp	00110$
                           3912 ;	square.c 596
                           3913 ;	genLabel
   0D13                    3914 00108$:
                           3915 ;	genAssign
                           3916 ;	AOP_HL for _delayB
   0D13 21 1A 00           3917 	ld	hl,#_delayB
   0D16 71                 3918 	ld	(hl),c
                           3919 ;	square.c 597
                           3920 ;	genGoto
   0D17 C3 1E 0D           3921 	jp	00110$
                           3922 ;	square.c 599
                           3923 ;	genLabel
   0D1A                    3924 00109$:
                           3925 ;	genAssign
                           3926 ;	AOP_HL for _delayC
   0D1A 21 1B 00           3927 	ld	hl,#_delayC
   0D1D 71                 3928 	ld	(hl),c
                           3929 ;	square.c 601
                           3930 ;	genLabel
   0D1E                    3931 00110$:
                           3932 ;	square.c 602
                           3933 ;	genCall
                           3934 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D1E CD 2A 09           3935 	call	_setupDrum
                           3936 ;	genLabel
   0D21                    3937 00111$:
                           3938 ;	genEndFunction
                           3939 	
   0D21 C9                 3940 	ret
   0D22                    3941 ___decreaseSwing_end:
                           3942 ;	square.c 605
                           3943 ;	genLabel
                           3944 ;	genFunction
                           3945 ;	---------------------------------
                           3946 ; Function tick
                           3947 ; ---------------------------------
   0D22                    3948 ___tick_start:
   0D22                    3949 _tick:
                           3950 	
                           3951 ;	square.c 608
                           3952 ;	genMinus
                           3953 ;	AOP_HL for _totalStepsA
   0D22 21 20 00           3954 	ld	hl,#_totalStepsA
   0D25 7E                 3955 	ld	a,(hl)
   0D26 C6 FF              3956 	add	a,#0xFF
                           3957 ;	genCmpGt
                           3958 ;	AOP_HL for _clkA
   0D28 4F                 3959 	ld	c,a
   0D29 21 21 00           3960 	ld	hl,#_clkA
   0D2C 96                 3961 	sub	a,(hl)
   0D2D D2 32 0D           3962 	jp	nc,00102$
                           3963 ;	square.c 610
                           3964 ;	genAssign
                           3965 ;	AOP_HL for _clkA
   0D30 36 00              3966 	ld	(hl),#0x00
                           3967 ;	genLabel
   0D32                    3968 00102$:
                           3969 ;	square.c 612
                           3970 ;	genMinus
                           3971 ;	AOP_HL for _totalStepsB
   0D32 21 23 00           3972 	ld	hl,#_totalStepsB
   0D35 7E                 3973 	ld	a,(hl)
   0D36 C6 FF              3974 	add	a,#0xFF
                           3975 ;	genCmpGt
                           3976 ;	AOP_HL for _clkB
   0D38 4F                 3977 	ld	c,a
   0D39 21 24 00           3978 	ld	hl,#_clkB
   0D3C 96                 3979 	sub	a,(hl)
   0D3D D2 42 0D           3980 	jp	nc,00104$
                           3981 ;	square.c 614
                           3982 ;	genAssign
                           3983 ;	AOP_HL for _clkB
   0D40 36 00              3984 	ld	(hl),#0x00
                           3985 ;	genLabel
   0D42                    3986 00104$:
                           3987 ;	square.c 616
                           3988 ;	genMinus
                           3989 ;	AOP_HL for _totalStepsC
   0D42 21 26 00           3990 	ld	hl,#_totalStepsC
   0D45 7E                 3991 	ld	a,(hl)
   0D46 C6 FF              3992 	add	a,#0xFF
                           3993 ;	genCmpGt
                           3994 ;	AOP_HL for _clkC
   0D48 4F                 3995 	ld	c,a
   0D49 21 27 00           3996 	ld	hl,#_clkC
   0D4C 96                 3997 	sub	a,(hl)
   0D4D D2 52 0D           3998 	jp	nc,00106$
                           3999 ;	square.c 618
                           4000 ;	genAssign
                           4001 ;	AOP_HL for _clkC
   0D50 36 00              4002 	ld	(hl),#0x00
                           4003 ;	genLabel
   0D52                    4004 00106$:
                           4005 ;	square.c 621
                           4006 ;	genCmpEq
                           4007 ;	AOP_HL for _syncToDrum
                           4008 ; genCmpEq: left 1, right 1, result 0
   0D52 21 1D 00           4009 	ld	hl,#_syncToDrum
   0D55 7E                 4010 	ld	a,(hl)
   0D56 FE 01              4011 	cp	a,#0x01
   0D58 C2 BF 0D           4012 	jp	nz,00114$
   0D5B 18 03              4013 	jr	00144$
   0D5D                    4014 00143$:
   0D5D C3 BF 0D           4015 	jp	00114$
   0D60                    4016 00144$:
                           4017 ;	square.c 623
                           4018 ;	genCmpEq
                           4019 ;	AOP_HL for _seldrum
                           4020 ; genCmpEq: left 1, right 1, result 0
   0D60 21 0B 00           4021 	ld	hl,#_seldrum
   0D63 7E                 4022 	ld	a,(hl)
   0D64 B7                 4023 	or	a,a
   0D65 CA 7D 0D           4024 	jp	z,00107$
   0D68                    4025 00145$:
                           4026 ;	genCmpEq
                           4027 ;	AOP_HL for _seldrum
                           4028 ; genCmpEq: left 1, right 1, result 0
   0D68 21 0B 00           4029 	ld	hl,#_seldrum
   0D6B 7E                 4030 	ld	a,(hl)
   0D6C FE 01              4031 	cp	a,#0x01
   0D6E CA 88 0D           4032 	jp	z,00108$
   0D71                    4033 00146$:
                           4034 ;	genCmpEq
                           4035 ;	AOP_HL for _seldrum
                           4036 ; genCmpEq: left 1, right 1, result 0
   0D71 21 0B 00           4037 	ld	hl,#_seldrum
   0D74 7E                 4038 	ld	a,(hl)
   0D75 FE 02              4039 	cp	a,#0x02
   0D77 CA 93 0D           4040 	jp	z,00109$
   0D7A                    4041 00147$:
                           4042 ;	genGoto
   0D7A C3 9B 0D           4043 	jp	00110$
                           4044 ;	square.c 626
                           4045 ;	genLabel
   0D7D                    4046 00107$:
                           4047 ;	genAssign
                           4048 ;	AOP_HL for _clkA
                           4049 ;	AOP_HL for _clockToSync
   0D7D 21 21 00           4050 	ld	hl,#_clkA
   0D80 7E                 4051 	ld	a,(hl)
   0D81 21 1E 00           4052 	ld	hl,#_clockToSync
   0D84 77                 4053 	ld	(hl),a
                           4054 ;	square.c 627
                           4055 ;	genGoto
   0D85 C3 9B 0D           4056 	jp	00110$
                           4057 ;	square.c 629
                           4058 ;	genLabel
   0D88                    4059 00108$:
                           4060 ;	genAssign
                           4061 ;	AOP_HL for _clkB
                           4062 ;	AOP_HL for _clockToSync
   0D88 21 24 00           4063 	ld	hl,#_clkB
   0D8B 7E                 4064 	ld	a,(hl)
   0D8C 21 1E 00           4065 	ld	hl,#_clockToSync
   0D8F 77                 4066 	ld	(hl),a
                           4067 ;	square.c 630
                           4068 ;	genGoto
   0D90 C3 9B 0D           4069 	jp	00110$
                           4070 ;	square.c 632
                           4071 ;	genLabel
   0D93                    4072 00109$:
                           4073 ;	genAssign
                           4074 ;	AOP_HL for _clkC
                           4075 ;	AOP_HL for _clockToSync
   0D93 21 27 00           4076 	ld	hl,#_clkC
   0D96 7E                 4077 	ld	a,(hl)
   0D97 21 1E 00           4078 	ld	hl,#_clockToSync
   0D9A 77                 4079 	ld	(hl),a
                           4080 ;	square.c 634
                           4081 ;	genLabel
   0D9B                    4082 00110$:
                           4083 ;	square.c 636
                           4084 ;	genCmpEq
                           4085 ;	AOP_HL for _clockToSync
                           4086 ; genCmpEq: left 1, right 1, result 0
   0D9B 21 1E 00           4087 	ld	hl,#_clockToSync
   0D9E 7E                 4088 	ld	a,(hl)
   0D9F B7                 4089 	or	a,a
   0DA0 C2 BF 0D           4090 	jp	nz,00114$
   0DA3 18 03              4091 	jr	00149$
   0DA5                    4092 00148$:
   0DA5 C3 BF 0D           4093 	jp	00114$
   0DA8                    4094 00149$:
                           4095 ;	square.c 638
                           4096 ;	genAssign
                           4097 ;	AOP_HL for _clkA
   0DA8 21 21 00           4098 	ld	hl,#_clkA
   0DAB 36 00              4099 	ld	(hl),#0x00
                           4100 ;	square.c 639
                           4101 ;	genAssign
                           4102 ;	AOP_HL for _clkB
   0DAD 21 24 00           4103 	ld	hl,#_clkB
   0DB0 36 00              4104 	ld	(hl),#0x00
                           4105 ;	square.c 640
                           4106 ;	genAssign
                           4107 ;	AOP_HL for _clkC
   0DB2 21 27 00           4108 	ld	hl,#_clkC
   0DB5 36 00              4109 	ld	(hl),#0x00
                           4110 ;	square.c 641
                           4111 ;	genAssign
                           4112 ;	AOP_HL for _syncToDrum
   0DB7 21 1D 00           4113 	ld	hl,#_syncToDrum
   0DBA 36 00              4114 	ld	(hl),#0x00
                           4115 ;	square.c 642
                           4116 ;	genCall
                           4117 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DBC CD 3F 06           4118 	call	_updateUI
                           4119 ;	genLabel
   0DBF                    4120 00114$:
                           4121 ;	square.c 646
                           4122 ;	genPlus
                           4123 ;	AOP_HL for _clkA
                           4124 ;	Can't optimise plus by inc, falling back to the normal way
   0DBF 3E 2B              4125 	ld	a,#<_drumA
   0DC1 21 21 00           4126 	ld	hl,#_clkA
   0DC4 86                 4127 	add	a,(hl)
   0DC5 4F                 4128 	ld	c,a
   0DC6 3E 00              4129 	ld	a,#>_drumA
   0DC8 CE 00              4130 	adc	a,#0x00
   0DCA 47                 4131 	ld	b,a
                           4132 ;	genPointerGet
   0DCB 0A                 4133 	ld	a,(bc)
                           4134 ;	genCmpEq
                           4135 ; genCmpEq: left 1, right 1, result 0
   0DCC 4F                 4136 	ld	c,a
   0DCD FE 01              4137 	cp	a,#0x01
   0DCF C2 EE 0D           4138 	jp	nz,00118$
   0DD2 18 03              4139 	jr	00151$
   0DD4                    4140 00150$:
   0DD4 C3 EE 0D           4141 	jp	00118$
   0DD7                    4142 00151$:
                           4143 ;	square.c 648
                           4144 ;	genCmpEq
                           4145 ;	AOP_HL for _xA
                           4146 ; genCmpEq: left 1, right 1, result 0
   0DD7 21 16 00           4147 	ld	hl,#_xA
   0DDA 7E                 4148 	ld	a,(hl)
   0DDB B7                 4149 	or	a,a
   0DDC CA EB 0D           4150 	jp	z,00116$
   0DDF                    4151 00152$:
                           4152 ;	square.c 649
                           4153 ;	genCast
                           4154 ;	AOP_HL for _xA
   0DDF 21 16 00           4155 	ld	hl,#_xA
   0DE2 4E                 4156 	ld	c,(hl)
   0DE3 06 00              4157 	ld	b,#0x00
                           4158 ;	genIpush
                           4159 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DE5 C5                 4160 	push	bc
                           4161 ;	genCall
   0DE6 CD 00 00           4162 	call	_delay
   0DE9 E8 02              4163 	lda	sp,2(sp)
                           4164 ;	genLabel
   0DEB                    4165 00116$:
                           4166 ;	square.c 650
                           4167 ;	genCall
                           4168 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DEB CD 30 00           4169 	call	_makeASound
                           4170 ;	genLabel
   0DEE                    4171 00118$:
                           4172 ;	square.c 652
                           4173 ;	genPlus
                           4174 ;	AOP_HL for _clkB
                           4175 ;	Can't optimise plus by inc, falling back to the normal way
   0DEE 3E 4B              4176 	ld	a,#<_drumB
   0DF0 21 24 00           4177 	ld	hl,#_clkB
   0DF3 86                 4178 	add	a,(hl)
   0DF4 4F                 4179 	ld	c,a
   0DF5 3E 00              4180 	ld	a,#>_drumB
   0DF7 CE 00              4181 	adc	a,#0x00
   0DF9 47                 4182 	ld	b,a
                           4183 ;	genPointerGet
   0DFA 0A                 4184 	ld	a,(bc)
                           4185 ;	genCmpEq
                           4186 ; genCmpEq: left 1, right 1, result 0
   0DFB 4F                 4187 	ld	c,a
   0DFC FE 01              4188 	cp	a,#0x01
   0DFE C2 1D 0E           4189 	jp	nz,00122$
   0E01 18 03              4190 	jr	00154$
   0E03                    4191 00153$:
   0E03 C3 1D 0E           4192 	jp	00122$
   0E06                    4193 00154$:
                           4194 ;	square.c 654
                           4195 ;	genCmpEq
                           4196 ;	AOP_HL for _xB
                           4197 ; genCmpEq: left 1, right 1, result 0
   0E06 21 17 00           4198 	ld	hl,#_xB
   0E09 7E                 4199 	ld	a,(hl)
   0E0A B7                 4200 	or	a,a
   0E0B CA 1A 0E           4201 	jp	z,00120$
   0E0E                    4202 00155$:
                           4203 ;	square.c 655
                           4204 ;	genCast
                           4205 ;	AOP_HL for _xB
   0E0E 21 17 00           4206 	ld	hl,#_xB
   0E11 4E                 4207 	ld	c,(hl)
   0E12 06 00              4208 	ld	b,#0x00
                           4209 ;	genIpush
                           4210 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E14 C5                 4211 	push	bc
                           4212 ;	genCall
   0E15 CD 00 00           4213 	call	_delay
   0E18 E8 02              4214 	lda	sp,2(sp)
                           4215 ;	genLabel
   0E1A                    4216 00120$:
                           4217 ;	square.c 656
                           4218 ;	genCall
                           4219 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E1A CD 69 00           4220 	call	_makeBSound
                           4221 ;	genLabel
   0E1D                    4222 00122$:
                           4223 ;	square.c 658
                           4224 ;	genPlus
                           4225 ;	AOP_HL for _clkC
                           4226 ;	Can't optimise plus by inc, falling back to the normal way
   0E1D 3E 6B              4227 	ld	a,#<_drumC
   0E1F 21 27 00           4228 	ld	hl,#_clkC
   0E22 86                 4229 	add	a,(hl)
   0E23 4F                 4230 	ld	c,a
   0E24 3E 00              4231 	ld	a,#>_drumC
   0E26 CE 00              4232 	adc	a,#0x00
   0E28 47                 4233 	ld	b,a
                           4234 ;	genPointerGet
   0E29 0A                 4235 	ld	a,(bc)
                           4236 ;	genCmpEq
                           4237 ; genCmpEq: left 1, right 1, result 0
   0E2A 4F                 4238 	ld	c,a
   0E2B FE 01              4239 	cp	a,#0x01
   0E2D C2 4C 0E           4240 	jp	nz,00126$
   0E30 18 03              4241 	jr	00157$
   0E32                    4242 00156$:
   0E32 C3 4C 0E           4243 	jp	00126$
   0E35                    4244 00157$:
                           4245 ;	square.c 660
                           4246 ;	genCmpEq
                           4247 ;	AOP_HL for _xC
                           4248 ; genCmpEq: left 1, right 1, result 0
   0E35 21 18 00           4249 	ld	hl,#_xC
   0E38 7E                 4250 	ld	a,(hl)
   0E39 B7                 4251 	or	a,a
   0E3A CA 49 0E           4252 	jp	z,00124$
   0E3D                    4253 00158$:
                           4254 ;	square.c 661
                           4255 ;	genCast
                           4256 ;	AOP_HL for _xC
   0E3D 21 18 00           4257 	ld	hl,#_xC
   0E40 4E                 4258 	ld	c,(hl)
   0E41 06 00              4259 	ld	b,#0x00
                           4260 ;	genIpush
                           4261 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E43 C5                 4262 	push	bc
                           4263 ;	genCall
   0E44 CD 00 00           4264 	call	_delay
   0E47 E8 02              4265 	lda	sp,2(sp)
                           4266 ;	genLabel
   0E49                    4267 00124$:
                           4268 ;	square.c 662
                           4269 ;	genCall
                           4270 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E49 CD 9C 00           4271 	call	_makeCSound
                           4272 ;	genLabel
   0E4C                    4273 00126$:
                           4274 ;	square.c 665
                           4275 ;	genPlus
                           4276 ;	AOP_HL for _clkA
                           4277 ;	genPlusIncr
   0E4C 21 21 00           4278 	ld	hl,#_clkA
   0E4F 34                 4279 	inc	(hl)
                           4280 ;	square.c 666
                           4281 ;	genPlus
                           4282 ;	AOP_HL for _clkB
                           4283 ;	genPlusIncr
   0E50 21 24 00           4284 	ld	hl,#_clkB
   0E53 34                 4285 	inc	(hl)
                           4286 ;	square.c 667
                           4287 ;	genPlus
                           4288 ;	AOP_HL for _clkC
                           4289 ;	genPlusIncr
   0E54 21 27 00           4290 	ld	hl,#_clkC
   0E57 34                 4291 	inc	(hl)
                           4292 ;	genLabel
   0E58                    4293 00127$:
                           4294 ;	genEndFunction
                           4295 	
   0E58 C9                 4296 	ret
   0E59                    4297 ___tick_end:
                           4298 ;	square.c 672
                           4299 ;	genLabel
                           4300 ;	genFunction
                           4301 ;	---------------------------------
                           4302 ; Function slave
                           4303 ; ---------------------------------
   0E59                    4304 ___slave_start:
   0E59                    4305 _slave:
                           4306 	
                           4307 ;	square.c 674
                           4308 ;	genAssign
                           4309 ;	AOP_HL for _pop
                           4310 ;	AOP_HL for _bob
   0E59 21 06 00           4311 	ld	hl,#_pop
   0E5C 7E                 4312 	ld	a,(hl)
   0E5D 21 04 00           4313 	ld	hl,#_bob
   0E60 77                 4314 	ld	(hl),a
                           4315 ;	square.c 675
                           4316 ;	genAssign
   0E61 01 02 FF           4317 	ld	bc,#0xFF02
                           4318 ;	genAssign (pointer)
   0E64 3E 80              4319 	ld	a,#0x80
   0E66 02                 4320 	ld	(bc),a
                           4321 ;	square.c 676
                           4322 ;	genPointerGet
                           4323 ;	AOP_HL for _todd
   0E67 11 01 FF           4324 	ld	de,#0xFF01
   0E6A 1A                 4325 	ld	a,(de)
   0E6B 21 05 00           4326 	ld	hl,#_todd
                           4327 ;	square.c 677
                           4328 ;	genCmpEq
                           4329 ;	AOP_HL for _todd
                           4330 ; genCmpEq: left 1, right 1, result 0
   0E6E 77                 4331 	ld      (hl),a
                           4332 ; Removed redundent load
   0E6F B7                 4333 	or	a,a
   0E70 C2 80 0E           4334 	jp	nz,00102$
   0E73 18 03              4335 	jr	00111$
   0E75                    4336 00110$:
   0E75 C3 80 0E           4337 	jp	00102$
   0E78                    4338 00111$:
                           4339 ;	square.c 678
                           4340 ;	genAssign
                           4341 ;	AOP_HL for _pop
   0E78 21 06 00           4342 	ld	hl,#_pop
   0E7B 36 00              4343 	ld	(hl),#0x00
                           4344 ;	genGoto
   0E7D C3 85 0E           4345 	jp	00103$
                           4346 ;	genLabel
   0E80                    4347 00102$:
                           4348 ;	square.c 680
                           4349 ;	genAssign
                           4350 ;	AOP_HL for _pop
   0E80 21 06 00           4351 	ld	hl,#_pop
   0E83 36 01              4352 	ld	(hl),#0x01
                           4353 ;	genLabel
   0E85                    4354 00103$:
                           4355 ;	square.c 681
                           4356 ;	genCmpEq
                           4357 ;	AOP_HL for _pop
                           4358 ; genCmpEq: left 1, right 1, result 0
   0E85 21 06 00           4359 	ld	hl,#_pop
   0E88 7E                 4360 	ld	a,(hl)
   0E89 FE 01              4361 	cp	a,#0x01
   0E8B C2 96 0E           4362 	jp	nz,00106$
   0E8E 18 03              4363 	jr	00113$
   0E90                    4364 00112$:
   0E90 C3 96 0E           4365 	jp	00106$
   0E93                    4366 00113$:
                           4367 ;	square.c 683
                           4368 ;	genCall
                           4369 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E93 CD 22 0D           4370 	call	_tick
                           4371 ;	genLabel
   0E96                    4372 00106$:
                           4373 ;	genEndFunction
                           4374 	
   0E96 C9                 4375 	ret
   0E97                    4376 ___slave_end:
                           4377 ;	square.c 689
                           4378 ;	genLabel
                           4379 ;	genFunction
                           4380 ;	---------------------------------
                           4381 ; Function master
                           4382 ; ---------------------------------
   0E97                    4383 ___master_start:
   0E97                    4384 _master:
                           4385 	
                           4386 ;	square.c 691
                           4387 ;	genPlus
                           4388 ;	AOP_HL for _watch
                           4389 ;	genPlusIncr
   0E97 21 03 00           4390 	ld	hl,#_watch
   0E9A 34                 4391 	inc	(hl)
                           4392 ;	square.c 692
                           4393 ;	genCmpGt
                           4394 ;	AOP_HL for _watch
                           4395 ;	AOP_HL for _tempo
   0E9B 21 02 00           4396 	ld	hl,#_tempo
   0E9E 7E                 4397 	ld	a,(hl)
   0E9F 21 03 00           4398 	ld	hl,#_watch
   0EA2 96                 4399 	sub	a,(hl)
   0EA3 D2 AB 0E           4400 	jp	nc,00103$
                           4401 ;	square.c 694
                           4402 ;	genAssign
                           4403 ;	AOP_HL for _watch
   0EA6 36 00              4404 	ld	(hl),#0x00
                           4405 ;	square.c 695
                           4406 ;	genCall
                           4407 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EA8 CD 22 0D           4408 	call	_tick
                           4409 ;	genLabel
   0EAB                    4410 00103$:
                           4411 ;	genEndFunction
                           4412 	
   0EAB C9                 4413 	ret
   0EAC                    4414 ___master_end:
                           4415 ;	square.c 699
                           4416 ;	genLabel
                           4417 ;	genFunction
                           4418 ;	---------------------------------
                           4419 ; Function player
                           4420 ; ---------------------------------
   0EAC                    4421 ___player_start:
   0EAC                    4422 _player:
                           4423 	
                           4424 ;	square.c 701
                           4425 ;	genCmpEq
                           4426 ;	AOP_HL for _modus
                           4427 ; genCmpEq: left 1, right 1, result 0
   0EAC 21 07 00           4428 	ld	hl,#_modus
   0EAF 7E                 4429 	ld	a,(hl)
   0EB0 B7                 4430 	or	a,a
   0EB1 C2 BF 0E           4431 	jp	nz,00102$
   0EB4 18 03              4432 	jr	00108$
   0EB6                    4433 00107$:
   0EB6 C3 BF 0E           4434 	jp	00102$
   0EB9                    4435 00108$:
                           4436 ;	square.c 703
                           4437 ;	genCall
                           4438 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EB9 CD 97 0E           4439 	call	_master
                           4440 ;	genGoto
   0EBC C3 C2 0E           4441 	jp	00104$
                           4442 ;	genLabel
   0EBF                    4443 00102$:
                           4444 ;	square.c 706
                           4445 ;	genCall
                           4446 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EBF CD 59 0E           4447 	call	_slave
                           4448 ;	genLabel
   0EC2                    4449 00104$:
                           4450 ;	genEndFunction
                           4451 	
   0EC2 C9                 4452 	ret
   0EC3                    4453 ___player_end:
                           4454 ;	square.c 710
                           4455 ;	genLabel
                           4456 ;	genFunction
                           4457 ;	---------------------------------
                           4458 ; Function tim
                           4459 ; ---------------------------------
   0EC3                    4460 ___tim_start:
   0EC3                    4461 _tim:
                           4462 	
                           4463 ;	square.c 712
                           4464 ;	genCall
                           4465 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EC3 CD AC 0E           4466 	call	_player
                           4467 ;	genLabel
   0EC6                    4468 00101$:
                           4469 ;	genEndFunction
                           4470 	
   0EC6 C9                 4471 	ret
   0EC7                    4472 ___tim_end:
                           4473 ;	square.c 716
                           4474 ;	genLabel
                           4475 ;	genFunction
                           4476 ;	---------------------------------
                           4477 ; Function main
                           4478 ; ---------------------------------
   0EC7                    4479 ___main_start:
   0EC7                    4480 _main:
   0EC7 E8 FD              4481 	lda	sp,-3(sp)
                           4482 ;	square.c 718
                           4483 ;	genAssign
   0EC9 01 24 FF           4484 	ld	bc,#0xFF24
                           4485 ;	genAssign (pointer)
   0ECC 3E FF              4486 	ld	a,#0xFF
   0ECE 02                 4487 	ld	(bc),a
                           4488 ;	square.c 719
                           4489 ;	genAssign
   0ECF 01 25 FF           4490 	ld	bc,#0xFF25
                           4491 ;	genAssign (pointer)
   0ED2 3E FF              4492 	ld	a,#0xFF
   0ED4 02                 4493 	ld	(bc),a
                           4494 ;	square.c 720
                           4495 ;	genAssign
   0ED5 01 26 FF           4496 	ld	bc,#0xFF26
                           4497 ;	genAssign (pointer)
   0ED8 3E 80              4498 	ld	a,#0x80
   0EDA 02                 4499 	ld	(bc),a
                           4500 ;	square.c 721
                           4501 ;	genAssign
                           4502 ;	AOP_HL for _watch
   0EDB 21 03 00           4503 	ld	hl,#_watch
   0EDE 36 00              4504 	ld	(hl),#0x00
                           4505 ;	square.c 722
                           4506 ;	genAssign
                           4507 ;	AOP_HL for _clkA
   0EE0 21 21 00           4508 	ld	hl,#_clkA
   0EE3 36 00              4509 	ld	(hl),#0x00
                           4510 ;	square.c 723
                           4511 ;	genAssign
                           4512 ;	AOP_HL for _pop
   0EE5 21 06 00           4513 	ld	hl,#_pop
   0EE8 36 00              4514 	ld	(hl),#0x00
                           4515 ;	square.c 724
                           4516 ;	genAssign
                           4517 ;	AOP_HL for _numberOfPulsesA
   0EEA 21 1F 00           4518 	ld	hl,#_numberOfPulsesA
   0EED 36 01              4519 	ld	(hl),#0x01
                           4520 ;	square.c 725
                           4521 ;	genAssign
                           4522 ;	AOP_HL for _totalStepsA
   0EEF 21 20 00           4523 	ld	hl,#_totalStepsA
   0EF2 36 10              4524 	ld	(hl),#0x10
                           4525 ;	square.c 726
                           4526 ;	genAssign
                           4527 ;	AOP_HL for _numberOfPulsesB
   0EF4 21 22 00           4528 	ld	hl,#_numberOfPulsesB
   0EF7 36 02              4529 	ld	(hl),#0x02
                           4530 ;	square.c 727
                           4531 ;	genAssign
                           4532 ;	AOP_HL for _totalStepsB
   0EF9 21 23 00           4533 	ld	hl,#_totalStepsB
   0EFC 36 10              4534 	ld	(hl),#0x10
                           4535 ;	square.c 728
                           4536 ;	genAssign
                           4537 ;	AOP_HL for _numberOfPulsesC
   0EFE 21 25 00           4538 	ld	hl,#_numberOfPulsesC
   0F01 36 04              4539 	ld	(hl),#0x04
                           4540 ;	square.c 729
                           4541 ;	genAssign
                           4542 ;	AOP_HL for _totalStepsC
   0F03 21 26 00           4543 	ld	hl,#_totalStepsC
   0F06 36 10              4544 	ld	(hl),#0x10
                           4545 ;	square.c 730
                           4546 ;	genAssign
                           4547 ;	AOP_HL for _offStepA
   0F08 21 28 00           4548 	ld	hl,#_offStepA
   0F0B 36 00              4549 	ld	(hl),#0x00
                           4550 ;	square.c 731
                           4551 ;	genAssign
                           4552 ;	AOP_HL for _offStepB
   0F0D 21 29 00           4553 	ld	hl,#_offStepB
   0F10 36 00              4554 	ld	(hl),#0x00
                           4555 ;	square.c 732
                           4556 ;	genAssign
                           4557 ;	AOP_HL for _offStepC
   0F12 21 2A 00           4558 	ld	hl,#_offStepC
   0F15 36 00              4559 	ld	(hl),#0x00
                           4560 ;	square.c 733
                           4561 ;	genAssign
                           4562 ;	AOP_HL for _randA
   0F17 21 0F 00           4563 	ld	hl,#_randA
   0F1A 36 00              4564 	ld	(hl),#0x00
                           4565 ;	square.c 734
                           4566 ;	genAssign
                           4567 ;	AOP_HL for _randB
   0F1C 21 10 00           4568 	ld	hl,#_randB
   0F1F 36 00              4569 	ld	(hl),#0x00
                           4570 ;	square.c 735
                           4571 ;	genAssign
                           4572 ;	AOP_HL for _randC
   0F21 21 11 00           4573 	ld	hl,#_randC
   0F24 36 00              4574 	ld	(hl),#0x00
                           4575 ;	square.c 736
                           4576 ;	genAssign
                           4577 ;	AOP_HL for _xA
   0F26 21 16 00           4578 	ld	hl,#_xA
   0F29 36 00              4579 	ld	(hl),#0x00
                           4580 ;	square.c 737
                           4581 ;	genAssign
                           4582 ;	AOP_HL for _xB
   0F2B 21 17 00           4583 	ld	hl,#_xB
   0F2E 36 00              4584 	ld	(hl),#0x00
                           4585 ;	square.c 738
                           4586 ;	genAssign
                           4587 ;	AOP_HL for _xC
   0F30 21 18 00           4588 	ld	hl,#_xC
   0F33 36 00              4589 	ld	(hl),#0x00
                           4590 ;	square.c 739
                           4591 ;	genAssign
                           4592 ;	AOP_HL for _delayA
   0F35 21 19 00           4593 	ld	hl,#_delayA
   0F38 36 01              4594 	ld	(hl),#0x01
                           4595 ;	square.c 740
                           4596 ;	genAssign
                           4597 ;	AOP_HL for _delayB
   0F3A 21 1A 00           4598 	ld	hl,#_delayB
   0F3D 36 01              4599 	ld	(hl),#0x01
                           4600 ;	square.c 741
                           4601 ;	genAssign
                           4602 ;	AOP_HL for _delayC
   0F3F 21 1B 00           4603 	ld	hl,#_delayC
   0F42 36 01              4604 	ld	(hl),#0x01
                           4605 ;	square.c 742
                           4606 ;	genAssign
                           4607 ;	AOP_HL for _modus
   0F44 21 07 00           4608 	ld	hl,#_modus
   0F47 36 00              4609 	ld	(hl),#0x00
                           4610 ;	square.c 743
                           4611 ;	genAssign
                           4612 ;	AOP_HL for _samp_freq
   0F49 21 01 00           4613 	ld	hl,#_samp_freq
   0F4C 36 A4              4614 	ld	(hl),#0xA4
                           4615 ;	square.c 744
                           4616 ;	genAssign
                           4617 ;	AOP_HL for _tempo
   0F4E 21 02 00           4618 	ld	hl,#_tempo
   0F51 36 14              4619 	ld	(hl),#0x14
                           4620 ;	square.c 745
                           4621 ;	genAssign
                           4622 ;	AOP_HL for _seldrum
   0F53 21 0B 00           4623 	ld	hl,#_seldrum
   0F56 36 00              4624 	ld	(hl),#0x00
                           4625 ;	square.c 746
                           4626 ;	genAssign
                           4627 ;	AOP_HL for _syncToDrum
   0F58 21 1D 00           4628 	ld	hl,#_syncToDrum
   0F5B 36 00              4629 	ld	(hl),#0x00
                           4630 ;	square.c 747
                           4631 ;	genCall
                           4632 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F5D CD CF 00           4633 	call	_fillDrumA
                           4634 ;	square.c 748
                           4635 ;	genCall
                           4636 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F60 CD 9F 02           4637 	call	_fillDrumB
                           4638 ;	square.c 749
                           4639 ;	genCall
                           4640 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F63 CD 6F 04           4641 	call	_fillDrumC
                           4642 ;	square.c 750
                           4643 ;	genCall
                           4644 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F66 CD 00 00           4645 	call	_disable_interrupts
                           4646 ;	square.c 751
                           4647 ;	genIpush
                           4648 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F69 21 C3 0E           4649 	ld	hl,#_tim
   0F6C E5                 4650 	push	hl
                           4651 ;	genCall
   0F6D CD 00 00           4652 	call	_add_TIM
   0F70 E8 02              4653 	lda	sp,2(sp)
                           4654 ;	square.c 752
                           4655 ;	genCall
                           4656 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F72 CD 00 00           4657 	call	_enable_interrupts
                           4658 ;	square.c 753
                           4659 ;	genAssign
   0F75 01 06 FF           4660 	ld	bc,#0xFF06
                           4661 ;	genAssign (pointer)
                           4662 ;	AOP_HL for _samp_freq
   0F78 21 01 00           4663 	ld	hl,#_samp_freq
   0F7B 7E                 4664 	ld	a,(hl)
   0F7C 02                 4665 	ld	(bc),a
                           4666 ;	square.c 758
                           4667 ;	genAssign
   0F7D 01 07 FF           4668 	ld	bc,#0xFF07
                           4669 ;	genAssign (pointer)
   0F80 3E 07              4670 	ld	a,#0x07
   0F82 02                 4671 	ld	(bc),a
                           4672 ;	square.c 760
                           4673 ;	genIpush
                           4674 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F83 3E 05              4675 	ld	a,#0x05
   0F85 F5                 4676 	push	af
   0F86 33                 4677 	inc	sp
                           4678 ;	genCall
   0F87 CD 00 00           4679 	call	_set_interrupts
   0F8A E8 01              4680 	lda	sp,1(sp)
                           4681 ;	square.c 761
                           4682 ;	genAssign
   0F8C 01 40 FF           4683 	ld	bc,#0xFF40
                           4684 ;	genAssign
                           4685 ;	AOP_STK for _main_sloc0_1_0
   0F8F F8 01              4686 	lda	hl,1(sp)
   0F91 36 40              4687 	ld	(hl),#0x40
   0F93 23                 4688 	inc	hl
   0F94 36 FF              4689 	ld	(hl),#0xFF
                           4690 ;	genPointerGet
                           4691 ;	AOP_STK for _main_sloc0_1_0
                           4692 ;	AOP_STK for _main_sloc1_1_0
   0F96 2B                 4693 	dec	hl
   0F97 5E                 4694 	ld	e,(hl)
   0F98 23                 4695 	inc	hl
   0F99 56                 4696 	ld	d,(hl)
   0F9A 1A                 4697 	ld	a,(de)
   0F9B 2B                 4698 	dec	hl
   0F9C 2B                 4699 	dec	hl
                           4700 ;	genOr
                           4701 ;	AOP_STK for _main_sloc1_1_0
   0F9D 77                 4702 	ld      (hl),a
                           4703 ; Removed redundent load
   0F9E F6 80              4704 	or	a,#0x80
                           4705 ;	genAssign (pointer)
   0FA0 02                 4706 	ld	(bc),a
                           4707 ;	square.c 763
                           4708 ;	genCall
                           4709 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FA1 CD 3F 06           4710 	call	_updateUI
                           4711 ;	square.c 765
                           4712 ;	genLabel
   0FA4                    4713 00144$:
                           4714 ;	square.c 767
                           4715 ;	genCall
                           4716 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FA4 CD 00 00           4717 	call	_joypad
   0FA7 4B                 4718 	ld	c,e
                           4719 ;	genCmpEq
                           4720 ; genCmpEq: left 1, right 1, result 0
   0FA8 79                 4721 	ld	a,c
   0FA9 B7                 4722 	or	a,a
   0FAA CA B4 0F           4723 	jp	z,00102$
   0FAD                    4724 00169$:
                           4725 ;	square.c 768
                           4726 ;	genPlus
                           4727 ;	AOP_HL for _pad
                           4728 ;	genPlusIncr
   0FAD 21 0A 00           4729 	ld	hl,#_pad
   0FB0 34                 4730 	inc	(hl)
                           4731 ;	genGoto
   0FB1 C3 B9 0F           4732 	jp	00103$
                           4733 ;	genLabel
   0FB4                    4734 00102$:
                           4735 ;	square.c 771
                           4736 ;	genAssign
                           4737 ;	AOP_HL for _pad
   0FB4 21 0A 00           4738 	ld	hl,#_pad
   0FB7 36 00              4739 	ld	(hl),#0x00
                           4740 ;	genLabel
   0FB9                    4741 00103$:
                           4742 ;	square.c 774
                           4743 ;	genCall
                           4744 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FB9 CD 00 00           4745 	call	_joypad
   0FBC 4B                 4746 	ld	c,e
                           4747 ;	genCmpEq
                           4748 ;	AOP_HL for _joy
                           4749 ; genCmpEq: left 1, right 1, result 0
   0FBD 21 09 00           4750 	ld	hl,#_joy
   0FC0 7E                 4751 	ld	a,(hl)
   0FC1 B9                 4752 	cp	c
   0FC2 20 02              4753 	jr	nz,00170$
   0FC4 18 03              4754 	jr	00171$
   0FC6                    4755 00170$:
   0FC6 C3 D2 0F           4756 	jp	00104$
   0FC9                    4757 00171$:
                           4758 ;	genCmpGt
                           4759 ;	AOP_HL for _pad
   0FC9 3E 0A              4760 	ld	a,#0x0A
   0FCB 21 0A 00           4761 	ld	hl,#_pad
   0FCE 96                 4762 	sub	a,(hl)
   0FCF D2 DC 0F           4763 	jp	nc,00105$
                           4764 ;	genLabel
   0FD2                    4765 00104$:
                           4766 ;	square.c 775
                           4767 ;	genCall
                           4768 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FD2 CD 00 00           4769 	call	_joypad
                           4770 ;	AOP_HL for _padext
   0FD5 21 08 00           4771 	ld	hl,#_padext
   0FD8 73                 4772 	ld	(hl),e
                           4773 ;	genGoto
   0FD9 C3 E1 0F           4774 	jp	00106$
                           4775 ;	genLabel
   0FDC                    4776 00105$:
                           4777 ;	square.c 778
                           4778 ;	genAssign
                           4779 ;	AOP_HL for _padext
   0FDC 21 08 00           4780 	ld	hl,#_padext
   0FDF 36 00              4781 	ld	(hl),#0x00
                           4782 ;	genLabel
   0FE1                    4783 00106$:
                           4784 ;	square.c 782
                           4785 ;	genCall
                           4786 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FE1 CD 00 00           4787 	call	_joypad
   0FE4 4B                 4788 	ld	c,e
                           4789 ;	genCmpEq
                           4790 ;	AOP_HL for _joy
                           4791 ; genCmpEq: left 1, right 1, result 0
   0FE5 21 09 00           4792 	ld	hl,#_joy
   0FE8 7E                 4793 	ld	a,(hl)
   0FE9 B9                 4794 	cp	c
   0FEA 20 03              4795 	jr	nz,00172$
   0FEC C3 F4 0F           4796 	jp	00109$
   0FEF                    4797 00172$:
                           4798 ;	square.c 784
                           4799 ;	genAssign
                           4800 ;	AOP_HL for _pad
   0FEF 21 0A 00           4801 	ld	hl,#_pad
   0FF2 36 00              4802 	ld	(hl),#0x00
                           4803 ;	genLabel
   0FF4                    4804 00109$:
                           4805 ;	square.c 787
                           4806 ;	genCall
                           4807 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FF4 CD 00 00           4808 	call	_joypad
                           4809 ;	AOP_HL for _joy
   0FF7 21 09 00           4810 	ld	hl,#_joy
   0FFA 73                 4811 	ld	(hl),e
                           4812 ;	square.c 790
                           4813 ;	genCall
                           4814 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FFB CD 00 00           4815 	call	_joypad
   0FFE 4B                 4816 	ld	c,e
                           4817 ;	genCmpEq
                           4818 ; genCmpEq: left 1, right 1, result 0
   0FFF 79                 4819 	ld	a,c
   1000 FE 40              4820 	cp	a,#0x40
   1002 C2 24 10           4821 	jp	nz,00113$
   1005 18 03              4822 	jr	00174$
   1007                    4823 00173$:
   1007 C3 24 10           4824 	jp	00113$
   100A                    4825 00174$:
                           4826 ;	square.c 792
                           4827 ;	genPlus
                           4828 ;	AOP_HL for _seldrum
                           4829 ;	genPlusIncr
   100A 21 0B 00           4830 	ld	hl,#_seldrum
   100D 34                 4831 	inc	(hl)
                           4832 ;	square.c 793
                           4833 ;	genCmpEq
                           4834 ;	AOP_HL for _seldrum
                           4835 ; genCmpEq: left 1, right 1, result 0
   100E 7E                 4836 	ld	a,(hl)
   100F FE 03              4837 	cp	a,#0x03
   1011 C2 1E 10           4838 	jp	nz,00111$
   1014 18 03              4839 	jr	00176$
   1016                    4840 00175$:
   1016 C3 1E 10           4841 	jp	00111$
   1019                    4842 00176$:
                           4843 ;	square.c 795
                           4844 ;	genAssign
                           4845 ;	AOP_HL for _seldrum
   1019 21 0B 00           4846 	ld	hl,#_seldrum
   101C 36 00              4847 	ld	(hl),#0x00
                           4848 ;	genLabel
   101E                    4849 00111$:
                           4850 ;	square.c 797
                           4851 ;	genCall
                           4852 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   101E CD 00 00           4853 	call	_waitpadup
                           4854 ;	square.c 798
                           4855 ;	genCall
                           4856 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1021 CD 3F 06           4857 	call	_updateUI
                           4858 ;	genLabel
   1024                    4859 00113$:
                           4860 ;	square.c 802
                           4861 ;	genCall
                           4862 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1024 CD 00 00           4863 	call	_joypad
   1027 4B                 4864 	ld	c,e
                           4865 ;	genCmpEq
                           4866 ; genCmpEq: left 1, right 1, result 0
   1028 79                 4867 	ld	a,c
   1029 FE 80              4868 	cp	a,#0x80
   102B C2 71 10           4869 	jp	nz,00118$
   102E 18 03              4870 	jr	00178$
   1030                    4871 00177$:
   1030 C3 71 10           4872 	jp	00118$
   1033                    4873 00178$:
                           4874 ;	square.c 804
                           4875 ;	genCmpEq
                           4876 ;	AOP_HL for _modus
                           4877 ; genCmpEq: left 1, right 1, result 0
   1033 21 07 00           4878 	ld	hl,#_modus
   1036 7E                 4879 	ld	a,(hl)
   1037 B7                 4880 	or	a,a
   1038 C2 57 10           4881 	jp	nz,00115$
   103B 18 03              4882 	jr	00180$
   103D                    4883 00179$:
   103D C3 57 10           4884 	jp	00115$
   1040                    4885 00180$:
                           4886 ;	square.c 806
                           4887 ;	genAssign
                           4888 ;	AOP_HL for _clkA
   1040 21 21 00           4889 	ld	hl,#_clkA
   1043 36 00              4890 	ld	(hl),#0x00
                           4891 ;	square.c 807
                           4892 ;	genAssign
                           4893 ;	AOP_HL for _clkB
   1045 21 24 00           4894 	ld	hl,#_clkB
   1048 36 00              4895 	ld	(hl),#0x00
                           4896 ;	square.c 808
                           4897 ;	genAssign
                           4898 ;	AOP_HL for _clkC
   104A 21 27 00           4899 	ld	hl,#_clkC
   104D 36 00              4900 	ld	(hl),#0x00
                           4901 ;	square.c 809
                           4902 ;	genAssign
                           4903 ;	AOP_HL for _modus
   104F 21 07 00           4904 	ld	hl,#_modus
   1052 36 01              4905 	ld	(hl),#0x01
                           4906 ;	genGoto
   1054 C3 6B 10           4907 	jp	00116$
                           4908 ;	genLabel
   1057                    4909 00115$:
                           4910 ;	square.c 813
                           4911 ;	genAssign
                           4912 ;	AOP_HL for _clkA
   1057 21 21 00           4913 	ld	hl,#_clkA
   105A 36 00              4914 	ld	(hl),#0x00
                           4915 ;	square.c 814
                           4916 ;	genAssign
                           4917 ;	AOP_HL for _clkB
   105C 21 24 00           4918 	ld	hl,#_clkB
   105F 36 00              4919 	ld	(hl),#0x00
                           4920 ;	square.c 815
                           4921 ;	genAssign
                           4922 ;	AOP_HL for _clkC
   1061 21 27 00           4923 	ld	hl,#_clkC
   1064 36 00              4924 	ld	(hl),#0x00
                           4925 ;	square.c 816
                           4926 ;	genAssign
                           4927 ;	AOP_HL for _modus
   1066 21 07 00           4928 	ld	hl,#_modus
   1069 36 00              4929 	ld	(hl),#0x00
                           4930 ;	genLabel
   106B                    4931 00116$:
                           4932 ;	square.c 818
                           4933 ;	genCall
                           4934 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   106B CD 3F 06           4935 	call	_updateUI
                           4936 ;	square.c 820
                           4937 ;	genCall
                           4938 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   106E CD 00 00           4939 	call	_waitpadup
                           4940 ;	genLabel
   1071                    4941 00118$:
                           4942 ;	square.c 823
                           4943 ;	genCall
                           4944 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1071 CD 00 00           4945 	call	_joypad
   1074 4B                 4946 	ld	c,e
                           4947 ;	genCmpEq
                           4948 ; genCmpEq: left 1, right 1, result 0
   1075 79                 4949 	ld	a,c
   1076 FE 08              4950 	cp	a,#0x08
   1078 C2 93 10           4951 	jp	nz,00120$
   107B 18 03              4952 	jr	00182$
   107D                    4953 00181$:
   107D C3 93 10           4954 	jp	00120$
   1080                    4955 00182$:
                           4956 ;	genCmpEq
                           4957 ;	AOP_HL for _tempo
                           4958 ; genCmpEq: left 1, right 1, result 0
   1080 21 02 00           4959 	ld	hl,#_tempo
   1083 7E                 4960 	ld	a,(hl)
   1084 FE 01              4961 	cp	a,#0x01
   1086 CA 93 10           4962 	jp	z,00120$
   1089                    4963 00183$:
                           4964 ;	square.c 825
                           4965 ;	genMinus
                           4966 ;	AOP_HL for _tempo
   1089 21 02 00           4967 	ld	hl,#_tempo
   108C 35                 4968 	dec	(hl)
                           4969 ;	square.c 827
                           4970 ;	genCall
                           4971 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   108D CD 00 00           4972 	call	_waitpadup
                           4973 ;	square.c 828
                           4974 ;	genCall
                           4975 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1090 CD 3F 06           4976 	call	_updateUI
                           4977 ;	genLabel
   1093                    4978 00120$:
                           4979 ;	square.c 832
                           4980 ;	genCall
                           4981 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1093 CD 00 00           4982 	call	_joypad
   1096 4B                 4983 	ld	c,e
                           4984 ;	genCmpEq
                           4985 ; genCmpEq: left 1, right 1, result 0
   1097 79                 4986 	ld	a,c
   1098 FE 04              4987 	cp	a,#0x04
   109A C2 B5 10           4988 	jp	nz,00123$
   109D 18 03              4989 	jr	00185$
   109F                    4990 00184$:
   109F C3 B5 10           4991 	jp	00123$
   10A2                    4992 00185$:
                           4993 ;	genCmpEq
                           4994 ;	AOP_HL for _tempo
                           4995 ; genCmpEq: left 1, right 1, result 0
   10A2 21 02 00           4996 	ld	hl,#_tempo
   10A5 7E                 4997 	ld	a,(hl)
   10A6 FE 28              4998 	cp	a,#0x28
   10A8 CA B5 10           4999 	jp	z,00123$
   10AB                    5000 00186$:
                           5001 ;	square.c 834
                           5002 ;	genPlus
                           5003 ;	AOP_HL for _tempo
                           5004 ;	genPlusIncr
   10AB 21 02 00           5005 	ld	hl,#_tempo
   10AE 34                 5006 	inc	(hl)
                           5007 ;	square.c 836
                           5008 ;	genCall
                           5009 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10AF CD 00 00           5010 	call	_waitpadup
                           5011 ;	square.c 837
                           5012 ;	genCall
                           5013 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10B2 CD 3F 06           5014 	call	_updateUI
                           5015 ;	genLabel
   10B5                    5016 00123$:
                           5017 ;	square.c 840
                           5018 ;	genCmpEq
                           5019 ;	AOP_HL for _padext
                           5020 ; genCmpEq: left 1, right 1, result 0
   10B5 21 08 00           5021 	ld	hl,#_padext
   10B8 7E                 5022 	ld	a,(hl)
   10B9 FE 21              5023 	cp	a,#0x21
   10BB C2 CF 10           5024 	jp	nz,00126$
   10BE 18 03              5025 	jr	00188$
   10C0                    5026 00187$:
   10C0 C3 CF 10           5027 	jp	00126$
   10C3                    5028 00188$:
                           5029 ;	square.c 842
                           5030 ;	genCall
                           5031 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10C3 CD 6F 0A           5032 	call	_increaseSteps
                           5033 ;	square.c 843
                           5034 ;	genIpush
                           5035 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10C6 21 C8 00           5036 	ld	hl,#0x00C8
   10C9 E5                 5037 	push	hl
                           5038 ;	genCall
   10CA CD 00 00           5039 	call	_delay
   10CD E8 02              5040 	lda	sp,2(sp)
                           5041 ;	genLabel
   10CF                    5042 00126$:
                           5043 ;	square.c 846
                           5044 ;	genCmpEq
                           5045 ;	AOP_HL for _padext
                           5046 ; genCmpEq: left 1, right 1, result 0
   10CF 21 08 00           5047 	ld	hl,#_padext
   10D2 7E                 5048 	ld	a,(hl)
   10D3 FE 22              5049 	cp	a,#0x22
   10D5 C2 E9 10           5050 	jp	nz,00128$
   10D8 18 03              5051 	jr	00190$
   10DA                    5052 00189$:
   10DA C3 E9 10           5053 	jp	00128$
   10DD                    5054 00190$:
                           5055 ;	square.c 848
                           5056 ;	genCall
                           5057 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10DD CD E4 0A           5058 	call	_decreaseSteps
                           5059 ;	square.c 849
                           5060 ;	genIpush
                           5061 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10E0 21 C8 00           5062 	ld	hl,#0x00C8
   10E3 E5                 5063 	push	hl
                           5064 ;	genCall
   10E4 CD 00 00           5065 	call	_delay
   10E7 E8 02              5066 	lda	sp,2(sp)
                           5067 ;	genLabel
   10E9                    5068 00128$:
                           5069 ;	square.c 852
                           5070 ;	genCmpEq
                           5071 ;	AOP_HL for _padext
                           5072 ; genCmpEq: left 1, right 1, result 0
   10E9 21 08 00           5073 	ld	hl,#_padext
   10EC 7E                 5074 	ld	a,(hl)
   10ED FE 24              5075 	cp	a,#0x24
   10EF C2 03 11           5076 	jp	nz,00130$
   10F2 18 03              5077 	jr	00192$
   10F4                    5078 00191$:
   10F4 C3 03 11           5079 	jp	00130$
   10F7                    5080 00192$:
                           5081 ;	square.c 854
                           5082 ;	genCall
                           5083 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10F7 CD 59 0B           5084 	call	_increasePulses
                           5085 ;	square.c 855
                           5086 ;	genIpush
                           5087 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10FA 21 C8 00           5088 	ld	hl,#0x00C8
   10FD E5                 5089 	push	hl
                           5090 ;	genCall
   10FE CD 00 00           5091 	call	_delay
   1101 E8 02              5092 	lda	sp,2(sp)
                           5093 ;	genLabel
   1103                    5094 00130$:
                           5095 ;	square.c 858
                           5096 ;	genCmpEq
                           5097 ;	AOP_HL for _padext
                           5098 ; genCmpEq: left 1, right 1, result 0
   1103 21 08 00           5099 	ld	hl,#_padext
   1106 7E                 5100 	ld	a,(hl)
   1107 FE 28              5101 	cp	a,#0x28
   1109 C2 1D 11           5102 	jp	nz,00132$
   110C 18 03              5103 	jr	00194$
   110E                    5104 00193$:
   110E C3 1D 11           5105 	jp	00132$
   1111                    5106 00194$:
                           5107 ;	square.c 860
                           5108 ;	genCall
                           5109 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1111 CD CE 0B           5110 	call	_decreasePulses
                           5111 ;	square.c 861
                           5112 ;	genIpush
                           5113 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1114 21 C8 00           5114 	ld	hl,#0x00C8
   1117 E5                 5115 	push	hl
                           5116 ;	genCall
   1118 CD 00 00           5117 	call	_delay
   111B E8 02              5118 	lda	sp,2(sp)
                           5119 ;	genLabel
   111D                    5120 00132$:
                           5121 ;	square.c 864
                           5122 ;	genCmpEq
                           5123 ;	AOP_HL for _padext
                           5124 ; genCmpEq: left 1, right 1, result 0
   111D 21 08 00           5125 	ld	hl,#_padext
   1120 7E                 5126 	ld	a,(hl)
   1121 FE 14              5127 	cp	a,#0x14
   1123 C2 37 11           5128 	jp	nz,00134$
   1126 18 03              5129 	jr	00196$
   1128                    5130 00195$:
   1128 C3 37 11           5131 	jp	00134$
   112B                    5132 00196$:
                           5133 ;	square.c 866
                           5134 ;	genCall
                           5135 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   112B CD 66 09           5136 	call	_increaseOffStep
                           5137 ;	square.c 867
                           5138 ;	genIpush
                           5139 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   112E 21 C8 00           5140 	ld	hl,#0x00C8
   1131 E5                 5141 	push	hl
                           5142 ;	genCall
   1132 CD 00 00           5143 	call	_delay
   1135 E8 02              5144 	lda	sp,2(sp)
                           5145 ;	genLabel
   1137                    5146 00134$:
                           5147 ;	square.c 870
                           5148 ;	genCmpEq
                           5149 ;	AOP_HL for _padext
                           5150 ; genCmpEq: left 1, right 1, result 0
   1137 21 08 00           5151 	ld	hl,#_padext
   113A 7E                 5152 	ld	a,(hl)
   113B FE 18              5153 	cp	a,#0x18
   113D C2 51 11           5154 	jp	nz,00136$
   1140 18 03              5155 	jr	00198$
   1142                    5156 00197$:
   1142 C3 51 11           5157 	jp	00136$
   1145                    5158 00198$:
                           5159 ;	square.c 872
                           5160 ;	genCall
                           5161 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1145 CD FD 09           5162 	call	_decreaseOffStep
                           5163 ;	square.c 873
                           5164 ;	genIpush
                           5165 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1148 21 C8 00           5166 	ld	hl,#0x00C8
   114B E5                 5167 	push	hl
                           5168 ;	genCall
   114C CD 00 00           5169 	call	_delay
   114F E8 02              5170 	lda	sp,2(sp)
                           5171 ;	genLabel
   1151                    5172 00136$:
                           5173 ;	square.c 876
                           5174 ;	genCmpEq
                           5175 ;	AOP_HL for _padext
                           5176 ; genCmpEq: left 1, right 1, result 0
   1151 21 08 00           5177 	ld	hl,#_padext
   1154 7E                 5178 	ld	a,(hl)
   1155 FE 11              5179 	cp	a,#0x11
   1157 C2 6B 11           5180 	jp	nz,00138$
   115A 18 03              5181 	jr	00200$
   115C                    5182 00199$:
   115C C3 6B 11           5183 	jp	00138$
   115F                    5184 00200$:
                           5185 ;	square.c 878
                           5186 ;	genCall
                           5187 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   115F CD 43 0C           5188 	call	_increaseSwing
                           5189 ;	square.c 879
                           5190 ;	genIpush
                           5191 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1162 21 32 00           5192 	ld	hl,#0x0032
   1165 E5                 5193 	push	hl
                           5194 ;	genCall
   1166 CD 00 00           5195 	call	_delay
   1169 E8 02              5196 	lda	sp,2(sp)
                           5197 ;	genLabel
   116B                    5198 00138$:
                           5199 ;	square.c 882
                           5200 ;	genCmpEq
                           5201 ;	AOP_HL for _padext
                           5202 ; genCmpEq: left 1, right 1, result 0
   116B 21 08 00           5203 	ld	hl,#_padext
   116E 7E                 5204 	ld	a,(hl)
   116F FE 12              5205 	cp	a,#0x12
   1171 C2 85 11           5206 	jp	nz,00140$
   1174 18 03              5207 	jr	00202$
   1176                    5208 00201$:
   1176 C3 85 11           5209 	jp	00140$
   1179                    5210 00202$:
                           5211 ;	square.c 884
                           5212 ;	genCall
                           5213 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1179 CD B0 0C           5214 	call	_decreaseSwing
                           5215 ;	square.c 885
                           5216 ;	genIpush
                           5217 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   117C 21 32 00           5218 	ld	hl,#0x0032
   117F E5                 5219 	push	hl
                           5220 ;	genCall
   1180 CD 00 00           5221 	call	_delay
   1183 E8 02              5222 	lda	sp,2(sp)
                           5223 ;	genLabel
   1185                    5224 00140$:
                           5225 ;	square.c 888
                           5226 ;	genCmpEq
                           5227 ;	AOP_HL for _padext
                           5228 ; genCmpEq: left 1, right 1, result 0
   1185 21 08 00           5229 	ld	hl,#_padext
   1188 7E                 5230 	ld	a,(hl)
   1189 FE 30              5231 	cp	a,#0x30
   118B C2 9E 11           5232 	jp	nz,00142$
   118E 18 03              5233 	jr	00204$
   1190                    5234 00203$:
   1190 C3 9E 11           5235 	jp	00142$
   1193                    5236 00204$:
                           5237 ;	square.c 890
                           5238 ;	genAssign
                           5239 ;	AOP_HL for _syncToDrum
   1193 21 1D 00           5240 	ld	hl,#_syncToDrum
   1196 36 01              5241 	ld	(hl),#0x01
                           5242 ;	square.c 892
                           5243 ;	genCall
                           5244 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1198 CD 00 00           5245 	call	_waitpadup
                           5246 ;	square.c 893
                           5247 ;	genCall
                           5248 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   119B CD 3F 06           5249 	call	_updateUI
                           5250 ;	genLabel
   119E                    5251 00142$:
                           5252 ;	square.c 896
                           5253 ;	genCall
                           5254 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   119E CD 00 00           5255 	call	_wait_vbl_done
                           5256 ;	genGoto
   11A1 C3 A4 0F           5257 	jp	00144$
                           5258 ;	genLabel
   11A4                    5259 00146$:
                           5260 ;	genEndFunction
   11A4 E8 03              5261 	lda	sp,3(sp)
   11A6 C9                 5262 	ret
   11A7                    5263 ___main_end:
                           5264 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 ___decreaseOffStep_end             0A6F R
  0 ___decreaseOffStep_start           09FD R
  0 ___decreasePulses_end              0C43 R
  0 ___decreasePulses_start            0BCE R
  0 ___decreaseSteps_end               0B59 R
  0 ___decreaseSteps_start             0AE4 R
  0 ___decreaseSwing_end               0D22 R
  0 ___decreaseSwing_start             0CB0 R
  0 ___fillDrumA_end                   029E R
  0 ___fillDrumA_start                 00CF R
  0 ___fillDrumB_end                   046E R
  0 ___fillDrumB_start                 029F R
  0 ___fillDrumC_end                   063E R
  0 ___fillDrumC_start                 046F R
  0 ___increaseOffStep_end             09FD R
  0 ___increaseOffStep_start           0966 R
  0 ___increasePulses_end              0BCE R
  0 ___increasePulses_start            0B59 R
  0 ___increaseSteps_end               0AE4 R
  0 ___increaseSteps_start             0A6F R
  0 ___increaseSwing_end               0CB0 R
  0 ___increaseSwing_start             0C43 R
  0 ___main_end                        11A7 R
  0 ___main_start                      0EC7 R
  0 ___makeASound_end                  0069 R
  0 ___makeASound_start                0030 R
  0 ___makeBSound_end                  009C R
  0 ___makeBSound_start                0069 R
  0 ___makeCSound_end                  00CF R
  0 ___makeCSound_start                009C R
  0 ___master_end                      0EAC R
  0 ___master_start                    0E97 R
  0 ___player_end                      0EC3 R
  0 ___player_start                    0EAC R
  0 ___rand_end                        0030 R
  0 ___rand_start                      0000 R
  0 ___setupDrum_end                   0966 R
  0 ___setupDrum_start                 092A R
  0 ___slave_end                       0E97 R
  0 ___slave_start                     0E59 R
  0 ___tick_end                        0E59 R
  0 ___tick_start                      0D22 R
  0 ___tim_end                         0EC7 R
  0 ___tim_start                       0EC3 R
  0 ___updateUI_end                    087F R
  0 ___updateUI_start                  063F R
    __initrleblock                     **** GX
    __moduchar_rrx_s                   **** GX
    __muluint_rrx_s                    **** GX
  0 __str_0                            029E R
  0 __str_1                            046E R
  0 __str_10                           08BC R
  0 __str_11                           08BF R
  0 __str_12                           08C2 R
  0 __str_13                           08D6 R
  0 __str_14                           08D8 R
  0 __str_15                           08DB R
  0 __str_16                           08DE R
  0 __str_17                           08F2 R
  0 __str_18                           08F4 R
  0 __str_19                           08FE R
  0 __str_2                            063E R
  0 __str_20                           0907 R
  0 __str_21                           090C R
  0 __str_22                           090E R
  0 __str_23                           091A R
  0 __str_24                           0928 R
  0 __str_3                            087F R
  0 __str_4                            0880 R
  0 __str_5                            0882 R
  0 __str_6                            08A0 R
  0 __str_7                            08A3 R
  0 __str_8                            08A6 R
  0 __str_9                            08BA R
    _add_TIM                           **** GX
  1 _bob                               0004 GR
  1 _bucket                            000C GR
  1 _clkA                              0021 GR
  1 _clkB                              0024 GR
  1 _clkC                              0027 GR
    _clock                             **** GX
  1 _clockToSync                       001E GR
  1 _current_rand                      0000 R
  0 _decreaseOffStep                   09FD GR
  0 _decreasePulses                    0BCE GR
  0 _decreaseSteps                     0AE4 GR
  0 _decreaseSwing                     0CB0 GR
    _delay                             **** GX
  1 _delayA                            0019 GR
  1 _delayB                            001A GR
  1 _delayC                            001B GR
    _disable_interrupts                **** GX
  1 _drumA                             002B GR
  1 _drumB                             004B GR
  1 _drumC                             006B GR
    _enable_interrupts                 **** GX
  1 _f                                 0014 GR
  0 _fillDrumA                         00CF GR
  0 _fillDrumB                         029F GR
  0 _fillDrumC                         046F GR
  1 _first                             0012 GR
  1 _g                                 001C GR
  1 _i                                 000D GR
  0 _increaseOffStep                   0966 GR
  0 _increasePulses                    0B59 GR
  0 _increaseSteps                     0A6F GR
  0 _increaseSwing                     0C43 GR
  1 _joy                               0009 GR
    _joypad                            **** GX
  1 _last                              0013 GR
  0 _main                              0EC7 GR
  0 _makeASound                        0030 GR
  0 _makeBSound                        0069 GR
  0 _makeCSound                        009C GR
  0 _master                            0E97 GR
  1 _modus                             0007 GR
  1 _numberOfPulsesA                   001F GR
  1 _numberOfPulsesB                   0022 GR
  1 _numberOfPulsesC                   0025 GR
  1 _offStepA                          0028 GR
  1 _offStepB                          0029 GR
  1 _offStepC                          002A GR
  1 _pad                               000A GR
  1 _padext                            0008 GR
  0 _player                            0EAC GR
  1 _pop                               0006 GR
    _printf                            **** GX
    _puts                              **** GX
  0 _rand                              0000 GR
  1 _randA                             000F GR
  1 _randB                             0010 GR
  1 _randC                             0011 GR
  1 _samp_freq                         0001 GR
  1 _seldrum                           000B GR
    _set_interrupts                    **** GX
  0 _setupDrum                         092A GR
  0 _slave                             0E59 GR
  1 _syncToDrum                        001D GR
  1 _tempo                             0002 GR
  0 _tick                              0D22 GR
  0 _tim                               0EC3 GR
  1 _todd                              0005 GR
  1 _totalStepsA                       0020 GR
  1 _totalStepsB                       0023 GR
  1 _totalStepsC                       0026 GR
  0 _updateUI                          063F GR
    _wait_vbl_done                     **** GX
    _waitpadup                         **** GX
  1 _watch                             0003 GR
  1 _x                                 0015 GR
  1 _xA                                0016 GR
  1 _xB                                0017 GR
  1 _xC                                0018 GR
  1 _y                                 000E GR

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size 11A7   flags 0
   1 _DATA                              size   8B   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size   1B   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
