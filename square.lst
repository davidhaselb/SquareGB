                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Tue Apr 14 18:24:26 2020
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc232960
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _savePattern
                             13 	.globl _loadD
                             14 	.globl _loadC
                             15 	.globl _loadB
                             16 	.globl _loadA
                             17 	.globl _tim
                             18 	.globl _player
                             19 	.globl _master
                             20 	.globl _sync
                             21 	.globl _tick
                             22 	.globl _decreaseSwing
                             23 	.globl _increaseSwing
                             24 	.globl _decreasePulses
                             25 	.globl _increasePulses
                             26 	.globl _decreaseSteps
                             27 	.globl _increaseSteps
                             28 	.globl _decreaseOffStep
                             29 	.globl _increaseOffStep
                             30 	.globl _setupDrum
                             31 	.globl _fillDrumC
                             32 	.globl _fillDrumB
                             33 	.globl _fillDrumA
                             34 	.globl _makeCSound
                             35 	.globl _makeBSound
                             36 	.globl _makeASound
                             37 	.globl _rand
                             38 	.globl _performantdelay
                             39 	.globl _seldrum
                             40 	.globl _pad
                             41 	.globl _joy
                             42 	.globl _padext
                             43 	.globl _modus
                             44 	.globl _pop
                             45 	.globl _todd
                             46 	.globl _bob
                             47 	.globl _watch
                             48 	.globl _tempo
                             49 	.globl _samp_freq
                             50 	.globl _storeDDC
                             51 	.globl _storeDDB
                             52 	.globl _storeDDA
                             53 	.globl _storeDOC
                             54 	.globl _storeDOB
                             55 	.globl _storeDOA
                             56 	.globl _storeDSC
                             57 	.globl _storeDPC
                             58 	.globl _storeDSB
                             59 	.globl _storeDPB
                             60 	.globl _storeDSA
                             61 	.globl _storeDPA
                             62 	.globl _storeCDC
                             63 	.globl _storeCDB
                             64 	.globl _storeCDA
                             65 	.globl _storeCOC
                             66 	.globl _storeCOB
                             67 	.globl _storeCOA
                             68 	.globl _storeCSC
                             69 	.globl _storeCPC
                             70 	.globl _storeCSB
                             71 	.globl _storeCPB
                             72 	.globl _storeCSA
                             73 	.globl _storeCPA
                             74 	.globl _storeBDC
                             75 	.globl _storeBDB
                             76 	.globl _storeBDA
                             77 	.globl _storeBOC
                             78 	.globl _storeBOB
                             79 	.globl _storeBOA
                             80 	.globl _storeBSC
                             81 	.globl _storeBPC
                             82 	.globl _storeBSB
                             83 	.globl _storeBPB
                             84 	.globl _storeBSA
                             85 	.globl _storeBPA
                             86 	.globl _storeADC
                             87 	.globl _storeADB
                             88 	.globl _storeADA
                             89 	.globl _storeAOC
                             90 	.globl _storeAOB
                             91 	.globl _storeAOA
                             92 	.globl _storeASC
                             93 	.globl _storeAPC
                             94 	.globl _storeASB
                             95 	.globl _storeAPB
                             96 	.globl _storeASA
                             97 	.globl _storeAPA
                             98 	.globl _currentSaveSlot
                             99 	.globl _cOffStep
                            100 	.globl _cDelay
                            101 	.globl _offStepC
                            102 	.globl _offStepB
                            103 	.globl _offStepA
                            104 	.globl _clkC
                            105 	.globl _totalStepsC
                            106 	.globl _numberOfPulsesC
                            107 	.globl _clkB
                            108 	.globl _totalStepsB
                            109 	.globl _numberOfPulsesB
                            110 	.globl _clkA
                            111 	.globl _totalStepsA
                            112 	.globl _numberOfPulsesA
                            113 	.globl _clockToSync
                            114 	.globl _syncToDrum
                            115 	.globl _g
                            116 	.globl _delayC
                            117 	.globl _delayB
                            118 	.globl _delayA
                            119 	.globl _xC
                            120 	.globl _xB
                            121 	.globl _xA
                            122 	.globl _x
                            123 	.globl _f
                            124 	.globl _last
                            125 	.globl _first
                            126 	.globl _randC
                            127 	.globl _randB
                            128 	.globl _randA
                            129 	.globl _y
                            130 	.globl _i
                            131 	.globl _bucket
                            132 	.globl _savelut
                            133 	.globl _dYlut
                            134 	.globl _dXlut
                            135 	.globl _drumC
                            136 	.globl _drumB
                            137 	.globl _drumA
                            138 	.globl _saveC
                            139 	.globl _swingC
                            140 	.globl _offsetC
                            141 	.globl _midiC
                            142 	.globl _squareC
                            143 	.globl _squareB
                            144 	.globl _squareA
                            145 ;--------------------------------------------------------
                            146 ; special function registers
                            147 ;--------------------------------------------------------
                            148 ;--------------------------------------------------------
                            149 ; special function bits 
                            150 ;--------------------------------------------------------
                            151 ;--------------------------------------------------------
                            152 ; internal ram data
                            153 ;--------------------------------------------------------
                            154 	.area _DATA
   0000                     155 _squareA::
   0000                     156 	.ds 16
   0010                     157 _squareB::
   0010                     158 	.ds 16
   0020                     159 _squareC::
   0020                     160 	.ds 16
   0030                     161 _midiC::
   0030                     162 	.ds 16
   0040                     163 _offsetC::
   0040                     164 	.ds 16
   0050                     165 _swingC::
   0050                     166 	.ds 16
   0060                     167 _saveC::
   0060                     168 	.ds 16
   0070                     169 _drumA::
   0070                     170 	.ds 32
   0090                     171 _drumB::
   0090                     172 	.ds 32
   00B0                     173 _drumC::
   00B0                     174 	.ds 32
   00D0                     175 _dXlut::
   00D0                     176 	.ds 32
   00F0                     177 _dYlut::
   00F0                     178 	.ds 32
   0110                     179 _savelut::
   0110                     180 	.ds 4
   0114                     181 _bucket::
   0114                     182 	.ds 1
   0115                     183 _i::
   0115                     184 	.ds 1
   0116                     185 _y::
   0116                     186 	.ds 1
   0117                     187 _randA::
   0117                     188 	.ds 1
   0118                     189 _randB::
   0118                     190 	.ds 1
   0119                     191 _randC::
   0119                     192 	.ds 1
   011A                     193 _first::
   011A                     194 	.ds 1
   011B                     195 _last::
   011B                     196 	.ds 1
   011C                     197 _f::
   011C                     198 	.ds 1
   011D                     199 _x::
   011D                     200 	.ds 1
   011E                     201 _xA::
   011E                     202 	.ds 1
   011F                     203 _xB::
   011F                     204 	.ds 1
   0120                     205 _xC::
   0120                     206 	.ds 1
   0121                     207 _delayA::
   0121                     208 	.ds 1
   0122                     209 _delayB::
   0122                     210 	.ds 1
   0123                     211 _delayC::
   0123                     212 	.ds 1
   0124                     213 _g::
   0124                     214 	.ds 1
   0125                     215 _syncToDrum::
   0125                     216 	.ds 1
   0126                     217 _clockToSync::
   0126                     218 	.ds 1
   0127                     219 _numberOfPulsesA::
   0127                     220 	.ds 1
   0128                     221 _totalStepsA::
   0128                     222 	.ds 1
   0129                     223 _clkA::
   0129                     224 	.ds 1
   012A                     225 _numberOfPulsesB::
   012A                     226 	.ds 1
   012B                     227 _totalStepsB::
   012B                     228 	.ds 1
   012C                     229 _clkB::
   012C                     230 	.ds 1
   012D                     231 _numberOfPulsesC::
   012D                     232 	.ds 1
   012E                     233 _totalStepsC::
   012E                     234 	.ds 1
   012F                     235 _clkC::
   012F                     236 	.ds 1
   0130                     237 _offStepA::
   0130                     238 	.ds 1
   0131                     239 _offStepB::
   0131                     240 	.ds 1
   0132                     241 _offStepC::
   0132                     242 	.ds 1
   0133                     243 _cDelay::
   0133                     244 	.ds 1
   0134                     245 _cOffStep::
   0134                     246 	.ds 1
   0135                     247 _currentSaveSlot::
   0135                     248 	.ds 1
   0136                     249 _storeAPA::
   0136                     250 	.ds 1
   0137                     251 _storeASA::
   0137                     252 	.ds 1
   0138                     253 _storeAPB::
   0138                     254 	.ds 1
   0139                     255 _storeASB::
   0139                     256 	.ds 1
   013A                     257 _storeAPC::
   013A                     258 	.ds 1
   013B                     259 _storeASC::
   013B                     260 	.ds 1
   013C                     261 _storeAOA::
   013C                     262 	.ds 1
   013D                     263 _storeAOB::
   013D                     264 	.ds 1
   013E                     265 _storeAOC::
   013E                     266 	.ds 1
   013F                     267 _storeADA::
   013F                     268 	.ds 1
   0140                     269 _storeADB::
   0140                     270 	.ds 1
   0141                     271 _storeADC::
   0141                     272 	.ds 1
   0142                     273 _storeBPA::
   0142                     274 	.ds 1
   0143                     275 _storeBSA::
   0143                     276 	.ds 1
   0144                     277 _storeBPB::
   0144                     278 	.ds 1
   0145                     279 _storeBSB::
   0145                     280 	.ds 1
   0146                     281 _storeBPC::
   0146                     282 	.ds 1
   0147                     283 _storeBSC::
   0147                     284 	.ds 1
   0148                     285 _storeBOA::
   0148                     286 	.ds 1
   0149                     287 _storeBOB::
   0149                     288 	.ds 1
   014A                     289 _storeBOC::
   014A                     290 	.ds 1
   014B                     291 _storeBDA::
   014B                     292 	.ds 1
   014C                     293 _storeBDB::
   014C                     294 	.ds 1
   014D                     295 _storeBDC::
   014D                     296 	.ds 1
   014E                     297 _storeCPA::
   014E                     298 	.ds 1
   014F                     299 _storeCSA::
   014F                     300 	.ds 1
   0150                     301 _storeCPB::
   0150                     302 	.ds 1
   0151                     303 _storeCSB::
   0151                     304 	.ds 1
   0152                     305 _storeCPC::
   0152                     306 	.ds 1
   0153                     307 _storeCSC::
   0153                     308 	.ds 1
   0154                     309 _storeCOA::
   0154                     310 	.ds 1
   0155                     311 _storeCOB::
   0155                     312 	.ds 1
   0156                     313 _storeCOC::
   0156                     314 	.ds 1
   0157                     315 _storeCDA::
   0157                     316 	.ds 1
   0158                     317 _storeCDB::
   0158                     318 	.ds 1
   0159                     319 _storeCDC::
   0159                     320 	.ds 1
   015A                     321 _storeDPA::
   015A                     322 	.ds 1
   015B                     323 _storeDSA::
   015B                     324 	.ds 1
   015C                     325 _storeDPB::
   015C                     326 	.ds 1
   015D                     327 _storeDSB::
   015D                     328 	.ds 1
   015E                     329 _storeDPC::
   015E                     330 	.ds 1
   015F                     331 _storeDSC::
   015F                     332 	.ds 1
   0160                     333 _storeDOA::
   0160                     334 	.ds 1
   0161                     335 _storeDOB::
   0161                     336 	.ds 1
   0162                     337 _storeDOC::
   0162                     338 	.ds 1
   0163                     339 _storeDDA::
   0163                     340 	.ds 1
   0164                     341 _storeDDB::
   0164                     342 	.ds 1
   0165                     343 _storeDDC::
   0165                     344 	.ds 1
   0166                     345 _current_rand:
   0166                     346 	.ds 1
   0167                     347 _samp_freq::
   0167                     348 	.ds 1
   0168                     349 _tempo::
   0168                     350 	.ds 1
   0169                     351 _watch::
   0169                     352 	.ds 1
   016A                     353 _bob::
   016A                     354 	.ds 1
   016B                     355 _todd::
   016B                     356 	.ds 1
   016C                     357 _pop::
   016C                     358 	.ds 1
   016D                     359 _modus::
   016D                     360 	.ds 1
   016E                     361 _padext::
   016E                     362 	.ds 1
   016F                     363 _joy::
   016F                     364 	.ds 1
   0170                     365 _pad::
   0170                     366 	.ds 1
   0171                     367 _seldrum::
   0171                     368 	.ds 1
                            369 ;--------------------------------------------------------
                            370 ; overlayable items in internal ram 
                            371 ;--------------------------------------------------------
                            372 	.area _OVERLAY
                            373 ;--------------------------------------------------------
                            374 ; indirectly addressable internal ram data
                            375 ;--------------------------------------------------------
                            376 	.area _ISEG
                            377 ;--------------------------------------------------------
                            378 ; bit data
                            379 ;--------------------------------------------------------
                            380 	.area _BSEG
                            381 ;--------------------------------------------------------
                            382 ; external ram data
                            383 ;--------------------------------------------------------
                            384 	.area _XSEG
                            385 ;--------------------------------------------------------
                            386 ; global & static initialisations
                            387 ;--------------------------------------------------------
                            388 	.area _GSINIT
                            389 	.area _GSFINAL
                            390 	.area _GSINIT
                            391 ;	square.c 64
                            392 ;	square.c 1440
                            393 ;	genArrayInit
                            394 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 00 00            395 	ld	hl,#_squareA
   0003 CD 00 00            396 	call	__initrleblock
   0006 02                  397 	.db	2
   0007 FF FF               398 	.db	0xFF, 0xFF
   0009 F4 81               399 	.db	-12,0x81
   000B 02                  400 	.db	2
   000C FF FF               401 	.db	0xFF, 0xFF
   000E 00                  402 	.db	0
                            403 ;	square.c 69
                            404 ;	square.c 1440
                            405 ;	genArrayInit
                            406 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   000F 21 10 00            407 	ld	hl,#_squareB
   0012 CD 00 00            408 	call	__initrleblock
   0015 04                  409 	.db	4
   0016 00 00 7E 7E         410 	.db	0x00, 0x00, 0x7E, 0x7E
   001A F8 42               411 	.db	-8,0x42
   001C 04                  412 	.db	4
   001D 7E 7E 00 00         413 	.db	0x7E, 0x7E, 0x00, 0x00
   0021 00                  414 	.db	0
                            415 ;	square.c 75
                            416 ;	square.c 1440
                            417 ;	genArrayInit
                            418 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0022 21 20 00            419 	ld	hl,#_squareC
   0025 CD 00 00            420 	call	__initrleblock
   0028 04                  421 	.db	4
   0029 00 00 00 00         422 	.db	0x00, 0x00, 0x00, 0x00
   002D F8 3C               423 	.db	-8,0x3C
   002F 04                  424 	.db	4
   0030 00 00 00 00         425 	.db	0x00, 0x00, 0x00, 0x00
   0034 00                  426 	.db	0
                            427 ;	square.c 80
                            428 ;	square.c 1440
                            429 ;	genArrayInit
                            430 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0035 21 30 00            431 	ld	hl,#_midiC
   0038 CD 00 00            432 	call	__initrleblock
   003B 0A                  433 	.db	10
   003C C3 C3 E7 E7 FF FF   434 	.db	0xC3, 0xC3, 0xE7, 0xE7, 0xFF, 0xFF, 0xFF, 0xFF
        FF FF
   0044 DB DB               435 	.db	0xDB, 0xDB
   0046 FA C3               436 	.db	-6,0xC3
   0048 00                  437 	.db	0
                            438 ;	square.c 85
                            439 ;	square.c 1440
                            440 ;	genArrayInit
                            441 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0049 21 40 00            442 	ld	hl,#_offsetC
   004C CD 00 00            443 	call	__initrleblock
   004F 10                  444 	.db	16
   0050 3C 3C 7E 7E E7 E7   445 	.db	0x3C, 0x3C, 0x7E, 0x7E, 0xE7, 0xE7, 0xC3, 0xC3
        C3 C3
   0058 C3 C3 E7 E7 7E 7E   446 	.db	0xC3, 0xC3, 0xE7, 0xE7, 0x7E, 0x7E, 0x3C, 0x3C
        3C 3C
   0060 00                  447 	.db	0
                            448 ;	square.c 91
                            449 ;	square.c 1440
                            450 ;	genArrayInit
                            451 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0061 21 50 00            452 	ld	hl,#_swingC
   0064 CD 00 00            453 	call	__initrleblock
   0067 10                  454 	.db	16
   0068 00 00 00 00 18 18   455 	.db	0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x3C, 0x3C
        3C 3C
   0070 3C 3C 18 18 00 00   456 	.db	0x3C, 0x3C, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00
        00 00
   0078 00                  457 	.db	0
                            458 ;	square.c 96
                            459 ;	square.c 1440
                            460 ;	genArrayInit
                            461 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0079 21 60 00            462 	ld	hl,#_saveC
   007C CD 00 00            463 	call	__initrleblock
   007F 10                  464 	.db	16
   0080 10 10 18 18 1C 1C   465 	.db	0x10, 0x10, 0x18, 0x18, 0x1C, 0x1C, 0x1E, 0x1E
        1E 1E
   0088 1E 1E 1C 1C 18 18   466 	.db	0x1E, 0x1E, 0x1C, 0x1C, 0x18, 0x18, 0x10, 0x10
        10 10
   0090 00                  467 	.db	0
                            468 ;	square.c 103
                            469 ;	square.c 1440
                            470 ;	genArrayInit
                            471 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0091 21 70 00            472 	ld	hl,#_drumA
   0094 CD 00 00            473 	call	__initrleblock
   0097 E0 00               474 	.db	-32,0x00
   0099 00                  475 	.db	0
                            476 ;	square.c 104
                            477 ;	square.c 1440
                            478 ;	genArrayInit
                            479 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   009A 21 90 00            480 	ld	hl,#_drumB
   009D CD 00 00            481 	call	__initrleblock
   00A0 E0 00               482 	.db	-32,0x00
   00A2 00                  483 	.db	0
                            484 ;	square.c 105
                            485 ;	square.c 1440
                            486 ;	genArrayInit
                            487 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00A3 21 B0 00            488 	ld	hl,#_drumC
   00A6 CD 00 00            489 	call	__initrleblock
   00A9 E0 00               490 	.db	-32,0x00
   00AB 00                  491 	.db	0
                            492 ;	square.c 107
                            493 ;	square.c 1440
                            494 ;	genArrayInit
                            495 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00AC 21 D0 00            496 	ld	hl,#_dXlut
   00AF CD 00 00            497 	call	__initrleblock
   00B2 20                  498 	.db	32
   00B3 90 8C 88 84 80 7C   499 	.db	0x90, 0x8C, 0x88, 0x84, 0x80, 0x7C, 0x78, 0x74
        78 74
   00BB 70 6C 68 64 60 5C   500 	.db	0x70, 0x6C, 0x68, 0x64, 0x60, 0x5C, 0x58, 0x54
        58 54
   00C3 50 4C 48 44 40 3C   501 	.db	0x50, 0x4C, 0x48, 0x44, 0x40, 0x3C, 0x38, 0x34
        38 34
   00CB 30 2C 28 24 21 1E   502 	.db	0x30, 0x2C, 0x28, 0x24, 0x21, 0x1E, 0x1B, 0x18
        1B 18
   00D3 00                  503 	.db	0
                            504 ;	square.c 108
                            505 ;	square.c 1440
                            506 ;	genArrayInit
                            507 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00D4 21 F0 00            508 	ld	hl,#_dYlut
   00D7 CD 00 00            509 	call	__initrleblock
   00DA 20                  510 	.db	32
   00DB 10 2B 3B 46 4F 56   511 	.db	0x10, 0x2B, 0x3B, 0x46, 0x4F, 0x56, 0x5C, 0x62
        5C 62
   00E3 66 6A 6E 72 75 78   512 	.db	0x66, 0x6A, 0x6E, 0x72, 0x75, 0x78, 0x7A, 0x7D
        7A 7D
   00EB 7F 81 84 86 87 89   513 	.db	0x7F, 0x81, 0x84, 0x86, 0x87, 0x89, 0x8B, 0x8D
        8B 8D
   00F3 8E 90 91 93 94 95   514 	.db	0x8E, 0x90, 0x91, 0x93, 0x94, 0x95, 0x97, 0x98
        97 98
   00FB 00                  515 	.db	0
                            516 ;	square.c 109
                            517 ;	square.c 1440
                            518 ;	genArrayInit
                            519 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00FC 21 10 01            520 	ld	hl,#_savelut
   00FF CD 00 00            521 	call	__initrleblock
   0102 04                  522 	.db	4
   0103 90 80 70 60         523 	.db	0x90, 0x80, 0x70, 0x60
   0107 00                  524 	.db	0
                            525 ;--------------------------------------------------------
                            526 ; Home
                            527 ;--------------------------------------------------------
                            528 	.area _HOME
                            529 	.area _CODE
                            530 ;--------------------------------------------------------
                            531 ; code
                            532 ;--------------------------------------------------------
                            533 	.area _CODE
                            534 ;	square.c 119
                            535 ;	genLabel
                            536 ;	genFunction
                            537 ;	---------------------------------
                            538 ; Function performantdelay
                            539 ; ---------------------------------
   0000                     540 ___performantdelay_start:
   0000                     541 _performantdelay:
                            542 	
                            543 ;	square.c 121
                            544 ;	genAssign
   0000 0E 00               545 	ld	c,#0x00
                            546 ;	genLabel
   0002                     547 00101$:
                            548 ;	genCmpLt
                            549 ;	AOP_STK for 
   0002 79                  550 	ld	a,c
   0003 F8 02               551 	lda	hl,2(sp)
   0005 96                  552 	sub	a,(hl)
   0006 D2 13 00            553 	jp	nc,00105$
                            554 ;	square.c 122
                            555 ;	genCall
                            556 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0009 C5                  557 	push	bc
   000A CD 00 00            558 	call	_wait_vbl_done
   000D E1                  559 	pop	hl
   000E 4D                  560 	ld	c,l
                            561 ;	square.c 121
                            562 ;	genPlus
                            563 ;	genPlusIncr
                            564 ; Removed redundent load
   000F 0C                  565 	inc	c
                            566 ;	genGoto
   0010 C3 02 00            567 	jp	00101$
                            568 ;	genLabel
   0013                     569 00105$:
                            570 ;	genEndFunction
                            571 	
   0013 C9                  572 	ret
   0014                     573 ___performantdelay_end:
                            574 ;	square.c 126
                            575 ;	genLabel
                            576 ;	genFunction
                            577 ;	---------------------------------
                            578 ; Function rand
                            579 ; ---------------------------------
   0014                     580 ___rand_start:
   0014                     581 _rand:
   0014 E8 FE               582 	lda	sp,-2(sp)
                            583 ;	square.c 129
                            584 ;	genCall
                            585 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0016 CD 00 00            586 	call	_clock
   0019 42                  587 	ld	b,d
   001A 4B                  588 	ld	c,e
                            589 ;	genCast
                            590 ;	AOP_HL for _current_rand
                            591 ;	AOP_STK for _rand_sloc0_1_0
   001B 21 66 01            592 	ld	hl,#_current_rand
   001E 7E                  593 	ld	a,(hl)
   001F F8 00               594 	lda	hl,0(sp)
   0021 22                  595 	ld	(hl+),a
   0022 36 00               596 	ld	(hl),#0x00
                            597 ;	genIpush
                            598 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0024 C5                  599 	push	bc
                            600 ;	genIpush
                            601 ;	AOP_STK for _rand_sloc0_1_0
   0025 2B                  602 	dec	hl
   0026 2A                  603 	ld	a,(hl+)
   0027 66                  604 	ld	h,(hl)
   0028 6F                  605 	ld	l,a
   0029 E5                  606 	push	hl
                            607 ;	genCall
   002A CD 00 00            608 	call	__muluint_rrx_s
   002D 42                  609 	ld	b,d
   002E 4B                  610 	ld	c,e
   002F E8 04               611 	lda	sp,4(sp)
                            612 ;	genPlus
                            613 ;	genPlusIncr
                            614 ;	Can't optimise plus by inc, falling back to the normal way
   0031 79                  615 	ld	a,c
   0032 C6 7B               616 	add	a,#0x7B
   0034 4F                  617 	ld	c,a
   0035 78                  618 	ld	a,b
   0036 CE 00               619 	adc	a,#0x00
                            620 ;	genAnd
   0038 47                  621 	ld	b,a
   0039 E6 07               622 	and	a,#0x07
   003B 47                  623 	ld	b,a
                            624 ;	genCast
                            625 ;	AOP_HL for _current_rand
   003C 21 66 01            626 	ld	hl,#_current_rand
   003F 71                  627 	ld	(hl),c
                            628 ;	square.c 130
                            629 ;	genRet
                            630 ;	AOP_HL for _current_rand
   0040 5E                  631 	ld	e,(hl)
                            632 ;	genLabel
   0041                     633 00101$:
                            634 ;	genEndFunction
   0041 E8 02               635 	lda	sp,2(sp)
   0043 C9                  636 	ret
   0044                     637 ___rand_end:
                            638 ;	square.c 133
                            639 ;	genLabel
                            640 ;	genFunction
                            641 ;	---------------------------------
                            642 ; Function makeASound
                            643 ; ---------------------------------
   0044                     644 ___makeASound_start:
   0044                     645 _makeASound:
                            646 	
                            647 ;	square.c 135
                            648 ;	genAssign
   0044 01 10 FF            649 	ld	bc,#0xFF10
                            650 ;	genAssign (pointer)
   0047 3E 29               651 	ld	a,#0x29
   0049 02                  652 	ld	(bc),a
                            653 ;	square.c 136
                            654 ;	genAssign
   004A 01 11 FF            655 	ld	bc,#0xFF11
                            656 ;	genAssign (pointer)
   004D 3E 4F               657 	ld	a,#0x4F
   004F 02                  658 	ld	(bc),a
                            659 ;	square.c 137
                            660 ;	genAssign
   0050 01 12 FF            661 	ld	bc,#0xFF12
                            662 ;	genAssign (pointer)
   0053 3E F1               663 	ld	a,#0xF1
   0055 02                  664 	ld	(bc),a
                            665 ;	square.c 138
                            666 ;	genAssign
   0056 01 13 FF            667 	ld	bc,#0xFF13
                            668 ;	genAssign (pointer)
   0059 3E 6F               669 	ld	a,#0x6F
   005B 02                  670 	ld	(bc),a
                            671 ;	square.c 139
                            672 ;	genAssign
   005C 01 14 FF            673 	ld	bc,#0xFF14
                            674 ;	genAssign (pointer)
   005F 3E C4               675 	ld	a,#0xC4
   0061 02                  676 	ld	(bc),a
                            677 ;	genLabel
   0062                     678 00101$:
                            679 ;	genEndFunction
                            680 	
   0062 C9                  681 	ret
   0063                     682 ___makeASound_end:
                            683 ;	square.c 143
                            684 ;	genLabel
                            685 ;	genFunction
                            686 ;	---------------------------------
                            687 ; Function makeBSound
                            688 ; ---------------------------------
   0063                     689 ___makeBSound_start:
   0063                     690 _makeBSound:
                            691 	
                            692 ;	square.c 145
                            693 ;	genAssign
   0063 01 16 FF            694 	ld	bc,#0xFF16
                            695 ;	genAssign (pointer)
   0066 3E 4A               696 	ld	a,#0x4A
   0068 02                  697 	ld	(bc),a
                            698 ;	square.c 146
                            699 ;	genAssign
   0069 01 17 FF            700 	ld	bc,#0xFF17
                            701 ;	genAssign (pointer)
   006C 3E 15               702 	ld	a,#0x15
   006E 02                  703 	ld	(bc),a
                            704 ;	square.c 147
                            705 ;	genAssign
   006F 01 18 FF            706 	ld	bc,#0xFF18
                            707 ;	genAssign (pointer)
   0072 3E 27               708 	ld	a,#0x27
   0074 02                  709 	ld	(bc),a
                            710 ;	square.c 148
                            711 ;	genAssign
   0075 01 19 FF            712 	ld	bc,#0xFF19
                            713 ;	genAssign (pointer)
   0078 3E C7               714 	ld	a,#0xC7
   007A 02                  715 	ld	(bc),a
                            716 ;	genLabel
   007B                     717 00101$:
                            718 ;	genEndFunction
                            719 	
   007B C9                  720 	ret
   007C                     721 ___makeBSound_end:
                            722 ;	square.c 152
                            723 ;	genLabel
                            724 ;	genFunction
                            725 ;	---------------------------------
                            726 ; Function makeCSound
                            727 ; ---------------------------------
   007C                     728 ___makeCSound_start:
   007C                     729 _makeCSound:
                            730 	
                            731 ;	square.c 154
                            732 ;	genAssign
   007C 01 20 FF            733 	ld	bc,#0xFF20
                            734 ;	genAssign (pointer)
   007F 3E 10               735 	ld	a,#0x10
   0081 02                  736 	ld	(bc),a
                            737 ;	square.c 155
                            738 ;	genAssign
   0082 01 21 FF            739 	ld	bc,#0xFF21
                            740 ;	genAssign (pointer)
   0085 3E 24               741 	ld	a,#0x24
   0087 02                  742 	ld	(bc),a
                            743 ;	square.c 156
                            744 ;	genAssign
   0088 01 22 FF            745 	ld	bc,#0xFF22
                            746 ;	genAssign (pointer)
   008B 3E 31               747 	ld	a,#0x31
   008D 02                  748 	ld	(bc),a
                            749 ;	square.c 157
                            750 ;	genAssign
   008E 01 23 FF            751 	ld	bc,#0xFF23
                            752 ;	genAssign (pointer)
   0091 3E C0               753 	ld	a,#0xC0
   0093 02                  754 	ld	(bc),a
                            755 ;	genLabel
   0094                     756 00101$:
                            757 ;	genEndFunction
                            758 	
   0094 C9                  759 	ret
   0095                     760 ___makeCSound_end:
                            761 ;	square.c 163
                            762 ;	genLabel
                            763 ;	genFunction
                            764 ;	---------------------------------
                            765 ; Function fillDrumA
                            766 ; ---------------------------------
   0095                     767 ___fillDrumA_start:
   0095                     768 _fillDrumA:
   0095 E8 FA               769 	lda	sp,-6(sp)
                            770 ;	square.c 164
                            771 ;	genAssign
                            772 ;	AOP_HL for _bucket
   0097 21 14 01            773 	ld	hl,#_bucket
   009A 36 00               774 	ld	(hl),#0x00
                            775 ;	square.c 165
                            776 ;	genAssign
                            777 ;	AOP_HL for _i
   009C 21 15 01            778 	ld	hl,#_i
   009F 36 00               779 	ld	(hl),#0x00
                            780 ;	genLabel
   00A1                     781 00118$:
                            782 ;	genCmpLt
                            783 ;	AOP_HL for _i
                            784 ;	AOP_HL for _totalStepsA
   00A1 21 15 01            785 	ld	hl,#_i
   00A4 7E                  786 	ld	a,(hl)
   00A5 21 28 01            787 	ld	hl,#_totalStepsA
   00A8 96                  788 	sub	a,(hl)
   00A9 D2 02 01            789 	jp	nc,00121$
                            790 ;	square.c 167
                            791 ;	genPlus
                            792 ;	AOP_HL for _bucket
                            793 ;	AOP_HL for _numberOfPulsesA
                            794 ;	Can't optimise plus by inc, falling back to the normal way
   00AC 21 14 01            795 	ld	hl,#_bucket
   00AF 7E                  796 	ld	a,(hl)
   00B0 21 27 01            797 	ld	hl,#_numberOfPulsesA
   00B3 86                  798 	add	a,(hl)
   00B4 21 14 01            799 	ld	hl,#_bucket
   00B7 77                  800 	ld	(hl),a
                            801 ;	square.c 168
                            802 ;	genMinus
                            803 ;	AOP_HL for _totalStepsA
   00B8 21 28 01            804 	ld	hl,#_totalStepsA
   00BB 7E                  805 	ld	a,(hl)
   00BC C6 FF               806 	add	a,#0xFF
                            807 ;	genCmpGt
                            808 ;	AOP_HL for _bucket
   00BE 4F                  809 	ld	c,a
   00BF 21 14 01            810 	ld	hl,#_bucket
   00C2 96                  811 	sub	a,(hl)
   00C3 D2 E1 00            812 	jp	nc,00104$
                            813 ;	square.c 170
                            814 ;	genMinus
                            815 ;	AOP_HL for _bucket
                            816 ;	AOP_HL for _totalStepsA
   00C6 7E                  817 	ld	a,(hl)
   00C7 21 28 01            818 	ld	hl,#_totalStepsA
   00CA 96                  819 	sub	a,(hl)
   00CB 21 14 01            820 	ld	hl,#_bucket
   00CE 77                  821 	ld	(hl),a
                            822 ;	square.c 171
                            823 ;	genPlus
                            824 ;	AOP_HL for _i
                            825 ;	Can't optimise plus by inc, falling back to the normal way
   00CF 3E 70               826 	ld	a,#<_drumA
   00D1 21 15 01            827 	ld	hl,#_i
   00D4 86                  828 	add	a,(hl)
   00D5 4F                  829 	ld	c,a
   00D6 3E 00               830 	ld	a,#>_drumA
   00D8 CE 00               831 	adc	a,#0x00
   00DA 47                  832 	ld	b,a
                            833 ;	genAssign (pointer)
   00DB 3E 01               834 	ld	a,#0x01
   00DD 02                  835 	ld	(bc),a
                            836 ;	genGoto
   00DE C3 FB 00            837 	jp	00120$
                            838 ;	genLabel
   00E1                     839 00104$:
                            840 ;	square.c 173
                            841 ;	genCmpLt
                            842 ;	AOP_HL for _bucket
                            843 ;	AOP_HL for _totalStepsA
   00E1 21 14 01            844 	ld	hl,#_bucket
   00E4 7E                  845 	ld	a,(hl)
   00E5 21 28 01            846 	ld	hl,#_totalStepsA
   00E8 96                  847 	sub	a,(hl)
   00E9 D2 FB 00            848 	jp	nc,00120$
                            849 ;	square.c 175
                            850 ;	genPlus
                            851 ;	AOP_HL for _i
                            852 ;	Can't optimise plus by inc, falling back to the normal way
   00EC 3E 70               853 	ld	a,#<_drumA
   00EE 21 15 01            854 	ld	hl,#_i
   00F1 86                  855 	add	a,(hl)
   00F2 4F                  856 	ld	c,a
   00F3 3E 00               857 	ld	a,#>_drumA
   00F5 CE 00               858 	adc	a,#0x00
   00F7 47                  859 	ld	b,a
                            860 ;	genAssign (pointer)
   00F8 3E 00               861 	ld	a,#0x00
   00FA 02                  862 	ld	(bc),a
                            863 ;	genLabel
   00FB                     864 00120$:
                            865 ;	square.c 165
                            866 ;	genPlus
                            867 ;	AOP_HL for _i
                            868 ;	genPlusIncr
   00FB 21 15 01            869 	ld	hl,#_i
   00FE 34                  870 	inc	(hl)
                            871 ;	genGoto
   00FF C3 A1 00            872 	jp	00118$
                            873 ;	genLabel
   0102                     874 00121$:
                            875 ;	square.c 178
                            876 ;	genPointerGet
                            877 ;	AOP_HL for _first
   0102 11 70 00            878 	ld	de,#_drumA
   0105 1A                  879 	ld	a,(de)
   0106 21 1A 01            880 	ld	hl,#_first
   0109 77                  881 	ld	(hl),a
                            882 ;	square.c 179
                            883 ;	genIpush
                            884 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   010A 3E 01               885 	ld	a,#0x01
   010C F5                  886 	push	af
   010D 33                  887 	inc	sp
                            888 ;	genCall
   010E CD 00 00            889 	call	_performantdelay
   0111 E8 01               890 	lda	sp,1(sp)
                            891 ;	square.c 181
                            892 ;	genCmpGt
                            893 ;	AOP_HL for _numberOfPulsesA
                            894 ;	AOP_STK for _fillDrumA_sloc3_1_0
   0113 3E 00               895 	ld	a,#0x00
   0115 21 27 01            896 	ld	hl,#_numberOfPulsesA
   0118 96                  897 	sub	a,(hl)
   0119 3E 00               898 	ld	a,#0x00
   011B 17                  899 	rla
   011C F8 00               900 	lda	hl,0(sp)
   011E 77                  901 	ld	(hl),a
                            902 ;	genIfx
                            903 ;	AOP_STK for _fillDrumA_sloc3_1_0
   011F AF                  904 	xor	a,a
   0120 B6                  905 	or	a,(hl)
   0121 CA B1 01            906 	jp	z,00113$
                            907 ;	genCmpEq
                            908 ;	AOP_HL for _first
                            909 ; genCmpEq: left 1, right 1, result 0
   0124 21 1A 01            910 	ld	hl,#_first
   0127 7E                  911 	ld	a,(hl)
   0128 FE 01               912 	cp	a,#0x01
   012A CA B1 01            913 	jp	z,00113$
   012D                     914 00153$:
                            915 ;	square.c 183
                            916 ;	genAssign
                            917 ;	AOP_HL for _f
   012D 21 1C 01            918 	ld	hl,#_f
   0130 36 00               919 	ld	(hl),#0x00
                            920 ;	genLabel
   0132                     921 00108$:
                            922 ;	genCmpLt
                            923 ;	AOP_HL for _f
                            924 ;	AOP_HL for _totalStepsA
   0132 21 1C 01            925 	ld	hl,#_f
   0135 7E                  926 	ld	a,(hl)
   0136 21 28 01            927 	ld	hl,#_totalStepsA
   0139 96                  928 	sub	a,(hl)
   013A D2 B1 01            929 	jp	nc,00113$
                            930 ;	square.c 184
                            931 ;	genAssign
                            932 ;	AOP_HL for _x
   013D 21 1D 01            933 	ld	hl,#_x
   0140 36 00               934 	ld	(hl),#0x00
                            935 ;	genLabel
   0142                     936 00122$:
                            937 ;	genCmpLt
                            938 ;	AOP_HL for _x
                            939 ;	AOP_HL for _totalStepsA
   0142 21 1D 01            940 	ld	hl,#_x
   0145 7E                  941 	ld	a,(hl)
   0146 21 28 01            942 	ld	hl,#_totalStepsA
   0149 96                  943 	sub	a,(hl)
   014A 3E 00               944 	ld	a,#0x00
   014C 17                  945 	rla
   014D 47                  946 	ld	b,a
                            947 ;	genIfx
   014E AF                  948 	xor	a,a
   014F B0                  949 	or	a,b
   0150 CA 8B 01            950 	jp	z,00125$
                            951 ;	square.c 185
                            952 ;	genPlus
                            953 ;	AOP_HL for _x
                            954 ;	AOP_STK for _fillDrumA_sloc0_1_0
                            955 ;	Can't optimise plus by inc, falling back to the normal way
   0153 11 70 00            956 	ld	de,#_drumA
   0156 21 1D 01            957 	ld	hl,#_x
   0159 6E                  958 	ld	l,(hl)
   015A 26 00               959 	ld	h,#0x00
   015C 19                  960 	add	hl,de
   015D 7D                  961 	ld	a,l
   015E 54                  962 	ld	d,h
   015F F8 04               963 	lda	hl,4(sp)
   0161 22                  964 	ld	(hl+),a
   0162 72                  965 	ld	(hl),d
                            966 ;	genPlus
                            967 ;	AOP_HL for _x
                            968 ;	AOP_STK for _fillDrumA_sloc1_1_0
                            969 ;	genPlusIncr
                            970 ;	Can't optimise plus by inc, falling back to the normal way
   0163 21 1D 01            971 	ld	hl,#_x
   0166 7E                  972 	ld	a,(hl)
   0167 C6 01               973 	add	a,#0x01
   0169 F8 03               974 	lda	hl,3(sp)
   016B 77                  975 	ld	(hl),a
                            976 ;	genPlus
                            977 ;	AOP_STK for _fillDrumA_sloc1_1_0
                            978 ;	AOP_STK for _fillDrumA_sloc2_1_0
                            979 ;	Can't optimise plus by inc, falling back to the normal way
   016C 11 70 00            980 	ld	de,#_drumA
   016F 6E                  981 	ld	l,(hl)
   0170 26 00               982 	ld	h,#0x00
   0172 19                  983 	add	hl,de
   0173 7D                  984 	ld	a,l
   0174 54                  985 	ld	d,h
   0175 F8 01               986 	lda	hl,1(sp)
                            987 ;	genPointerGet
                            988 ;	AOP_STK for _fillDrumA_sloc2_1_0
   0177 22                  989 	ld	(hl+),a
   0178 72                  990 	ld	(hl),d
   0179 5F                  991 	ld	e,a
   017A 1A                  992 	ld	a,(de)
                            993 ;	genAssign (pointer)
                            994 ;	AOP_STK for _fillDrumA_sloc0_1_0
   017B 23                  995 	inc	hl
   017C 23                  996 	inc	hl
   017D 5E                  997 	ld	e,(hl)
   017E 23                  998 	inc	hl
   017F 56                  999 	ld	d,(hl)
   0180 12                 1000 	ld	(de),a
                           1001 ;	square.c 184
                           1002 ;	genAssign
                           1003 ;	AOP_STK for _fillDrumA_sloc1_1_0
   0181 2B                 1004 	dec	hl
   0182 2B                 1005 	dec	hl
   0183 4E                 1006 	ld	c,(hl)
                           1007 ;	genAssign
                           1008 ;	AOP_HL for _x
   0184 21 1D 01           1009 	ld	hl,#_x
   0187 71                 1010 	ld	(hl),c
                           1011 ;	genGoto
   0188 C3 42 01           1012 	jp	00122$
                           1013 ;	genLabel
   018B                    1014 00125$:
                           1015 ;	square.c 187
                           1016 ;	genMinus
                           1017 ;	AOP_HL for _totalStepsA
   018B 21 28 01           1018 	ld	hl,#_totalStepsA
   018E 7E                 1019 	ld	a,(hl)
   018F C6 FF              1020 	add	a,#0xFF
   0191 4F                 1021 	ld	c,a
                           1022 ;	genPlus
                           1023 ;	Can't optimise plus by inc, falling back to the normal way
   0192 3E 70              1024 	ld	a,#<_drumA
   0194 81                 1025 	add	a,c
   0195 4F                 1026 	ld	c,a
   0196 3E 00              1027 	ld	a,#>_drumA
   0198 CE 00              1028 	adc	a,#0x00
   019A 47                 1029 	ld	b,a
                           1030 ;	genAssign (pointer)
                           1031 ;	AOP_HL for _first
   019B 21 1A 01           1032 	ld	hl,#_first
   019E 7E                 1033 	ld	a,(hl)
   019F 02                 1034 	ld	(bc),a
                           1035 ;	square.c 188
                           1036 ;	genPointerGet
   01A0 11 70 00           1037 	ld	de,#_drumA
   01A3 1A                 1038 	ld	a,(de)
                           1039 ;	genCmpEq
                           1040 ; genCmpEq: left 1, right 1, result 0
   01A4 4F                 1041 	ld	c,a
   01A5 FE 01              1042 	cp	a,#0x01
   01A7 CA B1 01           1043 	jp	z,00113$
   01AA                    1044 00154$:
                           1045 ;	square.c 183
                           1046 ;	genPlus
                           1047 ;	AOP_HL for _f
                           1048 ;	genPlusIncr
   01AA 21 1C 01           1049 	ld	hl,#_f
   01AD 34                 1050 	inc	(hl)
                           1051 ;	genGoto
   01AE C3 32 01           1052 	jp	00108$
                           1053 ;	genLabel
   01B1                    1054 00113$:
                           1055 ;	square.c 196
                           1056 ;	genMinus
                           1057 ;	AOP_HL for _totalStepsA
   01B1 21 28 01           1058 	ld	hl,#_totalStepsA
   01B4 7E                 1059 	ld	a,(hl)
   01B5 C6 FF              1060 	add	a,#0xFF
   01B7 4F                 1061 	ld	c,a
                           1062 ;	genPlus
                           1063 ;	Can't optimise plus by inc, falling back to the normal way
   01B8 3E 70              1064 	ld	a,#<_drumA
   01BA 81                 1065 	add	a,c
   01BB 4F                 1066 	ld	c,a
   01BC 3E 00              1067 	ld	a,#>_drumA
   01BE CE 00              1068 	adc	a,#0x00
   01C0 47                 1069 	ld	b,a
                           1070 ;	genPointerGet
                           1071 ;	AOP_HL for _last
   01C1 0A                 1072 	ld	a,(bc)
   01C2 21 1B 01           1073 	ld	hl,#_last
   01C5 77                 1074 	ld	(hl),a
                           1075 ;	square.c 197
                           1076 ;	genIfx
                           1077 ;	AOP_STK for _fillDrumA_sloc3_1_0
   01C6 AF                 1078 	xor	a,a
   01C7 F8 00              1079 	lda	hl,0(sp)
   01C9 B6                 1080 	or	a,(hl)
   01CA CA 41 02           1081 	jp	z,00116$
                           1082 ;	genCmpEq
                           1083 ;	AOP_HL for _offStepA
                           1084 ; genCmpEq: left 1, right 1, result 0
   01CD 21 30 01           1085 	ld	hl,#_offStepA
   01D0 7E                 1086 	ld	a,(hl)
   01D1 B7                 1087 	or	a,a
   01D2 CA 41 02           1088 	jp	z,00116$
   01D5                    1089 00155$:
                           1090 ;	square.c 199
                           1091 ;	genAssign
                           1092 ;	AOP_HL for _f
   01D5 21 1C 01           1093 	ld	hl,#_f
   01D8 36 00              1094 	ld	(hl),#0x00
                           1095 ;	genLabel
   01DA                    1096 00130$:
                           1097 ;	genCmpLt
                           1098 ;	AOP_HL for _f
                           1099 ;	AOP_HL for _offStepA
   01DA 21 1C 01           1100 	ld	hl,#_f
   01DD 7E                 1101 	ld	a,(hl)
   01DE 21 30 01           1102 	ld	hl,#_offStepA
   01E1 96                 1103 	sub	a,(hl)
   01E2 D2 41 02           1104 	jp	nc,00116$
                           1105 ;	square.c 200
                           1106 ;	genAssign
                           1107 ;	AOP_HL for _totalStepsA
                           1108 ;	AOP_HL for _x
   01E5 21 28 01           1109 	ld	hl,#_totalStepsA
   01E8 7E                 1110 	ld	a,(hl)
   01E9 21 1D 01           1111 	ld	hl,#_x
   01EC 77                 1112 	ld	(hl),a
                           1113 ;	genLabel
   01ED                    1114 00126$:
                           1115 ;	genCmpGt
                           1116 ;	AOP_HL for _x
                           1117 ;	AOP_STK for _fillDrumA_sloc3_1_0
   01ED 3E 00              1118 	ld	a,#0x00
   01EF 21 1D 01           1119 	ld	hl,#_x
   01F2 96                 1120 	sub	a,(hl)
   01F3 3E 00              1121 	ld	a,#0x00
   01F5 17                 1122 	rla
   01F6 F8 00              1123 	lda	hl,0(sp)
   01F8 77                 1124 	ld	(hl),a
                           1125 ;	genIfx
                           1126 ;	AOP_STK for _fillDrumA_sloc3_1_0
   01F9 AF                 1127 	xor	a,a
   01FA B6                 1128 	or	a,(hl)
   01FB CA 32 02           1129 	jp	z,00129$
                           1130 ;	square.c 201
                           1131 ;	genPlus
                           1132 ;	AOP_HL for _x
                           1133 ;	AOP_STK for _fillDrumA_sloc2_1_0
                           1134 ;	Can't optimise plus by inc, falling back to the normal way
   01FE 11 70 00           1135 	ld	de,#_drumA
   0201 21 1D 01           1136 	ld	hl,#_x
   0204 6E                 1137 	ld	l,(hl)
   0205 26 00              1138 	ld	h,#0x00
   0207 19                 1139 	add	hl,de
   0208 7D                 1140 	ld	a,l
   0209 54                 1141 	ld	d,h
   020A F8 01              1142 	lda	hl,1(sp)
   020C 22                 1143 	ld	(hl+),a
   020D 72                 1144 	ld	(hl),d
                           1145 ;	genMinus
                           1146 ;	AOP_HL for _x
   020E 21 1D 01           1147 	ld	hl,#_x
   0211 7E                 1148 	ld	a,(hl)
   0212 C6 FF              1149 	add	a,#0xFF
   0214 47                 1150 	ld	b,a
                           1151 ;	genPlus
                           1152 ;	AOP_STK for _fillDrumA_sloc0_1_0
                           1153 ;	Can't optimise plus by inc, falling back to the normal way
   0215 11 70 00           1154 	ld	de,#_drumA
   0218 68                 1155 	ld	l,b
   0219 26 00              1156 	ld	h,#0x00
   021B 19                 1157 	add	hl,de
   021C 7D                 1158 	ld	a,l
   021D 54                 1159 	ld	d,h
   021E F8 04              1160 	lda	hl,4(sp)
                           1161 ;	genPointerGet
                           1162 ;	AOP_STK for _fillDrumA_sloc0_1_0
   0220 22                 1163 	ld	(hl+),a
   0221 72                 1164 	ld	(hl),d
   0222 5F                 1165 	ld	e,a
   0223 1A                 1166 	ld	a,(de)
                           1167 ;	genAssign (pointer)
                           1168 ;	AOP_STK for _fillDrumA_sloc2_1_0
   0224 F8 01              1169 	lda	hl,1(sp)
   0226 5E                 1170 	ld	e,(hl)
   0227 23                 1171 	inc	hl
   0228 56                 1172 	ld	d,(hl)
   0229 12                 1173 	ld	(de),a
                           1174 ;	square.c 200
                           1175 ;	genAssign
   022A 48                 1176 	ld	c,b
                           1177 ;	genAssign
                           1178 ;	AOP_HL for _x
   022B 21 1D 01           1179 	ld	hl,#_x
   022E 71                 1180 	ld	(hl),c
                           1181 ;	genGoto
   022F C3 ED 01           1182 	jp	00126$
                           1183 ;	genLabel
   0232                    1184 00129$:
                           1185 ;	square.c 203
                           1186 ;	genAssign (pointer)
                           1187 ;	AOP_HL for _last
   0232 11 70 00           1188 	ld	de,#_drumA
   0235 21 1B 01           1189 	ld	hl,#_last
   0238 7E                 1190 	ld	a,(hl)
   0239 12                 1191 	ld	(de),a
                           1192 ;	square.c 199
                           1193 ;	genPlus
                           1194 ;	AOP_HL for _f
                           1195 ;	genPlusIncr
   023A 21 1C 01           1196 	ld	hl,#_f
   023D 34                 1197 	inc	(hl)
                           1198 ;	genGoto
   023E C3 DA 01           1199 	jp	00130$
                           1200 ;	genLabel
   0241                    1201 00116$:
                           1202 ;	square.c 206
                           1203 ;	genCall
                           1204 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0241 CD 14 00           1205 	call	_rand
                           1206 ;	AOP_HL for _randA
   0244 21 17 01           1207 	ld	hl,#_randA
   0247 73                 1208 	ld	(hl),e
                           1209 ;	square.c 207
                           1210 ;	genIpush
                           1211 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0248 3E 1E              1212 	ld	a,#0x1E
   024A F5                 1213 	push	af
   024B 33                 1214 	inc	sp
                           1215 ;	genIpush
                           1216 ;	AOP_HL for _randA
   024C 21 17 01           1217 	ld	hl,#_randA
   024F 7E                 1218 	ld	a,(hl)
   0250 F5                 1219 	push	af
   0251 33                 1220 	inc	sp
                           1221 ;	genCall
   0252 CD 00 00           1222 	call	__moduchar_rrx_s
   0255 4B                 1223 	ld	c,e
   0256 E8 02              1224 	lda	sp,2(sp)
                           1225 ;	genPlus
                           1226 ;	AOP_HL for _delayA
                           1227 ;	AOP_HL for _xA
                           1228 ;	Can't optimise plus by inc, falling back to the normal way
   0258 21 21 01           1229 	ld	hl,#_delayA
   025B 7E                 1230 	ld	a,(hl)
   025C 81                 1231 	add	a,c
   025D 21 1E 01           1232 	ld	hl,#_xA
   0260 77                 1233 	ld	(hl),a
                           1234 ;	genLabel
   0261                    1235 00134$:
                           1236 ;	genEndFunction
   0261 E8 06              1237 	lda	sp,6(sp)
   0263 C9                 1238 	ret
   0264                    1239 ___fillDrumA_end:
                           1240 ;	square.c 211
                           1241 ;	genLabel
                           1242 ;	genFunction
                           1243 ;	---------------------------------
                           1244 ; Function fillDrumB
                           1245 ; ---------------------------------
   0264                    1246 ___fillDrumB_start:
   0264                    1247 _fillDrumB:
   0264 E8 FA              1248 	lda	sp,-6(sp)
                           1249 ;	square.c 212
                           1250 ;	genAssign
                           1251 ;	AOP_HL for _bucket
   0266 21 14 01           1252 	ld	hl,#_bucket
   0269 36 00              1253 	ld	(hl),#0x00
                           1254 ;	square.c 213
                           1255 ;	genAssign
                           1256 ;	AOP_HL for _i
   026B 21 15 01           1257 	ld	hl,#_i
   026E 36 00              1258 	ld	(hl),#0x00
                           1259 ;	genLabel
   0270                    1260 00118$:
                           1261 ;	genCmpLt
                           1262 ;	AOP_HL for _i
                           1263 ;	AOP_HL for _totalStepsB
   0270 21 15 01           1264 	ld	hl,#_i
   0273 7E                 1265 	ld	a,(hl)
   0274 21 2B 01           1266 	ld	hl,#_totalStepsB
   0277 96                 1267 	sub	a,(hl)
   0278 D2 D1 02           1268 	jp	nc,00121$
                           1269 ;	square.c 215
                           1270 ;	genPlus
                           1271 ;	AOP_HL for _bucket
                           1272 ;	AOP_HL for _numberOfPulsesB
                           1273 ;	Can't optimise plus by inc, falling back to the normal way
   027B 21 14 01           1274 	ld	hl,#_bucket
   027E 7E                 1275 	ld	a,(hl)
   027F 21 2A 01           1276 	ld	hl,#_numberOfPulsesB
   0282 86                 1277 	add	a,(hl)
   0283 21 14 01           1278 	ld	hl,#_bucket
   0286 77                 1279 	ld	(hl),a
                           1280 ;	square.c 216
                           1281 ;	genMinus
                           1282 ;	AOP_HL for _totalStepsB
   0287 21 2B 01           1283 	ld	hl,#_totalStepsB
   028A 7E                 1284 	ld	a,(hl)
   028B C6 FF              1285 	add	a,#0xFF
                           1286 ;	genCmpGt
                           1287 ;	AOP_HL for _bucket
   028D 4F                 1288 	ld	c,a
   028E 21 14 01           1289 	ld	hl,#_bucket
   0291 96                 1290 	sub	a,(hl)
   0292 D2 B0 02           1291 	jp	nc,00104$
                           1292 ;	square.c 218
                           1293 ;	genMinus
                           1294 ;	AOP_HL for _bucket
                           1295 ;	AOP_HL for _totalStepsB
   0295 7E                 1296 	ld	a,(hl)
   0296 21 2B 01           1297 	ld	hl,#_totalStepsB
   0299 96                 1298 	sub	a,(hl)
   029A 21 14 01           1299 	ld	hl,#_bucket
   029D 77                 1300 	ld	(hl),a
                           1301 ;	square.c 219
                           1302 ;	genPlus
                           1303 ;	AOP_HL for _i
                           1304 ;	Can't optimise plus by inc, falling back to the normal way
   029E 3E 90              1305 	ld	a,#<_drumB
   02A0 21 15 01           1306 	ld	hl,#_i
   02A3 86                 1307 	add	a,(hl)
   02A4 4F                 1308 	ld	c,a
   02A5 3E 00              1309 	ld	a,#>_drumB
   02A7 CE 00              1310 	adc	a,#0x00
   02A9 47                 1311 	ld	b,a
                           1312 ;	genAssign (pointer)
   02AA 3E 01              1313 	ld	a,#0x01
   02AC 02                 1314 	ld	(bc),a
                           1315 ;	genGoto
   02AD C3 CA 02           1316 	jp	00120$
                           1317 ;	genLabel
   02B0                    1318 00104$:
                           1319 ;	square.c 221
                           1320 ;	genCmpLt
                           1321 ;	AOP_HL for _bucket
                           1322 ;	AOP_HL for _totalStepsB
   02B0 21 14 01           1323 	ld	hl,#_bucket
   02B3 7E                 1324 	ld	a,(hl)
   02B4 21 2B 01           1325 	ld	hl,#_totalStepsB
   02B7 96                 1326 	sub	a,(hl)
   02B8 D2 CA 02           1327 	jp	nc,00120$
                           1328 ;	square.c 223
                           1329 ;	genPlus
                           1330 ;	AOP_HL for _i
                           1331 ;	Can't optimise plus by inc, falling back to the normal way
   02BB 3E 90              1332 	ld	a,#<_drumB
   02BD 21 15 01           1333 	ld	hl,#_i
   02C0 86                 1334 	add	a,(hl)
   02C1 4F                 1335 	ld	c,a
   02C2 3E 00              1336 	ld	a,#>_drumB
   02C4 CE 00              1337 	adc	a,#0x00
   02C6 47                 1338 	ld	b,a
                           1339 ;	genAssign (pointer)
   02C7 3E 00              1340 	ld	a,#0x00
   02C9 02                 1341 	ld	(bc),a
                           1342 ;	genLabel
   02CA                    1343 00120$:
                           1344 ;	square.c 213
                           1345 ;	genPlus
                           1346 ;	AOP_HL for _i
                           1347 ;	genPlusIncr
   02CA 21 15 01           1348 	ld	hl,#_i
   02CD 34                 1349 	inc	(hl)
                           1350 ;	genGoto
   02CE C3 70 02           1351 	jp	00118$
                           1352 ;	genLabel
   02D1                    1353 00121$:
                           1354 ;	square.c 226
                           1355 ;	genPointerGet
                           1356 ;	AOP_HL for _first
   02D1 11 90 00           1357 	ld	de,#_drumB
   02D4 1A                 1358 	ld	a,(de)
   02D5 21 1A 01           1359 	ld	hl,#_first
   02D8 77                 1360 	ld	(hl),a
                           1361 ;	square.c 227
                           1362 ;	genIpush
                           1363 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02D9 3E 01              1364 	ld	a,#0x01
   02DB F5                 1365 	push	af
   02DC 33                 1366 	inc	sp
                           1367 ;	genCall
   02DD CD 00 00           1368 	call	_performantdelay
   02E0 E8 01              1369 	lda	sp,1(sp)
                           1370 ;	square.c 229
                           1371 ;	genCmpGt
                           1372 ;	AOP_HL for _numberOfPulsesB
                           1373 ;	AOP_STK for _fillDrumB_sloc3_1_0
   02E2 3E 00              1374 	ld	a,#0x00
   02E4 21 2A 01           1375 	ld	hl,#_numberOfPulsesB
   02E7 96                 1376 	sub	a,(hl)
   02E8 3E 00              1377 	ld	a,#0x00
   02EA 17                 1378 	rla
   02EB F8 00              1379 	lda	hl,0(sp)
   02ED 77                 1380 	ld	(hl),a
                           1381 ;	genIfx
                           1382 ;	AOP_STK for _fillDrumB_sloc3_1_0
   02EE AF                 1383 	xor	a,a
   02EF B6                 1384 	or	a,(hl)
   02F0 CA 80 03           1385 	jp	z,00113$
                           1386 ;	genCmpEq
                           1387 ;	AOP_HL for _first
                           1388 ; genCmpEq: left 1, right 1, result 0
   02F3 21 1A 01           1389 	ld	hl,#_first
   02F6 7E                 1390 	ld	a,(hl)
   02F7 FE 01              1391 	cp	a,#0x01
   02F9 CA 80 03           1392 	jp	z,00113$
   02FC                    1393 00153$:
                           1394 ;	square.c 231
                           1395 ;	genAssign
                           1396 ;	AOP_HL for _f
   02FC 21 1C 01           1397 	ld	hl,#_f
   02FF 36 00              1398 	ld	(hl),#0x00
                           1399 ;	genLabel
   0301                    1400 00108$:
                           1401 ;	genCmpLt
                           1402 ;	AOP_HL for _f
                           1403 ;	AOP_HL for _totalStepsB
   0301 21 1C 01           1404 	ld	hl,#_f
   0304 7E                 1405 	ld	a,(hl)
   0305 21 2B 01           1406 	ld	hl,#_totalStepsB
   0308 96                 1407 	sub	a,(hl)
   0309 D2 80 03           1408 	jp	nc,00113$
                           1409 ;	square.c 232
                           1410 ;	genAssign
                           1411 ;	AOP_HL for _x
   030C 21 1D 01           1412 	ld	hl,#_x
   030F 36 00              1413 	ld	(hl),#0x00
                           1414 ;	genLabel
   0311                    1415 00122$:
                           1416 ;	genCmpLt
                           1417 ;	AOP_HL for _x
                           1418 ;	AOP_HL for _totalStepsB
   0311 21 1D 01           1419 	ld	hl,#_x
   0314 7E                 1420 	ld	a,(hl)
   0315 21 2B 01           1421 	ld	hl,#_totalStepsB
   0318 96                 1422 	sub	a,(hl)
   0319 3E 00              1423 	ld	a,#0x00
   031B 17                 1424 	rla
   031C 47                 1425 	ld	b,a
                           1426 ;	genIfx
   031D AF                 1427 	xor	a,a
   031E B0                 1428 	or	a,b
   031F CA 5A 03           1429 	jp	z,00125$
                           1430 ;	square.c 233
                           1431 ;	genPlus
                           1432 ;	AOP_HL for _x
                           1433 ;	AOP_STK for _fillDrumB_sloc0_1_0
                           1434 ;	Can't optimise plus by inc, falling back to the normal way
   0322 11 90 00           1435 	ld	de,#_drumB
   0325 21 1D 01           1436 	ld	hl,#_x
   0328 6E                 1437 	ld	l,(hl)
   0329 26 00              1438 	ld	h,#0x00
   032B 19                 1439 	add	hl,de
   032C 7D                 1440 	ld	a,l
   032D 54                 1441 	ld	d,h
   032E F8 04              1442 	lda	hl,4(sp)
   0330 22                 1443 	ld	(hl+),a
   0331 72                 1444 	ld	(hl),d
                           1445 ;	genPlus
                           1446 ;	AOP_HL for _x
                           1447 ;	AOP_STK for _fillDrumB_sloc1_1_0
                           1448 ;	genPlusIncr
                           1449 ;	Can't optimise plus by inc, falling back to the normal way
   0332 21 1D 01           1450 	ld	hl,#_x
   0335 7E                 1451 	ld	a,(hl)
   0336 C6 01              1452 	add	a,#0x01
   0338 F8 03              1453 	lda	hl,3(sp)
   033A 77                 1454 	ld	(hl),a
                           1455 ;	genPlus
                           1456 ;	AOP_STK for _fillDrumB_sloc1_1_0
                           1457 ;	AOP_STK for _fillDrumB_sloc2_1_0
                           1458 ;	Can't optimise plus by inc, falling back to the normal way
   033B 11 90 00           1459 	ld	de,#_drumB
   033E 6E                 1460 	ld	l,(hl)
   033F 26 00              1461 	ld	h,#0x00
   0341 19                 1462 	add	hl,de
   0342 7D                 1463 	ld	a,l
   0343 54                 1464 	ld	d,h
   0344 F8 01              1465 	lda	hl,1(sp)
                           1466 ;	genPointerGet
                           1467 ;	AOP_STK for _fillDrumB_sloc2_1_0
   0346 22                 1468 	ld	(hl+),a
   0347 72                 1469 	ld	(hl),d
   0348 5F                 1470 	ld	e,a
   0349 1A                 1471 	ld	a,(de)
                           1472 ;	genAssign (pointer)
                           1473 ;	AOP_STK for _fillDrumB_sloc0_1_0
   034A 23                 1474 	inc	hl
   034B 23                 1475 	inc	hl
   034C 5E                 1476 	ld	e,(hl)
   034D 23                 1477 	inc	hl
   034E 56                 1478 	ld	d,(hl)
   034F 12                 1479 	ld	(de),a
                           1480 ;	square.c 232
                           1481 ;	genAssign
                           1482 ;	AOP_STK for _fillDrumB_sloc1_1_0
   0350 2B                 1483 	dec	hl
   0351 2B                 1484 	dec	hl
   0352 4E                 1485 	ld	c,(hl)
                           1486 ;	genAssign
                           1487 ;	AOP_HL for _x
   0353 21 1D 01           1488 	ld	hl,#_x
   0356 71                 1489 	ld	(hl),c
                           1490 ;	genGoto
   0357 C3 11 03           1491 	jp	00122$
                           1492 ;	genLabel
   035A                    1493 00125$:
                           1494 ;	square.c 235
                           1495 ;	genMinus
                           1496 ;	AOP_HL for _totalStepsB
   035A 21 2B 01           1497 	ld	hl,#_totalStepsB
   035D 7E                 1498 	ld	a,(hl)
   035E C6 FF              1499 	add	a,#0xFF
   0360 4F                 1500 	ld	c,a
                           1501 ;	genPlus
                           1502 ;	Can't optimise plus by inc, falling back to the normal way
   0361 3E 90              1503 	ld	a,#<_drumB
   0363 81                 1504 	add	a,c
   0364 4F                 1505 	ld	c,a
   0365 3E 00              1506 	ld	a,#>_drumB
   0367 CE 00              1507 	adc	a,#0x00
   0369 47                 1508 	ld	b,a
                           1509 ;	genAssign (pointer)
                           1510 ;	AOP_HL for _first
   036A 21 1A 01           1511 	ld	hl,#_first
   036D 7E                 1512 	ld	a,(hl)
   036E 02                 1513 	ld	(bc),a
                           1514 ;	square.c 236
                           1515 ;	genPointerGet
   036F 11 90 00           1516 	ld	de,#_drumB
   0372 1A                 1517 	ld	a,(de)
                           1518 ;	genCmpEq
                           1519 ; genCmpEq: left 1, right 1, result 0
   0373 4F                 1520 	ld	c,a
   0374 FE 01              1521 	cp	a,#0x01
   0376 CA 80 03           1522 	jp	z,00113$
   0379                    1523 00154$:
                           1524 ;	square.c 231
                           1525 ;	genPlus
                           1526 ;	AOP_HL for _f
                           1527 ;	genPlusIncr
   0379 21 1C 01           1528 	ld	hl,#_f
   037C 34                 1529 	inc	(hl)
                           1530 ;	genGoto
   037D C3 01 03           1531 	jp	00108$
                           1532 ;	genLabel
   0380                    1533 00113$:
                           1534 ;	square.c 243
                           1535 ;	genMinus
                           1536 ;	AOP_HL for _totalStepsB
   0380 21 2B 01           1537 	ld	hl,#_totalStepsB
   0383 7E                 1538 	ld	a,(hl)
   0384 C6 FF              1539 	add	a,#0xFF
   0386 4F                 1540 	ld	c,a
                           1541 ;	genPlus
                           1542 ;	Can't optimise plus by inc, falling back to the normal way
   0387 3E 90              1543 	ld	a,#<_drumB
   0389 81                 1544 	add	a,c
   038A 4F                 1545 	ld	c,a
   038B 3E 00              1546 	ld	a,#>_drumB
   038D CE 00              1547 	adc	a,#0x00
   038F 47                 1548 	ld	b,a
                           1549 ;	genPointerGet
                           1550 ;	AOP_HL for _last
   0390 0A                 1551 	ld	a,(bc)
   0391 21 1B 01           1552 	ld	hl,#_last
   0394 77                 1553 	ld	(hl),a
                           1554 ;	square.c 244
                           1555 ;	genIfx
                           1556 ;	AOP_STK for _fillDrumB_sloc3_1_0
   0395 AF                 1557 	xor	a,a
   0396 F8 00              1558 	lda	hl,0(sp)
   0398 B6                 1559 	or	a,(hl)
   0399 CA 10 04           1560 	jp	z,00116$
                           1561 ;	genCmpEq
                           1562 ;	AOP_HL for _offStepB
                           1563 ; genCmpEq: left 1, right 1, result 0
   039C 21 31 01           1564 	ld	hl,#_offStepB
   039F 7E                 1565 	ld	a,(hl)
   03A0 B7                 1566 	or	a,a
   03A1 CA 10 04           1567 	jp	z,00116$
   03A4                    1568 00155$:
                           1569 ;	square.c 246
                           1570 ;	genAssign
                           1571 ;	AOP_HL for _f
   03A4 21 1C 01           1572 	ld	hl,#_f
   03A7 36 00              1573 	ld	(hl),#0x00
                           1574 ;	genLabel
   03A9                    1575 00130$:
                           1576 ;	genCmpLt
                           1577 ;	AOP_HL for _f
                           1578 ;	AOP_HL for _offStepB
   03A9 21 1C 01           1579 	ld	hl,#_f
   03AC 7E                 1580 	ld	a,(hl)
   03AD 21 31 01           1581 	ld	hl,#_offStepB
   03B0 96                 1582 	sub	a,(hl)
   03B1 D2 10 04           1583 	jp	nc,00116$
                           1584 ;	square.c 247
                           1585 ;	genAssign
                           1586 ;	AOP_HL for _totalStepsB
                           1587 ;	AOP_HL for _x
   03B4 21 2B 01           1588 	ld	hl,#_totalStepsB
   03B7 7E                 1589 	ld	a,(hl)
   03B8 21 1D 01           1590 	ld	hl,#_x
   03BB 77                 1591 	ld	(hl),a
                           1592 ;	genLabel
   03BC                    1593 00126$:
                           1594 ;	genCmpGt
                           1595 ;	AOP_HL for _x
                           1596 ;	AOP_STK for _fillDrumB_sloc3_1_0
   03BC 3E 00              1597 	ld	a,#0x00
   03BE 21 1D 01           1598 	ld	hl,#_x
   03C1 96                 1599 	sub	a,(hl)
   03C2 3E 00              1600 	ld	a,#0x00
   03C4 17                 1601 	rla
   03C5 F8 00              1602 	lda	hl,0(sp)
   03C7 77                 1603 	ld	(hl),a
                           1604 ;	genIfx
                           1605 ;	AOP_STK for _fillDrumB_sloc3_1_0
   03C8 AF                 1606 	xor	a,a
   03C9 B6                 1607 	or	a,(hl)
   03CA CA 01 04           1608 	jp	z,00129$
                           1609 ;	square.c 248
                           1610 ;	genPlus
                           1611 ;	AOP_HL for _x
                           1612 ;	AOP_STK for _fillDrumB_sloc2_1_0
                           1613 ;	Can't optimise plus by inc, falling back to the normal way
   03CD 11 90 00           1614 	ld	de,#_drumB
   03D0 21 1D 01           1615 	ld	hl,#_x
   03D3 6E                 1616 	ld	l,(hl)
   03D4 26 00              1617 	ld	h,#0x00
   03D6 19                 1618 	add	hl,de
   03D7 7D                 1619 	ld	a,l
   03D8 54                 1620 	ld	d,h
   03D9 F8 01              1621 	lda	hl,1(sp)
   03DB 22                 1622 	ld	(hl+),a
   03DC 72                 1623 	ld	(hl),d
                           1624 ;	genMinus
                           1625 ;	AOP_HL for _x
   03DD 21 1D 01           1626 	ld	hl,#_x
   03E0 7E                 1627 	ld	a,(hl)
   03E1 C6 FF              1628 	add	a,#0xFF
   03E3 47                 1629 	ld	b,a
                           1630 ;	genPlus
                           1631 ;	AOP_STK for _fillDrumB_sloc0_1_0
                           1632 ;	Can't optimise plus by inc, falling back to the normal way
   03E4 11 90 00           1633 	ld	de,#_drumB
   03E7 68                 1634 	ld	l,b
   03E8 26 00              1635 	ld	h,#0x00
   03EA 19                 1636 	add	hl,de
   03EB 7D                 1637 	ld	a,l
   03EC 54                 1638 	ld	d,h
   03ED F8 04              1639 	lda	hl,4(sp)
                           1640 ;	genPointerGet
                           1641 ;	AOP_STK for _fillDrumB_sloc0_1_0
   03EF 22                 1642 	ld	(hl+),a
   03F0 72                 1643 	ld	(hl),d
   03F1 5F                 1644 	ld	e,a
   03F2 1A                 1645 	ld	a,(de)
                           1646 ;	genAssign (pointer)
                           1647 ;	AOP_STK for _fillDrumB_sloc2_1_0
   03F3 F8 01              1648 	lda	hl,1(sp)
   03F5 5E                 1649 	ld	e,(hl)
   03F6 23                 1650 	inc	hl
   03F7 56                 1651 	ld	d,(hl)
   03F8 12                 1652 	ld	(de),a
                           1653 ;	square.c 247
                           1654 ;	genAssign
   03F9 48                 1655 	ld	c,b
                           1656 ;	genAssign
                           1657 ;	AOP_HL for _x
   03FA 21 1D 01           1658 	ld	hl,#_x
   03FD 71                 1659 	ld	(hl),c
                           1660 ;	genGoto
   03FE C3 BC 03           1661 	jp	00126$
                           1662 ;	genLabel
   0401                    1663 00129$:
                           1664 ;	square.c 250
                           1665 ;	genAssign (pointer)
                           1666 ;	AOP_HL for _last
   0401 11 90 00           1667 	ld	de,#_drumB
   0404 21 1B 01           1668 	ld	hl,#_last
   0407 7E                 1669 	ld	a,(hl)
   0408 12                 1670 	ld	(de),a
                           1671 ;	square.c 246
                           1672 ;	genPlus
                           1673 ;	AOP_HL for _f
                           1674 ;	genPlusIncr
   0409 21 1C 01           1675 	ld	hl,#_f
   040C 34                 1676 	inc	(hl)
                           1677 ;	genGoto
   040D C3 A9 03           1678 	jp	00130$
                           1679 ;	genLabel
   0410                    1680 00116$:
                           1681 ;	square.c 253
                           1682 ;	genCall
                           1683 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0410 CD 14 00           1684 	call	_rand
                           1685 ;	AOP_HL for _randB
   0413 21 18 01           1686 	ld	hl,#_randB
   0416 73                 1687 	ld	(hl),e
                           1688 ;	square.c 254
                           1689 ;	genIpush
                           1690 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0417 3E 1E              1691 	ld	a,#0x1E
   0419 F5                 1692 	push	af
   041A 33                 1693 	inc	sp
                           1694 ;	genIpush
                           1695 ;	AOP_HL for _randB
   041B 21 18 01           1696 	ld	hl,#_randB
   041E 7E                 1697 	ld	a,(hl)
   041F F5                 1698 	push	af
   0420 33                 1699 	inc	sp
                           1700 ;	genCall
   0421 CD 00 00           1701 	call	__moduchar_rrx_s
   0424 4B                 1702 	ld	c,e
   0425 E8 02              1703 	lda	sp,2(sp)
                           1704 ;	genPlus
                           1705 ;	AOP_HL for _delayB
                           1706 ;	AOP_HL for _xB
                           1707 ;	Can't optimise plus by inc, falling back to the normal way
   0427 21 22 01           1708 	ld	hl,#_delayB
   042A 7E                 1709 	ld	a,(hl)
   042B 81                 1710 	add	a,c
   042C 21 1F 01           1711 	ld	hl,#_xB
   042F 77                 1712 	ld	(hl),a
                           1713 ;	genLabel
   0430                    1714 00134$:
                           1715 ;	genEndFunction
   0430 E8 06              1716 	lda	sp,6(sp)
   0432 C9                 1717 	ret
   0433                    1718 ___fillDrumB_end:
                           1719 ;	square.c 258
                           1720 ;	genLabel
                           1721 ;	genFunction
                           1722 ;	---------------------------------
                           1723 ; Function fillDrumC
                           1724 ; ---------------------------------
   0433                    1725 ___fillDrumC_start:
   0433                    1726 _fillDrumC:
   0433 E8 FA              1727 	lda	sp,-6(sp)
                           1728 ;	square.c 259
                           1729 ;	genAssign
                           1730 ;	AOP_HL for _bucket
   0435 21 14 01           1731 	ld	hl,#_bucket
   0438 36 00              1732 	ld	(hl),#0x00
                           1733 ;	square.c 260
                           1734 ;	genAssign
                           1735 ;	AOP_HL for _i
   043A 21 15 01           1736 	ld	hl,#_i
   043D 36 00              1737 	ld	(hl),#0x00
                           1738 ;	genLabel
   043F                    1739 00118$:
                           1740 ;	genCmpLt
                           1741 ;	AOP_HL for _i
                           1742 ;	AOP_HL for _totalStepsC
   043F 21 15 01           1743 	ld	hl,#_i
   0442 7E                 1744 	ld	a,(hl)
   0443 21 2E 01           1745 	ld	hl,#_totalStepsC
   0446 96                 1746 	sub	a,(hl)
   0447 D2 A0 04           1747 	jp	nc,00121$
                           1748 ;	square.c 262
                           1749 ;	genPlus
                           1750 ;	AOP_HL for _bucket
                           1751 ;	AOP_HL for _numberOfPulsesC
                           1752 ;	Can't optimise plus by inc, falling back to the normal way
   044A 21 14 01           1753 	ld	hl,#_bucket
   044D 7E                 1754 	ld	a,(hl)
   044E 21 2D 01           1755 	ld	hl,#_numberOfPulsesC
   0451 86                 1756 	add	a,(hl)
   0452 21 14 01           1757 	ld	hl,#_bucket
   0455 77                 1758 	ld	(hl),a
                           1759 ;	square.c 263
                           1760 ;	genMinus
                           1761 ;	AOP_HL for _totalStepsC
   0456 21 2E 01           1762 	ld	hl,#_totalStepsC
   0459 7E                 1763 	ld	a,(hl)
   045A C6 FF              1764 	add	a,#0xFF
                           1765 ;	genCmpGt
                           1766 ;	AOP_HL for _bucket
   045C 4F                 1767 	ld	c,a
   045D 21 14 01           1768 	ld	hl,#_bucket
   0460 96                 1769 	sub	a,(hl)
   0461 D2 7F 04           1770 	jp	nc,00104$
                           1771 ;	square.c 265
                           1772 ;	genMinus
                           1773 ;	AOP_HL for _bucket
                           1774 ;	AOP_HL for _totalStepsC
   0464 7E                 1775 	ld	a,(hl)
   0465 21 2E 01           1776 	ld	hl,#_totalStepsC
   0468 96                 1777 	sub	a,(hl)
   0469 21 14 01           1778 	ld	hl,#_bucket
   046C 77                 1779 	ld	(hl),a
                           1780 ;	square.c 266
                           1781 ;	genPlus
                           1782 ;	AOP_HL for _i
                           1783 ;	Can't optimise plus by inc, falling back to the normal way
   046D 3E B0              1784 	ld	a,#<_drumC
   046F 21 15 01           1785 	ld	hl,#_i
   0472 86                 1786 	add	a,(hl)
   0473 4F                 1787 	ld	c,a
   0474 3E 00              1788 	ld	a,#>_drumC
   0476 CE 00              1789 	adc	a,#0x00
   0478 47                 1790 	ld	b,a
                           1791 ;	genAssign (pointer)
   0479 3E 01              1792 	ld	a,#0x01
   047B 02                 1793 	ld	(bc),a
                           1794 ;	genGoto
   047C C3 99 04           1795 	jp	00120$
                           1796 ;	genLabel
   047F                    1797 00104$:
                           1798 ;	square.c 268
                           1799 ;	genCmpLt
                           1800 ;	AOP_HL for _bucket
                           1801 ;	AOP_HL for _totalStepsC
   047F 21 14 01           1802 	ld	hl,#_bucket
   0482 7E                 1803 	ld	a,(hl)
   0483 21 2E 01           1804 	ld	hl,#_totalStepsC
   0486 96                 1805 	sub	a,(hl)
   0487 D2 99 04           1806 	jp	nc,00120$
                           1807 ;	square.c 270
                           1808 ;	genPlus
                           1809 ;	AOP_HL for _i
                           1810 ;	Can't optimise plus by inc, falling back to the normal way
   048A 3E B0              1811 	ld	a,#<_drumC
   048C 21 15 01           1812 	ld	hl,#_i
   048F 86                 1813 	add	a,(hl)
   0490 4F                 1814 	ld	c,a
   0491 3E 00              1815 	ld	a,#>_drumC
   0493 CE 00              1816 	adc	a,#0x00
   0495 47                 1817 	ld	b,a
                           1818 ;	genAssign (pointer)
   0496 3E 00              1819 	ld	a,#0x00
   0498 02                 1820 	ld	(bc),a
                           1821 ;	genLabel
   0499                    1822 00120$:
                           1823 ;	square.c 260
                           1824 ;	genPlus
                           1825 ;	AOP_HL for _i
                           1826 ;	genPlusIncr
   0499 21 15 01           1827 	ld	hl,#_i
   049C 34                 1828 	inc	(hl)
                           1829 ;	genGoto
   049D C3 3F 04           1830 	jp	00118$
                           1831 ;	genLabel
   04A0                    1832 00121$:
                           1833 ;	square.c 273
                           1834 ;	genPointerGet
                           1835 ;	AOP_HL for _first
   04A0 11 B0 00           1836 	ld	de,#_drumC
   04A3 1A                 1837 	ld	a,(de)
   04A4 21 1A 01           1838 	ld	hl,#_first
   04A7 77                 1839 	ld	(hl),a
                           1840 ;	square.c 274
                           1841 ;	genIpush
                           1842 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   04A8 3E 01              1843 	ld	a,#0x01
   04AA F5                 1844 	push	af
   04AB 33                 1845 	inc	sp
                           1846 ;	genCall
   04AC CD 00 00           1847 	call	_performantdelay
   04AF E8 01              1848 	lda	sp,1(sp)
                           1849 ;	square.c 276
                           1850 ;	genCmpGt
                           1851 ;	AOP_HL for _numberOfPulsesC
                           1852 ;	AOP_STK for _fillDrumC_sloc3_1_0
   04B1 3E 00              1853 	ld	a,#0x00
   04B3 21 2D 01           1854 	ld	hl,#_numberOfPulsesC
   04B6 96                 1855 	sub	a,(hl)
   04B7 3E 00              1856 	ld	a,#0x00
   04B9 17                 1857 	rla
   04BA F8 00              1858 	lda	hl,0(sp)
   04BC 77                 1859 	ld	(hl),a
                           1860 ;	genIfx
                           1861 ;	AOP_STK for _fillDrumC_sloc3_1_0
   04BD AF                 1862 	xor	a,a
   04BE B6                 1863 	or	a,(hl)
   04BF CA 4F 05           1864 	jp	z,00113$
                           1865 ;	genCmpEq
                           1866 ;	AOP_HL for _first
                           1867 ; genCmpEq: left 1, right 1, result 0
   04C2 21 1A 01           1868 	ld	hl,#_first
   04C5 7E                 1869 	ld	a,(hl)
   04C6 FE 01              1870 	cp	a,#0x01
   04C8 CA 4F 05           1871 	jp	z,00113$
   04CB                    1872 00153$:
                           1873 ;	square.c 278
                           1874 ;	genAssign
                           1875 ;	AOP_HL for _f
   04CB 21 1C 01           1876 	ld	hl,#_f
   04CE 36 00              1877 	ld	(hl),#0x00
                           1878 ;	genLabel
   04D0                    1879 00108$:
                           1880 ;	genCmpLt
                           1881 ;	AOP_HL for _f
                           1882 ;	AOP_HL for _totalStepsC
   04D0 21 1C 01           1883 	ld	hl,#_f
   04D3 7E                 1884 	ld	a,(hl)
   04D4 21 2E 01           1885 	ld	hl,#_totalStepsC
   04D7 96                 1886 	sub	a,(hl)
   04D8 D2 4F 05           1887 	jp	nc,00113$
                           1888 ;	square.c 279
                           1889 ;	genAssign
                           1890 ;	AOP_HL for _x
   04DB 21 1D 01           1891 	ld	hl,#_x
   04DE 36 00              1892 	ld	(hl),#0x00
                           1893 ;	genLabel
   04E0                    1894 00122$:
                           1895 ;	genCmpLt
                           1896 ;	AOP_HL for _x
                           1897 ;	AOP_HL for _totalStepsC
   04E0 21 1D 01           1898 	ld	hl,#_x
   04E3 7E                 1899 	ld	a,(hl)
   04E4 21 2E 01           1900 	ld	hl,#_totalStepsC
   04E7 96                 1901 	sub	a,(hl)
   04E8 3E 00              1902 	ld	a,#0x00
   04EA 17                 1903 	rla
   04EB 47                 1904 	ld	b,a
                           1905 ;	genIfx
   04EC AF                 1906 	xor	a,a
   04ED B0                 1907 	or	a,b
   04EE CA 29 05           1908 	jp	z,00125$
                           1909 ;	square.c 280
                           1910 ;	genPlus
                           1911 ;	AOP_HL for _x
                           1912 ;	AOP_STK for _fillDrumC_sloc0_1_0
                           1913 ;	Can't optimise plus by inc, falling back to the normal way
   04F1 11 B0 00           1914 	ld	de,#_drumC
   04F4 21 1D 01           1915 	ld	hl,#_x
   04F7 6E                 1916 	ld	l,(hl)
   04F8 26 00              1917 	ld	h,#0x00
   04FA 19                 1918 	add	hl,de
   04FB 7D                 1919 	ld	a,l
   04FC 54                 1920 	ld	d,h
   04FD F8 04              1921 	lda	hl,4(sp)
   04FF 22                 1922 	ld	(hl+),a
   0500 72                 1923 	ld	(hl),d
                           1924 ;	genPlus
                           1925 ;	AOP_HL for _x
                           1926 ;	AOP_STK for _fillDrumC_sloc1_1_0
                           1927 ;	genPlusIncr
                           1928 ;	Can't optimise plus by inc, falling back to the normal way
   0501 21 1D 01           1929 	ld	hl,#_x
   0504 7E                 1930 	ld	a,(hl)
   0505 C6 01              1931 	add	a,#0x01
   0507 F8 03              1932 	lda	hl,3(sp)
   0509 77                 1933 	ld	(hl),a
                           1934 ;	genPlus
                           1935 ;	AOP_STK for _fillDrumC_sloc1_1_0
                           1936 ;	AOP_STK for _fillDrumC_sloc2_1_0
                           1937 ;	Can't optimise plus by inc, falling back to the normal way
   050A 11 B0 00           1938 	ld	de,#_drumC
   050D 6E                 1939 	ld	l,(hl)
   050E 26 00              1940 	ld	h,#0x00
   0510 19                 1941 	add	hl,de
   0511 7D                 1942 	ld	a,l
   0512 54                 1943 	ld	d,h
   0513 F8 01              1944 	lda	hl,1(sp)
                           1945 ;	genPointerGet
                           1946 ;	AOP_STK for _fillDrumC_sloc2_1_0
   0515 22                 1947 	ld	(hl+),a
   0516 72                 1948 	ld	(hl),d
   0517 5F                 1949 	ld	e,a
   0518 1A                 1950 	ld	a,(de)
                           1951 ;	genAssign (pointer)
                           1952 ;	AOP_STK for _fillDrumC_sloc0_1_0
   0519 23                 1953 	inc	hl
   051A 23                 1954 	inc	hl
   051B 5E                 1955 	ld	e,(hl)
   051C 23                 1956 	inc	hl
   051D 56                 1957 	ld	d,(hl)
   051E 12                 1958 	ld	(de),a
                           1959 ;	square.c 279
                           1960 ;	genAssign
                           1961 ;	AOP_STK for _fillDrumC_sloc1_1_0
   051F 2B                 1962 	dec	hl
   0520 2B                 1963 	dec	hl
   0521 4E                 1964 	ld	c,(hl)
                           1965 ;	genAssign
                           1966 ;	AOP_HL for _x
   0522 21 1D 01           1967 	ld	hl,#_x
   0525 71                 1968 	ld	(hl),c
                           1969 ;	genGoto
   0526 C3 E0 04           1970 	jp	00122$
                           1971 ;	genLabel
   0529                    1972 00125$:
                           1973 ;	square.c 282
                           1974 ;	genMinus
                           1975 ;	AOP_HL for _totalStepsC
   0529 21 2E 01           1976 	ld	hl,#_totalStepsC
   052C 7E                 1977 	ld	a,(hl)
   052D C6 FF              1978 	add	a,#0xFF
   052F 4F                 1979 	ld	c,a
                           1980 ;	genPlus
                           1981 ;	Can't optimise plus by inc, falling back to the normal way
   0530 3E B0              1982 	ld	a,#<_drumC
   0532 81                 1983 	add	a,c
   0533 4F                 1984 	ld	c,a
   0534 3E 00              1985 	ld	a,#>_drumC
   0536 CE 00              1986 	adc	a,#0x00
   0538 47                 1987 	ld	b,a
                           1988 ;	genAssign (pointer)
                           1989 ;	AOP_HL for _first
   0539 21 1A 01           1990 	ld	hl,#_first
   053C 7E                 1991 	ld	a,(hl)
   053D 02                 1992 	ld	(bc),a
                           1993 ;	square.c 283
                           1994 ;	genPointerGet
   053E 11 B0 00           1995 	ld	de,#_drumC
   0541 1A                 1996 	ld	a,(de)
                           1997 ;	genCmpEq
                           1998 ; genCmpEq: left 1, right 1, result 0
   0542 4F                 1999 	ld	c,a
   0543 FE 01              2000 	cp	a,#0x01
   0545 CA 4F 05           2001 	jp	z,00113$
   0548                    2002 00154$:
                           2003 ;	square.c 278
                           2004 ;	genPlus
                           2005 ;	AOP_HL for _f
                           2006 ;	genPlusIncr
   0548 21 1C 01           2007 	ld	hl,#_f
   054B 34                 2008 	inc	(hl)
                           2009 ;	genGoto
   054C C3 D0 04           2010 	jp	00108$
                           2011 ;	genLabel
   054F                    2012 00113$:
                           2013 ;	square.c 289
                           2014 ;	genMinus
                           2015 ;	AOP_HL for _totalStepsC
   054F 21 2E 01           2016 	ld	hl,#_totalStepsC
   0552 7E                 2017 	ld	a,(hl)
   0553 C6 FF              2018 	add	a,#0xFF
   0555 4F                 2019 	ld	c,a
                           2020 ;	genPlus
                           2021 ;	Can't optimise plus by inc, falling back to the normal way
   0556 3E B0              2022 	ld	a,#<_drumC
   0558 81                 2023 	add	a,c
   0559 4F                 2024 	ld	c,a
   055A 3E 00              2025 	ld	a,#>_drumC
   055C CE 00              2026 	adc	a,#0x00
   055E 47                 2027 	ld	b,a
                           2028 ;	genPointerGet
                           2029 ;	AOP_HL for _last
   055F 0A                 2030 	ld	a,(bc)
   0560 21 1B 01           2031 	ld	hl,#_last
   0563 77                 2032 	ld	(hl),a
                           2033 ;	square.c 290
                           2034 ;	genIfx
                           2035 ;	AOP_STK for _fillDrumC_sloc3_1_0
   0564 AF                 2036 	xor	a,a
   0565 F8 00              2037 	lda	hl,0(sp)
   0567 B6                 2038 	or	a,(hl)
   0568 CA DF 05           2039 	jp	z,00116$
                           2040 ;	genCmpEq
                           2041 ;	AOP_HL for _offStepC
                           2042 ; genCmpEq: left 1, right 1, result 0
   056B 21 32 01           2043 	ld	hl,#_offStepC
   056E 7E                 2044 	ld	a,(hl)
   056F B7                 2045 	or	a,a
   0570 CA DF 05           2046 	jp	z,00116$
   0573                    2047 00155$:
                           2048 ;	square.c 292
                           2049 ;	genAssign
                           2050 ;	AOP_HL for _f
   0573 21 1C 01           2051 	ld	hl,#_f
   0576 36 00              2052 	ld	(hl),#0x00
                           2053 ;	genLabel
   0578                    2054 00130$:
                           2055 ;	genCmpLt
                           2056 ;	AOP_HL for _f
                           2057 ;	AOP_HL for _offStepC
   0578 21 1C 01           2058 	ld	hl,#_f
   057B 7E                 2059 	ld	a,(hl)
   057C 21 32 01           2060 	ld	hl,#_offStepC
   057F 96                 2061 	sub	a,(hl)
   0580 D2 DF 05           2062 	jp	nc,00116$
                           2063 ;	square.c 293
                           2064 ;	genAssign
                           2065 ;	AOP_HL for _totalStepsC
                           2066 ;	AOP_HL for _x
   0583 21 2E 01           2067 	ld	hl,#_totalStepsC
   0586 7E                 2068 	ld	a,(hl)
   0587 21 1D 01           2069 	ld	hl,#_x
   058A 77                 2070 	ld	(hl),a
                           2071 ;	genLabel
   058B                    2072 00126$:
                           2073 ;	genCmpGt
                           2074 ;	AOP_HL for _x
                           2075 ;	AOP_STK for _fillDrumC_sloc3_1_0
   058B 3E 00              2076 	ld	a,#0x00
   058D 21 1D 01           2077 	ld	hl,#_x
   0590 96                 2078 	sub	a,(hl)
   0591 3E 00              2079 	ld	a,#0x00
   0593 17                 2080 	rla
   0594 F8 00              2081 	lda	hl,0(sp)
   0596 77                 2082 	ld	(hl),a
                           2083 ;	genIfx
                           2084 ;	AOP_STK for _fillDrumC_sloc3_1_0
   0597 AF                 2085 	xor	a,a
   0598 B6                 2086 	or	a,(hl)
   0599 CA D0 05           2087 	jp	z,00129$
                           2088 ;	square.c 294
                           2089 ;	genPlus
                           2090 ;	AOP_HL for _x
                           2091 ;	AOP_STK for _fillDrumC_sloc2_1_0
                           2092 ;	Can't optimise plus by inc, falling back to the normal way
   059C 11 B0 00           2093 	ld	de,#_drumC
   059F 21 1D 01           2094 	ld	hl,#_x
   05A2 6E                 2095 	ld	l,(hl)
   05A3 26 00              2096 	ld	h,#0x00
   05A5 19                 2097 	add	hl,de
   05A6 7D                 2098 	ld	a,l
   05A7 54                 2099 	ld	d,h
   05A8 F8 01              2100 	lda	hl,1(sp)
   05AA 22                 2101 	ld	(hl+),a
   05AB 72                 2102 	ld	(hl),d
                           2103 ;	genMinus
                           2104 ;	AOP_HL for _x
   05AC 21 1D 01           2105 	ld	hl,#_x
   05AF 7E                 2106 	ld	a,(hl)
   05B0 C6 FF              2107 	add	a,#0xFF
   05B2 47                 2108 	ld	b,a
                           2109 ;	genPlus
                           2110 ;	AOP_STK for _fillDrumC_sloc0_1_0
                           2111 ;	Can't optimise plus by inc, falling back to the normal way
   05B3 11 B0 00           2112 	ld	de,#_drumC
   05B6 68                 2113 	ld	l,b
   05B7 26 00              2114 	ld	h,#0x00
   05B9 19                 2115 	add	hl,de
   05BA 7D                 2116 	ld	a,l
   05BB 54                 2117 	ld	d,h
   05BC F8 04              2118 	lda	hl,4(sp)
                           2119 ;	genPointerGet
                           2120 ;	AOP_STK for _fillDrumC_sloc0_1_0
   05BE 22                 2121 	ld	(hl+),a
   05BF 72                 2122 	ld	(hl),d
   05C0 5F                 2123 	ld	e,a
   05C1 1A                 2124 	ld	a,(de)
                           2125 ;	genAssign (pointer)
                           2126 ;	AOP_STK for _fillDrumC_sloc2_1_0
   05C2 F8 01              2127 	lda	hl,1(sp)
   05C4 5E                 2128 	ld	e,(hl)
   05C5 23                 2129 	inc	hl
   05C6 56                 2130 	ld	d,(hl)
   05C7 12                 2131 	ld	(de),a
                           2132 ;	square.c 293
                           2133 ;	genAssign
   05C8 48                 2134 	ld	c,b
                           2135 ;	genAssign
                           2136 ;	AOP_HL for _x
   05C9 21 1D 01           2137 	ld	hl,#_x
   05CC 71                 2138 	ld	(hl),c
                           2139 ;	genGoto
   05CD C3 8B 05           2140 	jp	00126$
                           2141 ;	genLabel
   05D0                    2142 00129$:
                           2143 ;	square.c 296
                           2144 ;	genAssign (pointer)
                           2145 ;	AOP_HL for _last
   05D0 11 B0 00           2146 	ld	de,#_drumC
   05D3 21 1B 01           2147 	ld	hl,#_last
   05D6 7E                 2148 	ld	a,(hl)
   05D7 12                 2149 	ld	(de),a
                           2150 ;	square.c 292
                           2151 ;	genPlus
                           2152 ;	AOP_HL for _f
                           2153 ;	genPlusIncr
   05D8 21 1C 01           2154 	ld	hl,#_f
   05DB 34                 2155 	inc	(hl)
                           2156 ;	genGoto
   05DC C3 78 05           2157 	jp	00130$
                           2158 ;	genLabel
   05DF                    2159 00116$:
                           2160 ;	square.c 299
                           2161 ;	genCall
                           2162 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05DF CD 14 00           2163 	call	_rand
                           2164 ;	AOP_HL for _randC
   05E2 21 19 01           2165 	ld	hl,#_randC
   05E5 73                 2166 	ld	(hl),e
                           2167 ;	square.c 300
                           2168 ;	genIpush
                           2169 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   05E6 3E 1E              2170 	ld	a,#0x1E
   05E8 F5                 2171 	push	af
   05E9 33                 2172 	inc	sp
                           2173 ;	genIpush
                           2174 ;	AOP_HL for _randC
   05EA 21 19 01           2175 	ld	hl,#_randC
   05ED 7E                 2176 	ld	a,(hl)
   05EE F5                 2177 	push	af
   05EF 33                 2178 	inc	sp
                           2179 ;	genCall
   05F0 CD 00 00           2180 	call	__moduchar_rrx_s
   05F3 4B                 2181 	ld	c,e
   05F4 E8 02              2182 	lda	sp,2(sp)
                           2183 ;	genPlus
                           2184 ;	AOP_HL for _delayC
                           2185 ;	AOP_HL for _xC
                           2186 ;	Can't optimise plus by inc, falling back to the normal way
   05F6 21 23 01           2187 	ld	hl,#_delayC
   05F9 7E                 2188 	ld	a,(hl)
   05FA 81                 2189 	add	a,c
   05FB 21 20 01           2190 	ld	hl,#_xC
   05FE 77                 2191 	ld	(hl),a
                           2192 ;	genLabel
   05FF                    2193 00134$:
                           2194 ;	genEndFunction
   05FF E8 06              2195 	lda	sp,6(sp)
   0601 C9                 2196 	ret
   0602                    2197 ___fillDrumC_end:
                           2198 ;	square.c 367
                           2199 ;	genLabel
                           2200 ;	genFunction
                           2201 ;	---------------------------------
                           2202 ; Function setupDrum
                           2203 ; ---------------------------------
   0602                    2204 ___setupDrum_start:
   0602                    2205 _setupDrum:
                           2206 	
                           2207 ;	square.c 369
                           2208 ;	genCmpEq
                           2209 ;	AOP_HL for _seldrum
                           2210 ; genCmpEq: left 1, right 1, result 0
   0602 21 71 01           2211 	ld	hl,#_seldrum
   0605 7E                 2212 	ld	a,(hl)
   0606 B7                 2213 	or	a,a
   0607 CA 1F 06           2214 	jp	z,00101$
   060A                    2215 00111$:
                           2216 ;	genCmpEq
                           2217 ;	AOP_HL for _seldrum
                           2218 ; genCmpEq: left 1, right 1, result 0
   060A 21 71 01           2219 	ld	hl,#_seldrum
   060D 7E                 2220 	ld	a,(hl)
   060E FE 01              2221 	cp	a,#0x01
   0610 CA 25 06           2222 	jp	z,00102$
   0613                    2223 00112$:
                           2224 ;	genCmpEq
                           2225 ;	AOP_HL for _seldrum
                           2226 ; genCmpEq: left 1, right 1, result 0
   0613 21 71 01           2227 	ld	hl,#_seldrum
   0616 7E                 2228 	ld	a,(hl)
   0617 FE 02              2229 	cp	a,#0x02
   0619 CA 2B 06           2230 	jp	z,00103$
   061C                    2231 00113$:
                           2232 ;	genGoto
   061C C3 31 06           2233 	jp	00104$
                           2234 ;	square.c 372
                           2235 ;	genLabel
   061F                    2236 00101$:
                           2237 ;	genCall
                           2238 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   061F CD 95 00           2239 	call	_fillDrumA
                           2240 ;	square.c 373
                           2241 ;	genGoto
   0622 C3 3A 06           2242 	jp	00106$
                           2243 ;	square.c 375
                           2244 ;	genLabel
   0625                    2245 00102$:
                           2246 ;	genCall
                           2247 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0625 CD 64 02           2248 	call	_fillDrumB
                           2249 ;	square.c 376
                           2250 ;	genGoto
   0628 C3 3A 06           2251 	jp	00106$
                           2252 ;	square.c 378
                           2253 ;	genLabel
   062B                    2254 00103$:
                           2255 ;	genCall
                           2256 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   062B CD 33 04           2257 	call	_fillDrumC
                           2258 ;	square.c 379
                           2259 ;	genGoto
   062E C3 3A 06           2260 	jp	00106$
                           2261 ;	square.c 381
                           2262 ;	genLabel
   0631                    2263 00104$:
                           2264 ;	genCall
                           2265 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0631 CD 95 00           2266 	call	_fillDrumA
                           2267 ;	square.c 382
                           2268 ;	genCall
                           2269 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0634 CD 64 02           2270 	call	_fillDrumB
                           2271 ;	square.c 383
                           2272 ;	genCall
                           2273 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0637 CD 33 04           2274 	call	_fillDrumC
                           2275 ;	square.c 384
                           2276 ;	genLabel
   063A                    2277 00106$:
                           2278 ;	genEndFunction
                           2279 	
   063A C9                 2280 	ret
   063B                    2281 ___setupDrum_end:
                           2282 ;	square.c 390
                           2283 ;	genLabel
                           2284 ;	genFunction
                           2285 ;	---------------------------------
                           2286 ; Function increaseOffStep
                           2287 ; ---------------------------------
   063B                    2288 ___increaseOffStep_start:
   063B                    2289 _increaseOffStep:
   063B E8 FE              2290 	lda	sp,-2(sp)
                           2291 ;	square.c 392
                           2292 ;	genAssign
   063D 0E 00              2293 	ld	c,#0x00
                           2294 ;	square.c 393
                           2295 ;	genAssign
                           2296 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   063F F8 01              2297 	lda	hl,1(sp)
   0641 36 01              2298 	ld	(hl),#0x01
                           2299 ;	square.c 394
                           2300 ;	genCmpEq
                           2301 ;	AOP_HL for _seldrum
                           2302 ; genCmpEq: left 1, right 1, result 1
   0643 21 71 01           2303 	ld	hl,#_seldrum
   0646 7E                 2304 	ld	a,(hl)
   0647 B7                 2305 	or	a,a
   0648 C2 4F 06           2306 	jp	nz,00120$
   064B 3E 01              2307 	ld	a,#0x01
   064D 18 01              2308 	jr	00121$
   064F                    2309 00120$:
   064F AF                 2310 	xor	a,a
   0650                    2311 00121$:
   0650 47                 2312 	ld	b,a
                           2313 ;	genIfx
   0651 AF                 2314 	xor	a,a
   0652 B0                 2315 	or	a,b
   0653 C2 6B 06           2316 	jp	nz,00101$
                           2317 ;	genCmpEq
                           2318 ;	AOP_HL for _seldrum
                           2319 ; genCmpEq: left 1, right 1, result 0
   0656 21 71 01           2320 	ld	hl,#_seldrum
   0659 7E                 2321 	ld	a,(hl)
   065A FE 01              2322 	cp	a,#0x01
   065C CA 79 06           2323 	jp	z,00102$
   065F                    2324 00122$:
                           2325 ;	genCmpEq
                           2326 ;	AOP_HL for _seldrum
                           2327 ; genCmpEq: left 1, right 1, result 0
   065F 21 71 01           2328 	ld	hl,#_seldrum
   0662 7E                 2329 	ld	a,(hl)
   0663 FE 02              2330 	cp	a,#0x02
   0665 CA 87 06           2331 	jp	z,00103$
   0668                    2332 00123$:
                           2333 ;	genGoto
   0668 C3 92 06           2334 	jp	00104$
                           2335 ;	square.c 397
                           2336 ;	genLabel
   066B                    2337 00101$:
                           2338 ;	genAssign
                           2339 ;	AOP_HL for _offStepA
   066B 21 30 01           2340 	ld	hl,#_offStepA
   066E 4E                 2341 	ld	c,(hl)
                           2342 ;	square.c 398
                           2343 ;	genAssign
                           2344 ;	AOP_HL for _totalStepsA
                           2345 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   066F 21 28 01           2346 	ld	hl,#_totalStepsA
   0672 7E                 2347 	ld	a,(hl)
   0673 F8 01              2348 	lda	hl,1(sp)
   0675 77                 2349 	ld	(hl),a
                           2350 ;	square.c 399
                           2351 ;	genGoto
   0676 C3 92 06           2352 	jp	00104$
                           2353 ;	square.c 401
                           2354 ;	genLabel
   0679                    2355 00102$:
                           2356 ;	genAssign
                           2357 ;	AOP_HL for _offStepB
   0679 21 31 01           2358 	ld	hl,#_offStepB
   067C 4E                 2359 	ld	c,(hl)
                           2360 ;	square.c 402
                           2361 ;	genAssign
                           2362 ;	AOP_HL for _totalStepsB
                           2363 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   067D 21 2B 01           2364 	ld	hl,#_totalStepsB
   0680 7E                 2365 	ld	a,(hl)
   0681 F8 01              2366 	lda	hl,1(sp)
   0683 77                 2367 	ld	(hl),a
                           2368 ;	square.c 403
                           2369 ;	genGoto
   0684 C3 92 06           2370 	jp	00104$
                           2371 ;	square.c 405
                           2372 ;	genLabel
   0687                    2373 00103$:
                           2374 ;	genAssign
                           2375 ;	AOP_HL for _offStepC
   0687 21 32 01           2376 	ld	hl,#_offStepC
   068A 4E                 2377 	ld	c,(hl)
                           2378 ;	square.c 406
                           2379 ;	genAssign
                           2380 ;	AOP_HL for _totalStepsC
                           2381 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
   068B 21 2E 01           2382 	ld	hl,#_totalStepsC
   068E 7E                 2383 	ld	a,(hl)
   068F F8 01              2384 	lda	hl,1(sp)
   0691 77                 2385 	ld	(hl),a
                           2386 ;	square.c 408
                           2387 ;	genLabel
   0692                    2388 00104$:
                           2389 ;	square.c 409
                           2390 ;	genPlus
                           2391 ;	genPlusIncr
                           2392 ; Removed redundent load
   0692 0C                 2393 	inc	c
                           2394 ;	square.c 410
                           2395 ;	genMinus
                           2396 ;	AOP_STK for _increaseOffStep_currentSteps_1_1
                           2397 ;	AOP_STK for _increaseOffStep_sloc0_1_0
   0693 F8 01              2398 	lda	hl,1(sp)
   0695 7E                 2399 	ld	a,(hl)
   0696 C6 FF              2400 	add	a,#0xFF
   0698 2B                 2401 	dec	hl
                           2402 ;	genCmpGt
                           2403 ;	AOP_STK for _increaseOffStep_sloc0_1_0
   0699 77                 2404 	ld      (hl),a
                           2405 ; Removed redundent load
   069A 91                 2406 	sub	a,c
   069B D2 A0 06           2407 	jp	nc,00106$
                           2408 ;	square.c 412
                           2409 ;	genAssign
   069E 0E 00              2410 	ld	c,#0x00
                           2411 ;	genLabel
   06A0                    2412 00106$:
                           2413 ;	square.c 414
                           2414 ;	genIfx
   06A0 AF                 2415 	xor	a,a
   06A1 B0                 2416 	or	a,b
   06A2 C2 BA 06           2417 	jp	nz,00107$
                           2418 ;	genCmpEq
                           2419 ;	AOP_HL for _seldrum
                           2420 ; genCmpEq: left 1, right 1, result 0
   06A5 21 71 01           2421 	ld	hl,#_seldrum
   06A8 7E                 2422 	ld	a,(hl)
   06A9 FE 01              2423 	cp	a,#0x01
   06AB CA C1 06           2424 	jp	z,00108$
   06AE                    2425 00124$:
                           2426 ;	genCmpEq
                           2427 ;	AOP_HL for _seldrum
                           2428 ; genCmpEq: left 1, right 1, result 0
   06AE 21 71 01           2429 	ld	hl,#_seldrum
   06B1 7E                 2430 	ld	a,(hl)
   06B2 FE 02              2431 	cp	a,#0x02
   06B4 CA C8 06           2432 	jp	z,00109$
   06B7                    2433 00125$:
                           2434 ;	genGoto
   06B7 C3 CC 06           2435 	jp	00110$
                           2436 ;	square.c 417
                           2437 ;	genLabel
   06BA                    2438 00107$:
                           2439 ;	genAssign
                           2440 ;	AOP_HL for _offStepA
   06BA 21 30 01           2441 	ld	hl,#_offStepA
   06BD 71                 2442 	ld	(hl),c
                           2443 ;	square.c 418
                           2444 ;	genGoto
   06BE C3 CC 06           2445 	jp	00110$
                           2446 ;	square.c 420
                           2447 ;	genLabel
   06C1                    2448 00108$:
                           2449 ;	genAssign
                           2450 ;	AOP_HL for _offStepB
   06C1 21 31 01           2451 	ld	hl,#_offStepB
   06C4 71                 2452 	ld	(hl),c
                           2453 ;	square.c 421
                           2454 ;	genGoto
   06C5 C3 CC 06           2455 	jp	00110$
                           2456 ;	square.c 423
                           2457 ;	genLabel
   06C8                    2458 00109$:
                           2459 ;	genAssign
                           2460 ;	AOP_HL for _offStepC
   06C8 21 32 01           2461 	ld	hl,#_offStepC
   06CB 71                 2462 	ld	(hl),c
                           2463 ;	square.c 425
                           2464 ;	genLabel
   06CC                    2465 00110$:
                           2466 ;	square.c 426
                           2467 ;	genIpush
                           2468 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   06CC C5                 2469 	push	bc
   06CD 21 04 08           2470 	ld	hl,#0x0804
   06D0 E5                 2471 	push	hl
                           2472 ;	genCall
   06D1 CD 00 00           2473 	call	_set_sprite_tile
   06D4 E8 02              2474 	lda	sp,2(sp)
   06D6 E1                 2475 	pop	hl
   06D7 4D                 2476 	ld	c,l
                           2477 ;	square.c 427
                           2478 ;	genPlus
                           2479 ;	Can't optimise plus by inc, falling back to the normal way
   06D8 3E D0              2480 	ld	a,#<_dXlut
   06DA 81                 2481 	add	a,c
   06DB 4F                 2482 	ld	c,a
   06DC 3E 00              2483 	ld	a,#>_dXlut
   06DE CE 00              2484 	adc	a,#0x00
   06E0 47                 2485 	ld	b,a
                           2486 ;	genPointerGet
   06E1 0A                 2487 	ld	a,(bc)
                           2488 ;	genIpush
                           2489 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06E2 4F                 2490 	ld	c,a
   06E3 F5                 2491 	push	af
   06E4 33                 2492 	inc	sp
                           2493 ;	genIpush
   06E5 21 04 08           2494 	ld	hl,#0x0804
   06E8 E5                 2495 	push	hl
                           2496 ;	genCall
   06E9 CD 00 00           2497 	call	_move_sprite
   06EC E8 03              2498 	lda	sp,3(sp)
                           2499 ;	square.c 428
                           2500 ;	genCall
                           2501 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06EE CD 00 00           2502 	call	_wait_vbl_done
                           2503 ;	square.c 429
                           2504 ;	genCall
                           2505 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06F1 CD 02 06           2506 	call	_setupDrum
                           2507 ;	genLabel
   06F4                    2508 00111$:
                           2509 ;	genEndFunction
   06F4 E8 02              2510 	lda	sp,2(sp)
   06F6 C9                 2511 	ret
   06F7                    2512 ___increaseOffStep_end:
                           2513 ;	square.c 432
                           2514 ;	genLabel
                           2515 ;	genFunction
                           2516 ;	---------------------------------
                           2517 ; Function decreaseOffStep
                           2518 ; ---------------------------------
   06F7                    2519 ___decreaseOffStep_start:
   06F7                    2520 _decreaseOffStep:
                           2521 	
                           2522 ;	square.c 434
                           2523 ;	genAssign
   06F7 0E 00              2524 	ld	c,#0x00
                           2525 ;	square.c 436
                           2526 ;	genCmpEq
                           2527 ;	AOP_HL for _seldrum
                           2528 ; genCmpEq: left 1, right 1, result 1
   06F9 21 71 01           2529 	ld	hl,#_seldrum
   06FC 7E                 2530 	ld	a,(hl)
   06FD B7                 2531 	or	a,a
   06FE C2 05 07           2532 	jp	nz,00120$
   0701 3E 01              2533 	ld	a,#0x01
   0703 18 01              2534 	jr	00121$
   0705                    2535 00120$:
   0705 AF                 2536 	xor	a,a
   0706                    2537 00121$:
   0706 47                 2538 	ld	b,a
                           2539 ;	genIfx
   0707 AF                 2540 	xor	a,a
   0708 B0                 2541 	or	a,b
   0709 C2 21 07           2542 	jp	nz,00101$
                           2543 ;	genCmpEq
                           2544 ;	AOP_HL for _seldrum
                           2545 ; genCmpEq: left 1, right 1, result 0
   070C 21 71 01           2546 	ld	hl,#_seldrum
   070F 7E                 2547 	ld	a,(hl)
   0710 FE 01              2548 	cp	a,#0x01
   0712 CA 28 07           2549 	jp	z,00102$
   0715                    2550 00122$:
                           2551 ;	genCmpEq
                           2552 ;	AOP_HL for _seldrum
                           2553 ; genCmpEq: left 1, right 1, result 0
   0715 21 71 01           2554 	ld	hl,#_seldrum
   0718 7E                 2555 	ld	a,(hl)
   0719 FE 02              2556 	cp	a,#0x02
   071B CA 2F 07           2557 	jp	z,00103$
   071E                    2558 00123$:
                           2559 ;	genGoto
   071E C3 33 07           2560 	jp	00104$
                           2561 ;	square.c 439
                           2562 ;	genLabel
   0721                    2563 00101$:
                           2564 ;	genAssign
                           2565 ;	AOP_HL for _offStepA
   0721 21 30 01           2566 	ld	hl,#_offStepA
   0724 4E                 2567 	ld	c,(hl)
                           2568 ;	square.c 441
                           2569 ;	genGoto
   0725 C3 33 07           2570 	jp	00104$
                           2571 ;	square.c 443
                           2572 ;	genLabel
   0728                    2573 00102$:
                           2574 ;	genAssign
                           2575 ;	AOP_HL for _offStepB
   0728 21 31 01           2576 	ld	hl,#_offStepB
   072B 4E                 2577 	ld	c,(hl)
                           2578 ;	square.c 445
                           2579 ;	genGoto
   072C C3 33 07           2580 	jp	00104$
                           2581 ;	square.c 447
                           2582 ;	genLabel
   072F                    2583 00103$:
                           2584 ;	genAssign
                           2585 ;	AOP_HL for _offStepC
   072F 21 32 01           2586 	ld	hl,#_offStepC
   0732 4E                 2587 	ld	c,(hl)
                           2588 ;	square.c 450
                           2589 ;	genLabel
   0733                    2590 00104$:
                           2591 ;	square.c 452
                           2592 ;	genCmpEq
                           2593 ; genCmpEq: left 1, right 1, result 0
   0733 79                 2594 	ld	a,c
   0734 B7                 2595 	or	a,a
   0735 CA 39 07           2596 	jp	z,00106$
   0738                    2597 00124$:
                           2598 ;	square.c 454
                           2599 ;	genMinus
   0738 0D                 2600 	dec	c
                           2601 ;	genLabel
   0739                    2602 00106$:
                           2603 ;	square.c 456
                           2604 ;	genIfx
   0739 AF                 2605 	xor	a,a
   073A B0                 2606 	or	a,b
   073B C2 53 07           2607 	jp	nz,00107$
                           2608 ;	genCmpEq
                           2609 ;	AOP_HL for _seldrum
                           2610 ; genCmpEq: left 1, right 1, result 0
   073E 21 71 01           2611 	ld	hl,#_seldrum
   0741 7E                 2612 	ld	a,(hl)
   0742 FE 01              2613 	cp	a,#0x01
   0744 CA 5A 07           2614 	jp	z,00108$
   0747                    2615 00125$:
                           2616 ;	genCmpEq
                           2617 ;	AOP_HL for _seldrum
                           2618 ; genCmpEq: left 1, right 1, result 0
   0747 21 71 01           2619 	ld	hl,#_seldrum
   074A 7E                 2620 	ld	a,(hl)
   074B FE 02              2621 	cp	a,#0x02
   074D CA 61 07           2622 	jp	z,00109$
   0750                    2623 00126$:
                           2624 ;	genGoto
   0750 C3 65 07           2625 	jp	00110$
                           2626 ;	square.c 459
                           2627 ;	genLabel
   0753                    2628 00107$:
                           2629 ;	genAssign
                           2630 ;	AOP_HL for _offStepA
   0753 21 30 01           2631 	ld	hl,#_offStepA
   0756 71                 2632 	ld	(hl),c
                           2633 ;	square.c 460
                           2634 ;	genGoto
   0757 C3 65 07           2635 	jp	00110$
                           2636 ;	square.c 462
                           2637 ;	genLabel
   075A                    2638 00108$:
                           2639 ;	genAssign
                           2640 ;	AOP_HL for _offStepB
   075A 21 31 01           2641 	ld	hl,#_offStepB
   075D 71                 2642 	ld	(hl),c
                           2643 ;	square.c 463
                           2644 ;	genGoto
   075E C3 65 07           2645 	jp	00110$
                           2646 ;	square.c 465
                           2647 ;	genLabel
   0761                    2648 00109$:
                           2649 ;	genAssign
                           2650 ;	AOP_HL for _offStepC
   0761 21 32 01           2651 	ld	hl,#_offStepC
   0764 71                 2652 	ld	(hl),c
                           2653 ;	square.c 467
                           2654 ;	genLabel
   0765                    2655 00110$:
                           2656 ;	square.c 468
                           2657 ;	genIpush
                           2658 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0765 C5                 2659 	push	bc
   0766 21 04 08           2660 	ld	hl,#0x0804
   0769 E5                 2661 	push	hl
                           2662 ;	genCall
   076A CD 00 00           2663 	call	_set_sprite_tile
   076D E8 02              2664 	lda	sp,2(sp)
   076F E1                 2665 	pop	hl
   0770 4D                 2666 	ld	c,l
                           2667 ;	square.c 469
                           2668 ;	genPlus
                           2669 ;	Can't optimise plus by inc, falling back to the normal way
   0771 3E D0              2670 	ld	a,#<_dXlut
   0773 81                 2671 	add	a,c
   0774 4F                 2672 	ld	c,a
   0775 3E 00              2673 	ld	a,#>_dXlut
   0777 CE 00              2674 	adc	a,#0x00
   0779 47                 2675 	ld	b,a
                           2676 ;	genPointerGet
   077A 0A                 2677 	ld	a,(bc)
                           2678 ;	genIpush
                           2679 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   077B 4F                 2680 	ld	c,a
   077C F5                 2681 	push	af
   077D 33                 2682 	inc	sp
                           2683 ;	genIpush
   077E 21 04 08           2684 	ld	hl,#0x0804
   0781 E5                 2685 	push	hl
                           2686 ;	genCall
   0782 CD 00 00           2687 	call	_move_sprite
   0785 E8 03              2688 	lda	sp,3(sp)
                           2689 ;	square.c 470
                           2690 ;	genCall
                           2691 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0787 CD 00 00           2692 	call	_wait_vbl_done
                           2693 ;	square.c 471
                           2694 ;	genCall
                           2695 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   078A CD 02 06           2696 	call	_setupDrum
                           2697 ;	genLabel
   078D                    2698 00111$:
                           2699 ;	genEndFunction
                           2700 	
   078D C9                 2701 	ret
   078E                    2702 ___decreaseOffStep_end:
                           2703 ;	square.c 474
                           2704 ;	genLabel
                           2705 ;	genFunction
                           2706 ;	---------------------------------
                           2707 ; Function increaseSteps
                           2708 ; ---------------------------------
   078E                    2709 ___increaseSteps_start:
   078E                    2710 _increaseSteps:
   078E E8 FD              2711 	lda	sp,-3(sp)
                           2712 ;	square.c 476
                           2713 ;	genAssign
   0790 0E 01              2714 	ld	c,#0x01
                           2715 ;	square.c 477
                           2716 ;	genAssign
                           2717 ;	AOP_STK for _increaseSteps_currentPulses_1_1
   0792 F8 02              2718 	lda	hl,2(sp)
   0794 36 01              2719 	ld	(hl),#0x01
                           2720 ;	square.c 478
                           2721 ;	genCmpEq
                           2722 ;	AOP_HL for _seldrum
                           2723 ; genCmpEq: left 1, right 1, result 1
   0796 21 71 01           2724 	ld	hl,#_seldrum
   0799 7E                 2725 	ld	a,(hl)
   079A B7                 2726 	or	a,a
   079B C2 A2 07           2727 	jp	nz,00120$
   079E 3E 01              2728 	ld	a,#0x01
   07A0 18 01              2729 	jr	00121$
   07A2                    2730 00120$:
   07A2 AF                 2731 	xor	a,a
   07A3                    2732 00121$:
   07A3 47                 2733 	ld	b,a
                           2734 ;	genIfx
   07A4 AF                 2735 	xor	a,a
   07A5 B0                 2736 	or	a,b
   07A6 C2 BE 07           2737 	jp	nz,00101$
                           2738 ;	genCmpEq
                           2739 ;	AOP_HL for _seldrum
                           2740 ; genCmpEq: left 1, right 1, result 0
   07A9 21 71 01           2741 	ld	hl,#_seldrum
   07AC 7E                 2742 	ld	a,(hl)
   07AD FE 01              2743 	cp	a,#0x01
   07AF CA D7 07           2744 	jp	z,00102$
   07B2                    2745 00122$:
                           2746 ;	genCmpEq
                           2747 ;	AOP_HL for _seldrum
                           2748 ; genCmpEq: left 1, right 1, result 0
   07B2 21 71 01           2749 	ld	hl,#_seldrum
   07B5 7E                 2750 	ld	a,(hl)
   07B6 FE 02              2751 	cp	a,#0x02
   07B8 CA F0 07           2752 	jp	z,00103$
   07BB                    2753 00123$:
                           2754 ;	genGoto
   07BB C3 06 08           2755 	jp	00104$
                           2756 ;	square.c 481
                           2757 ;	genLabel
   07BE                    2758 00101$:
                           2759 ;	genAssign
                           2760 ;	AOP_HL for _totalStepsA
   07BE 21 28 01           2761 	ld	hl,#_totalStepsA
   07C1 4E                 2762 	ld	c,(hl)
                           2763 ;	square.c 482
                           2764 ;	genAssign
                           2765 ;	AOP_HL for _numberOfPulsesA
                           2766 ;	AOP_STK for _increaseSteps_currentPulses_1_1
   07C2 21 27 01           2767 	ld	hl,#_numberOfPulsesA
   07C5 7E                 2768 	ld	a,(hl)
   07C6 F8 02              2769 	lda	hl,2(sp)
   07C8 77                 2770 	ld	(hl),a
                           2771 ;	square.c 483
                           2772 ;	genIpush
                           2773 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   07C9 C5                 2774 	push	bc
   07CA 21 00 00           2775 	ld	hl,#0x0000
   07CD E5                 2776 	push	hl
                           2777 ;	genCall
   07CE CD 00 00           2778 	call	_set_sprite_tile
   07D1 E8 02              2779 	lda	sp,2(sp)
   07D3 C1                 2780 	pop	bc
                           2781 ;	square.c 484
                           2782 ;	genGoto
   07D4 C3 06 08           2783 	jp	00104$
                           2784 ;	square.c 486
                           2785 ;	genLabel
   07D7                    2786 00102$:
                           2787 ;	genAssign
                           2788 ;	AOP_HL for _totalStepsB
   07D7 21 2B 01           2789 	ld	hl,#_totalStepsB
   07DA 4E                 2790 	ld	c,(hl)
                           2791 ;	square.c 487
                           2792 ;	genAssign
                           2793 ;	AOP_HL for _numberOfPulsesB
                           2794 ;	AOP_STK for _increaseSteps_currentPulses_1_1
   07DB 21 2A 01           2795 	ld	hl,#_numberOfPulsesB
   07DE 7E                 2796 	ld	a,(hl)
   07DF F8 02              2797 	lda	hl,2(sp)
   07E1 77                 2798 	ld	(hl),a
                           2799 ;	square.c 488
                           2800 ;	genIpush
                           2801 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   07E2 C5                 2802 	push	bc
   07E3 21 01 02           2803 	ld	hl,#0x0201
   07E6 E5                 2804 	push	hl
                           2805 ;	genCall
   07E7 CD 00 00           2806 	call	_set_sprite_tile
   07EA E8 02              2807 	lda	sp,2(sp)
   07EC C1                 2808 	pop	bc
                           2809 ;	square.c 489
                           2810 ;	genGoto
   07ED C3 06 08           2811 	jp	00104$
                           2812 ;	square.c 491
                           2813 ;	genLabel
   07F0                    2814 00103$:
                           2815 ;	genAssign
                           2816 ;	AOP_HL for _totalStepsC
   07F0 21 2E 01           2817 	ld	hl,#_totalStepsC
   07F3 4E                 2818 	ld	c,(hl)
                           2819 ;	square.c 492
                           2820 ;	genAssign
                           2821 ;	AOP_HL for _numberOfPulsesC
                           2822 ;	AOP_STK for _increaseSteps_currentPulses_1_1
   07F4 21 2D 01           2823 	ld	hl,#_numberOfPulsesC
   07F7 7E                 2824 	ld	a,(hl)
   07F8 F8 02              2825 	lda	hl,2(sp)
   07FA 77                 2826 	ld	(hl),a
                           2827 ;	square.c 493
                           2828 ;	genIpush
                           2829 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   07FB C5                 2830 	push	bc
   07FC 21 03 06           2831 	ld	hl,#0x0603
   07FF E5                 2832 	push	hl
                           2833 ;	genCall
   0800 CD 00 00           2834 	call	_set_sprite_tile
   0803 E8 02              2835 	lda	sp,2(sp)
   0805 C1                 2836 	pop	bc
                           2837 ;	square.c 495
                           2838 ;	genLabel
   0806                    2839 00104$:
                           2840 ;	square.c 496
                           2841 ;	genPlus
                           2842 ;	genPlusIncr
                           2843 ; Removed redundent load
   0806 0C                 2844 	inc	c
                           2845 ;	square.c 497
                           2846 ;	genCmpGt
   0807 3E 20              2847 	ld	a,#0x20
   0809 91                 2848 	sub	a,c
   080A D2 0F 08           2849 	jp	nc,00106$
                           2850 ;	square.c 499
                           2851 ;	genAssign
   080D 0E 01              2852 	ld	c,#0x01
                           2853 ;	genLabel
   080F                    2854 00106$:
                           2855 ;	square.c 501
                           2856 ;	genIfx
   080F AF                 2857 	xor	a,a
   0810 B0                 2858 	or	a,b
   0811 C2 29 08           2859 	jp	nz,00107$
                           2860 ;	genCmpEq
                           2861 ;	AOP_HL for _seldrum
                           2862 ; genCmpEq: left 1, right 1, result 0
   0814 21 71 01           2863 	ld	hl,#_seldrum
   0817 7E                 2864 	ld	a,(hl)
   0818 FE 01              2865 	cp	a,#0x01
   081A CA 30 08           2866 	jp	z,00108$
   081D                    2867 00124$:
                           2868 ;	genCmpEq
                           2869 ;	AOP_HL for _seldrum
                           2870 ; genCmpEq: left 1, right 1, result 0
   081D 21 71 01           2871 	ld	hl,#_seldrum
   0820 7E                 2872 	ld	a,(hl)
   0821 FE 02              2873 	cp	a,#0x02
   0823 CA 37 08           2874 	jp	z,00109$
   0826                    2875 00125$:
                           2876 ;	genGoto
   0826 C3 3B 08           2877 	jp	00110$
                           2878 ;	square.c 504
                           2879 ;	genLabel
   0829                    2880 00107$:
                           2881 ;	genAssign
                           2882 ;	AOP_HL for _totalStepsA
   0829 21 28 01           2883 	ld	hl,#_totalStepsA
   082C 71                 2884 	ld	(hl),c
                           2885 ;	square.c 505
                           2886 ;	genGoto
   082D C3 3B 08           2887 	jp	00110$
                           2888 ;	square.c 507
                           2889 ;	genLabel
   0830                    2890 00108$:
                           2891 ;	genAssign
                           2892 ;	AOP_HL for _totalStepsB
   0830 21 2B 01           2893 	ld	hl,#_totalStepsB
   0833 71                 2894 	ld	(hl),c
                           2895 ;	square.c 508
                           2896 ;	genGoto
   0834 C3 3B 08           2897 	jp	00110$
                           2898 ;	square.c 510
                           2899 ;	genLabel
   0837                    2900 00109$:
                           2901 ;	genAssign
                           2902 ;	AOP_HL for _totalStepsC
   0837 21 2E 01           2903 	ld	hl,#_totalStepsC
   083A 71                 2904 	ld	(hl),c
                           2905 ;	square.c 512
                           2906 ;	genLabel
   083B                    2907 00110$:
                           2908 ;	square.c 513
                           2909 ;	genMinus
   083B 0D                 2910 	dec	c
                           2911 ;	genPlus
                           2912 ;	Can't optimise plus by inc, falling back to the normal way
   083C 3E D0              2913 	ld	a,#<_dXlut
   083E 81                 2914 	add	a,c
   083F 4F                 2915 	ld	c,a
   0840 3E 00              2916 	ld	a,#>_dXlut
   0842 CE 00              2917 	adc	a,#0x00
   0844 47                 2918 	ld	b,a
                           2919 ;	genPointerGet
   0845 0A                 2920 	ld	a,(bc)
   0846 4F                 2921 	ld	c,a
                           2922 ;	genMinus
                           2923 ;	AOP_STK for _increaseSteps_currentPulses_1_1
   0847 F8 02              2924 	lda	hl,2(sp)
   0849 7E                 2925 	ld	a,(hl)
   084A C6 FF              2926 	add	a,#0xFF
   084C 47                 2927 	ld	b,a
                           2928 ;	genPlus
                           2929 ;	AOP_STK for _increaseSteps_sloc0_1_0
                           2930 ;	Can't optimise plus by inc, falling back to the normal way
   084D 11 F0 00           2931 	ld	de,#_dYlut
   0850 68                 2932 	ld	l,b
   0851 26 00              2933 	ld	h,#0x00
   0853 19                 2934 	add	hl,de
   0854 7D                 2935 	ld	a,l
   0855 54                 2936 	ld	d,h
   0856 F8 00              2937 	lda	hl,0(sp)
                           2938 ;	genPointerGet
                           2939 ;	AOP_STK for _increaseSteps_sloc0_1_0
   0858 22                 2940 	ld	(hl+),a
   0859 72                 2941 	ld	(hl),d
   085A 5F                 2942 	ld	e,a
   085B 1A                 2943 	ld	a,(de)
   085C 47                 2944 	ld	b,a
                           2945 ;	genIpush
                           2946 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   085D 79                 2947 	ld	a,c
   085E F5                 2948 	push	af
   085F 33                 2949 	inc	sp
                           2950 ;	genIpush
   0860 78                 2951 	ld	a,b
   0861 F5                 2952 	push	af
   0862 33                 2953 	inc	sp
                           2954 ;	genIpush
                           2955 ;	AOP_HL for _seldrum
   0863 21 71 01           2956 	ld	hl,#_seldrum
   0866 7E                 2957 	ld	a,(hl)
   0867 F5                 2958 	push	af
   0868 33                 2959 	inc	sp
                           2960 ;	genCall
   0869 CD 00 00           2961 	call	_move_sprite
   086C E8 03              2962 	lda	sp,3(sp)
                           2963 ;	square.c 514
                           2964 ;	genCall
                           2965 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   086E CD 00 00           2966 	call	_wait_vbl_done
                           2967 ;	square.c 515
                           2968 ;	genCall
                           2969 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0871 CD 02 06           2970 	call	_setupDrum
                           2971 ;	genLabel
   0874                    2972 00111$:
                           2973 ;	genEndFunction
   0874 E8 03              2974 	lda	sp,3(sp)
   0876 C9                 2975 	ret
   0877                    2976 ___increaseSteps_end:
                           2977 ;	square.c 518
                           2978 ;	genLabel
                           2979 ;	genFunction
                           2980 ;	---------------------------------
                           2981 ; Function decreaseSteps
                           2982 ; ---------------------------------
   0877                    2983 ___decreaseSteps_start:
   0877                    2984 _decreaseSteps:
   0877 E8 FD              2985 	lda	sp,-3(sp)
                           2986 ;	square.c 520
                           2987 ;	genAssign
   0879 0E 01              2988 	ld	c,#0x01
                           2989 ;	square.c 521
                           2990 ;	genAssign
                           2991 ;	AOP_STK for _decreaseSteps_currentPulses_1_1
   087B F8 02              2992 	lda	hl,2(sp)
   087D 36 01              2993 	ld	(hl),#0x01
                           2994 ;	square.c 522
                           2995 ;	genCmpEq
                           2996 ;	AOP_HL for _seldrum
                           2997 ; genCmpEq: left 1, right 1, result 1
   087F 21 71 01           2998 	ld	hl,#_seldrum
   0882 7E                 2999 	ld	a,(hl)
   0883 B7                 3000 	or	a,a
   0884 C2 8B 08           3001 	jp	nz,00120$
   0887 3E 01              3002 	ld	a,#0x01
   0889 18 01              3003 	jr	00121$
   088B                    3004 00120$:
   088B AF                 3005 	xor	a,a
   088C                    3006 00121$:
   088C 47                 3007 	ld	b,a
                           3008 ;	genIfx
   088D AF                 3009 	xor	a,a
   088E B0                 3010 	or	a,b
   088F C2 A7 08           3011 	jp	nz,00101$
                           3012 ;	genCmpEq
                           3013 ;	AOP_HL for _seldrum
                           3014 ; genCmpEq: left 1, right 1, result 0
   0892 21 71 01           3015 	ld	hl,#_seldrum
   0895 7E                 3016 	ld	a,(hl)
   0896 FE 01              3017 	cp	a,#0x01
   0898 CA C0 08           3018 	jp	z,00102$
   089B                    3019 00122$:
                           3020 ;	genCmpEq
                           3021 ;	AOP_HL for _seldrum
                           3022 ; genCmpEq: left 1, right 1, result 0
   089B 21 71 01           3023 	ld	hl,#_seldrum
   089E 7E                 3024 	ld	a,(hl)
   089F FE 02              3025 	cp	a,#0x02
   08A1 CA D9 08           3026 	jp	z,00103$
   08A4                    3027 00123$:
                           3028 ;	genGoto
   08A4 C3 EF 08           3029 	jp	00104$
                           3030 ;	square.c 525
                           3031 ;	genLabel
   08A7                    3032 00101$:
                           3033 ;	genAssign
                           3034 ;	AOP_HL for _totalStepsA
   08A7 21 28 01           3035 	ld	hl,#_totalStepsA
   08AA 4E                 3036 	ld	c,(hl)
                           3037 ;	square.c 526
                           3038 ;	genAssign
                           3039 ;	AOP_HL for _numberOfPulsesA
                           3040 ;	AOP_STK for _decreaseSteps_currentPulses_1_1
   08AB 21 27 01           3041 	ld	hl,#_numberOfPulsesA
   08AE 7E                 3042 	ld	a,(hl)
   08AF F8 02              3043 	lda	hl,2(sp)
   08B1 77                 3044 	ld	(hl),a
                           3045 ;	square.c 527
                           3046 ;	genIpush
                           3047 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   08B2 C5                 3048 	push	bc
   08B3 21 00 00           3049 	ld	hl,#0x0000
   08B6 E5                 3050 	push	hl
                           3051 ;	genCall
   08B7 CD 00 00           3052 	call	_set_sprite_tile
   08BA E8 02              3053 	lda	sp,2(sp)
   08BC C1                 3054 	pop	bc
                           3055 ;	square.c 528
                           3056 ;	genGoto
   08BD C3 EF 08           3057 	jp	00104$
                           3058 ;	square.c 530
                           3059 ;	genLabel
   08C0                    3060 00102$:
                           3061 ;	genAssign
                           3062 ;	AOP_HL for _totalStepsB
   08C0 21 2B 01           3063 	ld	hl,#_totalStepsB
   08C3 4E                 3064 	ld	c,(hl)
                           3065 ;	square.c 531
                           3066 ;	genAssign
                           3067 ;	AOP_HL for _numberOfPulsesB
                           3068 ;	AOP_STK for _decreaseSteps_currentPulses_1_1
   08C4 21 2A 01           3069 	ld	hl,#_numberOfPulsesB
   08C7 7E                 3070 	ld	a,(hl)
   08C8 F8 02              3071 	lda	hl,2(sp)
   08CA 77                 3072 	ld	(hl),a
                           3073 ;	square.c 532
                           3074 ;	genIpush
                           3075 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   08CB C5                 3076 	push	bc
   08CC 21 01 02           3077 	ld	hl,#0x0201
   08CF E5                 3078 	push	hl
                           3079 ;	genCall
   08D0 CD 00 00           3080 	call	_set_sprite_tile
   08D3 E8 02              3081 	lda	sp,2(sp)
   08D5 C1                 3082 	pop	bc
                           3083 ;	square.c 533
                           3084 ;	genGoto
   08D6 C3 EF 08           3085 	jp	00104$
                           3086 ;	square.c 535
                           3087 ;	genLabel
   08D9                    3088 00103$:
                           3089 ;	genAssign
                           3090 ;	AOP_HL for _totalStepsC
   08D9 21 2E 01           3091 	ld	hl,#_totalStepsC
   08DC 4E                 3092 	ld	c,(hl)
                           3093 ;	square.c 536
                           3094 ;	genAssign
                           3095 ;	AOP_HL for _numberOfPulsesC
                           3096 ;	AOP_STK for _decreaseSteps_currentPulses_1_1
   08DD 21 2D 01           3097 	ld	hl,#_numberOfPulsesC
   08E0 7E                 3098 	ld	a,(hl)
   08E1 F8 02              3099 	lda	hl,2(sp)
   08E3 77                 3100 	ld	(hl),a
                           3101 ;	square.c 537
                           3102 ;	genIpush
                           3103 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   08E4 C5                 3104 	push	bc
   08E5 21 03 06           3105 	ld	hl,#0x0603
   08E8 E5                 3106 	push	hl
                           3107 ;	genCall
   08E9 CD 00 00           3108 	call	_set_sprite_tile
   08EC E8 02              3109 	lda	sp,2(sp)
   08EE C1                 3110 	pop	bc
                           3111 ;	square.c 539
                           3112 ;	genLabel
   08EF                    3113 00104$:
                           3114 ;	square.c 540
                           3115 ;	genMinus
   08EF 0D                 3116 	dec	c
                           3117 ;	square.c 541
                           3118 ;	genCmpLt
   08F0 79                 3119 	ld	a,c
   08F1 FE 01              3120 	cp	#0x01
   08F3 D2 F8 08           3121 	jp	nc,00106$
                           3122 ;	square.c 543
                           3123 ;	genAssign
   08F6 0E 20              3124 	ld	c,#0x20
                           3125 ;	genLabel
   08F8                    3126 00106$:
                           3127 ;	square.c 545
                           3128 ;	genIfx
   08F8 AF                 3129 	xor	a,a
   08F9 B0                 3130 	or	a,b
   08FA C2 12 09           3131 	jp	nz,00107$
                           3132 ;	genCmpEq
                           3133 ;	AOP_HL for _seldrum
                           3134 ; genCmpEq: left 1, right 1, result 0
   08FD 21 71 01           3135 	ld	hl,#_seldrum
   0900 7E                 3136 	ld	a,(hl)
   0901 FE 01              3137 	cp	a,#0x01
   0903 CA 19 09           3138 	jp	z,00108$
   0906                    3139 00124$:
                           3140 ;	genCmpEq
                           3141 ;	AOP_HL for _seldrum
                           3142 ; genCmpEq: left 1, right 1, result 0
   0906 21 71 01           3143 	ld	hl,#_seldrum
   0909 7E                 3144 	ld	a,(hl)
   090A FE 02              3145 	cp	a,#0x02
   090C CA 20 09           3146 	jp	z,00109$
   090F                    3147 00125$:
                           3148 ;	genGoto
   090F C3 24 09           3149 	jp	00110$
                           3150 ;	square.c 548
                           3151 ;	genLabel
   0912                    3152 00107$:
                           3153 ;	genAssign
                           3154 ;	AOP_HL for _totalStepsA
   0912 21 28 01           3155 	ld	hl,#_totalStepsA
   0915 71                 3156 	ld	(hl),c
                           3157 ;	square.c 549
                           3158 ;	genGoto
   0916 C3 24 09           3159 	jp	00110$
                           3160 ;	square.c 551
                           3161 ;	genLabel
   0919                    3162 00108$:
                           3163 ;	genAssign
                           3164 ;	AOP_HL for _totalStepsB
   0919 21 2B 01           3165 	ld	hl,#_totalStepsB
   091C 71                 3166 	ld	(hl),c
                           3167 ;	square.c 552
                           3168 ;	genGoto
   091D C3 24 09           3169 	jp	00110$
                           3170 ;	square.c 554
                           3171 ;	genLabel
   0920                    3172 00109$:
                           3173 ;	genAssign
                           3174 ;	AOP_HL for _totalStepsC
   0920 21 2E 01           3175 	ld	hl,#_totalStepsC
   0923 71                 3176 	ld	(hl),c
                           3177 ;	square.c 556
                           3178 ;	genLabel
   0924                    3179 00110$:
                           3180 ;	square.c 557
                           3181 ;	genMinus
   0924 0D                 3182 	dec	c
                           3183 ;	genPlus
                           3184 ;	Can't optimise plus by inc, falling back to the normal way
   0925 3E D0              3185 	ld	a,#<_dXlut
   0927 81                 3186 	add	a,c
   0928 4F                 3187 	ld	c,a
   0929 3E 00              3188 	ld	a,#>_dXlut
   092B CE 00              3189 	adc	a,#0x00
   092D 47                 3190 	ld	b,a
                           3191 ;	genPointerGet
   092E 0A                 3192 	ld	a,(bc)
   092F 4F                 3193 	ld	c,a
                           3194 ;	genMinus
                           3195 ;	AOP_STK for _decreaseSteps_currentPulses_1_1
   0930 F8 02              3196 	lda	hl,2(sp)
   0932 7E                 3197 	ld	a,(hl)
   0933 C6 FF              3198 	add	a,#0xFF
   0935 47                 3199 	ld	b,a
                           3200 ;	genPlus
                           3201 ;	AOP_STK for _decreaseSteps_sloc0_1_0
                           3202 ;	Can't optimise plus by inc, falling back to the normal way
   0936 11 F0 00           3203 	ld	de,#_dYlut
   0939 68                 3204 	ld	l,b
   093A 26 00              3205 	ld	h,#0x00
   093C 19                 3206 	add	hl,de
   093D 7D                 3207 	ld	a,l
   093E 54                 3208 	ld	d,h
   093F F8 00              3209 	lda	hl,0(sp)
                           3210 ;	genPointerGet
                           3211 ;	AOP_STK for _decreaseSteps_sloc0_1_0
   0941 22                 3212 	ld	(hl+),a
   0942 72                 3213 	ld	(hl),d
   0943 5F                 3214 	ld	e,a
   0944 1A                 3215 	ld	a,(de)
   0945 47                 3216 	ld	b,a
                           3217 ;	genIpush
                           3218 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0946 79                 3219 	ld	a,c
   0947 F5                 3220 	push	af
   0948 33                 3221 	inc	sp
                           3222 ;	genIpush
   0949 78                 3223 	ld	a,b
   094A F5                 3224 	push	af
   094B 33                 3225 	inc	sp
                           3226 ;	genIpush
                           3227 ;	AOP_HL for _seldrum
   094C 21 71 01           3228 	ld	hl,#_seldrum
   094F 7E                 3229 	ld	a,(hl)
   0950 F5                 3230 	push	af
   0951 33                 3231 	inc	sp
                           3232 ;	genCall
   0952 CD 00 00           3233 	call	_move_sprite
   0955 E8 03              3234 	lda	sp,3(sp)
                           3235 ;	square.c 558
                           3236 ;	genCall
                           3237 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0957 CD 00 00           3238 	call	_wait_vbl_done
                           3239 ;	square.c 559
                           3240 ;	genCall
                           3241 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   095A CD 02 06           3242 	call	_setupDrum
                           3243 ;	genLabel
   095D                    3244 00111$:
                           3245 ;	genEndFunction
   095D E8 03              3246 	lda	sp,3(sp)
   095F C9                 3247 	ret
   0960                    3248 ___decreaseSteps_end:
                           3249 ;	square.c 562
                           3250 ;	genLabel
                           3251 ;	genFunction
                           3252 ;	---------------------------------
                           3253 ; Function increasePulses
                           3254 ; ---------------------------------
   0960                    3255 ___increasePulses_start:
   0960                    3256 _increasePulses:
   0960 E8 FC              3257 	lda	sp,-4(sp)
                           3258 ;	square.c 564
                           3259 ;	genAssign
                           3260 ;	AOP_STK for _increasePulses_currentSteps_1_1
   0962 F8 03              3261 	lda	hl,3(sp)
   0964 36 01              3262 	ld	(hl),#0x01
                           3263 ;	square.c 565
                           3264 ;	genAssign
                           3265 ;	AOP_STK for _increasePulses_currentPulses_1_1
   0966 2B                 3266 	dec	hl
   0967 36 01              3267 	ld	(hl),#0x01
                           3268 ;	square.c 566
                           3269 ;	genCmpEq
                           3270 ;	AOP_HL for _seldrum
                           3271 ; genCmpEq: left 1, right 1, result 1
   0969 21 71 01           3272 	ld	hl,#_seldrum
   096C 7E                 3273 	ld	a,(hl)
   096D B7                 3274 	or	a,a
   096E C2 75 09           3275 	jp	nz,00120$
   0971 3E 01              3276 	ld	a,#0x01
   0973 18 01              3277 	jr	00121$
   0975                    3278 00120$:
   0975 AF                 3279 	xor	a,a
   0976                    3280 00121$:
   0976 4F                 3281 	ld	c,a
                           3282 ;	genIfx
   0977 AF                 3283 	xor	a,a
   0978 B1                 3284 	or	a,c
   0979 C2 91 09           3285 	jp	nz,00101$
                           3286 ;	genCmpEq
                           3287 ;	AOP_HL for _seldrum
                           3288 ; genCmpEq: left 1, right 1, result 0
   097C 21 71 01           3289 	ld	hl,#_seldrum
   097F 7E                 3290 	ld	a,(hl)
   0980 FE 01              3291 	cp	a,#0x01
   0982 CA AE 09           3292 	jp	z,00102$
   0985                    3293 00122$:
                           3294 ;	genCmpEq
                           3295 ;	AOP_HL for _seldrum
                           3296 ; genCmpEq: left 1, right 1, result 0
   0985 21 71 01           3297 	ld	hl,#_seldrum
   0988 7E                 3298 	ld	a,(hl)
   0989 FE 02              3299 	cp	a,#0x02
   098B CA CB 09           3300 	jp	z,00103$
   098E                    3301 00123$:
                           3302 ;	genGoto
   098E C3 E5 09           3303 	jp	00104$
                           3304 ;	square.c 569
                           3305 ;	genLabel
   0991                    3306 00101$:
                           3307 ;	genAssign
                           3308 ;	AOP_HL for _totalStepsA
                           3309 ;	AOP_STK for _increasePulses_currentSteps_1_1
   0991 21 28 01           3310 	ld	hl,#_totalStepsA
   0994 7E                 3311 	ld	a,(hl)
   0995 F8 03              3312 	lda	hl,3(sp)
   0997 77                 3313 	ld	(hl),a
                           3314 ;	square.c 570
                           3315 ;	genAssign
                           3316 ;	AOP_HL for _numberOfPulsesA
                           3317 ;	AOP_STK for _increasePulses_currentPulses_1_1
   0998 21 27 01           3318 	ld	hl,#_numberOfPulsesA
   099B 7E                 3319 	ld	a,(hl)
   099C F8 02              3320 	lda	hl,2(sp)
   099E 77                 3321 	ld	(hl),a
                           3322 ;	square.c 571
                           3323 ;	genIpush
                           3324 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   099F C5                 3325 	push	bc
   09A0 21 00 00           3326 	ld	hl,#0x0000
   09A3 E5                 3327 	push	hl
                           3328 ;	genCall
   09A4 CD 00 00           3329 	call	_set_sprite_tile
   09A7 E8 02              3330 	lda	sp,2(sp)
   09A9 E1                 3331 	pop	hl
   09AA 4D                 3332 	ld	c,l
                           3333 ;	square.c 572
                           3334 ;	genGoto
   09AB C3 E5 09           3335 	jp	00104$
                           3336 ;	square.c 574
                           3337 ;	genLabel
   09AE                    3338 00102$:
                           3339 ;	genAssign
                           3340 ;	AOP_HL for _totalStepsB
                           3341 ;	AOP_STK for _increasePulses_currentSteps_1_1
   09AE 21 2B 01           3342 	ld	hl,#_totalStepsB
   09B1 7E                 3343 	ld	a,(hl)
   09B2 F8 03              3344 	lda	hl,3(sp)
   09B4 77                 3345 	ld	(hl),a
                           3346 ;	square.c 575
                           3347 ;	genAssign
                           3348 ;	AOP_HL for _numberOfPulsesB
                           3349 ;	AOP_STK for _increasePulses_currentPulses_1_1
   09B5 21 2A 01           3350 	ld	hl,#_numberOfPulsesB
   09B8 7E                 3351 	ld	a,(hl)
   09B9 F8 02              3352 	lda	hl,2(sp)
   09BB 77                 3353 	ld	(hl),a
                           3354 ;	square.c 576
                           3355 ;	genIpush
                           3356 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   09BC C5                 3357 	push	bc
   09BD 21 01 02           3358 	ld	hl,#0x0201
   09C0 E5                 3359 	push	hl
                           3360 ;	genCall
   09C1 CD 00 00           3361 	call	_set_sprite_tile
   09C4 E8 02              3362 	lda	sp,2(sp)
   09C6 E1                 3363 	pop	hl
   09C7 4D                 3364 	ld	c,l
                           3365 ;	square.c 577
                           3366 ;	genGoto
   09C8 C3 E5 09           3367 	jp	00104$
                           3368 ;	square.c 579
                           3369 ;	genLabel
   09CB                    3370 00103$:
                           3371 ;	genAssign
                           3372 ;	AOP_HL for _totalStepsC
                           3373 ;	AOP_STK for _increasePulses_currentSteps_1_1
   09CB 21 2E 01           3374 	ld	hl,#_totalStepsC
   09CE 7E                 3375 	ld	a,(hl)
   09CF F8 03              3376 	lda	hl,3(sp)
   09D1 77                 3377 	ld	(hl),a
                           3378 ;	square.c 580
                           3379 ;	genAssign
                           3380 ;	AOP_HL for _numberOfPulsesC
                           3381 ;	AOP_STK for _increasePulses_currentPulses_1_1
   09D2 21 2D 01           3382 	ld	hl,#_numberOfPulsesC
   09D5 7E                 3383 	ld	a,(hl)
   09D6 F8 02              3384 	lda	hl,2(sp)
   09D8 77                 3385 	ld	(hl),a
                           3386 ;	square.c 581
                           3387 ;	genIpush
                           3388 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   09D9 C5                 3389 	push	bc
   09DA 21 03 06           3390 	ld	hl,#0x0603
   09DD E5                 3391 	push	hl
                           3392 ;	genCall
   09DE CD 00 00           3393 	call	_set_sprite_tile
   09E1 E8 02              3394 	lda	sp,2(sp)
   09E3 E1                 3395 	pop	hl
   09E4 4D                 3396 	ld	c,l
                           3397 ;	square.c 583
                           3398 ;	genLabel
   09E5                    3399 00104$:
                           3400 ;	square.c 584
                           3401 ;	genPlus
                           3402 ;	AOP_STK for _increasePulses_currentPulses_1_1
                           3403 ;	genPlusIncr
   09E5 F8 02              3404 	lda	hl,2(sp)
   09E7 34                 3405 	inc	(hl)
                           3406 ;	square.c 585
                           3407 ;	genCmpGt
                           3408 ;	AOP_STK for _increasePulses_currentPulses_1_1
   09E8 3E 20              3409 	ld	a,#0x20
   09EA 96                 3410 	sub	a,(hl)
   09EB D2 F0 09           3411 	jp	nc,00106$
                           3412 ;	square.c 587
                           3413 ;	genAssign
                           3414 ;	AOP_STK for _increasePulses_currentPulses_1_1
   09EE 36 01              3415 	ld	(hl),#0x01
                           3416 ;	genLabel
   09F0                    3417 00106$:
                           3418 ;	square.c 589
                           3419 ;	genIfx
   09F0 AF                 3420 	xor	a,a
   09F1 B1                 3421 	or	a,c
   09F2 C2 0A 0A           3422 	jp	nz,00107$
                           3423 ;	genCmpEq
                           3424 ;	AOP_HL for _seldrum
                           3425 ; genCmpEq: left 1, right 1, result 0
   09F5 21 71 01           3426 	ld	hl,#_seldrum
   09F8 7E                 3427 	ld	a,(hl)
   09F9 FE 01              3428 	cp	a,#0x01
   09FB CA 14 0A           3429 	jp	z,00108$
   09FE                    3430 00124$:
                           3431 ;	genCmpEq
                           3432 ;	AOP_HL for _seldrum
                           3433 ; genCmpEq: left 1, right 1, result 0
   09FE 21 71 01           3434 	ld	hl,#_seldrum
   0A01 7E                 3435 	ld	a,(hl)
   0A02 FE 02              3436 	cp	a,#0x02
   0A04 CA 1E 0A           3437 	jp	z,00109$
   0A07                    3438 00125$:
                           3439 ;	genGoto
   0A07 C3 25 0A           3440 	jp	00110$
                           3441 ;	square.c 592
                           3442 ;	genLabel
   0A0A                    3443 00107$:
                           3444 ;	genAssign
                           3445 ;	AOP_STK for _increasePulses_currentPulses_1_1
                           3446 ;	AOP_HL for _numberOfPulsesA
   0A0A F8 02              3447 	lda	hl,2(sp)
   0A0C 7E                 3448 	ld	a,(hl)
   0A0D 21 27 01           3449 	ld	hl,#_numberOfPulsesA
   0A10 77                 3450 	ld	(hl),a
                           3451 ;	square.c 593
                           3452 ;	genGoto
   0A11 C3 25 0A           3453 	jp	00110$
                           3454 ;	square.c 595
                           3455 ;	genLabel
   0A14                    3456 00108$:
                           3457 ;	genAssign
                           3458 ;	AOP_STK for _increasePulses_currentPulses_1_1
                           3459 ;	AOP_HL for _numberOfPulsesB
   0A14 F8 02              3460 	lda	hl,2(sp)
   0A16 7E                 3461 	ld	a,(hl)
   0A17 21 2A 01           3462 	ld	hl,#_numberOfPulsesB
   0A1A 77                 3463 	ld	(hl),a
                           3464 ;	square.c 596
                           3465 ;	genGoto
   0A1B C3 25 0A           3466 	jp	00110$
                           3467 ;	square.c 598
                           3468 ;	genLabel
   0A1E                    3469 00109$:
                           3470 ;	genAssign
                           3471 ;	AOP_STK for _increasePulses_currentPulses_1_1
                           3472 ;	AOP_HL for _numberOfPulsesC
   0A1E F8 02              3473 	lda	hl,2(sp)
   0A20 7E                 3474 	ld	a,(hl)
   0A21 21 2D 01           3475 	ld	hl,#_numberOfPulsesC
   0A24 77                 3476 	ld	(hl),a
                           3477 ;	square.c 600
                           3478 ;	genLabel
   0A25                    3479 00110$:
                           3480 ;	square.c 601
                           3481 ;	genMinus
                           3482 ;	AOP_STK for _increasePulses_currentSteps_1_1
   0A25 F8 03              3483 	lda	hl,3(sp)
   0A27 7E                 3484 	ld	a,(hl)
   0A28 C6 FF              3485 	add	a,#0xFF
   0A2A 4F                 3486 	ld	c,a
                           3487 ;	genPlus
                           3488 ;	Can't optimise plus by inc, falling back to the normal way
   0A2B 3E D0              3489 	ld	a,#<_dXlut
   0A2D 81                 3490 	add	a,c
   0A2E 4F                 3491 	ld	c,a
   0A2F 3E 00              3492 	ld	a,#>_dXlut
   0A31 CE 00              3493 	adc	a,#0x00
   0A33 47                 3494 	ld	b,a
                           3495 ;	genPointerGet
   0A34 0A                 3496 	ld	a,(bc)
   0A35 4F                 3497 	ld	c,a
                           3498 ;	genMinus
                           3499 ;	AOP_STK for _increasePulses_currentPulses_1_1
   0A36 2B                 3500 	dec	hl
   0A37 7E                 3501 	ld	a,(hl)
   0A38 C6 FF              3502 	add	a,#0xFF
   0A3A 47                 3503 	ld	b,a
                           3504 ;	genPlus
                           3505 ;	AOP_STK for _increasePulses_sloc0_1_0
                           3506 ;	Can't optimise plus by inc, falling back to the normal way
   0A3B 11 F0 00           3507 	ld	de,#_dYlut
   0A3E 68                 3508 	ld	l,b
   0A3F 26 00              3509 	ld	h,#0x00
   0A41 19                 3510 	add	hl,de
   0A42 7D                 3511 	ld	a,l
   0A43 54                 3512 	ld	d,h
   0A44 F8 00              3513 	lda	hl,0(sp)
                           3514 ;	genPointerGet
                           3515 ;	AOP_STK for _increasePulses_sloc0_1_0
   0A46 22                 3516 	ld	(hl+),a
   0A47 72                 3517 	ld	(hl),d
   0A48 5F                 3518 	ld	e,a
   0A49 1A                 3519 	ld	a,(de)
   0A4A 47                 3520 	ld	b,a
                           3521 ;	genIpush
                           3522 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A4B 79                 3523 	ld	a,c
   0A4C F5                 3524 	push	af
   0A4D 33                 3525 	inc	sp
                           3526 ;	genIpush
   0A4E 78                 3527 	ld	a,b
   0A4F F5                 3528 	push	af
   0A50 33                 3529 	inc	sp
                           3530 ;	genIpush
                           3531 ;	AOP_HL for _seldrum
   0A51 21 71 01           3532 	ld	hl,#_seldrum
   0A54 7E                 3533 	ld	a,(hl)
   0A55 F5                 3534 	push	af
   0A56 33                 3535 	inc	sp
                           3536 ;	genCall
   0A57 CD 00 00           3537 	call	_move_sprite
   0A5A E8 03              3538 	lda	sp,3(sp)
                           3539 ;	square.c 602
                           3540 ;	genCall
                           3541 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A5C CD 00 00           3542 	call	_wait_vbl_done
                           3543 ;	square.c 603
                           3544 ;	genCall
                           3545 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A5F CD 02 06           3546 	call	_setupDrum
                           3547 ;	genLabel
   0A62                    3548 00111$:
                           3549 ;	genEndFunction
   0A62 E8 04              3550 	lda	sp,4(sp)
   0A64 C9                 3551 	ret
   0A65                    3552 ___increasePulses_end:
                           3553 ;	square.c 606
                           3554 ;	genLabel
                           3555 ;	genFunction
                           3556 ;	---------------------------------
                           3557 ; Function decreasePulses
                           3558 ; ---------------------------------
   0A65                    3559 ___decreasePulses_start:
   0A65                    3560 _decreasePulses:
   0A65 E8 FC              3561 	lda	sp,-4(sp)
                           3562 ;	square.c 608
                           3563 ;	genAssign
                           3564 ;	AOP_STK for _decreasePulses_currentSteps_1_1
   0A67 F8 03              3565 	lda	hl,3(sp)
   0A69 36 01              3566 	ld	(hl),#0x01
                           3567 ;	square.c 609
                           3568 ;	genAssign
                           3569 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0A6B 2B                 3570 	dec	hl
   0A6C 36 01              3571 	ld	(hl),#0x01
                           3572 ;	square.c 610
                           3573 ;	genCmpEq
                           3574 ;	AOP_HL for _seldrum
                           3575 ; genCmpEq: left 1, right 1, result 1
   0A6E 21 71 01           3576 	ld	hl,#_seldrum
   0A71 7E                 3577 	ld	a,(hl)
   0A72 B7                 3578 	or	a,a
   0A73 C2 7A 0A           3579 	jp	nz,00120$
   0A76 3E 01              3580 	ld	a,#0x01
   0A78 18 01              3581 	jr	00121$
   0A7A                    3582 00120$:
   0A7A AF                 3583 	xor	a,a
   0A7B                    3584 00121$:
   0A7B 4F                 3585 	ld	c,a
                           3586 ;	genIfx
   0A7C AF                 3587 	xor	a,a
   0A7D B1                 3588 	or	a,c
   0A7E C2 96 0A           3589 	jp	nz,00101$
                           3590 ;	genCmpEq
                           3591 ;	AOP_HL for _seldrum
                           3592 ; genCmpEq: left 1, right 1, result 0
   0A81 21 71 01           3593 	ld	hl,#_seldrum
   0A84 7E                 3594 	ld	a,(hl)
   0A85 FE 01              3595 	cp	a,#0x01
   0A87 CA B3 0A           3596 	jp	z,00102$
   0A8A                    3597 00122$:
                           3598 ;	genCmpEq
                           3599 ;	AOP_HL for _seldrum
                           3600 ; genCmpEq: left 1, right 1, result 0
   0A8A 21 71 01           3601 	ld	hl,#_seldrum
   0A8D 7E                 3602 	ld	a,(hl)
   0A8E FE 02              3603 	cp	a,#0x02
   0A90 CA D0 0A           3604 	jp	z,00103$
   0A93                    3605 00123$:
                           3606 ;	genGoto
   0A93 C3 EA 0A           3607 	jp	00104$
                           3608 ;	square.c 613
                           3609 ;	genLabel
   0A96                    3610 00101$:
                           3611 ;	genAssign
                           3612 ;	AOP_HL for _totalStepsA
                           3613 ;	AOP_STK for _decreasePulses_currentSteps_1_1
   0A96 21 28 01           3614 	ld	hl,#_totalStepsA
   0A99 7E                 3615 	ld	a,(hl)
   0A9A F8 03              3616 	lda	hl,3(sp)
   0A9C 77                 3617 	ld	(hl),a
                           3618 ;	square.c 614
                           3619 ;	genAssign
                           3620 ;	AOP_HL for _numberOfPulsesA
                           3621 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0A9D 21 27 01           3622 	ld	hl,#_numberOfPulsesA
   0AA0 7E                 3623 	ld	a,(hl)
   0AA1 F8 02              3624 	lda	hl,2(sp)
   0AA3 77                 3625 	ld	(hl),a
                           3626 ;	square.c 615
                           3627 ;	genIpush
                           3628 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0AA4 C5                 3629 	push	bc
   0AA5 21 00 00           3630 	ld	hl,#0x0000
   0AA8 E5                 3631 	push	hl
                           3632 ;	genCall
   0AA9 CD 00 00           3633 	call	_set_sprite_tile
   0AAC E8 02              3634 	lda	sp,2(sp)
   0AAE E1                 3635 	pop	hl
   0AAF 4D                 3636 	ld	c,l
                           3637 ;	square.c 616
                           3638 ;	genGoto
   0AB0 C3 EA 0A           3639 	jp	00104$
                           3640 ;	square.c 618
                           3641 ;	genLabel
   0AB3                    3642 00102$:
                           3643 ;	genAssign
                           3644 ;	AOP_HL for _totalStepsB
                           3645 ;	AOP_STK for _decreasePulses_currentSteps_1_1
   0AB3 21 2B 01           3646 	ld	hl,#_totalStepsB
   0AB6 7E                 3647 	ld	a,(hl)
   0AB7 F8 03              3648 	lda	hl,3(sp)
   0AB9 77                 3649 	ld	(hl),a
                           3650 ;	square.c 619
                           3651 ;	genAssign
                           3652 ;	AOP_HL for _numberOfPulsesB
                           3653 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0ABA 21 2A 01           3654 	ld	hl,#_numberOfPulsesB
   0ABD 7E                 3655 	ld	a,(hl)
   0ABE F8 02              3656 	lda	hl,2(sp)
   0AC0 77                 3657 	ld	(hl),a
                           3658 ;	square.c 620
                           3659 ;	genIpush
                           3660 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0AC1 C5                 3661 	push	bc
   0AC2 21 01 02           3662 	ld	hl,#0x0201
   0AC5 E5                 3663 	push	hl
                           3664 ;	genCall
   0AC6 CD 00 00           3665 	call	_set_sprite_tile
   0AC9 E8 02              3666 	lda	sp,2(sp)
   0ACB E1                 3667 	pop	hl
   0ACC 4D                 3668 	ld	c,l
                           3669 ;	square.c 621
                           3670 ;	genGoto
   0ACD C3 EA 0A           3671 	jp	00104$
                           3672 ;	square.c 623
                           3673 ;	genLabel
   0AD0                    3674 00103$:
                           3675 ;	genAssign
                           3676 ;	AOP_HL for _totalStepsC
                           3677 ;	AOP_STK for _decreasePulses_currentSteps_1_1
   0AD0 21 2E 01           3678 	ld	hl,#_totalStepsC
   0AD3 7E                 3679 	ld	a,(hl)
   0AD4 F8 03              3680 	lda	hl,3(sp)
   0AD6 77                 3681 	ld	(hl),a
                           3682 ;	square.c 624
                           3683 ;	genAssign
                           3684 ;	AOP_HL for _numberOfPulsesC
                           3685 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0AD7 21 2D 01           3686 	ld	hl,#_numberOfPulsesC
   0ADA 7E                 3687 	ld	a,(hl)
   0ADB F8 02              3688 	lda	hl,2(sp)
   0ADD 77                 3689 	ld	(hl),a
                           3690 ;	square.c 625
                           3691 ;	genIpush
                           3692 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0ADE C5                 3693 	push	bc
   0ADF 21 03 06           3694 	ld	hl,#0x0603
   0AE2 E5                 3695 	push	hl
                           3696 ;	genCall
   0AE3 CD 00 00           3697 	call	_set_sprite_tile
   0AE6 E8 02              3698 	lda	sp,2(sp)
   0AE8 E1                 3699 	pop	hl
   0AE9 4D                 3700 	ld	c,l
                           3701 ;	square.c 627
                           3702 ;	genLabel
   0AEA                    3703 00104$:
                           3704 ;	square.c 628
                           3705 ;	genMinus
                           3706 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0AEA F8 02              3707 	lda	hl,2(sp)
   0AEC 35                 3708 	dec	(hl)
                           3709 ;	square.c 629
                           3710 ;	genCmpLt
                           3711 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0AED 7E                 3712 	ld	a,(hl)
   0AEE FE 01              3713 	cp	#0x01
   0AF0 D2 F5 0A           3714 	jp	nc,00106$
                           3715 ;	square.c 631
                           3716 ;	genAssign
                           3717 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0AF3 36 20              3718 	ld	(hl),#0x20
                           3719 ;	genLabel
   0AF5                    3720 00106$:
                           3721 ;	square.c 633
                           3722 ;	genIfx
   0AF5 AF                 3723 	xor	a,a
   0AF6 B1                 3724 	or	a,c
   0AF7 C2 0F 0B           3725 	jp	nz,00107$
                           3726 ;	genCmpEq
                           3727 ;	AOP_HL for _seldrum
                           3728 ; genCmpEq: left 1, right 1, result 0
   0AFA 21 71 01           3729 	ld	hl,#_seldrum
   0AFD 7E                 3730 	ld	a,(hl)
   0AFE FE 01              3731 	cp	a,#0x01
   0B00 CA 19 0B           3732 	jp	z,00108$
   0B03                    3733 00124$:
                           3734 ;	genCmpEq
                           3735 ;	AOP_HL for _seldrum
                           3736 ; genCmpEq: left 1, right 1, result 0
   0B03 21 71 01           3737 	ld	hl,#_seldrum
   0B06 7E                 3738 	ld	a,(hl)
   0B07 FE 02              3739 	cp	a,#0x02
   0B09 CA 23 0B           3740 	jp	z,00109$
   0B0C                    3741 00125$:
                           3742 ;	genGoto
   0B0C C3 2A 0B           3743 	jp	00110$
                           3744 ;	square.c 636
                           3745 ;	genLabel
   0B0F                    3746 00107$:
                           3747 ;	genAssign
                           3748 ;	AOP_STK for _decreasePulses_currentPulses_1_1
                           3749 ;	AOP_HL for _numberOfPulsesA
   0B0F F8 02              3750 	lda	hl,2(sp)
   0B11 7E                 3751 	ld	a,(hl)
   0B12 21 27 01           3752 	ld	hl,#_numberOfPulsesA
   0B15 77                 3753 	ld	(hl),a
                           3754 ;	square.c 637
                           3755 ;	genGoto
   0B16 C3 2A 0B           3756 	jp	00110$
                           3757 ;	square.c 639
                           3758 ;	genLabel
   0B19                    3759 00108$:
                           3760 ;	genAssign
                           3761 ;	AOP_STK for _decreasePulses_currentPulses_1_1
                           3762 ;	AOP_HL for _numberOfPulsesB
   0B19 F8 02              3763 	lda	hl,2(sp)
   0B1B 7E                 3764 	ld	a,(hl)
   0B1C 21 2A 01           3765 	ld	hl,#_numberOfPulsesB
   0B1F 77                 3766 	ld	(hl),a
                           3767 ;	square.c 640
                           3768 ;	genGoto
   0B20 C3 2A 0B           3769 	jp	00110$
                           3770 ;	square.c 642
                           3771 ;	genLabel
   0B23                    3772 00109$:
                           3773 ;	genAssign
                           3774 ;	AOP_STK for _decreasePulses_currentPulses_1_1
                           3775 ;	AOP_HL for _numberOfPulsesC
   0B23 F8 02              3776 	lda	hl,2(sp)
   0B25 7E                 3777 	ld	a,(hl)
   0B26 21 2D 01           3778 	ld	hl,#_numberOfPulsesC
   0B29 77                 3779 	ld	(hl),a
                           3780 ;	square.c 644
                           3781 ;	genLabel
   0B2A                    3782 00110$:
                           3783 ;	square.c 645
                           3784 ;	genMinus
                           3785 ;	AOP_STK for _decreasePulses_currentSteps_1_1
   0B2A F8 03              3786 	lda	hl,3(sp)
   0B2C 7E                 3787 	ld	a,(hl)
   0B2D C6 FF              3788 	add	a,#0xFF
   0B2F 4F                 3789 	ld	c,a
                           3790 ;	genPlus
                           3791 ;	Can't optimise plus by inc, falling back to the normal way
   0B30 3E D0              3792 	ld	a,#<_dXlut
   0B32 81                 3793 	add	a,c
   0B33 4F                 3794 	ld	c,a
   0B34 3E 00              3795 	ld	a,#>_dXlut
   0B36 CE 00              3796 	adc	a,#0x00
   0B38 47                 3797 	ld	b,a
                           3798 ;	genPointerGet
   0B39 0A                 3799 	ld	a,(bc)
   0B3A 4F                 3800 	ld	c,a
                           3801 ;	genMinus
                           3802 ;	AOP_STK for _decreasePulses_currentPulses_1_1
   0B3B 2B                 3803 	dec	hl
   0B3C 7E                 3804 	ld	a,(hl)
   0B3D C6 FF              3805 	add	a,#0xFF
   0B3F 47                 3806 	ld	b,a
                           3807 ;	genPlus
                           3808 ;	AOP_STK for _decreasePulses_sloc0_1_0
                           3809 ;	Can't optimise plus by inc, falling back to the normal way
   0B40 11 F0 00           3810 	ld	de,#_dYlut
   0B43 68                 3811 	ld	l,b
   0B44 26 00              3812 	ld	h,#0x00
   0B46 19                 3813 	add	hl,de
   0B47 7D                 3814 	ld	a,l
   0B48 54                 3815 	ld	d,h
   0B49 F8 00              3816 	lda	hl,0(sp)
                           3817 ;	genPointerGet
                           3818 ;	AOP_STK for _decreasePulses_sloc0_1_0
   0B4B 22                 3819 	ld	(hl+),a
   0B4C 72                 3820 	ld	(hl),d
   0B4D 5F                 3821 	ld	e,a
   0B4E 1A                 3822 	ld	a,(de)
   0B4F 47                 3823 	ld	b,a
                           3824 ;	genIpush
                           3825 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B50 79                 3826 	ld	a,c
   0B51 F5                 3827 	push	af
   0B52 33                 3828 	inc	sp
                           3829 ;	genIpush
   0B53 78                 3830 	ld	a,b
   0B54 F5                 3831 	push	af
   0B55 33                 3832 	inc	sp
                           3833 ;	genIpush
                           3834 ;	AOP_HL for _seldrum
   0B56 21 71 01           3835 	ld	hl,#_seldrum
   0B59 7E                 3836 	ld	a,(hl)
   0B5A F5                 3837 	push	af
   0B5B 33                 3838 	inc	sp
                           3839 ;	genCall
   0B5C CD 00 00           3840 	call	_move_sprite
   0B5F E8 03              3841 	lda	sp,3(sp)
                           3842 ;	square.c 646
                           3843 ;	genCall
                           3844 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B61 CD 00 00           3845 	call	_wait_vbl_done
                           3846 ;	square.c 647
                           3847 ;	genCall
                           3848 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B64 CD 02 06           3849 	call	_setupDrum
                           3850 ;	genLabel
   0B67                    3851 00111$:
                           3852 ;	genEndFunction
   0B67 E8 04              3853 	lda	sp,4(sp)
   0B69 C9                 3854 	ret
   0B6A                    3855 ___decreasePulses_end:
                           3856 ;	square.c 651
                           3857 ;	genLabel
                           3858 ;	genFunction
                           3859 ;	---------------------------------
                           3860 ; Function increaseSwing
                           3861 ; ---------------------------------
   0B6A                    3862 ___increaseSwing_start:
   0B6A                    3863 _increaseSwing:
                           3864 	
                           3865 ;	square.c 653
                           3866 ;	genAssign
   0B6A 0E 00              3867 	ld	c,#0x00
                           3868 ;	square.c 654
                           3869 ;	genCmpEq
                           3870 ;	AOP_HL for _seldrum
                           3871 ; genCmpEq: left 1, right 1, result 1
   0B6C 21 71 01           3872 	ld	hl,#_seldrum
   0B6F 7E                 3873 	ld	a,(hl)
   0B70 B7                 3874 	or	a,a
   0B71 C2 78 0B           3875 	jp	nz,00117$
   0B74 3E 01              3876 	ld	a,#0x01
   0B76 18 01              3877 	jr	00118$
   0B78                    3878 00117$:
   0B78 AF                 3879 	xor	a,a
   0B79                    3880 00118$:
   0B79 47                 3881 	ld	b,a
                           3882 ;	genIfx
   0B7A AF                 3883 	xor	a,a
   0B7B B0                 3884 	or	a,b
   0B7C C2 94 0B           3885 	jp	nz,00101$
                           3886 ;	genCmpEq
                           3887 ;	AOP_HL for _seldrum
                           3888 ; genCmpEq: left 1, right 1, result 0
   0B7F 21 71 01           3889 	ld	hl,#_seldrum
   0B82 7E                 3890 	ld	a,(hl)
   0B83 FE 01              3891 	cp	a,#0x01
   0B85 CA 9B 0B           3892 	jp	z,00102$
   0B88                    3893 00119$:
                           3894 ;	genCmpEq
                           3895 ;	AOP_HL for _seldrum
                           3896 ; genCmpEq: left 1, right 1, result 0
   0B88 21 71 01           3897 	ld	hl,#_seldrum
   0B8B 7E                 3898 	ld	a,(hl)
   0B8C FE 02              3899 	cp	a,#0x02
   0B8E CA A2 0B           3900 	jp	z,00103$
   0B91                    3901 00120$:
                           3902 ;	genGoto
   0B91 C3 A6 0B           3903 	jp	00104$
                           3904 ;	square.c 657
                           3905 ;	genLabel
   0B94                    3906 00101$:
                           3907 ;	genAssign
                           3908 ;	AOP_HL for _delayA
   0B94 21 21 01           3909 	ld	hl,#_delayA
   0B97 4E                 3910 	ld	c,(hl)
                           3911 ;	square.c 658
                           3912 ;	genGoto
   0B98 C3 A6 0B           3913 	jp	00104$
                           3914 ;	square.c 660
                           3915 ;	genLabel
   0B9B                    3916 00102$:
                           3917 ;	genAssign
                           3918 ;	AOP_HL for _delayB
   0B9B 21 22 01           3919 	ld	hl,#_delayB
   0B9E 4E                 3920 	ld	c,(hl)
                           3921 ;	square.c 661
                           3922 ;	genGoto
   0B9F C3 A6 0B           3923 	jp	00104$
                           3924 ;	square.c 663
                           3925 ;	genLabel
   0BA2                    3926 00103$:
                           3927 ;	genAssign
                           3928 ;	AOP_HL for _delayC
   0BA2 21 23 01           3929 	ld	hl,#_delayC
   0BA5 4E                 3930 	ld	c,(hl)
                           3931 ;	square.c 665
                           3932 ;	genLabel
   0BA6                    3933 00104$:
                           3934 ;	square.c 666
                           3935 ;	genPlus
                           3936 ;	genPlusIncr
                           3937 ; Removed redundent load
   0BA6 0C                 3938 	inc	c
                           3939 ;	square.c 667
                           3940 ;	genIfx
   0BA7 AF                 3941 	xor	a,a
   0BA8 B0                 3942 	or	a,b
   0BA9 C2 C1 0B           3943 	jp	nz,00105$
                           3944 ;	genCmpEq
                           3945 ;	AOP_HL for _seldrum
                           3946 ; genCmpEq: left 1, right 1, result 0
   0BAC 21 71 01           3947 	ld	hl,#_seldrum
   0BAF 7E                 3948 	ld	a,(hl)
   0BB0 FE 01              3949 	cp	a,#0x01
   0BB2 CA C8 0B           3950 	jp	z,00106$
   0BB5                    3951 00121$:
                           3952 ;	genCmpEq
                           3953 ;	AOP_HL for _seldrum
                           3954 ; genCmpEq: left 1, right 1, result 0
   0BB5 21 71 01           3955 	ld	hl,#_seldrum
   0BB8 7E                 3956 	ld	a,(hl)
   0BB9 FE 02              3957 	cp	a,#0x02
   0BBB CA CF 0B           3958 	jp	z,00107$
   0BBE                    3959 00122$:
                           3960 ;	genGoto
   0BBE C3 D3 0B           3961 	jp	00108$
                           3962 ;	square.c 670
                           3963 ;	genLabel
   0BC1                    3964 00105$:
                           3965 ;	genAssign
                           3966 ;	AOP_HL for _delayA
   0BC1 21 21 01           3967 	ld	hl,#_delayA
   0BC4 71                 3968 	ld	(hl),c
                           3969 ;	square.c 671
                           3970 ;	genGoto
   0BC5 C3 D3 0B           3971 	jp	00108$
                           3972 ;	square.c 673
                           3973 ;	genLabel
   0BC8                    3974 00106$:
                           3975 ;	genAssign
                           3976 ;	AOP_HL for _delayB
   0BC8 21 22 01           3977 	ld	hl,#_delayB
   0BCB 71                 3978 	ld	(hl),c
                           3979 ;	square.c 674
                           3980 ;	genGoto
   0BCC C3 D3 0B           3981 	jp	00108$
                           3982 ;	square.c 676
                           3983 ;	genLabel
   0BCF                    3984 00107$:
                           3985 ;	genAssign
                           3986 ;	AOP_HL for _delayC
   0BCF 21 23 01           3987 	ld	hl,#_delayC
   0BD2 71                 3988 	ld	(hl),c
                           3989 ;	square.c 678
                           3990 ;	genLabel
   0BD3                    3991 00108$:
                           3992 ;	square.c 679
                           3993 ;	genIpush
                           3994 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BD3 C5                 3995 	push	bc
   0BD4 21 05 0A           3996 	ld	hl,#0x0A05
   0BD7 E5                 3997 	push	hl
                           3998 ;	genCall
   0BD8 CD 00 00           3999 	call	_set_sprite_tile
   0BDB E8 02              4000 	lda	sp,2(sp)
   0BDD E1                 4001 	pop	hl
   0BDE 4D                 4002 	ld	c,l
                           4003 ;	square.c 680
                           4004 ;	genPlus
                           4005 ;	genPlusIncr
                           4006 ;	Can't optimise plus by inc, falling back to the normal way
   0BDF 79                 4007 	ld	a,c
   0BE0 C6 08              4008 	add	a,#0x08
   0BE2 4F                 4009 	ld	c,a
                           4010 ;	genIpush
                           4011 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0BE3 3E 98              4012 	ld	a,#0x98
   0BE5 F5                 4013 	push	af
   0BE6 33                 4014 	inc	sp
                           4015 ;	genIpush
   0BE7 79                 4016 	ld	a,c
   0BE8 F5                 4017 	push	af
   0BE9 33                 4018 	inc	sp
                           4019 ;	genIpush
   0BEA 3E 05              4020 	ld	a,#0x05
   0BEC F5                 4021 	push	af
   0BED 33                 4022 	inc	sp
                           4023 ;	genCall
   0BEE CD 00 00           4024 	call	_move_sprite
   0BF1 E8 03              4025 	lda	sp,3(sp)
                           4026 ;	square.c 681
                           4027 ;	genCall
                           4028 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0BF3 CD 00 00           4029 	call	_wait_vbl_done
                           4030 ;	square.c 682
                           4031 ;	genCall
                           4032 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0BF6 CD 02 06           4033 	call	_setupDrum
                           4034 ;	genLabel
   0BF9                    4035 00109$:
                           4036 ;	genEndFunction
                           4037 	
   0BF9 C9                 4038 	ret
   0BFA                    4039 ___increaseSwing_end:
                           4040 ;	square.c 685
                           4041 ;	genLabel
                           4042 ;	genFunction
                           4043 ;	---------------------------------
                           4044 ; Function decreaseSwing
                           4045 ; ---------------------------------
   0BFA                    4046 ___decreaseSwing_start:
   0BFA                    4047 _decreaseSwing:
                           4048 	
                           4049 ;	square.c 687
                           4050 ;	genAssign
   0BFA 0E 00              4051 	ld	c,#0x00
                           4052 ;	square.c 688
                           4053 ;	genCmpEq
                           4054 ;	AOP_HL for _seldrum
                           4055 ; genCmpEq: left 1, right 1, result 1
   0BFC 21 71 01           4056 	ld	hl,#_seldrum
   0BFF 7E                 4057 	ld	a,(hl)
   0C00 B7                 4058 	or	a,a
   0C01 C2 08 0C           4059 	jp	nz,00120$
   0C04 3E 01              4060 	ld	a,#0x01
   0C06 18 01              4061 	jr	00121$
   0C08                    4062 00120$:
   0C08 AF                 4063 	xor	a,a
   0C09                    4064 00121$:
   0C09 47                 4065 	ld	b,a
                           4066 ;	genIfx
   0C0A AF                 4067 	xor	a,a
   0C0B B0                 4068 	or	a,b
   0C0C C2 24 0C           4069 	jp	nz,00101$
                           4070 ;	genCmpEq
                           4071 ;	AOP_HL for _seldrum
                           4072 ; genCmpEq: left 1, right 1, result 0
   0C0F 21 71 01           4073 	ld	hl,#_seldrum
   0C12 7E                 4074 	ld	a,(hl)
   0C13 FE 01              4075 	cp	a,#0x01
   0C15 CA 2B 0C           4076 	jp	z,00102$
   0C18                    4077 00122$:
                           4078 ;	genCmpEq
                           4079 ;	AOP_HL for _seldrum
                           4080 ; genCmpEq: left 1, right 1, result 0
   0C18 21 71 01           4081 	ld	hl,#_seldrum
   0C1B 7E                 4082 	ld	a,(hl)
   0C1C FE 02              4083 	cp	a,#0x02
   0C1E CA 32 0C           4084 	jp	z,00103$
   0C21                    4085 00123$:
                           4086 ;	genGoto
   0C21 C3 36 0C           4087 	jp	00104$
                           4088 ;	square.c 691
                           4089 ;	genLabel
   0C24                    4090 00101$:
                           4091 ;	genAssign
                           4092 ;	AOP_HL for _delayA
   0C24 21 21 01           4093 	ld	hl,#_delayA
   0C27 4E                 4094 	ld	c,(hl)
                           4095 ;	square.c 692
                           4096 ;	genGoto
   0C28 C3 36 0C           4097 	jp	00104$
                           4098 ;	square.c 694
                           4099 ;	genLabel
   0C2B                    4100 00102$:
                           4101 ;	genAssign
                           4102 ;	AOP_HL for _delayB
   0C2B 21 22 01           4103 	ld	hl,#_delayB
   0C2E 4E                 4104 	ld	c,(hl)
                           4105 ;	square.c 695
                           4106 ;	genGoto
   0C2F C3 36 0C           4107 	jp	00104$
                           4108 ;	square.c 697
                           4109 ;	genLabel
   0C32                    4110 00103$:
                           4111 ;	genAssign
                           4112 ;	AOP_HL for _delayC
   0C32 21 23 01           4113 	ld	hl,#_delayC
   0C35 4E                 4114 	ld	c,(hl)
                           4115 ;	square.c 699
                           4116 ;	genLabel
   0C36                    4117 00104$:
                           4118 ;	square.c 700
                           4119 ;	genCmpEq
                           4120 ; genCmpEq: left 1, right 1, result 0
   0C36 79                 4121 	ld	a,c
   0C37 B7                 4122 	or	a,a
   0C38 CA 3C 0C           4123 	jp	z,00106$
   0C3B                    4124 00124$:
                           4125 ;	square.c 702
                           4126 ;	genMinus
   0C3B 0D                 4127 	dec	c
                           4128 ;	genLabel
   0C3C                    4129 00106$:
                           4130 ;	square.c 704
                           4131 ;	genIfx
   0C3C AF                 4132 	xor	a,a
   0C3D B0                 4133 	or	a,b
   0C3E C2 56 0C           4134 	jp	nz,00107$
                           4135 ;	genCmpEq
                           4136 ;	AOP_HL for _seldrum
                           4137 ; genCmpEq: left 1, right 1, result 0
   0C41 21 71 01           4138 	ld	hl,#_seldrum
   0C44 7E                 4139 	ld	a,(hl)
   0C45 FE 01              4140 	cp	a,#0x01
   0C47 CA 5D 0C           4141 	jp	z,00108$
   0C4A                    4142 00125$:
                           4143 ;	genCmpEq
                           4144 ;	AOP_HL for _seldrum
                           4145 ; genCmpEq: left 1, right 1, result 0
   0C4A 21 71 01           4146 	ld	hl,#_seldrum
   0C4D 7E                 4147 	ld	a,(hl)
   0C4E FE 02              4148 	cp	a,#0x02
   0C50 CA 64 0C           4149 	jp	z,00109$
   0C53                    4150 00126$:
                           4151 ;	genGoto
   0C53 C3 68 0C           4152 	jp	00110$
                           4153 ;	square.c 707
                           4154 ;	genLabel
   0C56                    4155 00107$:
                           4156 ;	genAssign
                           4157 ;	AOP_HL for _delayA
   0C56 21 21 01           4158 	ld	hl,#_delayA
   0C59 71                 4159 	ld	(hl),c
                           4160 ;	square.c 708
                           4161 ;	genGoto
   0C5A C3 68 0C           4162 	jp	00110$
                           4163 ;	square.c 710
                           4164 ;	genLabel
   0C5D                    4165 00108$:
                           4166 ;	genAssign
                           4167 ;	AOP_HL for _delayB
   0C5D 21 22 01           4168 	ld	hl,#_delayB
   0C60 71                 4169 	ld	(hl),c
                           4170 ;	square.c 711
                           4171 ;	genGoto
   0C61 C3 68 0C           4172 	jp	00110$
                           4173 ;	square.c 713
                           4174 ;	genLabel
   0C64                    4175 00109$:
                           4176 ;	genAssign
                           4177 ;	AOP_HL for _delayC
   0C64 21 23 01           4178 	ld	hl,#_delayC
   0C67 71                 4179 	ld	(hl),c
                           4180 ;	square.c 715
                           4181 ;	genLabel
   0C68                    4182 00110$:
                           4183 ;	square.c 716
                           4184 ;	genIpush
                           4185 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0C68 C5                 4186 	push	bc
   0C69 21 05 0A           4187 	ld	hl,#0x0A05
   0C6C E5                 4188 	push	hl
                           4189 ;	genCall
   0C6D CD 00 00           4190 	call	_set_sprite_tile
   0C70 E8 02              4191 	lda	sp,2(sp)
   0C72 E1                 4192 	pop	hl
   0C73 4D                 4193 	ld	c,l
                           4194 ;	square.c 717
                           4195 ;	genPlus
                           4196 ;	genPlusIncr
                           4197 ;	Can't optimise plus by inc, falling back to the normal way
   0C74 79                 4198 	ld	a,c
   0C75 C6 08              4199 	add	a,#0x08
   0C77 4F                 4200 	ld	c,a
                           4201 ;	genIpush
                           4202 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C78 3E 98              4203 	ld	a,#0x98
   0C7A F5                 4204 	push	af
   0C7B 33                 4205 	inc	sp
                           4206 ;	genIpush
   0C7C 79                 4207 	ld	a,c
   0C7D F5                 4208 	push	af
   0C7E 33                 4209 	inc	sp
                           4210 ;	genIpush
   0C7F 3E 05              4211 	ld	a,#0x05
   0C81 F5                 4212 	push	af
   0C82 33                 4213 	inc	sp
                           4214 ;	genCall
   0C83 CD 00 00           4215 	call	_move_sprite
   0C86 E8 03              4216 	lda	sp,3(sp)
                           4217 ;	square.c 718
                           4218 ;	genCall
                           4219 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C88 CD 00 00           4220 	call	_wait_vbl_done
                           4221 ;	square.c 719
                           4222 ;	genCall
                           4223 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C8B CD 02 06           4224 	call	_setupDrum
                           4225 ;	genLabel
   0C8E                    4226 00111$:
                           4227 ;	genEndFunction
                           4228 	
   0C8E C9                 4229 	ret
   0C8F                    4230 ___decreaseSwing_end:
                           4231 ;	square.c 722
                           4232 ;	genLabel
                           4233 ;	genFunction
                           4234 ;	---------------------------------
                           4235 ; Function tick
                           4236 ; ---------------------------------
   0C8F                    4237 ___tick_start:
   0C8F                    4238 _tick:
                           4239 	
                           4240 ;	square.c 725
                           4241 ;	genMinus
                           4242 ;	AOP_HL for _totalStepsA
   0C8F 21 28 01           4243 	ld	hl,#_totalStepsA
   0C92 7E                 4244 	ld	a,(hl)
   0C93 C6 FF              4245 	add	a,#0xFF
                           4246 ;	genCmpGt
                           4247 ;	AOP_HL for _clkA
   0C95 4F                 4248 	ld	c,a
   0C96 21 29 01           4249 	ld	hl,#_clkA
   0C99 96                 4250 	sub	a,(hl)
   0C9A D2 9F 0C           4251 	jp	nc,00102$
                           4252 ;	square.c 727
                           4253 ;	genAssign
                           4254 ;	AOP_HL for _clkA
   0C9D 36 00              4255 	ld	(hl),#0x00
                           4256 ;	genLabel
   0C9F                    4257 00102$:
                           4258 ;	square.c 729
                           4259 ;	genMinus
                           4260 ;	AOP_HL for _totalStepsB
   0C9F 21 2B 01           4261 	ld	hl,#_totalStepsB
   0CA2 7E                 4262 	ld	a,(hl)
   0CA3 C6 FF              4263 	add	a,#0xFF
                           4264 ;	genCmpGt
                           4265 ;	AOP_HL for _clkB
   0CA5 4F                 4266 	ld	c,a
   0CA6 21 2C 01           4267 	ld	hl,#_clkB
   0CA9 96                 4268 	sub	a,(hl)
   0CAA D2 AF 0C           4269 	jp	nc,00104$
                           4270 ;	square.c 731
                           4271 ;	genAssign
                           4272 ;	AOP_HL for _clkB
   0CAD 36 00              4273 	ld	(hl),#0x00
                           4274 ;	genLabel
   0CAF                    4275 00104$:
                           4276 ;	square.c 733
                           4277 ;	genMinus
                           4278 ;	AOP_HL for _totalStepsC
   0CAF 21 2E 01           4279 	ld	hl,#_totalStepsC
   0CB2 7E                 4280 	ld	a,(hl)
   0CB3 C6 FF              4281 	add	a,#0xFF
                           4282 ;	genCmpGt
                           4283 ;	AOP_HL for _clkC
   0CB5 4F                 4284 	ld	c,a
   0CB6 21 2F 01           4285 	ld	hl,#_clkC
   0CB9 96                 4286 	sub	a,(hl)
   0CBA D2 BF 0C           4287 	jp	nc,00106$
                           4288 ;	square.c 735
                           4289 ;	genAssign
                           4290 ;	AOP_HL for _clkC
   0CBD 36 00              4291 	ld	(hl),#0x00
                           4292 ;	genLabel
   0CBF                    4293 00106$:
                           4294 ;	square.c 738
                           4295 ;	genCmpEq
                           4296 ;	AOP_HL for _syncToDrum
                           4297 ; genCmpEq: left 1, right 1, result 0
   0CBF 21 25 01           4298 	ld	hl,#_syncToDrum
   0CC2 7E                 4299 	ld	a,(hl)
   0CC3 FE 01              4300 	cp	a,#0x01
   0CC5 C2 29 0D           4301 	jp	nz,00114$
   0CC8 18 03              4302 	jr	00144$
   0CCA                    4303 00143$:
   0CCA C3 29 0D           4304 	jp	00114$
   0CCD                    4305 00144$:
                           4306 ;	square.c 740
                           4307 ;	genCmpEq
                           4308 ;	AOP_HL for _seldrum
                           4309 ; genCmpEq: left 1, right 1, result 0
   0CCD 21 71 01           4310 	ld	hl,#_seldrum
   0CD0 7E                 4311 	ld	a,(hl)
   0CD1 B7                 4312 	or	a,a
   0CD2 CA EA 0C           4313 	jp	z,00107$
   0CD5                    4314 00145$:
                           4315 ;	genCmpEq
                           4316 ;	AOP_HL for _seldrum
                           4317 ; genCmpEq: left 1, right 1, result 0
   0CD5 21 71 01           4318 	ld	hl,#_seldrum
   0CD8 7E                 4319 	ld	a,(hl)
   0CD9 FE 01              4320 	cp	a,#0x01
   0CDB CA F5 0C           4321 	jp	z,00108$
   0CDE                    4322 00146$:
                           4323 ;	genCmpEq
                           4324 ;	AOP_HL for _seldrum
                           4325 ; genCmpEq: left 1, right 1, result 0
   0CDE 21 71 01           4326 	ld	hl,#_seldrum
   0CE1 7E                 4327 	ld	a,(hl)
   0CE2 FE 02              4328 	cp	a,#0x02
   0CE4 CA 00 0D           4329 	jp	z,00109$
   0CE7                    4330 00147$:
                           4331 ;	genGoto
   0CE7 C3 08 0D           4332 	jp	00110$
                           4333 ;	square.c 743
                           4334 ;	genLabel
   0CEA                    4335 00107$:
                           4336 ;	genAssign
                           4337 ;	AOP_HL for _clkA
                           4338 ;	AOP_HL for _clockToSync
   0CEA 21 29 01           4339 	ld	hl,#_clkA
   0CED 7E                 4340 	ld	a,(hl)
   0CEE 21 26 01           4341 	ld	hl,#_clockToSync
   0CF1 77                 4342 	ld	(hl),a
                           4343 ;	square.c 744
                           4344 ;	genGoto
   0CF2 C3 08 0D           4345 	jp	00110$
                           4346 ;	square.c 746
                           4347 ;	genLabel
   0CF5                    4348 00108$:
                           4349 ;	genAssign
                           4350 ;	AOP_HL for _clkB
                           4351 ;	AOP_HL for _clockToSync
   0CF5 21 2C 01           4352 	ld	hl,#_clkB
   0CF8 7E                 4353 	ld	a,(hl)
   0CF9 21 26 01           4354 	ld	hl,#_clockToSync
   0CFC 77                 4355 	ld	(hl),a
                           4356 ;	square.c 747
                           4357 ;	genGoto
   0CFD C3 08 0D           4358 	jp	00110$
                           4359 ;	square.c 749
                           4360 ;	genLabel
   0D00                    4361 00109$:
                           4362 ;	genAssign
                           4363 ;	AOP_HL for _clkC
                           4364 ;	AOP_HL for _clockToSync
   0D00 21 2F 01           4365 	ld	hl,#_clkC
   0D03 7E                 4366 	ld	a,(hl)
   0D04 21 26 01           4367 	ld	hl,#_clockToSync
   0D07 77                 4368 	ld	(hl),a
                           4369 ;	square.c 751
                           4370 ;	genLabel
   0D08                    4371 00110$:
                           4372 ;	square.c 753
                           4373 ;	genCmpEq
                           4374 ;	AOP_HL for _clockToSync
                           4375 ; genCmpEq: left 1, right 1, result 0
   0D08 21 26 01           4376 	ld	hl,#_clockToSync
   0D0B 7E                 4377 	ld	a,(hl)
   0D0C B7                 4378 	or	a,a
   0D0D C2 29 0D           4379 	jp	nz,00114$
   0D10 18 03              4380 	jr	00149$
   0D12                    4381 00148$:
   0D12 C3 29 0D           4382 	jp	00114$
   0D15                    4383 00149$:
                           4384 ;	square.c 755
                           4385 ;	genAssign
                           4386 ;	AOP_HL for _clkA
   0D15 21 29 01           4387 	ld	hl,#_clkA
   0D18 36 00              4388 	ld	(hl),#0x00
                           4389 ;	square.c 756
                           4390 ;	genAssign
                           4391 ;	AOP_HL for _clkB
   0D1A 21 2C 01           4392 	ld	hl,#_clkB
   0D1D 36 00              4393 	ld	(hl),#0x00
                           4394 ;	square.c 757
                           4395 ;	genAssign
                           4396 ;	AOP_HL for _clkC
   0D1F 21 2F 01           4397 	ld	hl,#_clkC
   0D22 36 00              4398 	ld	(hl),#0x00
                           4399 ;	square.c 758
                           4400 ;	genAssign
                           4401 ;	AOP_HL for _syncToDrum
   0D24 21 25 01           4402 	ld	hl,#_syncToDrum
   0D27 36 00              4403 	ld	(hl),#0x00
                           4404 ;	genLabel
   0D29                    4405 00114$:
                           4406 ;	square.c 763
                           4407 ;	genPlus
                           4408 ;	AOP_HL for _clkA
                           4409 ;	Can't optimise plus by inc, falling back to the normal way
   0D29 3E 70              4410 	ld	a,#<_drumA
   0D2B 21 29 01           4411 	ld	hl,#_clkA
   0D2E 86                 4412 	add	a,(hl)
   0D2F 4F                 4413 	ld	c,a
   0D30 3E 00              4414 	ld	a,#>_drumA
   0D32 CE 00              4415 	adc	a,#0x00
   0D34 47                 4416 	ld	b,a
                           4417 ;	genPointerGet
   0D35 0A                 4418 	ld	a,(bc)
                           4419 ;	genCmpEq
                           4420 ; genCmpEq: left 1, right 1, result 0
   0D36 4F                 4421 	ld	c,a
   0D37 FE 01              4422 	cp	a,#0x01
   0D39 C2 58 0D           4423 	jp	nz,00118$
   0D3C 18 03              4424 	jr	00151$
   0D3E                    4425 00150$:
   0D3E C3 58 0D           4426 	jp	00118$
   0D41                    4427 00151$:
                           4428 ;	square.c 765
                           4429 ;	genCmpEq
                           4430 ;	AOP_HL for _xA
                           4431 ; genCmpEq: left 1, right 1, result 0
   0D41 21 1E 01           4432 	ld	hl,#_xA
   0D44 7E                 4433 	ld	a,(hl)
   0D45 B7                 4434 	or	a,a
   0D46 CA 55 0D           4435 	jp	z,00116$
   0D49                    4436 00152$:
                           4437 ;	square.c 766
                           4438 ;	genCast
                           4439 ;	AOP_HL for _xA
   0D49 21 1E 01           4440 	ld	hl,#_xA
   0D4C 4E                 4441 	ld	c,(hl)
   0D4D 06 00              4442 	ld	b,#0x00
                           4443 ;	genIpush
                           4444 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D4F C5                 4445 	push	bc
                           4446 ;	genCall
   0D50 CD 00 00           4447 	call	_delay
   0D53 E8 02              4448 	lda	sp,2(sp)
                           4449 ;	genLabel
   0D55                    4450 00116$:
                           4451 ;	square.c 767
                           4452 ;	genCall
                           4453 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D55 CD 44 00           4454 	call	_makeASound
                           4455 ;	genLabel
   0D58                    4456 00118$:
                           4457 ;	square.c 769
                           4458 ;	genPlus
                           4459 ;	AOP_HL for _clkB
                           4460 ;	Can't optimise plus by inc, falling back to the normal way
   0D58 3E 90              4461 	ld	a,#<_drumB
   0D5A 21 2C 01           4462 	ld	hl,#_clkB
   0D5D 86                 4463 	add	a,(hl)
   0D5E 4F                 4464 	ld	c,a
   0D5F 3E 00              4465 	ld	a,#>_drumB
   0D61 CE 00              4466 	adc	a,#0x00
   0D63 47                 4467 	ld	b,a
                           4468 ;	genPointerGet
   0D64 0A                 4469 	ld	a,(bc)
                           4470 ;	genCmpEq
                           4471 ; genCmpEq: left 1, right 1, result 0
   0D65 4F                 4472 	ld	c,a
   0D66 FE 01              4473 	cp	a,#0x01
   0D68 C2 87 0D           4474 	jp	nz,00122$
   0D6B 18 03              4475 	jr	00154$
   0D6D                    4476 00153$:
   0D6D C3 87 0D           4477 	jp	00122$
   0D70                    4478 00154$:
                           4479 ;	square.c 771
                           4480 ;	genCmpEq
                           4481 ;	AOP_HL for _xB
                           4482 ; genCmpEq: left 1, right 1, result 0
   0D70 21 1F 01           4483 	ld	hl,#_xB
   0D73 7E                 4484 	ld	a,(hl)
   0D74 B7                 4485 	or	a,a
   0D75 CA 84 0D           4486 	jp	z,00120$
   0D78                    4487 00155$:
                           4488 ;	square.c 772
                           4489 ;	genCast
                           4490 ;	AOP_HL for _xB
   0D78 21 1F 01           4491 	ld	hl,#_xB
   0D7B 4E                 4492 	ld	c,(hl)
   0D7C 06 00              4493 	ld	b,#0x00
                           4494 ;	genIpush
                           4495 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D7E C5                 4496 	push	bc
                           4497 ;	genCall
   0D7F CD 00 00           4498 	call	_delay
   0D82 E8 02              4499 	lda	sp,2(sp)
                           4500 ;	genLabel
   0D84                    4501 00120$:
                           4502 ;	square.c 773
                           4503 ;	genCall
                           4504 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D84 CD 63 00           4505 	call	_makeBSound
                           4506 ;	genLabel
   0D87                    4507 00122$:
                           4508 ;	square.c 775
                           4509 ;	genPlus
                           4510 ;	AOP_HL for _clkC
                           4511 ;	Can't optimise plus by inc, falling back to the normal way
   0D87 3E B0              4512 	ld	a,#<_drumC
   0D89 21 2F 01           4513 	ld	hl,#_clkC
   0D8C 86                 4514 	add	a,(hl)
   0D8D 4F                 4515 	ld	c,a
   0D8E 3E 00              4516 	ld	a,#>_drumC
   0D90 CE 00              4517 	adc	a,#0x00
   0D92 47                 4518 	ld	b,a
                           4519 ;	genPointerGet
   0D93 0A                 4520 	ld	a,(bc)
                           4521 ;	genCmpEq
                           4522 ; genCmpEq: left 1, right 1, result 0
   0D94 4F                 4523 	ld	c,a
   0D95 FE 01              4524 	cp	a,#0x01
   0D97 C2 B6 0D           4525 	jp	nz,00126$
   0D9A 18 03              4526 	jr	00157$
   0D9C                    4527 00156$:
   0D9C C3 B6 0D           4528 	jp	00126$
   0D9F                    4529 00157$:
                           4530 ;	square.c 777
                           4531 ;	genCmpEq
                           4532 ;	AOP_HL for _xC
                           4533 ; genCmpEq: left 1, right 1, result 0
   0D9F 21 20 01           4534 	ld	hl,#_xC
   0DA2 7E                 4535 	ld	a,(hl)
   0DA3 B7                 4536 	or	a,a
   0DA4 CA B3 0D           4537 	jp	z,00124$
   0DA7                    4538 00158$:
                           4539 ;	square.c 778
                           4540 ;	genCast
                           4541 ;	AOP_HL for _xC
   0DA7 21 20 01           4542 	ld	hl,#_xC
   0DAA 4E                 4543 	ld	c,(hl)
   0DAB 06 00              4544 	ld	b,#0x00
                           4545 ;	genIpush
                           4546 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DAD C5                 4547 	push	bc
                           4548 ;	genCall
   0DAE CD 00 00           4549 	call	_delay
   0DB1 E8 02              4550 	lda	sp,2(sp)
                           4551 ;	genLabel
   0DB3                    4552 00124$:
                           4553 ;	square.c 779
                           4554 ;	genCall
                           4555 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DB3 CD 7C 00           4556 	call	_makeCSound
                           4557 ;	genLabel
   0DB6                    4558 00126$:
                           4559 ;	square.c 782
                           4560 ;	genPlus
                           4561 ;	AOP_HL for _clkA
                           4562 ;	genPlusIncr
   0DB6 21 29 01           4563 	ld	hl,#_clkA
   0DB9 34                 4564 	inc	(hl)
                           4565 ;	square.c 783
                           4566 ;	genPlus
                           4567 ;	AOP_HL for _clkB
                           4568 ;	genPlusIncr
   0DBA 21 2C 01           4569 	ld	hl,#_clkB
   0DBD 34                 4570 	inc	(hl)
                           4571 ;	square.c 784
                           4572 ;	genPlus
                           4573 ;	AOP_HL for _clkC
                           4574 ;	genPlusIncr
   0DBE 21 2F 01           4575 	ld	hl,#_clkC
   0DC1 34                 4576 	inc	(hl)
                           4577 ;	genLabel
   0DC2                    4578 00127$:
                           4579 ;	genEndFunction
                           4580 	
   0DC2 C9                 4581 	ret
   0DC3                    4582 ___tick_end:
                           4583 ;	square.c 789
                           4584 ;	genLabel
                           4585 ;	genFunction
                           4586 ;	---------------------------------
                           4587 ; Function sync
                           4588 ; ---------------------------------
   0DC3                    4589 ___sync_start:
   0DC3                    4590 _sync:
                           4591 	
                           4592 ;	square.c 791
                           4593 ;	genAssign
                           4594 ;	AOP_HL for _pop
                           4595 ;	AOP_HL for _bob
   0DC3 21 6C 01           4596 	ld	hl,#_pop
   0DC6 7E                 4597 	ld	a,(hl)
   0DC7 21 6A 01           4598 	ld	hl,#_bob
   0DCA 77                 4599 	ld	(hl),a
                           4600 ;	square.c 792
                           4601 ;	genAssign
   0DCB 01 02 FF           4602 	ld	bc,#0xFF02
                           4603 ;	genAssign (pointer)
   0DCE 3E 80              4604 	ld	a,#0x80
   0DD0 02                 4605 	ld	(bc),a
                           4606 ;	square.c 793
                           4607 ;	genPointerGet
                           4608 ;	AOP_HL for _todd
   0DD1 11 01 FF           4609 	ld	de,#0xFF01
   0DD4 1A                 4610 	ld	a,(de)
   0DD5 21 6B 01           4611 	ld	hl,#_todd
                           4612 ;	square.c 794
                           4613 ;	genCmpEq
                           4614 ;	AOP_HL for _todd
                           4615 ; genCmpEq: left 1, right 1, result 0
   0DD8 77                 4616 	ld      (hl),a
                           4617 ; Removed redundent load
   0DD9 B7                 4618 	or	a,a
   0DDA C2 EA 0D           4619 	jp	nz,00102$
   0DDD 18 03              4620 	jr	00111$
   0DDF                    4621 00110$:
   0DDF C3 EA 0D           4622 	jp	00102$
   0DE2                    4623 00111$:
                           4624 ;	square.c 795
                           4625 ;	genAssign
                           4626 ;	AOP_HL for _pop
   0DE2 21 6C 01           4627 	ld	hl,#_pop
   0DE5 36 00              4628 	ld	(hl),#0x00
                           4629 ;	genGoto
   0DE7 C3 EF 0D           4630 	jp	00103$
                           4631 ;	genLabel
   0DEA                    4632 00102$:
                           4633 ;	square.c 797
                           4634 ;	genAssign
                           4635 ;	AOP_HL for _pop
   0DEA 21 6C 01           4636 	ld	hl,#_pop
   0DED 36 01              4637 	ld	(hl),#0x01
                           4638 ;	genLabel
   0DEF                    4639 00103$:
                           4640 ;	square.c 798
                           4641 ;	genCmpEq
                           4642 ;	AOP_HL for _bob
                           4643 ;	AOP_HL for _pop
                           4644 ; genCmpEq: left 1, right 1, result 0
   0DEF 21 6C 01           4645 	ld	hl,#_pop
   0DF2 7E                 4646 	ld	a,(hl)
   0DF3 21 6A 01           4647 	ld	hl,#_bob
   0DF6 BE                 4648 	cp	(hl)
   0DF7 20 03              4649 	jr	nz,00112$
   0DF9 C3 FF 0D           4650 	jp	00106$
   0DFC                    4651 00112$:
                           4652 ;	square.c 800
                           4653 ;	genCall
                           4654 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DFC CD 8F 0C           4655 	call	_tick
                           4656 ;	genLabel
   0DFF                    4657 00106$:
                           4658 ;	genEndFunction
                           4659 	
   0DFF C9                 4660 	ret
   0E00                    4661 ___sync_end:
                           4662 ;	square.c 806
                           4663 ;	genLabel
                           4664 ;	genFunction
                           4665 ;	---------------------------------
                           4666 ; Function master
                           4667 ; ---------------------------------
   0E00                    4668 ___master_start:
   0E00                    4669 _master:
                           4670 	
                           4671 ;	square.c 808
                           4672 ;	genPlus
                           4673 ;	AOP_HL for _watch
                           4674 ;	genPlusIncr
   0E00 21 69 01           4675 	ld	hl,#_watch
   0E03 34                 4676 	inc	(hl)
                           4677 ;	square.c 809
                           4678 ;	genCmpGt
                           4679 ;	AOP_HL for _watch
                           4680 ;	AOP_HL for _tempo
   0E04 21 68 01           4681 	ld	hl,#_tempo
   0E07 7E                 4682 	ld	a,(hl)
   0E08 21 69 01           4683 	ld	hl,#_watch
   0E0B 96                 4684 	sub	a,(hl)
   0E0C D2 14 0E           4685 	jp	nc,00103$
                           4686 ;	square.c 811
                           4687 ;	genAssign
                           4688 ;	AOP_HL for _watch
   0E0F 36 00              4689 	ld	(hl),#0x00
                           4690 ;	square.c 812
                           4691 ;	genCall
                           4692 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E11 CD 8F 0C           4693 	call	_tick
                           4694 ;	genLabel
   0E14                    4695 00103$:
                           4696 ;	genEndFunction
                           4697 	
   0E14 C9                 4698 	ret
   0E15                    4699 ___master_end:
                           4700 ;	square.c 816
                           4701 ;	genLabel
                           4702 ;	genFunction
                           4703 ;	---------------------------------
                           4704 ; Function player
                           4705 ; ---------------------------------
   0E15                    4706 ___player_start:
   0E15                    4707 _player:
                           4708 	
                           4709 ;	square.c 818
                           4710 ;	genCmpEq
                           4711 ;	AOP_HL for _modus
                           4712 ; genCmpEq: left 1, right 1, result 0
   0E15 21 6D 01           4713 	ld	hl,#_modus
   0E18 7E                 4714 	ld	a,(hl)
   0E19 B7                 4715 	or	a,a
   0E1A C2 28 0E           4716 	jp	nz,00102$
   0E1D 18 03              4717 	jr	00108$
   0E1F                    4718 00107$:
   0E1F C3 28 0E           4719 	jp	00102$
   0E22                    4720 00108$:
                           4721 ;	square.c 820
                           4722 ;	genCall
                           4723 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E22 CD 00 0E           4724 	call	_master
                           4725 ;	genGoto
   0E25 C3 2B 0E           4726 	jp	00104$
                           4727 ;	genLabel
   0E28                    4728 00102$:
                           4729 ;	square.c 823
                           4730 ;	genCall
                           4731 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E28 CD C3 0D           4732 	call	_sync
                           4733 ;	genLabel
   0E2B                    4734 00104$:
                           4735 ;	genEndFunction
                           4736 	
   0E2B C9                 4737 	ret
   0E2C                    4738 ___player_end:
                           4739 ;	square.c 827
                           4740 ;	genLabel
                           4741 ;	genFunction
                           4742 ;	---------------------------------
                           4743 ; Function tim
                           4744 ; ---------------------------------
   0E2C                    4745 ___tim_start:
   0E2C                    4746 _tim:
                           4747 	
                           4748 ;	square.c 829
                           4749 ;	genCall
                           4750 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E2C CD 15 0E           4751 	call	_player
                           4752 ;	genLabel
   0E2F                    4753 00101$:
                           4754 ;	genEndFunction
                           4755 	
   0E2F C9                 4756 	ret
   0E30                    4757 ___tim_end:
                           4758 ;	square.c 834
                           4759 ;	genLabel
                           4760 ;	genFunction
                           4761 ;	---------------------------------
                           4762 ; Function loadA
                           4763 ; ---------------------------------
   0E30                    4764 ___loadA_start:
   0E30                    4765 _loadA:
   0E30 E8 FE              4766 	lda	sp,-2(sp)
                           4767 ;	square.c 836
                           4768 ;	genAssign
                           4769 ;	AOP_HL for _storeAPA
                           4770 ;	AOP_HL for _numberOfPulsesA
   0E32 21 36 01           4771 	ld	hl,#_storeAPA
   0E35 7E                 4772 	ld	a,(hl)
   0E36 21 27 01           4773 	ld	hl,#_numberOfPulsesA
   0E39 77                 4774 	ld	(hl),a
                           4775 ;	square.c 837
                           4776 ;	genAssign
                           4777 ;	AOP_HL for _storeASA
                           4778 ;	AOP_HL for _totalStepsA
   0E3A 21 37 01           4779 	ld	hl,#_storeASA
   0E3D 7E                 4780 	ld	a,(hl)
   0E3E 21 28 01           4781 	ld	hl,#_totalStepsA
   0E41 77                 4782 	ld	(hl),a
                           4783 ;	square.c 838
                           4784 ;	genAssign
                           4785 ;	AOP_HL for _storeAPB
                           4786 ;	AOP_HL for _numberOfPulsesB
   0E42 21 38 01           4787 	ld	hl,#_storeAPB
   0E45 7E                 4788 	ld	a,(hl)
   0E46 21 2A 01           4789 	ld	hl,#_numberOfPulsesB
   0E49 77                 4790 	ld	(hl),a
                           4791 ;	square.c 839
                           4792 ;	genAssign
                           4793 ;	AOP_HL for _storeASB
                           4794 ;	AOP_HL for _totalStepsB
   0E4A 21 39 01           4795 	ld	hl,#_storeASB
   0E4D 7E                 4796 	ld	a,(hl)
   0E4E 21 2B 01           4797 	ld	hl,#_totalStepsB
   0E51 77                 4798 	ld	(hl),a
                           4799 ;	square.c 840
                           4800 ;	genAssign
                           4801 ;	AOP_HL for _storeAPC
                           4802 ;	AOP_HL for _numberOfPulsesC
   0E52 21 3A 01           4803 	ld	hl,#_storeAPC
   0E55 7E                 4804 	ld	a,(hl)
   0E56 21 2D 01           4805 	ld	hl,#_numberOfPulsesC
   0E59 77                 4806 	ld	(hl),a
                           4807 ;	square.c 841
                           4808 ;	genAssign
                           4809 ;	AOP_HL for _storeASC
                           4810 ;	AOP_HL for _totalStepsC
   0E5A 21 3B 01           4811 	ld	hl,#_storeASC
   0E5D 7E                 4812 	ld	a,(hl)
   0E5E 21 2E 01           4813 	ld	hl,#_totalStepsC
   0E61 77                 4814 	ld	(hl),a
                           4815 ;	square.c 842
                           4816 ;	genAssign
                           4817 ;	AOP_HL for _storeAOA
                           4818 ;	AOP_HL for _offStepA
   0E62 21 3C 01           4819 	ld	hl,#_storeAOA
   0E65 7E                 4820 	ld	a,(hl)
   0E66 21 30 01           4821 	ld	hl,#_offStepA
   0E69 77                 4822 	ld	(hl),a
                           4823 ;	square.c 843
                           4824 ;	genAssign
                           4825 ;	AOP_HL for _storeAOB
                           4826 ;	AOP_HL for _offStepB
   0E6A 21 3D 01           4827 	ld	hl,#_storeAOB
   0E6D 7E                 4828 	ld	a,(hl)
   0E6E 21 31 01           4829 	ld	hl,#_offStepB
   0E71 77                 4830 	ld	(hl),a
                           4831 ;	square.c 844
                           4832 ;	genAssign
                           4833 ;	AOP_HL for _storeAOC
                           4834 ;	AOP_HL for _offStepC
   0E72 21 3E 01           4835 	ld	hl,#_storeAOC
   0E75 7E                 4836 	ld	a,(hl)
   0E76 21 32 01           4837 	ld	hl,#_offStepC
   0E79 77                 4838 	ld	(hl),a
                           4839 ;	square.c 845
                           4840 ;	genAssign
                           4841 ;	AOP_HL for _storeADA
                           4842 ;	AOP_HL for _delayA
   0E7A 21 3F 01           4843 	ld	hl,#_storeADA
   0E7D 7E                 4844 	ld	a,(hl)
   0E7E 21 21 01           4845 	ld	hl,#_delayA
   0E81 77                 4846 	ld	(hl),a
                           4847 ;	square.c 846
                           4848 ;	genAssign
                           4849 ;	AOP_HL for _storeADB
                           4850 ;	AOP_HL for _delayB
   0E82 21 40 01           4851 	ld	hl,#_storeADB
   0E85 7E                 4852 	ld	a,(hl)
   0E86 21 22 01           4853 	ld	hl,#_delayB
   0E89 77                 4854 	ld	(hl),a
                           4855 ;	square.c 847
                           4856 ;	genAssign
                           4857 ;	AOP_HL for _storeADC
                           4858 ;	AOP_HL for _delayC
   0E8A 21 41 01           4859 	ld	hl,#_storeADC
   0E8D 7E                 4860 	ld	a,(hl)
   0E8E 21 23 01           4861 	ld	hl,#_delayC
   0E91 77                 4862 	ld	(hl),a
                           4863 ;	square.c 848
                           4864 ;	genIpush
                           4865 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E92 21 00 00           4866 	ld	hl,#0x0000
   0E95 E5                 4867 	push	hl
                           4868 ;	genCall
   0E96 CD 00 00           4869 	call	_set_sprite_tile
   0E99 E8 02              4870 	lda	sp,2(sp)
                           4871 ;	square.c 849
                           4872 ;	genMinus
                           4873 ;	AOP_HL for _totalStepsA
   0E9B 21 28 01           4874 	ld	hl,#_totalStepsA
   0E9E 7E                 4875 	ld	a,(hl)
   0E9F C6 FF              4876 	add	a,#0xFF
   0EA1 4F                 4877 	ld	c,a
                           4878 ;	genPlus
                           4879 ;	Can't optimise plus by inc, falling back to the normal way
   0EA2 3E D0              4880 	ld	a,#<_dXlut
   0EA4 81                 4881 	add	a,c
   0EA5 4F                 4882 	ld	c,a
   0EA6 3E 00              4883 	ld	a,#>_dXlut
   0EA8 CE 00              4884 	adc	a,#0x00
   0EAA 47                 4885 	ld	b,a
                           4886 ;	genPointerGet
   0EAB 0A                 4887 	ld	a,(bc)
   0EAC 4F                 4888 	ld	c,a
                           4889 ;	genMinus
                           4890 ;	AOP_HL for _numberOfPulsesA
   0EAD 21 27 01           4891 	ld	hl,#_numberOfPulsesA
   0EB0 7E                 4892 	ld	a,(hl)
   0EB1 C6 FF              4893 	add	a,#0xFF
   0EB3 47                 4894 	ld	b,a
                           4895 ;	genPlus
                           4896 ;	AOP_STK for _loadA_sloc0_1_0
                           4897 ;	Can't optimise plus by inc, falling back to the normal way
   0EB4 11 F0 00           4898 	ld	de,#_dYlut
   0EB7 68                 4899 	ld	l,b
   0EB8 26 00              4900 	ld	h,#0x00
   0EBA 19                 4901 	add	hl,de
   0EBB 7D                 4902 	ld	a,l
   0EBC 54                 4903 	ld	d,h
   0EBD F8 00              4904 	lda	hl,0(sp)
                           4905 ;	genPointerGet
                           4906 ;	AOP_STK for _loadA_sloc0_1_0
   0EBF 22                 4907 	ld	(hl+),a
   0EC0 72                 4908 	ld	(hl),d
   0EC1 5F                 4909 	ld	e,a
   0EC2 1A                 4910 	ld	a,(de)
   0EC3 47                 4911 	ld	b,a
                           4912 ;	genIpush
                           4913 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EC4 79                 4914 	ld	a,c
   0EC5 F5                 4915 	push	af
   0EC6 33                 4916 	inc	sp
                           4917 ;	genIpush
   0EC7 78                 4918 	ld	a,b
   0EC8 F5                 4919 	push	af
   0EC9 33                 4920 	inc	sp
                           4921 ;	genIpush
   0ECA 3E 00              4922 	ld	a,#0x00
   0ECC F5                 4923 	push	af
   0ECD 33                 4924 	inc	sp
                           4925 ;	genCall
   0ECE CD 00 00           4926 	call	_move_sprite
   0ED1 E8 03              4927 	lda	sp,3(sp)
                           4928 ;	square.c 850
                           4929 ;	genIpush
                           4930 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0ED3 21 01 02           4931 	ld	hl,#0x0201
   0ED6 E5                 4932 	push	hl
                           4933 ;	genCall
   0ED7 CD 00 00           4934 	call	_set_sprite_tile
   0EDA E8 02              4935 	lda	sp,2(sp)
                           4936 ;	square.c 851
                           4937 ;	genMinus
                           4938 ;	AOP_HL for _totalStepsB
   0EDC 21 2B 01           4939 	ld	hl,#_totalStepsB
   0EDF 7E                 4940 	ld	a,(hl)
   0EE0 C6 FF              4941 	add	a,#0xFF
   0EE2 4F                 4942 	ld	c,a
                           4943 ;	genPlus
                           4944 ;	Can't optimise plus by inc, falling back to the normal way
   0EE3 3E D0              4945 	ld	a,#<_dXlut
   0EE5 81                 4946 	add	a,c
   0EE6 4F                 4947 	ld	c,a
   0EE7 3E 00              4948 	ld	a,#>_dXlut
   0EE9 CE 00              4949 	adc	a,#0x00
   0EEB 47                 4950 	ld	b,a
                           4951 ;	genPointerGet
   0EEC 0A                 4952 	ld	a,(bc)
   0EED 4F                 4953 	ld	c,a
                           4954 ;	genMinus
                           4955 ;	AOP_HL for _numberOfPulsesB
   0EEE 21 2A 01           4956 	ld	hl,#_numberOfPulsesB
   0EF1 7E                 4957 	ld	a,(hl)
   0EF2 C6 FF              4958 	add	a,#0xFF
   0EF4 47                 4959 	ld	b,a
                           4960 ;	genPlus
                           4961 ;	AOP_STK for _loadA_sloc0_1_0
                           4962 ;	Can't optimise plus by inc, falling back to the normal way
   0EF5 11 F0 00           4963 	ld	de,#_dYlut
   0EF8 68                 4964 	ld	l,b
   0EF9 26 00              4965 	ld	h,#0x00
   0EFB 19                 4966 	add	hl,de
   0EFC 7D                 4967 	ld	a,l
   0EFD 54                 4968 	ld	d,h
   0EFE F8 00              4969 	lda	hl,0(sp)
                           4970 ;	genPointerGet
                           4971 ;	AOP_STK for _loadA_sloc0_1_0
   0F00 22                 4972 	ld	(hl+),a
   0F01 72                 4973 	ld	(hl),d
   0F02 5F                 4974 	ld	e,a
   0F03 1A                 4975 	ld	a,(de)
   0F04 47                 4976 	ld	b,a
                           4977 ;	genIpush
                           4978 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F05 79                 4979 	ld	a,c
   0F06 F5                 4980 	push	af
   0F07 33                 4981 	inc	sp
                           4982 ;	genIpush
   0F08 78                 4983 	ld	a,b
   0F09 F5                 4984 	push	af
   0F0A 33                 4985 	inc	sp
                           4986 ;	genIpush
   0F0B 3E 01              4987 	ld	a,#0x01
   0F0D F5                 4988 	push	af
   0F0E 33                 4989 	inc	sp
                           4990 ;	genCall
   0F0F CD 00 00           4991 	call	_move_sprite
   0F12 E8 03              4992 	lda	sp,3(sp)
                           4993 ;	square.c 852
                           4994 ;	genIpush
                           4995 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F14 21 02 04           4996 	ld	hl,#0x0402
   0F17 E5                 4997 	push	hl
                           4998 ;	genCall
   0F18 CD 00 00           4999 	call	_set_sprite_tile
   0F1B E8 02              5000 	lda	sp,2(sp)
                           5001 ;	square.c 853
                           5002 ;	genMinus
                           5003 ;	AOP_HL for _totalStepsC
   0F1D 21 2E 01           5004 	ld	hl,#_totalStepsC
   0F20 7E                 5005 	ld	a,(hl)
   0F21 C6 FF              5006 	add	a,#0xFF
   0F23 4F                 5007 	ld	c,a
                           5008 ;	genPlus
                           5009 ;	Can't optimise plus by inc, falling back to the normal way
   0F24 3E D0              5010 	ld	a,#<_dXlut
   0F26 81                 5011 	add	a,c
   0F27 4F                 5012 	ld	c,a
   0F28 3E 00              5013 	ld	a,#>_dXlut
   0F2A CE 00              5014 	adc	a,#0x00
   0F2C 47                 5015 	ld	b,a
                           5016 ;	genPointerGet
   0F2D 0A                 5017 	ld	a,(bc)
   0F2E 4F                 5018 	ld	c,a
                           5019 ;	genMinus
                           5020 ;	AOP_HL for _numberOfPulsesC
   0F2F 21 2D 01           5021 	ld	hl,#_numberOfPulsesC
   0F32 7E                 5022 	ld	a,(hl)
   0F33 C6 FF              5023 	add	a,#0xFF
   0F35 47                 5024 	ld	b,a
                           5025 ;	genPlus
                           5026 ;	AOP_STK for _loadA_sloc0_1_0
                           5027 ;	Can't optimise plus by inc, falling back to the normal way
   0F36 11 F0 00           5028 	ld	de,#_dYlut
   0F39 68                 5029 	ld	l,b
   0F3A 26 00              5030 	ld	h,#0x00
   0F3C 19                 5031 	add	hl,de
   0F3D 7D                 5032 	ld	a,l
   0F3E 54                 5033 	ld	d,h
   0F3F F8 00              5034 	lda	hl,0(sp)
                           5035 ;	genPointerGet
                           5036 ;	AOP_STK for _loadA_sloc0_1_0
   0F41 22                 5037 	ld	(hl+),a
   0F42 72                 5038 	ld	(hl),d
   0F43 5F                 5039 	ld	e,a
   0F44 1A                 5040 	ld	a,(de)
   0F45 47                 5041 	ld	b,a
                           5042 ;	genIpush
                           5043 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F46 79                 5044 	ld	a,c
   0F47 F5                 5045 	push	af
   0F48 33                 5046 	inc	sp
                           5047 ;	genIpush
   0F49 78                 5048 	ld	a,b
   0F4A F5                 5049 	push	af
   0F4B 33                 5050 	inc	sp
                           5051 ;	genIpush
   0F4C 3E 02              5052 	ld	a,#0x02
   0F4E F5                 5053 	push	af
   0F4F 33                 5054 	inc	sp
                           5055 ;	genCall
   0F50 CD 00 00           5056 	call	_move_sprite
   0F53 E8 03              5057 	lda	sp,3(sp)
                           5058 ;	square.c 854
                           5059 ;	genAssign
                           5060 ;	AOP_HL for _cDelay
   0F55 21 33 01           5061 	ld	hl,#_cDelay
   0F58 36 00              5062 	ld	(hl),#0x00
                           5063 ;	square.c 855
                           5064 ;	genAssign
                           5065 ;	AOP_HL for _cOffStep
   0F5A 21 34 01           5066 	ld	hl,#_cOffStep
   0F5D 36 00              5067 	ld	(hl),#0x00
                           5068 ;	square.c 856
                           5069 ;	genCmpEq
                           5070 ;	AOP_HL for _seldrum
                           5071 ; genCmpEq: left 1, right 1, result 0
   0F5F 21 71 01           5072 	ld	hl,#_seldrum
   0F62 7E                 5073 	ld	a,(hl)
   0F63 B7                 5074 	or	a,a
   0F64 CA 7C 0F           5075 	jp	z,00101$
   0F67                    5076 00110$:
                           5077 ;	genCmpEq
                           5078 ;	AOP_HL for _seldrum
                           5079 ; genCmpEq: left 1, right 1, result 0
   0F67 21 71 01           5080 	ld	hl,#_seldrum
   0F6A 7E                 5081 	ld	a,(hl)
   0F6B FE 01              5082 	cp	a,#0x01
   0F6D CA 8F 0F           5083 	jp	z,00102$
   0F70                    5084 00111$:
                           5085 ;	genCmpEq
                           5086 ;	AOP_HL for _seldrum
                           5087 ; genCmpEq: left 1, right 1, result 0
   0F70 21 71 01           5088 	ld	hl,#_seldrum
   0F73 7E                 5089 	ld	a,(hl)
   0F74 FE 02              5090 	cp	a,#0x02
   0F76 CA A2 0F           5091 	jp	z,00103$
   0F79                    5092 00112$:
                           5093 ;	genGoto
   0F79 C3 B2 0F           5094 	jp	00104$
                           5095 ;	square.c 859
                           5096 ;	genLabel
   0F7C                    5097 00101$:
                           5098 ;	genAssign
                           5099 ;	AOP_HL for _delayA
                           5100 ;	AOP_HL for _cDelay
   0F7C 21 21 01           5101 	ld	hl,#_delayA
   0F7F 7E                 5102 	ld	a,(hl)
   0F80 21 33 01           5103 	ld	hl,#_cDelay
   0F83 77                 5104 	ld	(hl),a
                           5105 ;	square.c 860
                           5106 ;	genAssign
                           5107 ;	AOP_HL for _offStepA
                           5108 ;	AOP_HL for _cOffStep
   0F84 21 30 01           5109 	ld	hl,#_offStepA
   0F87 7E                 5110 	ld	a,(hl)
   0F88 21 34 01           5111 	ld	hl,#_cOffStep
   0F8B 77                 5112 	ld	(hl),a
                           5113 ;	square.c 861
                           5114 ;	genGoto
   0F8C C3 B2 0F           5115 	jp	00104$
                           5116 ;	square.c 863
                           5117 ;	genLabel
   0F8F                    5118 00102$:
                           5119 ;	genAssign
                           5120 ;	AOP_HL for _delayB
                           5121 ;	AOP_HL for _cDelay
   0F8F 21 22 01           5122 	ld	hl,#_delayB
   0F92 7E                 5123 	ld	a,(hl)
   0F93 21 33 01           5124 	ld	hl,#_cDelay
   0F96 77                 5125 	ld	(hl),a
                           5126 ;	square.c 864
                           5127 ;	genAssign
                           5128 ;	AOP_HL for _offStepB
                           5129 ;	AOP_HL for _cOffStep
   0F97 21 31 01           5130 	ld	hl,#_offStepB
   0F9A 7E                 5131 	ld	a,(hl)
   0F9B 21 34 01           5132 	ld	hl,#_cOffStep
   0F9E 77                 5133 	ld	(hl),a
                           5134 ;	square.c 865
                           5135 ;	genGoto
   0F9F C3 B2 0F           5136 	jp	00104$
                           5137 ;	square.c 867
                           5138 ;	genLabel
   0FA2                    5139 00103$:
                           5140 ;	genAssign
                           5141 ;	AOP_HL for _delayC
                           5142 ;	AOP_HL for _cDelay
   0FA2 21 23 01           5143 	ld	hl,#_delayC
   0FA5 7E                 5144 	ld	a,(hl)
   0FA6 21 33 01           5145 	ld	hl,#_cDelay
   0FA9 77                 5146 	ld	(hl),a
                           5147 ;	square.c 868
                           5148 ;	genAssign
                           5149 ;	AOP_HL for _offStepC
                           5150 ;	AOP_HL for _cOffStep
   0FAA 21 32 01           5151 	ld	hl,#_offStepC
   0FAD 7E                 5152 	ld	a,(hl)
   0FAE 21 34 01           5153 	ld	hl,#_cOffStep
   0FB1 77                 5154 	ld	(hl),a
                           5155 ;	square.c 870
                           5156 ;	genLabel
   0FB2                    5157 00104$:
                           5158 ;	square.c 871
                           5159 ;	genIpush
                           5160 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FB2 21 05 0A           5161 	ld	hl,#0x0A05
   0FB5 E5                 5162 	push	hl
                           5163 ;	genCall
   0FB6 CD 00 00           5164 	call	_set_sprite_tile
   0FB9 E8 02              5165 	lda	sp,2(sp)
                           5166 ;	square.c 872
                           5167 ;	genPlus
                           5168 ;	AOP_HL for _cDelay
                           5169 ;	genPlusIncr
                           5170 ;	Can't optimise plus by inc, falling back to the normal way
   0FBB 21 33 01           5171 	ld	hl,#_cDelay
   0FBE 7E                 5172 	ld	a,(hl)
   0FBF C6 08              5173 	add	a,#0x08
   0FC1 4F                 5174 	ld	c,a
                           5175 ;	genIpush
                           5176 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FC2 3E 98              5177 	ld	a,#0x98
   0FC4 F5                 5178 	push	af
   0FC5 33                 5179 	inc	sp
                           5180 ;	genIpush
   0FC6 79                 5181 	ld	a,c
   0FC7 F5                 5182 	push	af
   0FC8 33                 5183 	inc	sp
                           5184 ;	genIpush
   0FC9 3E 05              5185 	ld	a,#0x05
   0FCB F5                 5186 	push	af
   0FCC 33                 5187 	inc	sp
                           5188 ;	genCall
   0FCD CD 00 00           5189 	call	_move_sprite
   0FD0 E8 03              5190 	lda	sp,3(sp)
                           5191 ;	square.c 873
                           5192 ;	genIpush
                           5193 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FD2 21 04 08           5194 	ld	hl,#0x0804
   0FD5 E5                 5195 	push	hl
                           5196 ;	genCall
   0FD6 CD 00 00           5197 	call	_set_sprite_tile
   0FD9 E8 02              5198 	lda	sp,2(sp)
                           5199 ;	square.c 874
                           5200 ;	genPlus
                           5201 ;	AOP_HL for _cOffStep
                           5202 ;	Can't optimise plus by inc, falling back to the normal way
   0FDB 3E D0              5203 	ld	a,#<_dXlut
   0FDD 21 34 01           5204 	ld	hl,#_cOffStep
   0FE0 86                 5205 	add	a,(hl)
   0FE1 4F                 5206 	ld	c,a
   0FE2 3E 00              5207 	ld	a,#>_dXlut
   0FE4 CE 00              5208 	adc	a,#0x00
   0FE6 47                 5209 	ld	b,a
                           5210 ;	genPointerGet
   0FE7 0A                 5211 	ld	a,(bc)
                           5212 ;	genIpush
                           5213 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FE8 4F                 5214 	ld	c,a
   0FE9 F5                 5215 	push	af
   0FEA 33                 5216 	inc	sp
                           5217 ;	genIpush
   0FEB 21 04 08           5218 	ld	hl,#0x0804
   0FEE E5                 5219 	push	hl
                           5220 ;	genCall
   0FEF CD 00 00           5221 	call	_move_sprite
   0FF2 E8 03              5222 	lda	sp,3(sp)
                           5223 ;	square.c 875
                           5224 ;	genCall
                           5225 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FF4 CD 00 00           5226 	call	_disable_interrupts
                           5227 ;	square.c 876
                           5228 ;	genCall
                           5229 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FF7 CD 95 00           5230 	call	_fillDrumA
                           5231 ;	square.c 877
                           5232 ;	genCall
                           5233 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FFA CD 64 02           5234 	call	_fillDrumB
                           5235 ;	square.c 878
                           5236 ;	genCall
                           5237 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0FFD CD 33 04           5238 	call	_fillDrumC
                           5239 ;	square.c 879
                           5240 ;	genAssign
                           5241 ;	AOP_HL for _clkA
   1000 21 29 01           5242 	ld	hl,#_clkA
   1003 36 00              5243 	ld	(hl),#0x00
                           5244 ;	square.c 880
                           5245 ;	genAssign
                           5246 ;	AOP_HL for _clkB
   1005 21 2C 01           5247 	ld	hl,#_clkB
   1008 36 00              5248 	ld	(hl),#0x00
                           5249 ;	square.c 881
                           5250 ;	genAssign
                           5251 ;	AOP_HL for _clkC
   100A 21 2F 01           5252 	ld	hl,#_clkC
   100D 36 00              5253 	ld	(hl),#0x00
                           5254 ;	square.c 882
                           5255 ;	genCall
                           5256 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   100F CD 00 00           5257 	call	_enable_interrupts
                           5258 ;	square.c 883
                           5259 ;	genCall
                           5260 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1012 CD 00 00           5261 	call	_wait_vbl_done
                           5262 ;	genLabel
   1015                    5263 00105$:
                           5264 ;	genEndFunction
   1015 E8 02              5265 	lda	sp,2(sp)
   1017 C9                 5266 	ret
   1018                    5267 ___loadA_end:
                           5268 ;	square.c 886
                           5269 ;	genLabel
                           5270 ;	genFunction
                           5271 ;	---------------------------------
                           5272 ; Function loadB
                           5273 ; ---------------------------------
   1018                    5274 ___loadB_start:
   1018                    5275 _loadB:
   1018 E8 FE              5276 	lda	sp,-2(sp)
                           5277 ;	square.c 888
                           5278 ;	genAssign
                           5279 ;	AOP_HL for _storeBPA
                           5280 ;	AOP_HL for _numberOfPulsesA
   101A 21 42 01           5281 	ld	hl,#_storeBPA
   101D 7E                 5282 	ld	a,(hl)
   101E 21 27 01           5283 	ld	hl,#_numberOfPulsesA
   1021 77                 5284 	ld	(hl),a
                           5285 ;	square.c 889
                           5286 ;	genAssign
                           5287 ;	AOP_HL for _storeBSA
                           5288 ;	AOP_HL for _totalStepsA
   1022 21 43 01           5289 	ld	hl,#_storeBSA
   1025 7E                 5290 	ld	a,(hl)
   1026 21 28 01           5291 	ld	hl,#_totalStepsA
   1029 77                 5292 	ld	(hl),a
                           5293 ;	square.c 890
                           5294 ;	genAssign
                           5295 ;	AOP_HL for _storeBPB
                           5296 ;	AOP_HL for _numberOfPulsesB
   102A 21 44 01           5297 	ld	hl,#_storeBPB
   102D 7E                 5298 	ld	a,(hl)
   102E 21 2A 01           5299 	ld	hl,#_numberOfPulsesB
   1031 77                 5300 	ld	(hl),a
                           5301 ;	square.c 891
                           5302 ;	genAssign
                           5303 ;	AOP_HL for _storeBSB
                           5304 ;	AOP_HL for _totalStepsB
   1032 21 45 01           5305 	ld	hl,#_storeBSB
   1035 7E                 5306 	ld	a,(hl)
   1036 21 2B 01           5307 	ld	hl,#_totalStepsB
   1039 77                 5308 	ld	(hl),a
                           5309 ;	square.c 892
                           5310 ;	genAssign
                           5311 ;	AOP_HL for _storeBPC
                           5312 ;	AOP_HL for _numberOfPulsesC
   103A 21 46 01           5313 	ld	hl,#_storeBPC
   103D 7E                 5314 	ld	a,(hl)
   103E 21 2D 01           5315 	ld	hl,#_numberOfPulsesC
   1041 77                 5316 	ld	(hl),a
                           5317 ;	square.c 893
                           5318 ;	genAssign
                           5319 ;	AOP_HL for _storeBSC
                           5320 ;	AOP_HL for _totalStepsC
   1042 21 47 01           5321 	ld	hl,#_storeBSC
   1045 7E                 5322 	ld	a,(hl)
   1046 21 2E 01           5323 	ld	hl,#_totalStepsC
   1049 77                 5324 	ld	(hl),a
                           5325 ;	square.c 894
                           5326 ;	genAssign
                           5327 ;	AOP_HL for _storeBOA
                           5328 ;	AOP_HL for _offStepA
   104A 21 48 01           5329 	ld	hl,#_storeBOA
   104D 7E                 5330 	ld	a,(hl)
   104E 21 30 01           5331 	ld	hl,#_offStepA
   1051 77                 5332 	ld	(hl),a
                           5333 ;	square.c 895
                           5334 ;	genAssign
                           5335 ;	AOP_HL for _storeBOB
                           5336 ;	AOP_HL for _offStepB
   1052 21 49 01           5337 	ld	hl,#_storeBOB
   1055 7E                 5338 	ld	a,(hl)
   1056 21 31 01           5339 	ld	hl,#_offStepB
   1059 77                 5340 	ld	(hl),a
                           5341 ;	square.c 896
                           5342 ;	genAssign
                           5343 ;	AOP_HL for _storeBOC
                           5344 ;	AOP_HL for _offStepC
   105A 21 4A 01           5345 	ld	hl,#_storeBOC
   105D 7E                 5346 	ld	a,(hl)
   105E 21 32 01           5347 	ld	hl,#_offStepC
   1061 77                 5348 	ld	(hl),a
                           5349 ;	square.c 897
                           5350 ;	genAssign
                           5351 ;	AOP_HL for _storeBDA
                           5352 ;	AOP_HL for _delayA
   1062 21 4B 01           5353 	ld	hl,#_storeBDA
   1065 7E                 5354 	ld	a,(hl)
   1066 21 21 01           5355 	ld	hl,#_delayA
   1069 77                 5356 	ld	(hl),a
                           5357 ;	square.c 898
                           5358 ;	genAssign
                           5359 ;	AOP_HL for _storeBDB
                           5360 ;	AOP_HL for _delayB
   106A 21 4C 01           5361 	ld	hl,#_storeBDB
   106D 7E                 5362 	ld	a,(hl)
   106E 21 22 01           5363 	ld	hl,#_delayB
   1071 77                 5364 	ld	(hl),a
                           5365 ;	square.c 899
                           5366 ;	genAssign
                           5367 ;	AOP_HL for _storeBDC
                           5368 ;	AOP_HL for _delayC
   1072 21 4D 01           5369 	ld	hl,#_storeBDC
   1075 7E                 5370 	ld	a,(hl)
   1076 21 23 01           5371 	ld	hl,#_delayC
   1079 77                 5372 	ld	(hl),a
                           5373 ;	square.c 900
                           5374 ;	genIpush
                           5375 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   107A 21 00 00           5376 	ld	hl,#0x0000
   107D E5                 5377 	push	hl
                           5378 ;	genCall
   107E CD 00 00           5379 	call	_set_sprite_tile
   1081 E8 02              5380 	lda	sp,2(sp)
                           5381 ;	square.c 901
                           5382 ;	genMinus
                           5383 ;	AOP_HL for _totalStepsA
   1083 21 28 01           5384 	ld	hl,#_totalStepsA
   1086 7E                 5385 	ld	a,(hl)
   1087 C6 FF              5386 	add	a,#0xFF
   1089 4F                 5387 	ld	c,a
                           5388 ;	genPlus
                           5389 ;	Can't optimise plus by inc, falling back to the normal way
   108A 3E D0              5390 	ld	a,#<_dXlut
   108C 81                 5391 	add	a,c
   108D 4F                 5392 	ld	c,a
   108E 3E 00              5393 	ld	a,#>_dXlut
   1090 CE 00              5394 	adc	a,#0x00
   1092 47                 5395 	ld	b,a
                           5396 ;	genPointerGet
   1093 0A                 5397 	ld	a,(bc)
   1094 4F                 5398 	ld	c,a
                           5399 ;	genMinus
                           5400 ;	AOP_HL for _numberOfPulsesA
   1095 21 27 01           5401 	ld	hl,#_numberOfPulsesA
   1098 7E                 5402 	ld	a,(hl)
   1099 C6 FF              5403 	add	a,#0xFF
   109B 47                 5404 	ld	b,a
                           5405 ;	genPlus
                           5406 ;	AOP_STK for _loadB_sloc0_1_0
                           5407 ;	Can't optimise plus by inc, falling back to the normal way
   109C 11 F0 00           5408 	ld	de,#_dYlut
   109F 68                 5409 	ld	l,b
   10A0 26 00              5410 	ld	h,#0x00
   10A2 19                 5411 	add	hl,de
   10A3 7D                 5412 	ld	a,l
   10A4 54                 5413 	ld	d,h
   10A5 F8 00              5414 	lda	hl,0(sp)
                           5415 ;	genPointerGet
                           5416 ;	AOP_STK for _loadB_sloc0_1_0
   10A7 22                 5417 	ld	(hl+),a
   10A8 72                 5418 	ld	(hl),d
   10A9 5F                 5419 	ld	e,a
   10AA 1A                 5420 	ld	a,(de)
   10AB 47                 5421 	ld	b,a
                           5422 ;	genIpush
                           5423 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10AC 79                 5424 	ld	a,c
   10AD F5                 5425 	push	af
   10AE 33                 5426 	inc	sp
                           5427 ;	genIpush
   10AF 78                 5428 	ld	a,b
   10B0 F5                 5429 	push	af
   10B1 33                 5430 	inc	sp
                           5431 ;	genIpush
   10B2 3E 00              5432 	ld	a,#0x00
   10B4 F5                 5433 	push	af
   10B5 33                 5434 	inc	sp
                           5435 ;	genCall
   10B6 CD 00 00           5436 	call	_move_sprite
   10B9 E8 03              5437 	lda	sp,3(sp)
                           5438 ;	square.c 902
                           5439 ;	genIpush
                           5440 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10BB 21 01 02           5441 	ld	hl,#0x0201
   10BE E5                 5442 	push	hl
                           5443 ;	genCall
   10BF CD 00 00           5444 	call	_set_sprite_tile
   10C2 E8 02              5445 	lda	sp,2(sp)
                           5446 ;	square.c 903
                           5447 ;	genMinus
                           5448 ;	AOP_HL for _totalStepsB
   10C4 21 2B 01           5449 	ld	hl,#_totalStepsB
   10C7 7E                 5450 	ld	a,(hl)
   10C8 C6 FF              5451 	add	a,#0xFF
   10CA 4F                 5452 	ld	c,a
                           5453 ;	genPlus
                           5454 ;	Can't optimise plus by inc, falling back to the normal way
   10CB 3E D0              5455 	ld	a,#<_dXlut
   10CD 81                 5456 	add	a,c
   10CE 4F                 5457 	ld	c,a
   10CF 3E 00              5458 	ld	a,#>_dXlut
   10D1 CE 00              5459 	adc	a,#0x00
   10D3 47                 5460 	ld	b,a
                           5461 ;	genPointerGet
   10D4 0A                 5462 	ld	a,(bc)
   10D5 4F                 5463 	ld	c,a
                           5464 ;	genMinus
                           5465 ;	AOP_HL for _numberOfPulsesB
   10D6 21 2A 01           5466 	ld	hl,#_numberOfPulsesB
   10D9 7E                 5467 	ld	a,(hl)
   10DA C6 FF              5468 	add	a,#0xFF
   10DC 47                 5469 	ld	b,a
                           5470 ;	genPlus
                           5471 ;	AOP_STK for _loadB_sloc0_1_0
                           5472 ;	Can't optimise plus by inc, falling back to the normal way
   10DD 11 F0 00           5473 	ld	de,#_dYlut
   10E0 68                 5474 	ld	l,b
   10E1 26 00              5475 	ld	h,#0x00
   10E3 19                 5476 	add	hl,de
   10E4 7D                 5477 	ld	a,l
   10E5 54                 5478 	ld	d,h
   10E6 F8 00              5479 	lda	hl,0(sp)
                           5480 ;	genPointerGet
                           5481 ;	AOP_STK for _loadB_sloc0_1_0
   10E8 22                 5482 	ld	(hl+),a
   10E9 72                 5483 	ld	(hl),d
   10EA 5F                 5484 	ld	e,a
   10EB 1A                 5485 	ld	a,(de)
   10EC 47                 5486 	ld	b,a
                           5487 ;	genIpush
                           5488 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10ED 79                 5489 	ld	a,c
   10EE F5                 5490 	push	af
   10EF 33                 5491 	inc	sp
                           5492 ;	genIpush
   10F0 78                 5493 	ld	a,b
   10F1 F5                 5494 	push	af
   10F2 33                 5495 	inc	sp
                           5496 ;	genIpush
   10F3 3E 01              5497 	ld	a,#0x01
   10F5 F5                 5498 	push	af
   10F6 33                 5499 	inc	sp
                           5500 ;	genCall
   10F7 CD 00 00           5501 	call	_move_sprite
   10FA E8 03              5502 	lda	sp,3(sp)
                           5503 ;	square.c 904
                           5504 ;	genIpush
                           5505 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10FC 21 02 04           5506 	ld	hl,#0x0402
   10FF E5                 5507 	push	hl
                           5508 ;	genCall
   1100 CD 00 00           5509 	call	_set_sprite_tile
   1103 E8 02              5510 	lda	sp,2(sp)
                           5511 ;	square.c 905
                           5512 ;	genMinus
                           5513 ;	AOP_HL for _totalStepsC
   1105 21 2E 01           5514 	ld	hl,#_totalStepsC
   1108 7E                 5515 	ld	a,(hl)
   1109 C6 FF              5516 	add	a,#0xFF
   110B 4F                 5517 	ld	c,a
                           5518 ;	genPlus
                           5519 ;	Can't optimise plus by inc, falling back to the normal way
   110C 3E D0              5520 	ld	a,#<_dXlut
   110E 81                 5521 	add	a,c
   110F 4F                 5522 	ld	c,a
   1110 3E 00              5523 	ld	a,#>_dXlut
   1112 CE 00              5524 	adc	a,#0x00
   1114 47                 5525 	ld	b,a
                           5526 ;	genPointerGet
   1115 0A                 5527 	ld	a,(bc)
   1116 4F                 5528 	ld	c,a
                           5529 ;	genMinus
                           5530 ;	AOP_HL for _numberOfPulsesC
   1117 21 2D 01           5531 	ld	hl,#_numberOfPulsesC
   111A 7E                 5532 	ld	a,(hl)
   111B C6 FF              5533 	add	a,#0xFF
   111D 47                 5534 	ld	b,a
                           5535 ;	genPlus
                           5536 ;	AOP_STK for _loadB_sloc0_1_0
                           5537 ;	Can't optimise plus by inc, falling back to the normal way
   111E 11 F0 00           5538 	ld	de,#_dYlut
   1121 68                 5539 	ld	l,b
   1122 26 00              5540 	ld	h,#0x00
   1124 19                 5541 	add	hl,de
   1125 7D                 5542 	ld	a,l
   1126 54                 5543 	ld	d,h
   1127 F8 00              5544 	lda	hl,0(sp)
                           5545 ;	genPointerGet
                           5546 ;	AOP_STK for _loadB_sloc0_1_0
   1129 22                 5547 	ld	(hl+),a
   112A 72                 5548 	ld	(hl),d
   112B 5F                 5549 	ld	e,a
   112C 1A                 5550 	ld	a,(de)
   112D 47                 5551 	ld	b,a
                           5552 ;	genIpush
                           5553 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   112E 79                 5554 	ld	a,c
   112F F5                 5555 	push	af
   1130 33                 5556 	inc	sp
                           5557 ;	genIpush
   1131 78                 5558 	ld	a,b
   1132 F5                 5559 	push	af
   1133 33                 5560 	inc	sp
                           5561 ;	genIpush
   1134 3E 02              5562 	ld	a,#0x02
   1136 F5                 5563 	push	af
   1137 33                 5564 	inc	sp
                           5565 ;	genCall
   1138 CD 00 00           5566 	call	_move_sprite
   113B E8 03              5567 	lda	sp,3(sp)
                           5568 ;	square.c 906
                           5569 ;	genAssign
                           5570 ;	AOP_HL for _cDelay
   113D 21 33 01           5571 	ld	hl,#_cDelay
   1140 36 00              5572 	ld	(hl),#0x00
                           5573 ;	square.c 907
                           5574 ;	genAssign
                           5575 ;	AOP_HL for _cOffStep
   1142 21 34 01           5576 	ld	hl,#_cOffStep
   1145 36 00              5577 	ld	(hl),#0x00
                           5578 ;	square.c 908
                           5579 ;	genCmpEq
                           5580 ;	AOP_HL for _seldrum
                           5581 ; genCmpEq: left 1, right 1, result 0
   1147 21 71 01           5582 	ld	hl,#_seldrum
   114A 7E                 5583 	ld	a,(hl)
   114B B7                 5584 	or	a,a
   114C CA 64 11           5585 	jp	z,00101$
   114F                    5586 00110$:
                           5587 ;	genCmpEq
                           5588 ;	AOP_HL for _seldrum
                           5589 ; genCmpEq: left 1, right 1, result 0
   114F 21 71 01           5590 	ld	hl,#_seldrum
   1152 7E                 5591 	ld	a,(hl)
   1153 FE 01              5592 	cp	a,#0x01
   1155 CA 77 11           5593 	jp	z,00102$
   1158                    5594 00111$:
                           5595 ;	genCmpEq
                           5596 ;	AOP_HL for _seldrum
                           5597 ; genCmpEq: left 1, right 1, result 0
   1158 21 71 01           5598 	ld	hl,#_seldrum
   115B 7E                 5599 	ld	a,(hl)
   115C FE 02              5600 	cp	a,#0x02
   115E CA 8A 11           5601 	jp	z,00103$
   1161                    5602 00112$:
                           5603 ;	genGoto
   1161 C3 9A 11           5604 	jp	00104$
                           5605 ;	square.c 911
                           5606 ;	genLabel
   1164                    5607 00101$:
                           5608 ;	genAssign
                           5609 ;	AOP_HL for _delayA
                           5610 ;	AOP_HL for _cDelay
   1164 21 21 01           5611 	ld	hl,#_delayA
   1167 7E                 5612 	ld	a,(hl)
   1168 21 33 01           5613 	ld	hl,#_cDelay
   116B 77                 5614 	ld	(hl),a
                           5615 ;	square.c 912
                           5616 ;	genAssign
                           5617 ;	AOP_HL for _offStepA
                           5618 ;	AOP_HL for _cOffStep
   116C 21 30 01           5619 	ld	hl,#_offStepA
   116F 7E                 5620 	ld	a,(hl)
   1170 21 34 01           5621 	ld	hl,#_cOffStep
   1173 77                 5622 	ld	(hl),a
                           5623 ;	square.c 913
                           5624 ;	genGoto
   1174 C3 9A 11           5625 	jp	00104$
                           5626 ;	square.c 915
                           5627 ;	genLabel
   1177                    5628 00102$:
                           5629 ;	genAssign
                           5630 ;	AOP_HL for _delayB
                           5631 ;	AOP_HL for _cDelay
   1177 21 22 01           5632 	ld	hl,#_delayB
   117A 7E                 5633 	ld	a,(hl)
   117B 21 33 01           5634 	ld	hl,#_cDelay
   117E 77                 5635 	ld	(hl),a
                           5636 ;	square.c 916
                           5637 ;	genAssign
                           5638 ;	AOP_HL for _offStepB
                           5639 ;	AOP_HL for _cOffStep
   117F 21 31 01           5640 	ld	hl,#_offStepB
   1182 7E                 5641 	ld	a,(hl)
   1183 21 34 01           5642 	ld	hl,#_cOffStep
   1186 77                 5643 	ld	(hl),a
                           5644 ;	square.c 917
                           5645 ;	genGoto
   1187 C3 9A 11           5646 	jp	00104$
                           5647 ;	square.c 919
                           5648 ;	genLabel
   118A                    5649 00103$:
                           5650 ;	genAssign
                           5651 ;	AOP_HL for _delayC
                           5652 ;	AOP_HL for _cDelay
   118A 21 23 01           5653 	ld	hl,#_delayC
   118D 7E                 5654 	ld	a,(hl)
   118E 21 33 01           5655 	ld	hl,#_cDelay
   1191 77                 5656 	ld	(hl),a
                           5657 ;	square.c 920
                           5658 ;	genAssign
                           5659 ;	AOP_HL for _offStepC
                           5660 ;	AOP_HL for _cOffStep
   1192 21 32 01           5661 	ld	hl,#_offStepC
   1195 7E                 5662 	ld	a,(hl)
   1196 21 34 01           5663 	ld	hl,#_cOffStep
   1199 77                 5664 	ld	(hl),a
                           5665 ;	square.c 922
                           5666 ;	genLabel
   119A                    5667 00104$:
                           5668 ;	square.c 923
                           5669 ;	genIpush
                           5670 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   119A 21 05 0A           5671 	ld	hl,#0x0A05
   119D E5                 5672 	push	hl
                           5673 ;	genCall
   119E CD 00 00           5674 	call	_set_sprite_tile
   11A1 E8 02              5675 	lda	sp,2(sp)
                           5676 ;	square.c 924
                           5677 ;	genPlus
                           5678 ;	AOP_HL for _cDelay
                           5679 ;	genPlusIncr
                           5680 ;	Can't optimise plus by inc, falling back to the normal way
   11A3 21 33 01           5681 	ld	hl,#_cDelay
   11A6 7E                 5682 	ld	a,(hl)
   11A7 C6 08              5683 	add	a,#0x08
   11A9 4F                 5684 	ld	c,a
                           5685 ;	genIpush
                           5686 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11AA 3E 98              5687 	ld	a,#0x98
   11AC F5                 5688 	push	af
   11AD 33                 5689 	inc	sp
                           5690 ;	genIpush
   11AE 79                 5691 	ld	a,c
   11AF F5                 5692 	push	af
   11B0 33                 5693 	inc	sp
                           5694 ;	genIpush
   11B1 3E 05              5695 	ld	a,#0x05
   11B3 F5                 5696 	push	af
   11B4 33                 5697 	inc	sp
                           5698 ;	genCall
   11B5 CD 00 00           5699 	call	_move_sprite
   11B8 E8 03              5700 	lda	sp,3(sp)
                           5701 ;	square.c 925
                           5702 ;	genIpush
                           5703 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11BA 21 04 08           5704 	ld	hl,#0x0804
   11BD E5                 5705 	push	hl
                           5706 ;	genCall
   11BE CD 00 00           5707 	call	_set_sprite_tile
   11C1 E8 02              5708 	lda	sp,2(sp)
                           5709 ;	square.c 926
                           5710 ;	genPlus
                           5711 ;	AOP_HL for _cOffStep
                           5712 ;	Can't optimise plus by inc, falling back to the normal way
   11C3 3E D0              5713 	ld	a,#<_dXlut
   11C5 21 34 01           5714 	ld	hl,#_cOffStep
   11C8 86                 5715 	add	a,(hl)
   11C9 4F                 5716 	ld	c,a
   11CA 3E 00              5717 	ld	a,#>_dXlut
   11CC CE 00              5718 	adc	a,#0x00
   11CE 47                 5719 	ld	b,a
                           5720 ;	genPointerGet
   11CF 0A                 5721 	ld	a,(bc)
                           5722 ;	genIpush
                           5723 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11D0 4F                 5724 	ld	c,a
   11D1 F5                 5725 	push	af
   11D2 33                 5726 	inc	sp
                           5727 ;	genIpush
   11D3 21 04 08           5728 	ld	hl,#0x0804
   11D6 E5                 5729 	push	hl
                           5730 ;	genCall
   11D7 CD 00 00           5731 	call	_move_sprite
   11DA E8 03              5732 	lda	sp,3(sp)
                           5733 ;	square.c 927
                           5734 ;	genCall
                           5735 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11DC CD 00 00           5736 	call	_disable_interrupts
                           5737 ;	square.c 928
                           5738 ;	genCall
                           5739 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11DF CD 95 00           5740 	call	_fillDrumA
                           5741 ;	square.c 929
                           5742 ;	genCall
                           5743 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11E2 CD 64 02           5744 	call	_fillDrumB
                           5745 ;	square.c 930
                           5746 ;	genCall
                           5747 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11E5 CD 33 04           5748 	call	_fillDrumC
                           5749 ;	square.c 931
                           5750 ;	genAssign
                           5751 ;	AOP_HL for _clkA
   11E8 21 29 01           5752 	ld	hl,#_clkA
   11EB 36 00              5753 	ld	(hl),#0x00
                           5754 ;	square.c 932
                           5755 ;	genAssign
                           5756 ;	AOP_HL for _clkB
   11ED 21 2C 01           5757 	ld	hl,#_clkB
   11F0 36 00              5758 	ld	(hl),#0x00
                           5759 ;	square.c 933
                           5760 ;	genAssign
                           5761 ;	AOP_HL for _clkC
   11F2 21 2F 01           5762 	ld	hl,#_clkC
   11F5 36 00              5763 	ld	(hl),#0x00
                           5764 ;	square.c 934
                           5765 ;	genCall
                           5766 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11F7 CD 00 00           5767 	call	_enable_interrupts
                           5768 ;	square.c 935
                           5769 ;	genCall
                           5770 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11FA CD 00 00           5771 	call	_wait_vbl_done
                           5772 ;	genLabel
   11FD                    5773 00105$:
                           5774 ;	genEndFunction
   11FD E8 02              5775 	lda	sp,2(sp)
   11FF C9                 5776 	ret
   1200                    5777 ___loadB_end:
                           5778 ;	square.c 938
                           5779 ;	genLabel
                           5780 ;	genFunction
                           5781 ;	---------------------------------
                           5782 ; Function loadC
                           5783 ; ---------------------------------
   1200                    5784 ___loadC_start:
   1200                    5785 _loadC:
   1200 E8 FE              5786 	lda	sp,-2(sp)
                           5787 ;	square.c 940
                           5788 ;	genAssign
                           5789 ;	AOP_HL for _storeCPA
                           5790 ;	AOP_HL for _numberOfPulsesA
   1202 21 4E 01           5791 	ld	hl,#_storeCPA
   1205 7E                 5792 	ld	a,(hl)
   1206 21 27 01           5793 	ld	hl,#_numberOfPulsesA
   1209 77                 5794 	ld	(hl),a
                           5795 ;	square.c 941
                           5796 ;	genAssign
                           5797 ;	AOP_HL for _storeCSA
                           5798 ;	AOP_HL for _totalStepsA
   120A 21 4F 01           5799 	ld	hl,#_storeCSA
   120D 7E                 5800 	ld	a,(hl)
   120E 21 28 01           5801 	ld	hl,#_totalStepsA
   1211 77                 5802 	ld	(hl),a
                           5803 ;	square.c 942
                           5804 ;	genAssign
                           5805 ;	AOP_HL for _storeCPB
                           5806 ;	AOP_HL for _numberOfPulsesB
   1212 21 50 01           5807 	ld	hl,#_storeCPB
   1215 7E                 5808 	ld	a,(hl)
   1216 21 2A 01           5809 	ld	hl,#_numberOfPulsesB
   1219 77                 5810 	ld	(hl),a
                           5811 ;	square.c 943
                           5812 ;	genAssign
                           5813 ;	AOP_HL for _storeCSB
                           5814 ;	AOP_HL for _totalStepsB
   121A 21 51 01           5815 	ld	hl,#_storeCSB
   121D 7E                 5816 	ld	a,(hl)
   121E 21 2B 01           5817 	ld	hl,#_totalStepsB
   1221 77                 5818 	ld	(hl),a
                           5819 ;	square.c 944
                           5820 ;	genAssign
                           5821 ;	AOP_HL for _storeCPC
                           5822 ;	AOP_HL for _numberOfPulsesC
   1222 21 52 01           5823 	ld	hl,#_storeCPC
   1225 7E                 5824 	ld	a,(hl)
   1226 21 2D 01           5825 	ld	hl,#_numberOfPulsesC
   1229 77                 5826 	ld	(hl),a
                           5827 ;	square.c 945
                           5828 ;	genAssign
                           5829 ;	AOP_HL for _storeCSC
                           5830 ;	AOP_HL for _totalStepsC
   122A 21 53 01           5831 	ld	hl,#_storeCSC
   122D 7E                 5832 	ld	a,(hl)
   122E 21 2E 01           5833 	ld	hl,#_totalStepsC
   1231 77                 5834 	ld	(hl),a
                           5835 ;	square.c 946
                           5836 ;	genAssign
                           5837 ;	AOP_HL for _storeCOA
                           5838 ;	AOP_HL for _offStepA
   1232 21 54 01           5839 	ld	hl,#_storeCOA
   1235 7E                 5840 	ld	a,(hl)
   1236 21 30 01           5841 	ld	hl,#_offStepA
   1239 77                 5842 	ld	(hl),a
                           5843 ;	square.c 947
                           5844 ;	genAssign
                           5845 ;	AOP_HL for _storeCOB
                           5846 ;	AOP_HL for _offStepB
   123A 21 55 01           5847 	ld	hl,#_storeCOB
   123D 7E                 5848 	ld	a,(hl)
   123E 21 31 01           5849 	ld	hl,#_offStepB
   1241 77                 5850 	ld	(hl),a
                           5851 ;	square.c 948
                           5852 ;	genAssign
                           5853 ;	AOP_HL for _storeCOC
                           5854 ;	AOP_HL for _offStepC
   1242 21 56 01           5855 	ld	hl,#_storeCOC
   1245 7E                 5856 	ld	a,(hl)
   1246 21 32 01           5857 	ld	hl,#_offStepC
   1249 77                 5858 	ld	(hl),a
                           5859 ;	square.c 949
                           5860 ;	genAssign
                           5861 ;	AOP_HL for _storeCDA
                           5862 ;	AOP_HL for _delayA
   124A 21 57 01           5863 	ld	hl,#_storeCDA
   124D 7E                 5864 	ld	a,(hl)
   124E 21 21 01           5865 	ld	hl,#_delayA
   1251 77                 5866 	ld	(hl),a
                           5867 ;	square.c 950
                           5868 ;	genAssign
                           5869 ;	AOP_HL for _storeCDB
                           5870 ;	AOP_HL for _delayB
   1252 21 58 01           5871 	ld	hl,#_storeCDB
   1255 7E                 5872 	ld	a,(hl)
   1256 21 22 01           5873 	ld	hl,#_delayB
   1259 77                 5874 	ld	(hl),a
                           5875 ;	square.c 951
                           5876 ;	genAssign
                           5877 ;	AOP_HL for _storeCDC
                           5878 ;	AOP_HL for _delayC
   125A 21 59 01           5879 	ld	hl,#_storeCDC
   125D 7E                 5880 	ld	a,(hl)
   125E 21 23 01           5881 	ld	hl,#_delayC
   1261 77                 5882 	ld	(hl),a
                           5883 ;	square.c 952
                           5884 ;	genIpush
                           5885 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1262 21 00 00           5886 	ld	hl,#0x0000
   1265 E5                 5887 	push	hl
                           5888 ;	genCall
   1266 CD 00 00           5889 	call	_set_sprite_tile
   1269 E8 02              5890 	lda	sp,2(sp)
                           5891 ;	square.c 953
                           5892 ;	genMinus
                           5893 ;	AOP_HL for _totalStepsA
   126B 21 28 01           5894 	ld	hl,#_totalStepsA
   126E 7E                 5895 	ld	a,(hl)
   126F C6 FF              5896 	add	a,#0xFF
   1271 4F                 5897 	ld	c,a
                           5898 ;	genPlus
                           5899 ;	Can't optimise plus by inc, falling back to the normal way
   1272 3E D0              5900 	ld	a,#<_dXlut
   1274 81                 5901 	add	a,c
   1275 4F                 5902 	ld	c,a
   1276 3E 00              5903 	ld	a,#>_dXlut
   1278 CE 00              5904 	adc	a,#0x00
   127A 47                 5905 	ld	b,a
                           5906 ;	genPointerGet
   127B 0A                 5907 	ld	a,(bc)
   127C 4F                 5908 	ld	c,a
                           5909 ;	genMinus
                           5910 ;	AOP_HL for _numberOfPulsesA
   127D 21 27 01           5911 	ld	hl,#_numberOfPulsesA
   1280 7E                 5912 	ld	a,(hl)
   1281 C6 FF              5913 	add	a,#0xFF
   1283 47                 5914 	ld	b,a
                           5915 ;	genPlus
                           5916 ;	AOP_STK for _loadC_sloc0_1_0
                           5917 ;	Can't optimise plus by inc, falling back to the normal way
   1284 11 F0 00           5918 	ld	de,#_dYlut
   1287 68                 5919 	ld	l,b
   1288 26 00              5920 	ld	h,#0x00
   128A 19                 5921 	add	hl,de
   128B 7D                 5922 	ld	a,l
   128C 54                 5923 	ld	d,h
   128D F8 00              5924 	lda	hl,0(sp)
                           5925 ;	genPointerGet
                           5926 ;	AOP_STK for _loadC_sloc0_1_0
   128F 22                 5927 	ld	(hl+),a
   1290 72                 5928 	ld	(hl),d
   1291 5F                 5929 	ld	e,a
   1292 1A                 5930 	ld	a,(de)
   1293 47                 5931 	ld	b,a
                           5932 ;	genIpush
                           5933 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1294 79                 5934 	ld	a,c
   1295 F5                 5935 	push	af
   1296 33                 5936 	inc	sp
                           5937 ;	genIpush
   1297 78                 5938 	ld	a,b
   1298 F5                 5939 	push	af
   1299 33                 5940 	inc	sp
                           5941 ;	genIpush
   129A 3E 00              5942 	ld	a,#0x00
   129C F5                 5943 	push	af
   129D 33                 5944 	inc	sp
                           5945 ;	genCall
   129E CD 00 00           5946 	call	_move_sprite
   12A1 E8 03              5947 	lda	sp,3(sp)
                           5948 ;	square.c 954
                           5949 ;	genIpush
                           5950 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12A3 21 01 02           5951 	ld	hl,#0x0201
   12A6 E5                 5952 	push	hl
                           5953 ;	genCall
   12A7 CD 00 00           5954 	call	_set_sprite_tile
   12AA E8 02              5955 	lda	sp,2(sp)
                           5956 ;	square.c 955
                           5957 ;	genMinus
                           5958 ;	AOP_HL for _totalStepsB
   12AC 21 2B 01           5959 	ld	hl,#_totalStepsB
   12AF 7E                 5960 	ld	a,(hl)
   12B0 C6 FF              5961 	add	a,#0xFF
   12B2 4F                 5962 	ld	c,a
                           5963 ;	genPlus
                           5964 ;	Can't optimise plus by inc, falling back to the normal way
   12B3 3E D0              5965 	ld	a,#<_dXlut
   12B5 81                 5966 	add	a,c
   12B6 4F                 5967 	ld	c,a
   12B7 3E 00              5968 	ld	a,#>_dXlut
   12B9 CE 00              5969 	adc	a,#0x00
   12BB 47                 5970 	ld	b,a
                           5971 ;	genPointerGet
   12BC 0A                 5972 	ld	a,(bc)
   12BD 4F                 5973 	ld	c,a
                           5974 ;	genMinus
                           5975 ;	AOP_HL for _numberOfPulsesB
   12BE 21 2A 01           5976 	ld	hl,#_numberOfPulsesB
   12C1 7E                 5977 	ld	a,(hl)
   12C2 C6 FF              5978 	add	a,#0xFF
   12C4 47                 5979 	ld	b,a
                           5980 ;	genPlus
                           5981 ;	AOP_STK for _loadC_sloc0_1_0
                           5982 ;	Can't optimise plus by inc, falling back to the normal way
   12C5 11 F0 00           5983 	ld	de,#_dYlut
   12C8 68                 5984 	ld	l,b
   12C9 26 00              5985 	ld	h,#0x00
   12CB 19                 5986 	add	hl,de
   12CC 7D                 5987 	ld	a,l
   12CD 54                 5988 	ld	d,h
   12CE F8 00              5989 	lda	hl,0(sp)
                           5990 ;	genPointerGet
                           5991 ;	AOP_STK for _loadC_sloc0_1_0
   12D0 22                 5992 	ld	(hl+),a
   12D1 72                 5993 	ld	(hl),d
   12D2 5F                 5994 	ld	e,a
   12D3 1A                 5995 	ld	a,(de)
   12D4 47                 5996 	ld	b,a
                           5997 ;	genIpush
                           5998 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12D5 79                 5999 	ld	a,c
   12D6 F5                 6000 	push	af
   12D7 33                 6001 	inc	sp
                           6002 ;	genIpush
   12D8 78                 6003 	ld	a,b
   12D9 F5                 6004 	push	af
   12DA 33                 6005 	inc	sp
                           6006 ;	genIpush
   12DB 3E 01              6007 	ld	a,#0x01
   12DD F5                 6008 	push	af
   12DE 33                 6009 	inc	sp
                           6010 ;	genCall
   12DF CD 00 00           6011 	call	_move_sprite
   12E2 E8 03              6012 	lda	sp,3(sp)
                           6013 ;	square.c 956
                           6014 ;	genIpush
                           6015 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12E4 21 02 04           6016 	ld	hl,#0x0402
   12E7 E5                 6017 	push	hl
                           6018 ;	genCall
   12E8 CD 00 00           6019 	call	_set_sprite_tile
   12EB E8 02              6020 	lda	sp,2(sp)
                           6021 ;	square.c 957
                           6022 ;	genMinus
                           6023 ;	AOP_HL for _totalStepsC
   12ED 21 2E 01           6024 	ld	hl,#_totalStepsC
   12F0 7E                 6025 	ld	a,(hl)
   12F1 C6 FF              6026 	add	a,#0xFF
   12F3 4F                 6027 	ld	c,a
                           6028 ;	genPlus
                           6029 ;	Can't optimise plus by inc, falling back to the normal way
   12F4 3E D0              6030 	ld	a,#<_dXlut
   12F6 81                 6031 	add	a,c
   12F7 4F                 6032 	ld	c,a
   12F8 3E 00              6033 	ld	a,#>_dXlut
   12FA CE 00              6034 	adc	a,#0x00
   12FC 47                 6035 	ld	b,a
                           6036 ;	genPointerGet
   12FD 0A                 6037 	ld	a,(bc)
   12FE 4F                 6038 	ld	c,a
                           6039 ;	genMinus
                           6040 ;	AOP_HL for _numberOfPulsesC
   12FF 21 2D 01           6041 	ld	hl,#_numberOfPulsesC
   1302 7E                 6042 	ld	a,(hl)
   1303 C6 FF              6043 	add	a,#0xFF
   1305 47                 6044 	ld	b,a
                           6045 ;	genPlus
                           6046 ;	AOP_STK for _loadC_sloc0_1_0
                           6047 ;	Can't optimise plus by inc, falling back to the normal way
   1306 11 F0 00           6048 	ld	de,#_dYlut
   1309 68                 6049 	ld	l,b
   130A 26 00              6050 	ld	h,#0x00
   130C 19                 6051 	add	hl,de
   130D 7D                 6052 	ld	a,l
   130E 54                 6053 	ld	d,h
   130F F8 00              6054 	lda	hl,0(sp)
                           6055 ;	genPointerGet
                           6056 ;	AOP_STK for _loadC_sloc0_1_0
   1311 22                 6057 	ld	(hl+),a
   1312 72                 6058 	ld	(hl),d
   1313 5F                 6059 	ld	e,a
   1314 1A                 6060 	ld	a,(de)
   1315 47                 6061 	ld	b,a
                           6062 ;	genIpush
                           6063 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1316 79                 6064 	ld	a,c
   1317 F5                 6065 	push	af
   1318 33                 6066 	inc	sp
                           6067 ;	genIpush
   1319 78                 6068 	ld	a,b
   131A F5                 6069 	push	af
   131B 33                 6070 	inc	sp
                           6071 ;	genIpush
   131C 3E 02              6072 	ld	a,#0x02
   131E F5                 6073 	push	af
   131F 33                 6074 	inc	sp
                           6075 ;	genCall
   1320 CD 00 00           6076 	call	_move_sprite
   1323 E8 03              6077 	lda	sp,3(sp)
                           6078 ;	square.c 958
                           6079 ;	genAssign
                           6080 ;	AOP_HL for _cDelay
   1325 21 33 01           6081 	ld	hl,#_cDelay
   1328 36 00              6082 	ld	(hl),#0x00
                           6083 ;	square.c 959
                           6084 ;	genAssign
                           6085 ;	AOP_HL for _cOffStep
   132A 21 34 01           6086 	ld	hl,#_cOffStep
   132D 36 00              6087 	ld	(hl),#0x00
                           6088 ;	square.c 960
                           6089 ;	genCmpEq
                           6090 ;	AOP_HL for _seldrum
                           6091 ; genCmpEq: left 1, right 1, result 0
   132F 21 71 01           6092 	ld	hl,#_seldrum
   1332 7E                 6093 	ld	a,(hl)
   1333 B7                 6094 	or	a,a
   1334 CA 4C 13           6095 	jp	z,00101$
   1337                    6096 00110$:
                           6097 ;	genCmpEq
                           6098 ;	AOP_HL for _seldrum
                           6099 ; genCmpEq: left 1, right 1, result 0
   1337 21 71 01           6100 	ld	hl,#_seldrum
   133A 7E                 6101 	ld	a,(hl)
   133B FE 01              6102 	cp	a,#0x01
   133D CA 5F 13           6103 	jp	z,00102$
   1340                    6104 00111$:
                           6105 ;	genCmpEq
                           6106 ;	AOP_HL for _seldrum
                           6107 ; genCmpEq: left 1, right 1, result 0
   1340 21 71 01           6108 	ld	hl,#_seldrum
   1343 7E                 6109 	ld	a,(hl)
   1344 FE 02              6110 	cp	a,#0x02
   1346 CA 72 13           6111 	jp	z,00103$
   1349                    6112 00112$:
                           6113 ;	genGoto
   1349 C3 82 13           6114 	jp	00104$
                           6115 ;	square.c 963
                           6116 ;	genLabel
   134C                    6117 00101$:
                           6118 ;	genAssign
                           6119 ;	AOP_HL for _delayA
                           6120 ;	AOP_HL for _cDelay
   134C 21 21 01           6121 	ld	hl,#_delayA
   134F 7E                 6122 	ld	a,(hl)
   1350 21 33 01           6123 	ld	hl,#_cDelay
   1353 77                 6124 	ld	(hl),a
                           6125 ;	square.c 964
                           6126 ;	genAssign
                           6127 ;	AOP_HL for _offStepA
                           6128 ;	AOP_HL for _cOffStep
   1354 21 30 01           6129 	ld	hl,#_offStepA
   1357 7E                 6130 	ld	a,(hl)
   1358 21 34 01           6131 	ld	hl,#_cOffStep
   135B 77                 6132 	ld	(hl),a
                           6133 ;	square.c 965
                           6134 ;	genGoto
   135C C3 82 13           6135 	jp	00104$
                           6136 ;	square.c 967
                           6137 ;	genLabel
   135F                    6138 00102$:
                           6139 ;	genAssign
                           6140 ;	AOP_HL for _delayB
                           6141 ;	AOP_HL for _cDelay
   135F 21 22 01           6142 	ld	hl,#_delayB
   1362 7E                 6143 	ld	a,(hl)
   1363 21 33 01           6144 	ld	hl,#_cDelay
   1366 77                 6145 	ld	(hl),a
                           6146 ;	square.c 968
                           6147 ;	genAssign
                           6148 ;	AOP_HL for _offStepB
                           6149 ;	AOP_HL for _cOffStep
   1367 21 31 01           6150 	ld	hl,#_offStepB
   136A 7E                 6151 	ld	a,(hl)
   136B 21 34 01           6152 	ld	hl,#_cOffStep
   136E 77                 6153 	ld	(hl),a
                           6154 ;	square.c 969
                           6155 ;	genGoto
   136F C3 82 13           6156 	jp	00104$
                           6157 ;	square.c 971
                           6158 ;	genLabel
   1372                    6159 00103$:
                           6160 ;	genAssign
                           6161 ;	AOP_HL for _delayC
                           6162 ;	AOP_HL for _cDelay
   1372 21 23 01           6163 	ld	hl,#_delayC
   1375 7E                 6164 	ld	a,(hl)
   1376 21 33 01           6165 	ld	hl,#_cDelay
   1379 77                 6166 	ld	(hl),a
                           6167 ;	square.c 972
                           6168 ;	genAssign
                           6169 ;	AOP_HL for _offStepC
                           6170 ;	AOP_HL for _cOffStep
   137A 21 32 01           6171 	ld	hl,#_offStepC
   137D 7E                 6172 	ld	a,(hl)
   137E 21 34 01           6173 	ld	hl,#_cOffStep
   1381 77                 6174 	ld	(hl),a
                           6175 ;	square.c 974
                           6176 ;	genLabel
   1382                    6177 00104$:
                           6178 ;	square.c 975
                           6179 ;	genIpush
                           6180 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1382 21 05 0A           6181 	ld	hl,#0x0A05
   1385 E5                 6182 	push	hl
                           6183 ;	genCall
   1386 CD 00 00           6184 	call	_set_sprite_tile
   1389 E8 02              6185 	lda	sp,2(sp)
                           6186 ;	square.c 976
                           6187 ;	genPlus
                           6188 ;	AOP_HL for _cDelay
                           6189 ;	genPlusIncr
                           6190 ;	Can't optimise plus by inc, falling back to the normal way
   138B 21 33 01           6191 	ld	hl,#_cDelay
   138E 7E                 6192 	ld	a,(hl)
   138F C6 08              6193 	add	a,#0x08
   1391 4F                 6194 	ld	c,a
                           6195 ;	genIpush
                           6196 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1392 3E 98              6197 	ld	a,#0x98
   1394 F5                 6198 	push	af
   1395 33                 6199 	inc	sp
                           6200 ;	genIpush
   1396 79                 6201 	ld	a,c
   1397 F5                 6202 	push	af
   1398 33                 6203 	inc	sp
                           6204 ;	genIpush
   1399 3E 05              6205 	ld	a,#0x05
   139B F5                 6206 	push	af
   139C 33                 6207 	inc	sp
                           6208 ;	genCall
   139D CD 00 00           6209 	call	_move_sprite
   13A0 E8 03              6210 	lda	sp,3(sp)
                           6211 ;	square.c 977
                           6212 ;	genIpush
                           6213 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13A2 21 04 08           6214 	ld	hl,#0x0804
   13A5 E5                 6215 	push	hl
                           6216 ;	genCall
   13A6 CD 00 00           6217 	call	_set_sprite_tile
   13A9 E8 02              6218 	lda	sp,2(sp)
                           6219 ;	square.c 978
                           6220 ;	genPlus
                           6221 ;	AOP_HL for _cOffStep
                           6222 ;	Can't optimise plus by inc, falling back to the normal way
   13AB 3E D0              6223 	ld	a,#<_dXlut
   13AD 21 34 01           6224 	ld	hl,#_cOffStep
   13B0 86                 6225 	add	a,(hl)
   13B1 4F                 6226 	ld	c,a
   13B2 3E 00              6227 	ld	a,#>_dXlut
   13B4 CE 00              6228 	adc	a,#0x00
   13B6 47                 6229 	ld	b,a
                           6230 ;	genPointerGet
   13B7 0A                 6231 	ld	a,(bc)
                           6232 ;	genIpush
                           6233 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13B8 4F                 6234 	ld	c,a
   13B9 F5                 6235 	push	af
   13BA 33                 6236 	inc	sp
                           6237 ;	genIpush
   13BB 21 04 08           6238 	ld	hl,#0x0804
   13BE E5                 6239 	push	hl
                           6240 ;	genCall
   13BF CD 00 00           6241 	call	_move_sprite
   13C2 E8 03              6242 	lda	sp,3(sp)
                           6243 ;	square.c 979
                           6244 ;	genCall
                           6245 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13C4 CD 00 00           6246 	call	_disable_interrupts
                           6247 ;	square.c 980
                           6248 ;	genCall
                           6249 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13C7 CD 95 00           6250 	call	_fillDrumA
                           6251 ;	square.c 981
                           6252 ;	genCall
                           6253 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13CA CD 64 02           6254 	call	_fillDrumB
                           6255 ;	square.c 982
                           6256 ;	genCall
                           6257 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13CD CD 33 04           6258 	call	_fillDrumC
                           6259 ;	square.c 983
                           6260 ;	genAssign
                           6261 ;	AOP_HL for _clkA
   13D0 21 29 01           6262 	ld	hl,#_clkA
   13D3 36 00              6263 	ld	(hl),#0x00
                           6264 ;	square.c 984
                           6265 ;	genAssign
                           6266 ;	AOP_HL for _clkB
   13D5 21 2C 01           6267 	ld	hl,#_clkB
   13D8 36 00              6268 	ld	(hl),#0x00
                           6269 ;	square.c 985
                           6270 ;	genAssign
                           6271 ;	AOP_HL for _clkC
   13DA 21 2F 01           6272 	ld	hl,#_clkC
   13DD 36 00              6273 	ld	(hl),#0x00
                           6274 ;	square.c 986
                           6275 ;	genCall
                           6276 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13DF CD 00 00           6277 	call	_enable_interrupts
                           6278 ;	square.c 987
                           6279 ;	genCall
                           6280 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13E2 CD 00 00           6281 	call	_wait_vbl_done
                           6282 ;	genLabel
   13E5                    6283 00105$:
                           6284 ;	genEndFunction
   13E5 E8 02              6285 	lda	sp,2(sp)
   13E7 C9                 6286 	ret
   13E8                    6287 ___loadC_end:
                           6288 ;	square.c 990
                           6289 ;	genLabel
                           6290 ;	genFunction
                           6291 ;	---------------------------------
                           6292 ; Function loadD
                           6293 ; ---------------------------------
   13E8                    6294 ___loadD_start:
   13E8                    6295 _loadD:
   13E8 E8 FE              6296 	lda	sp,-2(sp)
                           6297 ;	square.c 992
                           6298 ;	genAssign
                           6299 ;	AOP_HL for _storeDPA
                           6300 ;	AOP_HL for _numberOfPulsesA
   13EA 21 5A 01           6301 	ld	hl,#_storeDPA
   13ED 7E                 6302 	ld	a,(hl)
   13EE 21 27 01           6303 	ld	hl,#_numberOfPulsesA
   13F1 77                 6304 	ld	(hl),a
                           6305 ;	square.c 993
                           6306 ;	genAssign
                           6307 ;	AOP_HL for _storeBSA
                           6308 ;	AOP_HL for _totalStepsA
   13F2 21 43 01           6309 	ld	hl,#_storeBSA
   13F5 7E                 6310 	ld	a,(hl)
   13F6 21 28 01           6311 	ld	hl,#_totalStepsA
   13F9 77                 6312 	ld	(hl),a
                           6313 ;	square.c 994
                           6314 ;	genAssign
                           6315 ;	AOP_HL for _storeDPB
                           6316 ;	AOP_HL for _numberOfPulsesB
   13FA 21 5C 01           6317 	ld	hl,#_storeDPB
   13FD 7E                 6318 	ld	a,(hl)
   13FE 21 2A 01           6319 	ld	hl,#_numberOfPulsesB
   1401 77                 6320 	ld	(hl),a
                           6321 ;	square.c 995
                           6322 ;	genAssign
                           6323 ;	AOP_HL for _storeBSB
                           6324 ;	AOP_HL for _totalStepsB
   1402 21 45 01           6325 	ld	hl,#_storeBSB
   1405 7E                 6326 	ld	a,(hl)
   1406 21 2B 01           6327 	ld	hl,#_totalStepsB
   1409 77                 6328 	ld	(hl),a
                           6329 ;	square.c 996
                           6330 ;	genAssign
                           6331 ;	AOP_HL for _storeDPC
                           6332 ;	AOP_HL for _numberOfPulsesC
   140A 21 5E 01           6333 	ld	hl,#_storeDPC
   140D 7E                 6334 	ld	a,(hl)
   140E 21 2D 01           6335 	ld	hl,#_numberOfPulsesC
   1411 77                 6336 	ld	(hl),a
                           6337 ;	square.c 997
                           6338 ;	genAssign
                           6339 ;	AOP_HL for _storeDSC
                           6340 ;	AOP_HL for _totalStepsC
   1412 21 5F 01           6341 	ld	hl,#_storeDSC
   1415 7E                 6342 	ld	a,(hl)
   1416 21 2E 01           6343 	ld	hl,#_totalStepsC
   1419 77                 6344 	ld	(hl),a
                           6345 ;	square.c 998
                           6346 ;	genAssign
                           6347 ;	AOP_HL for _storeDOA
                           6348 ;	AOP_HL for _offStepA
   141A 21 60 01           6349 	ld	hl,#_storeDOA
   141D 7E                 6350 	ld	a,(hl)
   141E 21 30 01           6351 	ld	hl,#_offStepA
   1421 77                 6352 	ld	(hl),a
                           6353 ;	square.c 999
                           6354 ;	genAssign
                           6355 ;	AOP_HL for _storeDOB
                           6356 ;	AOP_HL for _offStepB
   1422 21 61 01           6357 	ld	hl,#_storeDOB
   1425 7E                 6358 	ld	a,(hl)
   1426 21 31 01           6359 	ld	hl,#_offStepB
   1429 77                 6360 	ld	(hl),a
                           6361 ;	square.c 1000
                           6362 ;	genAssign
                           6363 ;	AOP_HL for _storeDOC
                           6364 ;	AOP_HL for _offStepC
   142A 21 62 01           6365 	ld	hl,#_storeDOC
   142D 7E                 6366 	ld	a,(hl)
   142E 21 32 01           6367 	ld	hl,#_offStepC
   1431 77                 6368 	ld	(hl),a
                           6369 ;	square.c 1001
                           6370 ;	genAssign
                           6371 ;	AOP_HL for _storeDDA
                           6372 ;	AOP_HL for _delayA
   1432 21 63 01           6373 	ld	hl,#_storeDDA
   1435 7E                 6374 	ld	a,(hl)
   1436 21 21 01           6375 	ld	hl,#_delayA
   1439 77                 6376 	ld	(hl),a
                           6377 ;	square.c 1002
                           6378 ;	genAssign
                           6379 ;	AOP_HL for _storeDDB
                           6380 ;	AOP_HL for _delayB
   143A 21 64 01           6381 	ld	hl,#_storeDDB
   143D 7E                 6382 	ld	a,(hl)
   143E 21 22 01           6383 	ld	hl,#_delayB
   1441 77                 6384 	ld	(hl),a
                           6385 ;	square.c 1003
                           6386 ;	genAssign
                           6387 ;	AOP_HL for _storeDDC
                           6388 ;	AOP_HL for _delayC
   1442 21 65 01           6389 	ld	hl,#_storeDDC
   1445 7E                 6390 	ld	a,(hl)
   1446 21 23 01           6391 	ld	hl,#_delayC
   1449 77                 6392 	ld	(hl),a
                           6393 ;	square.c 1004
                           6394 ;	genIpush
                           6395 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   144A 21 00 00           6396 	ld	hl,#0x0000
   144D E5                 6397 	push	hl
                           6398 ;	genCall
   144E CD 00 00           6399 	call	_set_sprite_tile
   1451 E8 02              6400 	lda	sp,2(sp)
                           6401 ;	square.c 1005
                           6402 ;	genMinus
                           6403 ;	AOP_HL for _totalStepsA
   1453 21 28 01           6404 	ld	hl,#_totalStepsA
   1456 7E                 6405 	ld	a,(hl)
   1457 C6 FF              6406 	add	a,#0xFF
   1459 4F                 6407 	ld	c,a
                           6408 ;	genPlus
                           6409 ;	Can't optimise plus by inc, falling back to the normal way
   145A 3E D0              6410 	ld	a,#<_dXlut
   145C 81                 6411 	add	a,c
   145D 4F                 6412 	ld	c,a
   145E 3E 00              6413 	ld	a,#>_dXlut
   1460 CE 00              6414 	adc	a,#0x00
   1462 47                 6415 	ld	b,a
                           6416 ;	genPointerGet
   1463 0A                 6417 	ld	a,(bc)
   1464 4F                 6418 	ld	c,a
                           6419 ;	genMinus
                           6420 ;	AOP_HL for _numberOfPulsesA
   1465 21 27 01           6421 	ld	hl,#_numberOfPulsesA
   1468 7E                 6422 	ld	a,(hl)
   1469 C6 FF              6423 	add	a,#0xFF
   146B 47                 6424 	ld	b,a
                           6425 ;	genPlus
                           6426 ;	AOP_STK for _loadD_sloc0_1_0
                           6427 ;	Can't optimise plus by inc, falling back to the normal way
   146C 11 F0 00           6428 	ld	de,#_dYlut
   146F 68                 6429 	ld	l,b
   1470 26 00              6430 	ld	h,#0x00
   1472 19                 6431 	add	hl,de
   1473 7D                 6432 	ld	a,l
   1474 54                 6433 	ld	d,h
   1475 F8 00              6434 	lda	hl,0(sp)
                           6435 ;	genPointerGet
                           6436 ;	AOP_STK for _loadD_sloc0_1_0
   1477 22                 6437 	ld	(hl+),a
   1478 72                 6438 	ld	(hl),d
   1479 5F                 6439 	ld	e,a
   147A 1A                 6440 	ld	a,(de)
   147B 47                 6441 	ld	b,a
                           6442 ;	genIpush
                           6443 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   147C 79                 6444 	ld	a,c
   147D F5                 6445 	push	af
   147E 33                 6446 	inc	sp
                           6447 ;	genIpush
   147F 78                 6448 	ld	a,b
   1480 F5                 6449 	push	af
   1481 33                 6450 	inc	sp
                           6451 ;	genIpush
   1482 3E 00              6452 	ld	a,#0x00
   1484 F5                 6453 	push	af
   1485 33                 6454 	inc	sp
                           6455 ;	genCall
   1486 CD 00 00           6456 	call	_move_sprite
   1489 E8 03              6457 	lda	sp,3(sp)
                           6458 ;	square.c 1006
                           6459 ;	genIpush
                           6460 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   148B 21 01 02           6461 	ld	hl,#0x0201
   148E E5                 6462 	push	hl
                           6463 ;	genCall
   148F CD 00 00           6464 	call	_set_sprite_tile
   1492 E8 02              6465 	lda	sp,2(sp)
                           6466 ;	square.c 1007
                           6467 ;	genMinus
                           6468 ;	AOP_HL for _totalStepsB
   1494 21 2B 01           6469 	ld	hl,#_totalStepsB
   1497 7E                 6470 	ld	a,(hl)
   1498 C6 FF              6471 	add	a,#0xFF
   149A 4F                 6472 	ld	c,a
                           6473 ;	genPlus
                           6474 ;	Can't optimise plus by inc, falling back to the normal way
   149B 3E D0              6475 	ld	a,#<_dXlut
   149D 81                 6476 	add	a,c
   149E 4F                 6477 	ld	c,a
   149F 3E 00              6478 	ld	a,#>_dXlut
   14A1 CE 00              6479 	adc	a,#0x00
   14A3 47                 6480 	ld	b,a
                           6481 ;	genPointerGet
   14A4 0A                 6482 	ld	a,(bc)
   14A5 4F                 6483 	ld	c,a
                           6484 ;	genMinus
                           6485 ;	AOP_HL for _numberOfPulsesB
   14A6 21 2A 01           6486 	ld	hl,#_numberOfPulsesB
   14A9 7E                 6487 	ld	a,(hl)
   14AA C6 FF              6488 	add	a,#0xFF
   14AC 47                 6489 	ld	b,a
                           6490 ;	genPlus
                           6491 ;	AOP_STK for _loadD_sloc0_1_0
                           6492 ;	Can't optimise plus by inc, falling back to the normal way
   14AD 11 F0 00           6493 	ld	de,#_dYlut
   14B0 68                 6494 	ld	l,b
   14B1 26 00              6495 	ld	h,#0x00
   14B3 19                 6496 	add	hl,de
   14B4 7D                 6497 	ld	a,l
   14B5 54                 6498 	ld	d,h
   14B6 F8 00              6499 	lda	hl,0(sp)
                           6500 ;	genPointerGet
                           6501 ;	AOP_STK for _loadD_sloc0_1_0
   14B8 22                 6502 	ld	(hl+),a
   14B9 72                 6503 	ld	(hl),d
   14BA 5F                 6504 	ld	e,a
   14BB 1A                 6505 	ld	a,(de)
   14BC 47                 6506 	ld	b,a
                           6507 ;	genIpush
                           6508 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14BD 79                 6509 	ld	a,c
   14BE F5                 6510 	push	af
   14BF 33                 6511 	inc	sp
                           6512 ;	genIpush
   14C0 78                 6513 	ld	a,b
   14C1 F5                 6514 	push	af
   14C2 33                 6515 	inc	sp
                           6516 ;	genIpush
   14C3 3E 01              6517 	ld	a,#0x01
   14C5 F5                 6518 	push	af
   14C6 33                 6519 	inc	sp
                           6520 ;	genCall
   14C7 CD 00 00           6521 	call	_move_sprite
   14CA E8 03              6522 	lda	sp,3(sp)
                           6523 ;	square.c 1008
                           6524 ;	genIpush
                           6525 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14CC 21 02 04           6526 	ld	hl,#0x0402
   14CF E5                 6527 	push	hl
                           6528 ;	genCall
   14D0 CD 00 00           6529 	call	_set_sprite_tile
   14D3 E8 02              6530 	lda	sp,2(sp)
                           6531 ;	square.c 1009
                           6532 ;	genMinus
                           6533 ;	AOP_HL for _totalStepsC
   14D5 21 2E 01           6534 	ld	hl,#_totalStepsC
   14D8 7E                 6535 	ld	a,(hl)
   14D9 C6 FF              6536 	add	a,#0xFF
   14DB 4F                 6537 	ld	c,a
                           6538 ;	genPlus
                           6539 ;	Can't optimise plus by inc, falling back to the normal way
   14DC 3E D0              6540 	ld	a,#<_dXlut
   14DE 81                 6541 	add	a,c
   14DF 4F                 6542 	ld	c,a
   14E0 3E 00              6543 	ld	a,#>_dXlut
   14E2 CE 00              6544 	adc	a,#0x00
   14E4 47                 6545 	ld	b,a
                           6546 ;	genPointerGet
   14E5 0A                 6547 	ld	a,(bc)
   14E6 4F                 6548 	ld	c,a
                           6549 ;	genMinus
                           6550 ;	AOP_HL for _numberOfPulsesC
   14E7 21 2D 01           6551 	ld	hl,#_numberOfPulsesC
   14EA 7E                 6552 	ld	a,(hl)
   14EB C6 FF              6553 	add	a,#0xFF
   14ED 47                 6554 	ld	b,a
                           6555 ;	genPlus
                           6556 ;	AOP_STK for _loadD_sloc0_1_0
                           6557 ;	Can't optimise plus by inc, falling back to the normal way
   14EE 11 F0 00           6558 	ld	de,#_dYlut
   14F1 68                 6559 	ld	l,b
   14F2 26 00              6560 	ld	h,#0x00
   14F4 19                 6561 	add	hl,de
   14F5 7D                 6562 	ld	a,l
   14F6 54                 6563 	ld	d,h
   14F7 F8 00              6564 	lda	hl,0(sp)
                           6565 ;	genPointerGet
                           6566 ;	AOP_STK for _loadD_sloc0_1_0
   14F9 22                 6567 	ld	(hl+),a
   14FA 72                 6568 	ld	(hl),d
   14FB 5F                 6569 	ld	e,a
   14FC 1A                 6570 	ld	a,(de)
   14FD 47                 6571 	ld	b,a
                           6572 ;	genIpush
                           6573 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14FE 79                 6574 	ld	a,c
   14FF F5                 6575 	push	af
   1500 33                 6576 	inc	sp
                           6577 ;	genIpush
   1501 78                 6578 	ld	a,b
   1502 F5                 6579 	push	af
   1503 33                 6580 	inc	sp
                           6581 ;	genIpush
   1504 3E 02              6582 	ld	a,#0x02
   1506 F5                 6583 	push	af
   1507 33                 6584 	inc	sp
                           6585 ;	genCall
   1508 CD 00 00           6586 	call	_move_sprite
   150B E8 03              6587 	lda	sp,3(sp)
                           6588 ;	square.c 1010
                           6589 ;	genAssign
                           6590 ;	AOP_HL for _cDelay
   150D 21 33 01           6591 	ld	hl,#_cDelay
   1510 36 00              6592 	ld	(hl),#0x00
                           6593 ;	square.c 1011
                           6594 ;	genAssign
                           6595 ;	AOP_HL for _cOffStep
   1512 21 34 01           6596 	ld	hl,#_cOffStep
   1515 36 00              6597 	ld	(hl),#0x00
                           6598 ;	square.c 1012
                           6599 ;	genCmpEq
                           6600 ;	AOP_HL for _seldrum
                           6601 ; genCmpEq: left 1, right 1, result 0
   1517 21 71 01           6602 	ld	hl,#_seldrum
   151A 7E                 6603 	ld	a,(hl)
   151B B7                 6604 	or	a,a
   151C CA 34 15           6605 	jp	z,00101$
   151F                    6606 00110$:
                           6607 ;	genCmpEq
                           6608 ;	AOP_HL for _seldrum
                           6609 ; genCmpEq: left 1, right 1, result 0
   151F 21 71 01           6610 	ld	hl,#_seldrum
   1522 7E                 6611 	ld	a,(hl)
   1523 FE 01              6612 	cp	a,#0x01
   1525 CA 47 15           6613 	jp	z,00102$
   1528                    6614 00111$:
                           6615 ;	genCmpEq
                           6616 ;	AOP_HL for _seldrum
                           6617 ; genCmpEq: left 1, right 1, result 0
   1528 21 71 01           6618 	ld	hl,#_seldrum
   152B 7E                 6619 	ld	a,(hl)
   152C FE 02              6620 	cp	a,#0x02
   152E CA 5A 15           6621 	jp	z,00103$
   1531                    6622 00112$:
                           6623 ;	genGoto
   1531 C3 6A 15           6624 	jp	00104$
                           6625 ;	square.c 1015
                           6626 ;	genLabel
   1534                    6627 00101$:
                           6628 ;	genAssign
                           6629 ;	AOP_HL for _delayA
                           6630 ;	AOP_HL for _cDelay
   1534 21 21 01           6631 	ld	hl,#_delayA
   1537 7E                 6632 	ld	a,(hl)
   1538 21 33 01           6633 	ld	hl,#_cDelay
   153B 77                 6634 	ld	(hl),a
                           6635 ;	square.c 1016
                           6636 ;	genAssign
                           6637 ;	AOP_HL for _offStepA
                           6638 ;	AOP_HL for _cOffStep
   153C 21 30 01           6639 	ld	hl,#_offStepA
   153F 7E                 6640 	ld	a,(hl)
   1540 21 34 01           6641 	ld	hl,#_cOffStep
   1543 77                 6642 	ld	(hl),a
                           6643 ;	square.c 1017
                           6644 ;	genGoto
   1544 C3 6A 15           6645 	jp	00104$
                           6646 ;	square.c 1019
                           6647 ;	genLabel
   1547                    6648 00102$:
                           6649 ;	genAssign
                           6650 ;	AOP_HL for _delayB
                           6651 ;	AOP_HL for _cDelay
   1547 21 22 01           6652 	ld	hl,#_delayB
   154A 7E                 6653 	ld	a,(hl)
   154B 21 33 01           6654 	ld	hl,#_cDelay
   154E 77                 6655 	ld	(hl),a
                           6656 ;	square.c 1020
                           6657 ;	genAssign
                           6658 ;	AOP_HL for _offStepB
                           6659 ;	AOP_HL for _cOffStep
   154F 21 31 01           6660 	ld	hl,#_offStepB
   1552 7E                 6661 	ld	a,(hl)
   1553 21 34 01           6662 	ld	hl,#_cOffStep
   1556 77                 6663 	ld	(hl),a
                           6664 ;	square.c 1021
                           6665 ;	genGoto
   1557 C3 6A 15           6666 	jp	00104$
                           6667 ;	square.c 1023
                           6668 ;	genLabel
   155A                    6669 00103$:
                           6670 ;	genAssign
                           6671 ;	AOP_HL for _delayC
                           6672 ;	AOP_HL for _cDelay
   155A 21 23 01           6673 	ld	hl,#_delayC
   155D 7E                 6674 	ld	a,(hl)
   155E 21 33 01           6675 	ld	hl,#_cDelay
   1561 77                 6676 	ld	(hl),a
                           6677 ;	square.c 1024
                           6678 ;	genAssign
                           6679 ;	AOP_HL for _offStepC
                           6680 ;	AOP_HL for _cOffStep
   1562 21 32 01           6681 	ld	hl,#_offStepC
   1565 7E                 6682 	ld	a,(hl)
   1566 21 34 01           6683 	ld	hl,#_cOffStep
   1569 77                 6684 	ld	(hl),a
                           6685 ;	square.c 1026
                           6686 ;	genLabel
   156A                    6687 00104$:
                           6688 ;	square.c 1027
                           6689 ;	genIpush
                           6690 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   156A 21 05 0A           6691 	ld	hl,#0x0A05
   156D E5                 6692 	push	hl
                           6693 ;	genCall
   156E CD 00 00           6694 	call	_set_sprite_tile
   1571 E8 02              6695 	lda	sp,2(sp)
                           6696 ;	square.c 1028
                           6697 ;	genPlus
                           6698 ;	AOP_HL for _cDelay
                           6699 ;	genPlusIncr
                           6700 ;	Can't optimise plus by inc, falling back to the normal way
   1573 21 33 01           6701 	ld	hl,#_cDelay
   1576 7E                 6702 	ld	a,(hl)
   1577 C6 08              6703 	add	a,#0x08
   1579 4F                 6704 	ld	c,a
                           6705 ;	genIpush
                           6706 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   157A 3E 98              6707 	ld	a,#0x98
   157C F5                 6708 	push	af
   157D 33                 6709 	inc	sp
                           6710 ;	genIpush
   157E 79                 6711 	ld	a,c
   157F F5                 6712 	push	af
   1580 33                 6713 	inc	sp
                           6714 ;	genIpush
   1581 3E 05              6715 	ld	a,#0x05
   1583 F5                 6716 	push	af
   1584 33                 6717 	inc	sp
                           6718 ;	genCall
   1585 CD 00 00           6719 	call	_move_sprite
   1588 E8 03              6720 	lda	sp,3(sp)
                           6721 ;	square.c 1029
                           6722 ;	genIpush
                           6723 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   158A 21 04 08           6724 	ld	hl,#0x0804
   158D E5                 6725 	push	hl
                           6726 ;	genCall
   158E CD 00 00           6727 	call	_set_sprite_tile
   1591 E8 02              6728 	lda	sp,2(sp)
                           6729 ;	square.c 1030
                           6730 ;	genPlus
                           6731 ;	AOP_HL for _cOffStep
                           6732 ;	Can't optimise plus by inc, falling back to the normal way
   1593 3E D0              6733 	ld	a,#<_dXlut
   1595 21 34 01           6734 	ld	hl,#_cOffStep
   1598 86                 6735 	add	a,(hl)
   1599 4F                 6736 	ld	c,a
   159A 3E 00              6737 	ld	a,#>_dXlut
   159C CE 00              6738 	adc	a,#0x00
   159E 47                 6739 	ld	b,a
                           6740 ;	genPointerGet
   159F 0A                 6741 	ld	a,(bc)
                           6742 ;	genIpush
                           6743 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15A0 4F                 6744 	ld	c,a
   15A1 F5                 6745 	push	af
   15A2 33                 6746 	inc	sp
                           6747 ;	genIpush
   15A3 21 04 08           6748 	ld	hl,#0x0804
   15A6 E5                 6749 	push	hl
                           6750 ;	genCall
   15A7 CD 00 00           6751 	call	_move_sprite
   15AA E8 03              6752 	lda	sp,3(sp)
                           6753 ;	square.c 1031
                           6754 ;	genCall
                           6755 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15AC CD 00 00           6756 	call	_disable_interrupts
                           6757 ;	square.c 1032
                           6758 ;	genCall
                           6759 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15AF CD 95 00           6760 	call	_fillDrumA
                           6761 ;	square.c 1033
                           6762 ;	genCall
                           6763 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15B2 CD 64 02           6764 	call	_fillDrumB
                           6765 ;	square.c 1034
                           6766 ;	genCall
                           6767 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15B5 CD 33 04           6768 	call	_fillDrumC
                           6769 ;	square.c 1035
                           6770 ;	genAssign
                           6771 ;	AOP_HL for _clkA
   15B8 21 29 01           6772 	ld	hl,#_clkA
   15BB 36 00              6773 	ld	(hl),#0x00
                           6774 ;	square.c 1036
                           6775 ;	genAssign
                           6776 ;	AOP_HL for _clkB
   15BD 21 2C 01           6777 	ld	hl,#_clkB
   15C0 36 00              6778 	ld	(hl),#0x00
                           6779 ;	square.c 1037
                           6780 ;	genAssign
                           6781 ;	AOP_HL for _clkC
   15C2 21 2F 01           6782 	ld	hl,#_clkC
   15C5 36 00              6783 	ld	(hl),#0x00
                           6784 ;	square.c 1038
                           6785 ;	genCall
                           6786 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15C7 CD 00 00           6787 	call	_enable_interrupts
                           6788 ;	square.c 1039
                           6789 ;	genCall
                           6790 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15CA CD 00 00           6791 	call	_wait_vbl_done
                           6792 ;	genLabel
   15CD                    6793 00105$:
                           6794 ;	genEndFunction
   15CD E8 02              6795 	lda	sp,2(sp)
   15CF C9                 6796 	ret
   15D0                    6797 ___loadD_end:
                           6798 ;	square.c 1043
                           6799 ;	genLabel
                           6800 ;	genFunction
                           6801 ;	---------------------------------
                           6802 ; Function savePattern
                           6803 ; ---------------------------------
   15D0                    6804 ___savePattern_start:
   15D0                    6805 _savePattern:
                           6806 	
                           6807 ;	square.c 1045
                           6808 ;	genAssign
   15D0 01 00 00           6809 	ld	bc,#0x0000
                           6810 ;	genAssign (pointer)
   15D3 3E 0A              6811 	ld	a,#0x0A
   15D5 02                 6812 	ld	(bc),a
                           6813 ;	square.c 1047
                           6814 ;	genCmpGt
                           6815 ;	AOP_HL for _currentSaveSlot
   15D6 3E 03              6816 	ld	a,#0x03
   15D8 21 35 01           6817 	ld	hl,#_currentSaveSlot
   15DB 96                 6818 	sub	a,(hl)
   15DC DA 7E 17           6819 	jp	c,00105$
                           6820 ;	genJumpTab
                           6821 ;	AOP_HL for _currentSaveSlot
   15DF 5E                 6822 	ld	e,(hl)
   15E0 16 00              6823 	ld	d,#0x00
   15E2 21 E9 15           6824 	ld	hl,#00109$
   15E5 19                 6825 	add	hl,de
   15E6 19                 6826 	add	hl,de
   15E7 19                 6827 	add	hl,de
   15E8 E9                 6828 	jp	(hl)
   15E9                    6829 00109$:
   15E9 C3 F5 15           6830 	jp	00101$
   15EC C3 58 16           6831 	jp	00102$
   15EF C3 BB 16           6832 	jp	00103$
   15F2 C3 1E 17           6833 	jp	00104$
                           6834 ;	square.c 1050
                           6835 ;	genLabel
   15F5                    6836 00101$:
                           6837 ;	genAssign
                           6838 ;	AOP_HL for _numberOfPulsesA
                           6839 ;	AOP_HL for _storeAPA
   15F5 21 27 01           6840 	ld	hl,#_numberOfPulsesA
   15F8 7E                 6841 	ld	a,(hl)
   15F9 21 36 01           6842 	ld	hl,#_storeAPA
   15FC 77                 6843 	ld	(hl),a
                           6844 ;	square.c 1051
                           6845 ;	genAssign
                           6846 ;	AOP_HL for _totalStepsA
                           6847 ;	AOP_HL for _storeASA
   15FD 21 28 01           6848 	ld	hl,#_totalStepsA
   1600 7E                 6849 	ld	a,(hl)
   1601 21 37 01           6850 	ld	hl,#_storeASA
   1604 77                 6851 	ld	(hl),a
                           6852 ;	square.c 1052
                           6853 ;	genAssign
                           6854 ;	AOP_HL for _numberOfPulsesB
                           6855 ;	AOP_HL for _storeAPB
   1605 21 2A 01           6856 	ld	hl,#_numberOfPulsesB
   1608 7E                 6857 	ld	a,(hl)
   1609 21 38 01           6858 	ld	hl,#_storeAPB
   160C 77                 6859 	ld	(hl),a
                           6860 ;	square.c 1053
                           6861 ;	genAssign
                           6862 ;	AOP_HL for _totalStepsB
                           6863 ;	AOP_HL for _storeASB
   160D 21 2B 01           6864 	ld	hl,#_totalStepsB
   1610 7E                 6865 	ld	a,(hl)
   1611 21 39 01           6866 	ld	hl,#_storeASB
   1614 77                 6867 	ld	(hl),a
                           6868 ;	square.c 1054
                           6869 ;	genAssign
                           6870 ;	AOP_HL for _numberOfPulsesC
                           6871 ;	AOP_HL for _storeAPC
   1615 21 2D 01           6872 	ld	hl,#_numberOfPulsesC
   1618 7E                 6873 	ld	a,(hl)
   1619 21 3A 01           6874 	ld	hl,#_storeAPC
   161C 77                 6875 	ld	(hl),a
                           6876 ;	square.c 1055
                           6877 ;	genAssign
                           6878 ;	AOP_HL for _totalStepsC
                           6879 ;	AOP_HL for _storeASC
   161D 21 2E 01           6880 	ld	hl,#_totalStepsC
   1620 7E                 6881 	ld	a,(hl)
   1621 21 3B 01           6882 	ld	hl,#_storeASC
   1624 77                 6883 	ld	(hl),a
                           6884 ;	square.c 1056
                           6885 ;	genAssign
                           6886 ;	AOP_HL for _offStepA
                           6887 ;	AOP_HL for _storeAOA
   1625 21 30 01           6888 	ld	hl,#_offStepA
   1628 7E                 6889 	ld	a,(hl)
   1629 21 3C 01           6890 	ld	hl,#_storeAOA
   162C 77                 6891 	ld	(hl),a
                           6892 ;	square.c 1057
                           6893 ;	genAssign
                           6894 ;	AOP_HL for _offStepB
                           6895 ;	AOP_HL for _storeAOB
   162D 21 31 01           6896 	ld	hl,#_offStepB
   1630 7E                 6897 	ld	a,(hl)
   1631 21 3D 01           6898 	ld	hl,#_storeAOB
   1634 77                 6899 	ld	(hl),a
                           6900 ;	square.c 1058
                           6901 ;	genAssign
                           6902 ;	AOP_HL for _offStepC
                           6903 ;	AOP_HL for _storeAOC
   1635 21 32 01           6904 	ld	hl,#_offStepC
   1638 7E                 6905 	ld	a,(hl)
   1639 21 3E 01           6906 	ld	hl,#_storeAOC
   163C 77                 6907 	ld	(hl),a
                           6908 ;	square.c 1059
                           6909 ;	genAssign
                           6910 ;	AOP_HL for _delayA
                           6911 ;	AOP_HL for _storeADA
   163D 21 21 01           6912 	ld	hl,#_delayA
   1640 7E                 6913 	ld	a,(hl)
   1641 21 3F 01           6914 	ld	hl,#_storeADA
   1644 77                 6915 	ld	(hl),a
                           6916 ;	square.c 1060
                           6917 ;	genAssign
                           6918 ;	AOP_HL for _delayB
                           6919 ;	AOP_HL for _storeADB
   1645 21 22 01           6920 	ld	hl,#_delayB
   1648 7E                 6921 	ld	a,(hl)
   1649 21 40 01           6922 	ld	hl,#_storeADB
   164C 77                 6923 	ld	(hl),a
                           6924 ;	square.c 1061
                           6925 ;	genAssign
                           6926 ;	AOP_HL for _delayC
                           6927 ;	AOP_HL for _storeADC
   164D 21 23 01           6928 	ld	hl,#_delayC
   1650 7E                 6929 	ld	a,(hl)
   1651 21 41 01           6930 	ld	hl,#_storeADC
   1654 77                 6931 	ld	(hl),a
                           6932 ;	square.c 1062
                           6933 ;	genGoto
   1655 C3 7E 17           6934 	jp	00105$
                           6935 ;	square.c 1064
                           6936 ;	genLabel
   1658                    6937 00102$:
                           6938 ;	genAssign
                           6939 ;	AOP_HL for _numberOfPulsesA
                           6940 ;	AOP_HL for _storeBPA
   1658 21 27 01           6941 	ld	hl,#_numberOfPulsesA
   165B 7E                 6942 	ld	a,(hl)
   165C 21 42 01           6943 	ld	hl,#_storeBPA
   165F 77                 6944 	ld	(hl),a
                           6945 ;	square.c 1065
                           6946 ;	genAssign
                           6947 ;	AOP_HL for _totalStepsA
                           6948 ;	AOP_HL for _storeBSA
   1660 21 28 01           6949 	ld	hl,#_totalStepsA
   1663 7E                 6950 	ld	a,(hl)
   1664 21 43 01           6951 	ld	hl,#_storeBSA
   1667 77                 6952 	ld	(hl),a
                           6953 ;	square.c 1066
                           6954 ;	genAssign
                           6955 ;	AOP_HL for _numberOfPulsesB
                           6956 ;	AOP_HL for _storeBPB
   1668 21 2A 01           6957 	ld	hl,#_numberOfPulsesB
   166B 7E                 6958 	ld	a,(hl)
   166C 21 44 01           6959 	ld	hl,#_storeBPB
   166F 77                 6960 	ld	(hl),a
                           6961 ;	square.c 1067
                           6962 ;	genAssign
                           6963 ;	AOP_HL for _totalStepsB
                           6964 ;	AOP_HL for _storeBSB
   1670 21 2B 01           6965 	ld	hl,#_totalStepsB
   1673 7E                 6966 	ld	a,(hl)
   1674 21 45 01           6967 	ld	hl,#_storeBSB
   1677 77                 6968 	ld	(hl),a
                           6969 ;	square.c 1068
                           6970 ;	genAssign
                           6971 ;	AOP_HL for _numberOfPulsesC
                           6972 ;	AOP_HL for _storeBPC
   1678 21 2D 01           6973 	ld	hl,#_numberOfPulsesC
   167B 7E                 6974 	ld	a,(hl)
   167C 21 46 01           6975 	ld	hl,#_storeBPC
   167F 77                 6976 	ld	(hl),a
                           6977 ;	square.c 1069
                           6978 ;	genAssign
                           6979 ;	AOP_HL for _totalStepsC
                           6980 ;	AOP_HL for _storeBSC
   1680 21 2E 01           6981 	ld	hl,#_totalStepsC
   1683 7E                 6982 	ld	a,(hl)
   1684 21 47 01           6983 	ld	hl,#_storeBSC
   1687 77                 6984 	ld	(hl),a
                           6985 ;	square.c 1070
                           6986 ;	genAssign
                           6987 ;	AOP_HL for _offStepA
                           6988 ;	AOP_HL for _storeBOA
   1688 21 30 01           6989 	ld	hl,#_offStepA
   168B 7E                 6990 	ld	a,(hl)
   168C 21 48 01           6991 	ld	hl,#_storeBOA
   168F 77                 6992 	ld	(hl),a
                           6993 ;	square.c 1071
                           6994 ;	genAssign
                           6995 ;	AOP_HL for _offStepB
                           6996 ;	AOP_HL for _storeBOB
   1690 21 31 01           6997 	ld	hl,#_offStepB
   1693 7E                 6998 	ld	a,(hl)
   1694 21 49 01           6999 	ld	hl,#_storeBOB
   1697 77                 7000 	ld	(hl),a
                           7001 ;	square.c 1072
                           7002 ;	genAssign
                           7003 ;	AOP_HL for _offStepC
                           7004 ;	AOP_HL for _storeBOC
   1698 21 32 01           7005 	ld	hl,#_offStepC
   169B 7E                 7006 	ld	a,(hl)
   169C 21 4A 01           7007 	ld	hl,#_storeBOC
   169F 77                 7008 	ld	(hl),a
                           7009 ;	square.c 1073
                           7010 ;	genAssign
                           7011 ;	AOP_HL for _delayA
                           7012 ;	AOP_HL for _storeBDA
   16A0 21 21 01           7013 	ld	hl,#_delayA
   16A3 7E                 7014 	ld	a,(hl)
   16A4 21 4B 01           7015 	ld	hl,#_storeBDA
   16A7 77                 7016 	ld	(hl),a
                           7017 ;	square.c 1074
                           7018 ;	genAssign
                           7019 ;	AOP_HL for _delayB
                           7020 ;	AOP_HL for _storeBDB
   16A8 21 22 01           7021 	ld	hl,#_delayB
   16AB 7E                 7022 	ld	a,(hl)
   16AC 21 4C 01           7023 	ld	hl,#_storeBDB
   16AF 77                 7024 	ld	(hl),a
                           7025 ;	square.c 1075
                           7026 ;	genAssign
                           7027 ;	AOP_HL for _delayC
                           7028 ;	AOP_HL for _storeBDC
   16B0 21 23 01           7029 	ld	hl,#_delayC
   16B3 7E                 7030 	ld	a,(hl)
   16B4 21 4D 01           7031 	ld	hl,#_storeBDC
   16B7 77                 7032 	ld	(hl),a
                           7033 ;	square.c 1076
                           7034 ;	genGoto
   16B8 C3 7E 17           7035 	jp	00105$
                           7036 ;	square.c 1079
                           7037 ;	genLabel
   16BB                    7038 00103$:
                           7039 ;	genAssign
                           7040 ;	AOP_HL for _numberOfPulsesA
                           7041 ;	AOP_HL for _storeCPA
   16BB 21 27 01           7042 	ld	hl,#_numberOfPulsesA
   16BE 7E                 7043 	ld	a,(hl)
   16BF 21 4E 01           7044 	ld	hl,#_storeCPA
   16C2 77                 7045 	ld	(hl),a
                           7046 ;	square.c 1080
                           7047 ;	genAssign
                           7048 ;	AOP_HL for _totalStepsA
                           7049 ;	AOP_HL for _storeCSA
   16C3 21 28 01           7050 	ld	hl,#_totalStepsA
   16C6 7E                 7051 	ld	a,(hl)
   16C7 21 4F 01           7052 	ld	hl,#_storeCSA
   16CA 77                 7053 	ld	(hl),a
                           7054 ;	square.c 1081
                           7055 ;	genAssign
                           7056 ;	AOP_HL for _numberOfPulsesB
                           7057 ;	AOP_HL for _storeCPB
   16CB 21 2A 01           7058 	ld	hl,#_numberOfPulsesB
   16CE 7E                 7059 	ld	a,(hl)
   16CF 21 50 01           7060 	ld	hl,#_storeCPB
   16D2 77                 7061 	ld	(hl),a
                           7062 ;	square.c 1082
                           7063 ;	genAssign
                           7064 ;	AOP_HL for _totalStepsB
                           7065 ;	AOP_HL for _storeCSB
   16D3 21 2B 01           7066 	ld	hl,#_totalStepsB
   16D6 7E                 7067 	ld	a,(hl)
   16D7 21 51 01           7068 	ld	hl,#_storeCSB
   16DA 77                 7069 	ld	(hl),a
                           7070 ;	square.c 1083
                           7071 ;	genAssign
                           7072 ;	AOP_HL for _numberOfPulsesC
                           7073 ;	AOP_HL for _storeCPC
   16DB 21 2D 01           7074 	ld	hl,#_numberOfPulsesC
   16DE 7E                 7075 	ld	a,(hl)
   16DF 21 52 01           7076 	ld	hl,#_storeCPC
   16E2 77                 7077 	ld	(hl),a
                           7078 ;	square.c 1084
                           7079 ;	genAssign
                           7080 ;	AOP_HL for _totalStepsC
                           7081 ;	AOP_HL for _storeCSC
   16E3 21 2E 01           7082 	ld	hl,#_totalStepsC
   16E6 7E                 7083 	ld	a,(hl)
   16E7 21 53 01           7084 	ld	hl,#_storeCSC
   16EA 77                 7085 	ld	(hl),a
                           7086 ;	square.c 1085
                           7087 ;	genAssign
                           7088 ;	AOP_HL for _offStepA
                           7089 ;	AOP_HL for _storeCOA
   16EB 21 30 01           7090 	ld	hl,#_offStepA
   16EE 7E                 7091 	ld	a,(hl)
   16EF 21 54 01           7092 	ld	hl,#_storeCOA
   16F2 77                 7093 	ld	(hl),a
                           7094 ;	square.c 1086
                           7095 ;	genAssign
                           7096 ;	AOP_HL for _offStepB
                           7097 ;	AOP_HL for _storeCOB
   16F3 21 31 01           7098 	ld	hl,#_offStepB
   16F6 7E                 7099 	ld	a,(hl)
   16F7 21 55 01           7100 	ld	hl,#_storeCOB
   16FA 77                 7101 	ld	(hl),a
                           7102 ;	square.c 1087
                           7103 ;	genAssign
                           7104 ;	AOP_HL for _offStepC
                           7105 ;	AOP_HL for _storeCOC
   16FB 21 32 01           7106 	ld	hl,#_offStepC
   16FE 7E                 7107 	ld	a,(hl)
   16FF 21 56 01           7108 	ld	hl,#_storeCOC
   1702 77                 7109 	ld	(hl),a
                           7110 ;	square.c 1088
                           7111 ;	genAssign
                           7112 ;	AOP_HL for _delayA
                           7113 ;	AOP_HL for _storeCDA
   1703 21 21 01           7114 	ld	hl,#_delayA
   1706 7E                 7115 	ld	a,(hl)
   1707 21 57 01           7116 	ld	hl,#_storeCDA
   170A 77                 7117 	ld	(hl),a
                           7118 ;	square.c 1089
                           7119 ;	genAssign
                           7120 ;	AOP_HL for _delayB
                           7121 ;	AOP_HL for _storeCDB
   170B 21 22 01           7122 	ld	hl,#_delayB
   170E 7E                 7123 	ld	a,(hl)
   170F 21 58 01           7124 	ld	hl,#_storeCDB
   1712 77                 7125 	ld	(hl),a
                           7126 ;	square.c 1090
                           7127 ;	genAssign
                           7128 ;	AOP_HL for _delayC
                           7129 ;	AOP_HL for _storeCDC
   1713 21 23 01           7130 	ld	hl,#_delayC
   1716 7E                 7131 	ld	a,(hl)
   1717 21 59 01           7132 	ld	hl,#_storeCDC
   171A 77                 7133 	ld	(hl),a
                           7134 ;	square.c 1091
                           7135 ;	genGoto
   171B C3 7E 17           7136 	jp	00105$
                           7137 ;	square.c 1093
                           7138 ;	genLabel
   171E                    7139 00104$:
                           7140 ;	genAssign
                           7141 ;	AOP_HL for _numberOfPulsesA
                           7142 ;	AOP_HL for _storeDPA
   171E 21 27 01           7143 	ld	hl,#_numberOfPulsesA
   1721 7E                 7144 	ld	a,(hl)
   1722 21 5A 01           7145 	ld	hl,#_storeDPA
   1725 77                 7146 	ld	(hl),a
                           7147 ;	square.c 1094
                           7148 ;	genAssign
                           7149 ;	AOP_HL for _totalStepsA
                           7150 ;	AOP_HL for _storeDSA
   1726 21 28 01           7151 	ld	hl,#_totalStepsA
   1729 7E                 7152 	ld	a,(hl)
   172A 21 5B 01           7153 	ld	hl,#_storeDSA
   172D 77                 7154 	ld	(hl),a
                           7155 ;	square.c 1095
                           7156 ;	genAssign
                           7157 ;	AOP_HL for _numberOfPulsesB
                           7158 ;	AOP_HL for _storeDPB
   172E 21 2A 01           7159 	ld	hl,#_numberOfPulsesB
   1731 7E                 7160 	ld	a,(hl)
   1732 21 5C 01           7161 	ld	hl,#_storeDPB
   1735 77                 7162 	ld	(hl),a
                           7163 ;	square.c 1096
                           7164 ;	genAssign
                           7165 ;	AOP_HL for _totalStepsB
                           7166 ;	AOP_HL for _storeDSB
   1736 21 2B 01           7167 	ld	hl,#_totalStepsB
   1739 7E                 7168 	ld	a,(hl)
   173A 21 5D 01           7169 	ld	hl,#_storeDSB
   173D 77                 7170 	ld	(hl),a
                           7171 ;	square.c 1097
                           7172 ;	genAssign
                           7173 ;	AOP_HL for _numberOfPulsesC
                           7174 ;	AOP_HL for _storeDPC
   173E 21 2D 01           7175 	ld	hl,#_numberOfPulsesC
   1741 7E                 7176 	ld	a,(hl)
   1742 21 5E 01           7177 	ld	hl,#_storeDPC
   1745 77                 7178 	ld	(hl),a
                           7179 ;	square.c 1098
                           7180 ;	genAssign
                           7181 ;	AOP_HL for _totalStepsC
                           7182 ;	AOP_HL for _storeDSC
   1746 21 2E 01           7183 	ld	hl,#_totalStepsC
   1749 7E                 7184 	ld	a,(hl)
   174A 21 5F 01           7185 	ld	hl,#_storeDSC
   174D 77                 7186 	ld	(hl),a
                           7187 ;	square.c 1099
                           7188 ;	genAssign
                           7189 ;	AOP_HL for _offStepA
                           7190 ;	AOP_HL for _storeDOA
   174E 21 30 01           7191 	ld	hl,#_offStepA
   1751 7E                 7192 	ld	a,(hl)
   1752 21 60 01           7193 	ld	hl,#_storeDOA
   1755 77                 7194 	ld	(hl),a
                           7195 ;	square.c 1100
                           7196 ;	genAssign
                           7197 ;	AOP_HL for _offStepB
                           7198 ;	AOP_HL for _storeDOB
   1756 21 31 01           7199 	ld	hl,#_offStepB
   1759 7E                 7200 	ld	a,(hl)
   175A 21 61 01           7201 	ld	hl,#_storeDOB
   175D 77                 7202 	ld	(hl),a
                           7203 ;	square.c 1101
                           7204 ;	genAssign
                           7205 ;	AOP_HL for _offStepC
                           7206 ;	AOP_HL for _storeDOC
   175E 21 32 01           7207 	ld	hl,#_offStepC
   1761 7E                 7208 	ld	a,(hl)
   1762 21 62 01           7209 	ld	hl,#_storeDOC
   1765 77                 7210 	ld	(hl),a
                           7211 ;	square.c 1102
                           7212 ;	genAssign
                           7213 ;	AOP_HL for _delayA
                           7214 ;	AOP_HL for _storeDDA
   1766 21 21 01           7215 	ld	hl,#_delayA
   1769 7E                 7216 	ld	a,(hl)
   176A 21 63 01           7217 	ld	hl,#_storeDDA
   176D 77                 7218 	ld	(hl),a
                           7219 ;	square.c 1103
                           7220 ;	genAssign
                           7221 ;	AOP_HL for _delayB
                           7222 ;	AOP_HL for _storeDDB
   176E 21 22 01           7223 	ld	hl,#_delayB
   1771 7E                 7224 	ld	a,(hl)
   1772 21 64 01           7225 	ld	hl,#_storeDDB
   1775 77                 7226 	ld	(hl),a
                           7227 ;	square.c 1104
                           7228 ;	genAssign
                           7229 ;	AOP_HL for _delayC
                           7230 ;	AOP_HL for _storeDDC
   1776 21 23 01           7231 	ld	hl,#_delayC
   1779 7E                 7232 	ld	a,(hl)
   177A 21 65 01           7233 	ld	hl,#_storeDDC
   177D 77                 7234 	ld	(hl),a
                           7235 ;	square.c 1106
                           7236 ;	genLabel
   177E                    7237 00105$:
                           7238 ;	square.c 1107
                           7239 ;	genAssign
   177E 01 00 00           7240 	ld	bc,#0x0000
                           7241 ;	genAssign (pointer)
   1781 3E 00              7242 	ld	a,#0x00
   1783 02                 7243 	ld	(bc),a
                           7244 ;	square.c 1108
                           7245 ;	genIpush
                           7246 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1784 3E 01              7247 	ld	a,#0x01
   1786 F5                 7248 	push	af
   1787 33                 7249 	inc	sp
                           7250 ;	genCall
   1788 CD 00 00           7251 	call	_performantdelay
   178B E8 01              7252 	lda	sp,1(sp)
                           7253 ;	square.c 1109
                           7254 ;	genCall
                           7255 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   178D CD 00 00           7256 	call	_wait_vbl_done
                           7257 ;	genLabel
   1790                    7258 00106$:
                           7259 ;	genEndFunction
                           7260 	
   1790 C9                 7261 	ret
   1791                    7262 ___savePattern_end:
                           7263 ;	square.c 1113
                           7264 ;	genLabel
                           7265 ;	genFunction
                           7266 ;	---------------------------------
                           7267 ; Function main
                           7268 ; ---------------------------------
   1791                    7269 ___main_start:
   1791                    7270 _main:
   1791 E8 FD              7271 	lda	sp,-3(sp)
                           7272 ;	square.c 1115
                           7273 ;	genAssign
   1793 01 26 FF           7274 	ld	bc,#0xFF26
                           7275 ;	genAssign (pointer)
   1796 3E 80              7276 	ld	a,#0x80
   1798 02                 7277 	ld	(bc),a
                           7278 ;	square.c 1116
                           7279 ;	genAssign
   1799 01 24 FF           7280 	ld	bc,#0xFF24
                           7281 ;	genAssign (pointer)
   179C 3E FF              7282 	ld	a,#0xFF
   179E 02                 7283 	ld	(bc),a
                           7284 ;	square.c 1117
                           7285 ;	genAssign
   179F 01 25 FF           7286 	ld	bc,#0xFF25
                           7287 ;	genAssign (pointer)
   17A2 3E FF              7288 	ld	a,#0xFF
   17A4 02                 7289 	ld	(bc),a
                           7290 ;	square.c 1119
                           7291 ;	genAssign
                           7292 ;	AOP_HL for _watch
   17A5 21 69 01           7293 	ld	hl,#_watch
   17A8 36 00              7294 	ld	(hl),#0x00
                           7295 ;	square.c 1120
                           7296 ;	genAssign
                           7297 ;	AOP_HL for _clkA
   17AA 21 29 01           7298 	ld	hl,#_clkA
   17AD 36 00              7299 	ld	(hl),#0x00
                           7300 ;	square.c 1121
                           7301 ;	genAssign
                           7302 ;	AOP_HL for _pop
   17AF 21 6C 01           7303 	ld	hl,#_pop
   17B2 36 00              7304 	ld	(hl),#0x00
                           7305 ;	square.c 1122
                           7306 ;	genAssign
                           7307 ;	AOP_HL for _randA
   17B4 21 17 01           7308 	ld	hl,#_randA
   17B7 36 00              7309 	ld	(hl),#0x00
                           7310 ;	square.c 1123
                           7311 ;	genAssign
                           7312 ;	AOP_HL for _randB
   17B9 21 18 01           7313 	ld	hl,#_randB
   17BC 36 00              7314 	ld	(hl),#0x00
                           7315 ;	square.c 1124
                           7316 ;	genAssign
                           7317 ;	AOP_HL for _randC
   17BE 21 19 01           7318 	ld	hl,#_randC
   17C1 36 00              7319 	ld	(hl),#0x00
                           7320 ;	square.c 1125
                           7321 ;	genAssign
                           7322 ;	AOP_HL for _xA
   17C3 21 1E 01           7323 	ld	hl,#_xA
   17C6 36 00              7324 	ld	(hl),#0x00
                           7325 ;	square.c 1126
                           7326 ;	genAssign
                           7327 ;	AOP_HL for _xB
   17C8 21 1F 01           7328 	ld	hl,#_xB
   17CB 36 00              7329 	ld	(hl),#0x00
                           7330 ;	square.c 1127
                           7331 ;	genAssign
                           7332 ;	AOP_HL for _xC
   17CD 21 20 01           7333 	ld	hl,#_xC
   17D0 36 00              7334 	ld	(hl),#0x00
                           7335 ;	square.c 1128
                           7336 ;	genAssign
                           7337 ;	AOP_HL for _modus
   17D2 21 6D 01           7338 	ld	hl,#_modus
   17D5 36 00              7339 	ld	(hl),#0x00
                           7340 ;	square.c 1129
                           7341 ;	genAssign
                           7342 ;	AOP_HL for _samp_freq
   17D7 21 67 01           7343 	ld	hl,#_samp_freq
   17DA 36 A4              7344 	ld	(hl),#0xA4
                           7345 ;	square.c 1130
                           7346 ;	genAssign
                           7347 ;	AOP_HL for _tempo
   17DC 21 68 01           7348 	ld	hl,#_tempo
   17DF 36 14              7349 	ld	(hl),#0x14
                           7350 ;	square.c 1131
                           7351 ;	genAssign
                           7352 ;	AOP_HL for _seldrum
   17E1 21 71 01           7353 	ld	hl,#_seldrum
   17E4 36 00              7354 	ld	(hl),#0x00
                           7355 ;	square.c 1132
                           7356 ;	genAssign
                           7357 ;	AOP_HL for _syncToDrum
   17E6 21 25 01           7358 	ld	hl,#_syncToDrum
   17E9 36 00              7359 	ld	(hl),#0x00
                           7360 ;	square.c 1133
                           7361 ;	genAssign
                           7362 ;	AOP_HL for _currentSaveSlot
   17EB 21 35 01           7363 	ld	hl,#_currentSaveSlot
   17EE 36 00              7364 	ld	(hl),#0x00
                           7365 ;	square.c 1134
                           7366 ;	genAssign
                           7367 ;	AOP_HL for _numberOfPulsesA
   17F0 21 27 01           7368 	ld	hl,#_numberOfPulsesA
   17F3 36 01              7369 	ld	(hl),#0x01
                           7370 ;	square.c 1135
                           7371 ;	genAssign
                           7372 ;	AOP_HL for _totalStepsA
   17F5 21 28 01           7373 	ld	hl,#_totalStepsA
   17F8 36 10              7374 	ld	(hl),#0x10
                           7375 ;	square.c 1136
                           7376 ;	genAssign
                           7377 ;	AOP_HL for _numberOfPulsesB
   17FA 21 2A 01           7378 	ld	hl,#_numberOfPulsesB
   17FD 36 02              7379 	ld	(hl),#0x02
                           7380 ;	square.c 1137
                           7381 ;	genAssign
                           7382 ;	AOP_HL for _totalStepsB
   17FF 21 2B 01           7383 	ld	hl,#_totalStepsB
   1802 36 10              7384 	ld	(hl),#0x10
                           7385 ;	square.c 1138
                           7386 ;	genAssign
                           7387 ;	AOP_HL for _numberOfPulsesC
   1804 21 2D 01           7388 	ld	hl,#_numberOfPulsesC
   1807 36 04              7389 	ld	(hl),#0x04
                           7390 ;	square.c 1139
                           7391 ;	genAssign
                           7392 ;	AOP_HL for _totalStepsC
   1809 21 2E 01           7393 	ld	hl,#_totalStepsC
   180C 36 10              7394 	ld	(hl),#0x10
                           7395 ;	square.c 1140
                           7396 ;	genAssign
                           7397 ;	AOP_HL for _offStepA
   180E 21 30 01           7398 	ld	hl,#_offStepA
   1811 36 00              7399 	ld	(hl),#0x00
                           7400 ;	square.c 1141
                           7401 ;	genAssign
                           7402 ;	AOP_HL for _offStepB
   1813 21 31 01           7403 	ld	hl,#_offStepB
   1816 36 00              7404 	ld	(hl),#0x00
                           7405 ;	square.c 1142
                           7406 ;	genAssign
                           7407 ;	AOP_HL for _offStepC
   1818 21 32 01           7408 	ld	hl,#_offStepC
   181B 36 00              7409 	ld	(hl),#0x00
                           7410 ;	square.c 1143
                           7411 ;	genAssign
                           7412 ;	AOP_HL for _delayA
   181D 21 21 01           7413 	ld	hl,#_delayA
   1820 36 01              7414 	ld	(hl),#0x01
                           7415 ;	square.c 1144
                           7416 ;	genAssign
                           7417 ;	AOP_HL for _delayB
   1822 21 22 01           7418 	ld	hl,#_delayB
   1825 36 01              7419 	ld	(hl),#0x01
                           7420 ;	square.c 1145
                           7421 ;	genAssign
                           7422 ;	AOP_HL for _delayC
   1827 21 23 01           7423 	ld	hl,#_delayC
   182A 36 01              7424 	ld	(hl),#0x01
                           7425 ;	square.c 1146
                           7426 ;	genCall
                           7427 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   182C CD 95 00           7428 	call	_fillDrumA
                           7429 ;	square.c 1147
                           7430 ;	genCall
                           7431 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   182F CD 64 02           7432 	call	_fillDrumB
                           7433 ;	square.c 1148
                           7434 ;	genCall
                           7435 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1832 CD 33 04           7436 	call	_fillDrumC
                           7437 ;	square.c 1150
                           7438 ;	genAssign
   1835 01 40 FF           7439 	ld	bc,#0xFF40
                           7440 ;	genAssign
                           7441 ;	AOP_STK for _main_sloc0_1_0
   1838 F8 01              7442 	lda	hl,1(sp)
   183A 36 40              7443 	ld	(hl),#0x40
   183C 23                 7444 	inc	hl
   183D 36 FF              7445 	ld	(hl),#0xFF
                           7446 ;	genPointerGet
                           7447 ;	AOP_STK for _main_sloc0_1_0
                           7448 ;	AOP_STK for _main_sloc1_1_0
   183F 2B                 7449 	dec	hl
   1840 5E                 7450 	ld	e,(hl)
   1841 23                 7451 	inc	hl
   1842 56                 7452 	ld	d,(hl)
   1843 1A                 7453 	ld	a,(de)
   1844 2B                 7454 	dec	hl
   1845 2B                 7455 	dec	hl
                           7456 ;	genAnd
                           7457 ;	AOP_STK for _main_sloc1_1_0
   1846 77                 7458 	ld      (hl),a
                           7459 ; Removed redundent load
   1847 E6 FB              7460 	and	a,#0xFB
                           7461 ;	genAssign (pointer)
   1849 02                 7462 	ld	(bc),a
                           7463 ;	square.c 1151
                           7464 ;	genIpush
                           7465 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   184A 21 00 00           7466 	ld	hl,#_squareA
   184D E5                 7467 	push	hl
                           7468 ;	genIpush
   184E 21 00 02           7469 	ld	hl,#0x0200
   1851 E5                 7470 	push	hl
                           7471 ;	genCall
   1852 CD 00 00           7472 	call	_set_sprite_data
   1855 E8 04              7473 	lda	sp,4(sp)
                           7474 ;	square.c 1152
                           7475 ;	genIpush
                           7476 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1857 21 00 00           7477 	ld	hl,#0x0000
   185A E5                 7478 	push	hl
                           7479 ;	genCall
   185B CD 00 00           7480 	call	_set_sprite_tile
   185E E8 02              7481 	lda	sp,2(sp)
                           7482 ;	square.c 1153
                           7483 ;	genMinus
                           7484 ;	AOP_HL for _totalStepsA
   1860 21 28 01           7485 	ld	hl,#_totalStepsA
   1863 7E                 7486 	ld	a,(hl)
   1864 C6 FF              7487 	add	a,#0xFF
   1866 4F                 7488 	ld	c,a
                           7489 ;	genPlus
                           7490 ;	Can't optimise plus by inc, falling back to the normal way
   1867 3E D0              7491 	ld	a,#<_dXlut
   1869 81                 7492 	add	a,c
   186A 4F                 7493 	ld	c,a
   186B 3E 00              7494 	ld	a,#>_dXlut
   186D CE 00              7495 	adc	a,#0x00
   186F 47                 7496 	ld	b,a
                           7497 ;	genPointerGet
   1870 0A                 7498 	ld	a,(bc)
   1871 4F                 7499 	ld	c,a
                           7500 ;	genMinus
                           7501 ;	AOP_HL for _numberOfPulsesA
   1872 21 27 01           7502 	ld	hl,#_numberOfPulsesA
   1875 7E                 7503 	ld	a,(hl)
   1876 C6 FF              7504 	add	a,#0xFF
   1878 47                 7505 	ld	b,a
                           7506 ;	genPlus
                           7507 ;	AOP_STK for _main_sloc0_1_0
                           7508 ;	Can't optimise plus by inc, falling back to the normal way
   1879 11 F0 00           7509 	ld	de,#_dYlut
   187C 68                 7510 	ld	l,b
   187D 26 00              7511 	ld	h,#0x00
   187F 19                 7512 	add	hl,de
   1880 7D                 7513 	ld	a,l
   1881 54                 7514 	ld	d,h
   1882 F8 01              7515 	lda	hl,1(sp)
                           7516 ;	genPointerGet
                           7517 ;	AOP_STK for _main_sloc0_1_0
   1884 22                 7518 	ld	(hl+),a
   1885 72                 7519 	ld	(hl),d
   1886 5F                 7520 	ld	e,a
   1887 1A                 7521 	ld	a,(de)
   1888 47                 7522 	ld	b,a
                           7523 ;	genIpush
                           7524 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1889 79                 7525 	ld	a,c
   188A F5                 7526 	push	af
   188B 33                 7527 	inc	sp
                           7528 ;	genIpush
   188C 78                 7529 	ld	a,b
   188D F5                 7530 	push	af
   188E 33                 7531 	inc	sp
                           7532 ;	genIpush
   188F 3E 00              7533 	ld	a,#0x00
   1891 F5                 7534 	push	af
   1892 33                 7535 	inc	sp
                           7536 ;	genCall
   1893 CD 00 00           7537 	call	_move_sprite
   1896 E8 03              7538 	lda	sp,3(sp)
                           7539 ;	square.c 1155
                           7540 ;	genIpush
                           7541 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1898 21 10 00           7542 	ld	hl,#_squareB
   189B E5                 7543 	push	hl
                           7544 ;	genIpush
   189C 21 02 04           7545 	ld	hl,#0x0402
   189F E5                 7546 	push	hl
                           7547 ;	genCall
   18A0 CD 00 00           7548 	call	_set_sprite_data
   18A3 E8 04              7549 	lda	sp,4(sp)
                           7550 ;	square.c 1156
                           7551 ;	genIpush
                           7552 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   18A5 21 01 02           7553 	ld	hl,#0x0201
   18A8 E5                 7554 	push	hl
                           7555 ;	genCall
   18A9 CD 00 00           7556 	call	_set_sprite_tile
   18AC E8 02              7557 	lda	sp,2(sp)
                           7558 ;	square.c 1157
                           7559 ;	genMinus
                           7560 ;	AOP_HL for _totalStepsB
   18AE 21 2B 01           7561 	ld	hl,#_totalStepsB
   18B1 7E                 7562 	ld	a,(hl)
   18B2 C6 FF              7563 	add	a,#0xFF
   18B4 4F                 7564 	ld	c,a
                           7565 ;	genPlus
                           7566 ;	Can't optimise plus by inc, falling back to the normal way
   18B5 3E D0              7567 	ld	a,#<_dXlut
   18B7 81                 7568 	add	a,c
   18B8 4F                 7569 	ld	c,a
   18B9 3E 00              7570 	ld	a,#>_dXlut
   18BB CE 00              7571 	adc	a,#0x00
   18BD 47                 7572 	ld	b,a
                           7573 ;	genPointerGet
   18BE 0A                 7574 	ld	a,(bc)
   18BF 4F                 7575 	ld	c,a
                           7576 ;	genMinus
                           7577 ;	AOP_HL for _numberOfPulsesB
   18C0 21 2A 01           7578 	ld	hl,#_numberOfPulsesB
   18C3 7E                 7579 	ld	a,(hl)
   18C4 C6 FF              7580 	add	a,#0xFF
   18C6 47                 7581 	ld	b,a
                           7582 ;	genPlus
                           7583 ;	AOP_STK for _main_sloc0_1_0
                           7584 ;	Can't optimise plus by inc, falling back to the normal way
   18C7 11 F0 00           7585 	ld	de,#_dYlut
   18CA 68                 7586 	ld	l,b
   18CB 26 00              7587 	ld	h,#0x00
   18CD 19                 7588 	add	hl,de
   18CE 7D                 7589 	ld	a,l
   18CF 54                 7590 	ld	d,h
   18D0 F8 01              7591 	lda	hl,1(sp)
                           7592 ;	genPointerGet
                           7593 ;	AOP_STK for _main_sloc0_1_0
   18D2 22                 7594 	ld	(hl+),a
   18D3 72                 7595 	ld	(hl),d
   18D4 5F                 7596 	ld	e,a
   18D5 1A                 7597 	ld	a,(de)
   18D6 47                 7598 	ld	b,a
                           7599 ;	genIpush
                           7600 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   18D7 79                 7601 	ld	a,c
   18D8 F5                 7602 	push	af
   18D9 33                 7603 	inc	sp
                           7604 ;	genIpush
   18DA 78                 7605 	ld	a,b
   18DB F5                 7606 	push	af
   18DC 33                 7607 	inc	sp
                           7608 ;	genIpush
   18DD 3E 01              7609 	ld	a,#0x01
   18DF F5                 7610 	push	af
   18E0 33                 7611 	inc	sp
                           7612 ;	genCall
   18E1 CD 00 00           7613 	call	_move_sprite
   18E4 E8 03              7614 	lda	sp,3(sp)
                           7615 ;	square.c 1159
                           7616 ;	genIpush
                           7617 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   18E6 21 20 00           7618 	ld	hl,#_squareC
   18E9 E5                 7619 	push	hl
                           7620 ;	genIpush
   18EA 21 04 06           7621 	ld	hl,#0x0604
   18ED E5                 7622 	push	hl
                           7623 ;	genCall
   18EE CD 00 00           7624 	call	_set_sprite_data
   18F1 E8 04              7625 	lda	sp,4(sp)
                           7626 ;	square.c 1160
                           7627 ;	genIpush
                           7628 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   18F3 21 02 04           7629 	ld	hl,#0x0402
   18F6 E5                 7630 	push	hl
                           7631 ;	genCall
   18F7 CD 00 00           7632 	call	_set_sprite_tile
   18FA E8 02              7633 	lda	sp,2(sp)
                           7634 ;	square.c 1161
                           7635 ;	genMinus
                           7636 ;	AOP_HL for _totalStepsC
   18FC 21 2E 01           7637 	ld	hl,#_totalStepsC
   18FF 7E                 7638 	ld	a,(hl)
   1900 C6 FF              7639 	add	a,#0xFF
   1902 4F                 7640 	ld	c,a
                           7641 ;	genPlus
                           7642 ;	Can't optimise plus by inc, falling back to the normal way
   1903 3E D0              7643 	ld	a,#<_dXlut
   1905 81                 7644 	add	a,c
   1906 4F                 7645 	ld	c,a
   1907 3E 00              7646 	ld	a,#>_dXlut
   1909 CE 00              7647 	adc	a,#0x00
   190B 47                 7648 	ld	b,a
                           7649 ;	genPointerGet
   190C 0A                 7650 	ld	a,(bc)
   190D 4F                 7651 	ld	c,a
                           7652 ;	genMinus
                           7653 ;	AOP_HL for _numberOfPulsesC
   190E 21 2D 01           7654 	ld	hl,#_numberOfPulsesC
   1911 7E                 7655 	ld	a,(hl)
   1912 C6 FF              7656 	add	a,#0xFF
   1914 47                 7657 	ld	b,a
                           7658 ;	genPlus
                           7659 ;	AOP_STK for _main_sloc0_1_0
                           7660 ;	Can't optimise plus by inc, falling back to the normal way
   1915 11 F0 00           7661 	ld	de,#_dYlut
   1918 68                 7662 	ld	l,b
   1919 26 00              7663 	ld	h,#0x00
   191B 19                 7664 	add	hl,de
   191C 7D                 7665 	ld	a,l
   191D 54                 7666 	ld	d,h
   191E F8 01              7667 	lda	hl,1(sp)
                           7668 ;	genPointerGet
                           7669 ;	AOP_STK for _main_sloc0_1_0
   1920 22                 7670 	ld	(hl+),a
   1921 72                 7671 	ld	(hl),d
   1922 5F                 7672 	ld	e,a
   1923 1A                 7673 	ld	a,(de)
   1924 47                 7674 	ld	b,a
                           7675 ;	genIpush
                           7676 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1925 79                 7677 	ld	a,c
   1926 F5                 7678 	push	af
   1927 33                 7679 	inc	sp
                           7680 ;	genIpush
   1928 78                 7681 	ld	a,b
   1929 F5                 7682 	push	af
   192A 33                 7683 	inc	sp
                           7684 ;	genIpush
   192B 3E 02              7685 	ld	a,#0x02
   192D F5                 7686 	push	af
   192E 33                 7687 	inc	sp
                           7688 ;	genCall
   192F CD 00 00           7689 	call	_move_sprite
   1932 E8 03              7690 	lda	sp,3(sp)
                           7691 ;	square.c 1163
                           7692 ;	genIpush
                           7693 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1934 21 30 00           7694 	ld	hl,#_midiC
   1937 E5                 7695 	push	hl
                           7696 ;	genIpush
   1938 21 06 08           7697 	ld	hl,#0x0806
   193B E5                 7698 	push	hl
                           7699 ;	genCall
   193C CD 00 00           7700 	call	_set_sprite_data
   193F E8 04              7701 	lda	sp,4(sp)
                           7702 ;	square.c 1164
                           7703 ;	genIpush
                           7704 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1941 21 03 06           7705 	ld	hl,#0x0603
   1944 E5                 7706 	push	hl
                           7707 ;	genCall
   1945 CD 00 00           7708 	call	_set_sprite_tile
   1948 E8 02              7709 	lda	sp,2(sp)
                           7710 ;	square.c 1165
                           7711 ;	genIpush
                           7712 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   194A 21 00 00           7713 	ld	hl,#0x0000
   194D E5                 7714 	push	hl
                           7715 ;	genIpush
   194E 3E 03              7716 	ld	a,#0x03
   1950 F5                 7717 	push	af
   1951 33                 7718 	inc	sp
                           7719 ;	genCall
   1952 CD 00 00           7720 	call	_move_sprite
   1955 E8 03              7721 	lda	sp,3(sp)
                           7722 ;	square.c 1167
                           7723 ;	genIpush
                           7724 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1957 21 40 00           7725 	ld	hl,#_offsetC
   195A E5                 7726 	push	hl
                           7727 ;	genIpush
   195B 21 08 0A           7728 	ld	hl,#0x0A08
   195E E5                 7729 	push	hl
                           7730 ;	genCall
   195F CD 00 00           7731 	call	_set_sprite_data
   1962 E8 04              7732 	lda	sp,4(sp)
                           7733 ;	square.c 1168
                           7734 ;	genIpush
                           7735 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1964 21 04 08           7736 	ld	hl,#0x0804
   1967 E5                 7737 	push	hl
                           7738 ;	genCall
   1968 CD 00 00           7739 	call	_set_sprite_tile
   196B E8 02              7740 	lda	sp,2(sp)
                           7741 ;	square.c 1169
                           7742 ;	genPlus
                           7743 ;	AOP_HL for _offStepA
                           7744 ;	Can't optimise plus by inc, falling back to the normal way
   196D 3E D0              7745 	ld	a,#<_dXlut
   196F 21 30 01           7746 	ld	hl,#_offStepA
   1972 86                 7747 	add	a,(hl)
   1973 4F                 7748 	ld	c,a
   1974 3E 00              7749 	ld	a,#>_dXlut
   1976 CE 00              7750 	adc	a,#0x00
   1978 47                 7751 	ld	b,a
                           7752 ;	genPointerGet
   1979 0A                 7753 	ld	a,(bc)
                           7754 ;	genIpush
                           7755 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   197A 4F                 7756 	ld	c,a
   197B F5                 7757 	push	af
   197C 33                 7758 	inc	sp
                           7759 ;	genIpush
   197D 21 04 08           7760 	ld	hl,#0x0804
   1980 E5                 7761 	push	hl
                           7762 ;	genCall
   1981 CD 00 00           7763 	call	_move_sprite
   1984 E8 03              7764 	lda	sp,3(sp)
                           7765 ;	square.c 1171
                           7766 ;	genIpush
                           7767 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1986 21 50 00           7768 	ld	hl,#_swingC
   1989 E5                 7769 	push	hl
                           7770 ;	genIpush
   198A 21 0A 0C           7771 	ld	hl,#0x0C0A
   198D E5                 7772 	push	hl
                           7773 ;	genCall
   198E CD 00 00           7774 	call	_set_sprite_data
   1991 E8 04              7775 	lda	sp,4(sp)
                           7776 ;	square.c 1172
                           7777 ;	genIpush
                           7778 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1993 21 05 0A           7779 	ld	hl,#0x0A05
   1996 E5                 7780 	push	hl
                           7781 ;	genCall
   1997 CD 00 00           7782 	call	_set_sprite_tile
   199A E8 02              7783 	lda	sp,2(sp)
                           7784 ;	square.c 1173
                           7785 ;	genPlus
                           7786 ;	AOP_HL for _delayA
                           7787 ;	genPlusIncr
                           7788 ;	Can't optimise plus by inc, falling back to the normal way
   199C 21 21 01           7789 	ld	hl,#_delayA
   199F 7E                 7790 	ld	a,(hl)
   19A0 C6 08              7791 	add	a,#0x08
   19A2 4F                 7792 	ld	c,a
                           7793 ;	genIpush
                           7794 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   19A3 3E 98              7795 	ld	a,#0x98
   19A5 F5                 7796 	push	af
   19A6 33                 7797 	inc	sp
                           7798 ;	genIpush
   19A7 79                 7799 	ld	a,c
   19A8 F5                 7800 	push	af
   19A9 33                 7801 	inc	sp
                           7802 ;	genIpush
   19AA 3E 05              7803 	ld	a,#0x05
   19AC F5                 7804 	push	af
   19AD 33                 7805 	inc	sp
                           7806 ;	genCall
   19AE CD 00 00           7807 	call	_move_sprite
   19B1 E8 03              7808 	lda	sp,3(sp)
                           7809 ;	square.c 1176
                           7810 ;	genIpush
                           7811 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   19B3 21 60 00           7812 	ld	hl,#_saveC
   19B6 E5                 7813 	push	hl
                           7814 ;	genIpush
   19B7 21 0C 0E           7815 	ld	hl,#0x0E0C
   19BA E5                 7816 	push	hl
                           7817 ;	genCall
   19BB CD 00 00           7818 	call	_set_sprite_data
   19BE E8 04              7819 	lda	sp,4(sp)
                           7820 ;	square.c 1177
                           7821 ;	genIpush
                           7822 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   19C0 21 06 0C           7823 	ld	hl,#0x0C06
   19C3 E5                 7824 	push	hl
                           7825 ;	genCall
   19C4 CD 00 00           7826 	call	_set_sprite_tile
   19C7 E8 02              7827 	lda	sp,2(sp)
                           7828 ;	square.c 1178
                           7829 ;	genIpush
                           7830 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   19C9 21 A0 90           7831 	ld	hl,#0x90A0
   19CC E5                 7832 	push	hl
                           7833 ;	genIpush
   19CD 3E 06              7834 	ld	a,#0x06
   19CF F5                 7835 	push	af
   19D0 33                 7836 	inc	sp
                           7837 ;	genCall
   19D1 CD 00 00           7838 	call	_move_sprite
   19D4 E8 03              7839 	lda	sp,3(sp)
                           7840 ;	square.c 1180
                           7841 ;	genIpush
                           7842 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   19D6 21 07 00           7843 	ld	hl,#0x0007
   19D9 E5                 7844 	push	hl
                           7845 ;	genCall
   19DA CD 00 00           7846 	call	_set_sprite_tile
   19DD E8 02              7847 	lda	sp,2(sp)
                           7848 ;	square.c 1181
                           7849 ;	genIpush
                           7850 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   19DF 21 08 10           7851 	ld	hl,#0x1008
   19E2 E5                 7852 	push	hl
                           7853 ;	genIpush
   19E3 3E 07              7854 	ld	a,#0x07
   19E5 F5                 7855 	push	af
   19E6 33                 7856 	inc	sp
                           7857 ;	genCall
   19E7 CD 00 00           7858 	call	_move_sprite
   19EA E8 03              7859 	lda	sp,3(sp)
                           7860 ;	square.c 1186
                           7861 ;	genCall
                           7862 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   19EC CD 00 00           7863 	call	_disable_interrupts
                           7864 ;	square.c 1187
                           7865 ;	genIpush
                           7866 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   19EF 21 2C 0E           7867 	ld	hl,#_tim
   19F2 E5                 7868 	push	hl
                           7869 ;	genCall
   19F3 CD 00 00           7870 	call	_add_TIM
   19F6 E8 02              7871 	lda	sp,2(sp)
                           7872 ;	square.c 1188
                           7873 ;	genCall
                           7874 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   19F8 CD 00 00           7875 	call	_enable_interrupts
                           7876 ;	square.c 1189
                           7877 ;	genAssign
   19FB 01 06 FF           7878 	ld	bc,#0xFF06
                           7879 ;	genAssign (pointer)
                           7880 ;	AOP_HL for _samp_freq
   19FE 21 67 01           7881 	ld	hl,#_samp_freq
   1A01 7E                 7882 	ld	a,(hl)
   1A02 02                 7883 	ld	(bc),a
                           7884 ;	square.c 1194
                           7885 ;	genAssign
   1A03 01 07 FF           7886 	ld	bc,#0xFF07
                           7887 ;	genAssign (pointer)
   1A06 3E 07              7888 	ld	a,#0x07
   1A08 02                 7889 	ld	(bc),a
                           7890 ;	square.c 1196
                           7891 ;	genIpush
                           7892 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A09 3E 05              7893 	ld	a,#0x05
   1A0B F5                 7894 	push	af
   1A0C 33                 7895 	inc	sp
                           7896 ;	genCall
   1A0D CD 00 00           7897 	call	_set_interrupts
   1A10 E8 01              7898 	lda	sp,1(sp)
                           7899 ;	square.c 1201
                           7900 ;	genAssign
   1A12 01 40 FF           7901 	ld	bc,#0xFF40
                           7902 ;	genAssign
                           7903 ;	AOP_STK for _main_sloc0_1_0
   1A15 F8 01              7904 	lda	hl,1(sp)
   1A17 36 40              7905 	ld	(hl),#0x40
   1A19 23                 7906 	inc	hl
   1A1A 36 FF              7907 	ld	(hl),#0xFF
                           7908 ;	genPointerGet
                           7909 ;	AOP_STK for _main_sloc0_1_0
                           7910 ;	AOP_STK for _main_sloc1_1_0
   1A1C 2B                 7911 	dec	hl
   1A1D 5E                 7912 	ld	e,(hl)
   1A1E 23                 7913 	inc	hl
   1A1F 56                 7914 	ld	d,(hl)
   1A20 1A                 7915 	ld	a,(de)
   1A21 2B                 7916 	dec	hl
   1A22 2B                 7917 	dec	hl
                           7918 ;	genOr
                           7919 ;	AOP_STK for _main_sloc1_1_0
   1A23 77                 7920 	ld      (hl),a
                           7921 ; Removed redundent load
   1A24 F6 80              7922 	or	a,#0x80
                           7923 ;	genAssign (pointer)
   1A26 02                 7924 	ld	(bc),a
                           7925 ;	square.c 1202
                           7926 ;	genAssign
   1A27 01 40 FF           7927 	ld	bc,#0xFF40
                           7928 ;	genAssign
                           7929 ;	AOP_STK for _main_sloc0_1_0
   1A2A 23                 7930 	inc	hl
   1A2B 36 40              7931 	ld	(hl),#0x40
   1A2D 23                 7932 	inc	hl
   1A2E 36 FF              7933 	ld	(hl),#0xFF
                           7934 ;	genPointerGet
                           7935 ;	AOP_STK for _main_sloc0_1_0
                           7936 ;	AOP_STK for _main_sloc1_1_0
   1A30 2B                 7937 	dec	hl
   1A31 5E                 7938 	ld	e,(hl)
   1A32 23                 7939 	inc	hl
   1A33 56                 7940 	ld	d,(hl)
   1A34 1A                 7941 	ld	a,(de)
   1A35 2B                 7942 	dec	hl
   1A36 2B                 7943 	dec	hl
                           7944 ;	genOr
                           7945 ;	AOP_STK for _main_sloc1_1_0
   1A37 77                 7946 	ld      (hl),a
                           7947 ; Removed redundent load
   1A38 F6 02              7948 	or	a,#0x02
                           7949 ;	genAssign (pointer)
   1A3A 02                 7950 	ld	(bc),a
                           7951 ;	square.c 1206
                           7952 ;	genLabel
   1A3B                    7953 00163$:
                           7954 ;	square.c 1208
                           7955 ;	genCall
                           7956 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A3B CD 00 00           7957 	call	_joypad
   1A3E 4B                 7958 	ld	c,e
                           7959 ;	genCmpEq
                           7960 ; genCmpEq: left 1, right 1, result 0
   1A3F 79                 7961 	ld	a,c
   1A40 B7                 7962 	or	a,a
   1A41 CA 4B 1A           7963 	jp	z,00102$
   1A44                    7964 00196$:
                           7965 ;	square.c 1209
                           7966 ;	genPlus
                           7967 ;	AOP_HL for _pad
                           7968 ;	genPlusIncr
   1A44 21 70 01           7969 	ld	hl,#_pad
   1A47 34                 7970 	inc	(hl)
                           7971 ;	genGoto
   1A48 C3 50 1A           7972 	jp	00103$
                           7973 ;	genLabel
   1A4B                    7974 00102$:
                           7975 ;	square.c 1212
                           7976 ;	genAssign
                           7977 ;	AOP_HL for _pad
   1A4B 21 70 01           7978 	ld	hl,#_pad
   1A4E 36 00              7979 	ld	(hl),#0x00
                           7980 ;	genLabel
   1A50                    7981 00103$:
                           7982 ;	square.c 1215
                           7983 ;	genCall
                           7984 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A50 CD 00 00           7985 	call	_joypad
   1A53 4B                 7986 	ld	c,e
                           7987 ;	genCmpEq
                           7988 ;	AOP_HL for _joy
                           7989 ; genCmpEq: left 1, right 1, result 0
   1A54 21 6F 01           7990 	ld	hl,#_joy
   1A57 7E                 7991 	ld	a,(hl)
   1A58 B9                 7992 	cp	c
   1A59 20 02              7993 	jr	nz,00197$
   1A5B 18 03              7994 	jr	00198$
   1A5D                    7995 00197$:
   1A5D C3 69 1A           7996 	jp	00104$
   1A60                    7997 00198$:
                           7998 ;	genCmpGt
                           7999 ;	AOP_HL for _pad
   1A60 3E 0A              8000 	ld	a,#0x0A
   1A62 21 70 01           8001 	ld	hl,#_pad
   1A65 96                 8002 	sub	a,(hl)
   1A66 D2 73 1A           8003 	jp	nc,00105$
                           8004 ;	genLabel
   1A69                    8005 00104$:
                           8006 ;	square.c 1216
                           8007 ;	genCall
                           8008 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A69 CD 00 00           8009 	call	_joypad
                           8010 ;	AOP_HL for _padext
   1A6C 21 6E 01           8011 	ld	hl,#_padext
   1A6F 73                 8012 	ld	(hl),e
                           8013 ;	genGoto
   1A70 C3 78 1A           8014 	jp	00106$
                           8015 ;	genLabel
   1A73                    8016 00105$:
                           8017 ;	square.c 1219
                           8018 ;	genAssign
                           8019 ;	AOP_HL for _padext
   1A73 21 6E 01           8020 	ld	hl,#_padext
   1A76 36 00              8021 	ld	(hl),#0x00
                           8022 ;	genLabel
   1A78                    8023 00106$:
                           8024 ;	square.c 1223
                           8025 ;	genCall
                           8026 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A78 CD 00 00           8027 	call	_joypad
   1A7B 4B                 8028 	ld	c,e
                           8029 ;	genCmpEq
                           8030 ;	AOP_HL for _joy
                           8031 ; genCmpEq: left 1, right 1, result 0
   1A7C 21 6F 01           8032 	ld	hl,#_joy
   1A7F 7E                 8033 	ld	a,(hl)
   1A80 B9                 8034 	cp	c
   1A81 20 03              8035 	jr	nz,00199$
   1A83 C3 8B 1A           8036 	jp	00109$
   1A86                    8037 00199$:
                           8038 ;	square.c 1225
                           8039 ;	genAssign
                           8040 ;	AOP_HL for _pad
   1A86 21 70 01           8041 	ld	hl,#_pad
   1A89 36 00              8042 	ld	(hl),#0x00
                           8043 ;	genLabel
   1A8B                    8044 00109$:
                           8045 ;	square.c 1228
                           8046 ;	genCall
                           8047 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A8B CD 00 00           8048 	call	_joypad
                           8049 ;	AOP_HL for _joy
   1A8E 21 6F 01           8050 	ld	hl,#_joy
   1A91 73                 8051 	ld	(hl),e
                           8052 ;	square.c 1230
                           8053 ;	genCall
                           8054 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A92 CD 00 00           8055 	call	_joypad
   1A95 4B                 8056 	ld	c,e
                           8057 ;	genCmpEq
                           8058 ; genCmpEq: left 1, right 1, result 0
   1A96 79                 8059 	ld	a,c
   1A97 FE 02              8060 	cp	a,#0x02
   1A99 C2 AD 1A           8061 	jp	nz,00111$
   1A9C 18 03              8062 	jr	00201$
   1A9E                    8063 00200$:
   1A9E C3 AD 1A           8064 	jp	00111$
   1AA1                    8065 00201$:
                           8066 ;	square.c 1232
                           8067 ;	genCall
                           8068 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1AA1 CD 65 0A           8069 	call	_decreasePulses
                           8070 ;	square.c 1233
                           8071 ;	genIpush
                           8072 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1AA4 3E 05              8073 	ld	a,#0x05
   1AA6 F5                 8074 	push	af
   1AA7 33                 8075 	inc	sp
                           8076 ;	genCall
   1AA8 CD 00 00           8077 	call	_performantdelay
   1AAB E8 01              8078 	lda	sp,1(sp)
                           8079 ;	genLabel
   1AAD                    8080 00111$:
                           8081 ;	square.c 1236
                           8082 ;	genCall
                           8083 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1AAD CD 00 00           8084 	call	_joypad
   1AB0 4B                 8085 	ld	c,e
                           8086 ;	genCmpEq
                           8087 ; genCmpEq: left 1, right 1, result 0
   1AB1 79                 8088 	ld	a,c
   1AB2 FE 01              8089 	cp	a,#0x01
   1AB4 C2 C8 1A           8090 	jp	nz,00113$
   1AB7 18 03              8091 	jr	00203$
   1AB9                    8092 00202$:
   1AB9 C3 C8 1A           8093 	jp	00113$
   1ABC                    8094 00203$:
                           8095 ;	square.c 1238
                           8096 ;	genCall
                           8097 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1ABC CD 60 09           8098 	call	_increasePulses
                           8099 ;	square.c 1239
                           8100 ;	genIpush
                           8101 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1ABF 3E 05              8102 	ld	a,#0x05
   1AC1 F5                 8103 	push	af
   1AC2 33                 8104 	inc	sp
                           8105 ;	genCall
   1AC3 CD 00 00           8106 	call	_performantdelay
   1AC6 E8 01              8107 	lda	sp,1(sp)
                           8108 ;	genLabel
   1AC8                    8109 00113$:
                           8110 ;	square.c 1242
                           8111 ;	genCall
                           8112 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1AC8 CD 00 00           8113 	call	_joypad
   1ACB 4B                 8114 	ld	c,e
                           8115 ;	genCmpEq
                           8116 ; genCmpEq: left 1, right 1, result 0
   1ACC 79                 8117 	ld	a,c
   1ACD FE 08              8118 	cp	a,#0x08
   1ACF C2 E3 1A           8119 	jp	nz,00115$
   1AD2 18 03              8120 	jr	00205$
   1AD4                    8121 00204$:
   1AD4 C3 E3 1A           8122 	jp	00115$
   1AD7                    8123 00205$:
                           8124 ;	square.c 1244
                           8125 ;	genCall
                           8126 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1AD7 CD 77 08           8127 	call	_decreaseSteps
                           8128 ;	square.c 1245
                           8129 ;	genIpush
                           8130 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1ADA 3E 05              8131 	ld	a,#0x05
   1ADC F5                 8132 	push	af
   1ADD 33                 8133 	inc	sp
                           8134 ;	genCall
   1ADE CD 00 00           8135 	call	_performantdelay
   1AE1 E8 01              8136 	lda	sp,1(sp)
                           8137 ;	genLabel
   1AE3                    8138 00115$:
                           8139 ;	square.c 1248
                           8140 ;	genCall
                           8141 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1AE3 CD 00 00           8142 	call	_joypad
   1AE6 4B                 8143 	ld	c,e
                           8144 ;	genCmpEq
                           8145 ; genCmpEq: left 1, right 1, result 0
   1AE7 79                 8146 	ld	a,c
   1AE8 FE 04              8147 	cp	a,#0x04
   1AEA C2 FE 1A           8148 	jp	nz,00117$
   1AED 18 03              8149 	jr	00207$
   1AEF                    8150 00206$:
   1AEF C3 FE 1A           8151 	jp	00117$
   1AF2                    8152 00207$:
                           8153 ;	square.c 1250
                           8154 ;	genCall
                           8155 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1AF2 CD 8E 07           8156 	call	_increaseSteps
                           8157 ;	square.c 1251
                           8158 ;	genIpush
                           8159 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1AF5 3E 05              8160 	ld	a,#0x05
   1AF7 F5                 8161 	push	af
   1AF8 33                 8162 	inc	sp
                           8163 ;	genCall
   1AF9 CD 00 00           8164 	call	_performantdelay
   1AFC E8 01              8165 	lda	sp,1(sp)
                           8166 ;	genLabel
   1AFE                    8167 00117$:
                           8168 ;	square.c 1255
                           8169 ;	genCmpEq
                           8170 ;	AOP_HL for _padext
                           8171 ; genCmpEq: left 1, right 1, result 0
   1AFE 21 6E 01           8172 	ld	hl,#_padext
   1B01 7E                 8173 	ld	a,(hl)
   1B02 FE 84              8174 	cp	a,#0x84
   1B04 C2 19 1B           8175 	jp	nz,00119$
   1B07 18 03              8176 	jr	00209$
   1B09                    8177 00208$:
   1B09 C3 19 1B           8178 	jp	00119$
   1B0C                    8179 00209$:
                           8180 ;	square.c 1257
                           8181 ;	genMinus
                           8182 ;	AOP_HL for _tempo
   1B0C 21 68 01           8183 	ld	hl,#_tempo
   1B0F 35                 8184 	dec	(hl)
                           8185 ;	square.c 1258
                           8186 ;	genIpush
                           8187 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1B10 3E 02              8188 	ld	a,#0x02
   1B12 F5                 8189 	push	af
   1B13 33                 8190 	inc	sp
                           8191 ;	genCall
   1B14 CD 00 00           8192 	call	_performantdelay
   1B17 E8 01              8193 	lda	sp,1(sp)
                           8194 ;	genLabel
   1B19                    8195 00119$:
                           8196 ;	square.c 1261
                           8197 ;	genCmpEq
                           8198 ;	AOP_HL for _padext
                           8199 ; genCmpEq: left 1, right 1, result 0
   1B19 21 6E 01           8200 	ld	hl,#_padext
   1B1C 7E                 8201 	ld	a,(hl)
   1B1D FE 88              8202 	cp	a,#0x88
   1B1F C2 34 1B           8203 	jp	nz,00121$
   1B22 18 03              8204 	jr	00211$
   1B24                    8205 00210$:
   1B24 C3 34 1B           8206 	jp	00121$
   1B27                    8207 00211$:
                           8208 ;	square.c 1263
                           8209 ;	genPlus
                           8210 ;	AOP_HL for _tempo
                           8211 ;	genPlusIncr
   1B27 21 68 01           8212 	ld	hl,#_tempo
   1B2A 34                 8213 	inc	(hl)
                           8214 ;	square.c 1264
                           8215 ;	genIpush
                           8216 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1B2B 3E 02              8217 	ld	a,#0x02
   1B2D F5                 8218 	push	af
   1B2E 33                 8219 	inc	sp
                           8220 ;	genCall
   1B2F CD 00 00           8221 	call	_performantdelay
   1B32 E8 01              8222 	lda	sp,1(sp)
                           8223 ;	genLabel
   1B34                    8224 00121$:
                           8225 ;	square.c 1268
                           8226 ;	genCmpEq
                           8227 ;	AOP_HL for _padext
                           8228 ; genCmpEq: left 1, right 1, result 0
   1B34 21 6E 01           8229 	ld	hl,#_padext
   1B37 7E                 8230 	ld	a,(hl)
   1B38 FE 44              8231 	cp	a,#0x44
   1B3A C2 24 1C           8232 	jp	nz,00129$
   1B3D 18 03              8233 	jr	00213$
   1B3F                    8234 00212$:
   1B3F C3 24 1C           8235 	jp	00129$
   1B42                    8236 00213$:
                           8237 ;	square.c 1270
                           8238 ;	genPlus
                           8239 ;	AOP_HL for _seldrum
                           8240 ;	genPlusIncr
   1B42 21 71 01           8241 	ld	hl,#_seldrum
   1B45 34                 8242 	inc	(hl)
                           8243 ;	square.c 1271
                           8244 ;	genCmpEq
                           8245 ;	AOP_HL for _seldrum
                           8246 ; genCmpEq: left 1, right 1, result 0
   1B46 7E                 8247 	ld	a,(hl)
   1B47 FE 03              8248 	cp	a,#0x03
   1B49 C2 56 1B           8249 	jp	nz,00123$
   1B4C 18 03              8250 	jr	00215$
   1B4E                    8251 00214$:
   1B4E C3 56 1B           8252 	jp	00123$
   1B51                    8253 00215$:
                           8254 ;	square.c 1273
                           8255 ;	genAssign
                           8256 ;	AOP_HL for _seldrum
   1B51 21 71 01           8257 	ld	hl,#_seldrum
   1B54 36 00              8258 	ld	(hl),#0x00
                           8259 ;	genLabel
   1B56                    8260 00123$:
                           8261 ;	square.c 1275
                           8262 ;	genIpush
                           8263 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1B56 3E 0A              8264 	ld	a,#0x0A
   1B58 F5                 8265 	push	af
   1B59 33                 8266 	inc	sp
                           8267 ;	genCall
   1B5A CD 00 00           8268 	call	_performantdelay
   1B5D E8 01              8269 	lda	sp,1(sp)
                           8270 ;	square.c 1276
                           8271 ;	genAssign
                           8272 ;	AOP_HL for _cDelay
   1B5F 21 33 01           8273 	ld	hl,#_cDelay
   1B62 36 00              8274 	ld	(hl),#0x00
                           8275 ;	square.c 1277
                           8276 ;	genAssign
                           8277 ;	AOP_HL for _cOffStep
   1B64 21 34 01           8278 	ld	hl,#_cOffStep
   1B67 36 00              8279 	ld	(hl),#0x00
                           8280 ;	square.c 1278
                           8281 ;	genCmpEq
                           8282 ;	AOP_HL for _seldrum
                           8283 ; genCmpEq: left 1, right 1, result 0
   1B69 21 71 01           8284 	ld	hl,#_seldrum
   1B6C 7E                 8285 	ld	a,(hl)
   1B6D B7                 8286 	or	a,a
   1B6E CA 86 1B           8287 	jp	z,00124$
   1B71                    8288 00216$:
                           8289 ;	genCmpEq
                           8290 ;	AOP_HL for _seldrum
                           8291 ; genCmpEq: left 1, right 1, result 0
   1B71 21 71 01           8292 	ld	hl,#_seldrum
   1B74 7E                 8293 	ld	a,(hl)
   1B75 FE 01              8294 	cp	a,#0x01
   1B77 CA 99 1B           8295 	jp	z,00125$
   1B7A                    8296 00217$:
                           8297 ;	genCmpEq
                           8298 ;	AOP_HL for _seldrum
                           8299 ; genCmpEq: left 1, right 1, result 0
   1B7A 21 71 01           8300 	ld	hl,#_seldrum
   1B7D 7E                 8301 	ld	a,(hl)
   1B7E FE 02              8302 	cp	a,#0x02
   1B80 CA AC 1B           8303 	jp	z,00126$
   1B83                    8304 00218$:
                           8305 ;	genGoto
   1B83 C3 BC 1B           8306 	jp	00127$
                           8307 ;	square.c 1281
                           8308 ;	genLabel
   1B86                    8309 00124$:
                           8310 ;	genAssign
                           8311 ;	AOP_HL for _delayA
                           8312 ;	AOP_HL for _cDelay
   1B86 21 21 01           8313 	ld	hl,#_delayA
   1B89 7E                 8314 	ld	a,(hl)
   1B8A 21 33 01           8315 	ld	hl,#_cDelay
   1B8D 77                 8316 	ld	(hl),a
                           8317 ;	square.c 1282
                           8318 ;	genAssign
                           8319 ;	AOP_HL for _offStepA
                           8320 ;	AOP_HL for _cOffStep
   1B8E 21 30 01           8321 	ld	hl,#_offStepA
   1B91 7E                 8322 	ld	a,(hl)
   1B92 21 34 01           8323 	ld	hl,#_cOffStep
   1B95 77                 8324 	ld	(hl),a
                           8325 ;	square.c 1283
                           8326 ;	genGoto
   1B96 C3 BC 1B           8327 	jp	00127$
                           8328 ;	square.c 1285
                           8329 ;	genLabel
   1B99                    8330 00125$:
                           8331 ;	genAssign
                           8332 ;	AOP_HL for _delayB
                           8333 ;	AOP_HL for _cDelay
   1B99 21 22 01           8334 	ld	hl,#_delayB
   1B9C 7E                 8335 	ld	a,(hl)
   1B9D 21 33 01           8336 	ld	hl,#_cDelay
   1BA0 77                 8337 	ld	(hl),a
                           8338 ;	square.c 1286
                           8339 ;	genAssign
                           8340 ;	AOP_HL for _offStepB
                           8341 ;	AOP_HL for _cOffStep
   1BA1 21 31 01           8342 	ld	hl,#_offStepB
   1BA4 7E                 8343 	ld	a,(hl)
   1BA5 21 34 01           8344 	ld	hl,#_cOffStep
   1BA8 77                 8345 	ld	(hl),a
                           8346 ;	square.c 1287
                           8347 ;	genGoto
   1BA9 C3 BC 1B           8348 	jp	00127$
                           8349 ;	square.c 1289
                           8350 ;	genLabel
   1BAC                    8351 00126$:
                           8352 ;	genAssign
                           8353 ;	AOP_HL for _delayC
                           8354 ;	AOP_HL for _cDelay
   1BAC 21 23 01           8355 	ld	hl,#_delayC
   1BAF 7E                 8356 	ld	a,(hl)
   1BB0 21 33 01           8357 	ld	hl,#_cDelay
   1BB3 77                 8358 	ld	(hl),a
                           8359 ;	square.c 1290
                           8360 ;	genAssign
                           8361 ;	AOP_HL for _offStepC
                           8362 ;	AOP_HL for _cOffStep
   1BB4 21 32 01           8363 	ld	hl,#_offStepC
   1BB7 7E                 8364 	ld	a,(hl)
   1BB8 21 34 01           8365 	ld	hl,#_cOffStep
   1BBB 77                 8366 	ld	(hl),a
                           8367 ;	square.c 1292
                           8368 ;	genLabel
   1BBC                    8369 00127$:
                           8370 ;	square.c 1293
                           8371 ;	genCast
                           8372 ;	AOP_HL for _seldrum
   1BBC 21 71 01           8373 	ld	hl,#_seldrum
   1BBF 4E                 8374 	ld	c,(hl)
   1BC0 06 00              8375 	ld	b,#0x00
                           8376 ;	genLeftShift
   1BC2 CB 21              8377 	sla	c
   1BC4 CB 10              8378 	rl	b
                           8379 ;	genCast
                           8380 ; Removed redundent load
                           8381 ;	genIpush
                           8382 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1BC6 79                 8383 	ld	a,c
   1BC7 F5                 8384 	push	af
   1BC8 33                 8385 	inc	sp
                           8386 ;	genIpush
   1BC9 3E 07              8387 	ld	a,#0x07
   1BCB F5                 8388 	push	af
   1BCC 33                 8389 	inc	sp
                           8390 ;	genCall
   1BCD CD 00 00           8391 	call	_set_sprite_tile
   1BD0 E8 02              8392 	lda	sp,2(sp)
                           8393 ;	square.c 1294
                           8394 ;	genIpush
                           8395 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1BD2 21 08 10           8396 	ld	hl,#0x1008
   1BD5 E5                 8397 	push	hl
                           8398 ;	genIpush
   1BD6 3E 07              8399 	ld	a,#0x07
   1BD8 F5                 8400 	push	af
   1BD9 33                 8401 	inc	sp
                           8402 ;	genCall
   1BDA CD 00 00           8403 	call	_move_sprite
   1BDD E8 03              8404 	lda	sp,3(sp)
                           8405 ;	square.c 1295
                           8406 ;	genIpush
                           8407 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1BDF 21 05 0A           8408 	ld	hl,#0x0A05
   1BE2 E5                 8409 	push	hl
                           8410 ;	genCall
   1BE3 CD 00 00           8411 	call	_set_sprite_tile
   1BE6 E8 02              8412 	lda	sp,2(sp)
                           8413 ;	square.c 1296
                           8414 ;	genPlus
                           8415 ;	AOP_HL for _cDelay
                           8416 ;	genPlusIncr
                           8417 ;	Can't optimise plus by inc, falling back to the normal way
   1BE8 21 33 01           8418 	ld	hl,#_cDelay
   1BEB 7E                 8419 	ld	a,(hl)
   1BEC C6 08              8420 	add	a,#0x08
   1BEE 4F                 8421 	ld	c,a
                           8422 ;	genIpush
                           8423 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1BEF 3E 98              8424 	ld	a,#0x98
   1BF1 F5                 8425 	push	af
   1BF2 33                 8426 	inc	sp
                           8427 ;	genIpush
   1BF3 79                 8428 	ld	a,c
   1BF4 F5                 8429 	push	af
   1BF5 33                 8430 	inc	sp
                           8431 ;	genIpush
   1BF6 3E 05              8432 	ld	a,#0x05
   1BF8 F5                 8433 	push	af
   1BF9 33                 8434 	inc	sp
                           8435 ;	genCall
   1BFA CD 00 00           8436 	call	_move_sprite
   1BFD E8 03              8437 	lda	sp,3(sp)
                           8438 ;	square.c 1297
                           8439 ;	genIpush
                           8440 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1BFF 21 04 08           8441 	ld	hl,#0x0804
   1C02 E5                 8442 	push	hl
                           8443 ;	genCall
   1C03 CD 00 00           8444 	call	_set_sprite_tile
   1C06 E8 02              8445 	lda	sp,2(sp)
                           8446 ;	square.c 1298
                           8447 ;	genPlus
                           8448 ;	AOP_HL for _cOffStep
                           8449 ;	Can't optimise plus by inc, falling back to the normal way
   1C08 3E D0              8450 	ld	a,#<_dXlut
   1C0A 21 34 01           8451 	ld	hl,#_cOffStep
   1C0D 86                 8452 	add	a,(hl)
   1C0E 4F                 8453 	ld	c,a
   1C0F 3E 00              8454 	ld	a,#>_dXlut
   1C11 CE 00              8455 	adc	a,#0x00
   1C13 47                 8456 	ld	b,a
                           8457 ;	genPointerGet
   1C14 0A                 8458 	ld	a,(bc)
                           8459 ;	genIpush
                           8460 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1C15 4F                 8461 	ld	c,a
   1C16 F5                 8462 	push	af
   1C17 33                 8463 	inc	sp
                           8464 ;	genIpush
   1C18 21 04 08           8465 	ld	hl,#0x0804
   1C1B E5                 8466 	push	hl
                           8467 ;	genCall
   1C1C CD 00 00           8468 	call	_move_sprite
   1C1F E8 03              8469 	lda	sp,3(sp)
                           8470 ;	square.c 1299
                           8471 ;	genCall
                           8472 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1C21 CD 00 00           8473 	call	_wait_vbl_done
                           8474 ;	genLabel
   1C24                    8475 00129$:
                           8476 ;	square.c 1302
                           8477 ;	genCmpEq
                           8478 ;	AOP_HL for _padext
                           8479 ; genCmpEq: left 1, right 1, result 0
   1C24 21 6E 01           8480 	ld	hl,#_padext
   1C27 7E                 8481 	ld	a,(hl)
   1C28 FE 48              8482 	cp	a,#0x48
   1C2A C2 A2 1C           8483 	jp	nz,00134$
   1C2D 18 03              8484 	jr	00222$
   1C2F                    8485 00221$:
   1C2F C3 A2 1C           8486 	jp	00134$
   1C32                    8487 00222$:
                           8488 ;	square.c 1304
                           8489 ;	genCmpEq
                           8490 ;	AOP_HL for _modus
                           8491 ; genCmpEq: left 1, right 1, result 0
   1C32 21 6D 01           8492 	ld	hl,#_modus
   1C35 7E                 8493 	ld	a,(hl)
   1C36 B7                 8494 	or	a,a
   1C37 C2 6C 1C           8495 	jp	nz,00131$
   1C3A 18 03              8496 	jr	00224$
   1C3C                    8497 00223$:
   1C3C C3 6C 1C           8498 	jp	00131$
   1C3F                    8499 00224$:
                           8500 ;	square.c 1306
                           8501 ;	genAssign
                           8502 ;	AOP_HL for _clkA
   1C3F 21 29 01           8503 	ld	hl,#_clkA
   1C42 36 00              8504 	ld	(hl),#0x00
                           8505 ;	square.c 1307
                           8506 ;	genAssign
                           8507 ;	AOP_HL for _clkB
   1C44 21 2C 01           8508 	ld	hl,#_clkB
   1C47 36 00              8509 	ld	(hl),#0x00
                           8510 ;	square.c 1308
                           8511 ;	genAssign
                           8512 ;	AOP_HL for _clkC
   1C49 21 2F 01           8513 	ld	hl,#_clkC
   1C4C 36 00              8514 	ld	(hl),#0x00
                           8515 ;	square.c 1309
                           8516 ;	genAssign
                           8517 ;	AOP_HL for _modus
   1C4E 21 6D 01           8518 	ld	hl,#_modus
   1C51 36 01              8519 	ld	(hl),#0x01
                           8520 ;	square.c 1310
                           8521 ;	genIpush
                           8522 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1C53 21 03 06           8523 	ld	hl,#0x0603
   1C56 E5                 8524 	push	hl
                           8525 ;	genCall
   1C57 CD 00 00           8526 	call	_set_sprite_tile
   1C5A E8 02              8527 	lda	sp,2(sp)
                           8528 ;	square.c 1311
                           8529 ;	genIpush
                           8530 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1C5C 21 A0 10           8531 	ld	hl,#0x10A0
   1C5F E5                 8532 	push	hl
                           8533 ;	genIpush
   1C60 3E 03              8534 	ld	a,#0x03
   1C62 F5                 8535 	push	af
   1C63 33                 8536 	inc	sp
                           8537 ;	genCall
   1C64 CD 00 00           8538 	call	_move_sprite
   1C67 E8 03              8539 	lda	sp,3(sp)
                           8540 ;	genGoto
   1C69 C3 96 1C           8541 	jp	00132$
                           8542 ;	genLabel
   1C6C                    8543 00131$:
                           8544 ;	square.c 1315
                           8545 ;	genAssign
                           8546 ;	AOP_HL for _clkA
   1C6C 21 29 01           8547 	ld	hl,#_clkA
   1C6F 36 00              8548 	ld	(hl),#0x00
                           8549 ;	square.c 1316
                           8550 ;	genAssign
                           8551 ;	AOP_HL for _clkB
   1C71 21 2C 01           8552 	ld	hl,#_clkB
   1C74 36 00              8553 	ld	(hl),#0x00
                           8554 ;	square.c 1317
                           8555 ;	genAssign
                           8556 ;	AOP_HL for _clkC
   1C76 21 2F 01           8557 	ld	hl,#_clkC
   1C79 36 00              8558 	ld	(hl),#0x00
                           8559 ;	square.c 1318
                           8560 ;	genAssign
                           8561 ;	AOP_HL for _modus
   1C7B 21 6D 01           8562 	ld	hl,#_modus
   1C7E 36 00              8563 	ld	(hl),#0x00
                           8564 ;	square.c 1319
                           8565 ;	genIpush
                           8566 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1C80 21 03 06           8567 	ld	hl,#0x0603
   1C83 E5                 8568 	push	hl
                           8569 ;	genCall
   1C84 CD 00 00           8570 	call	_set_sprite_tile
   1C87 E8 02              8571 	lda	sp,2(sp)
                           8572 ;	square.c 1320
                           8573 ;	genIpush
                           8574 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1C89 21 00 00           8575 	ld	hl,#0x0000
   1C8C E5                 8576 	push	hl
                           8577 ;	genIpush
   1C8D 3E 03              8578 	ld	a,#0x03
   1C8F F5                 8579 	push	af
   1C90 33                 8580 	inc	sp
                           8581 ;	genCall
   1C91 CD 00 00           8582 	call	_move_sprite
   1C94 E8 03              8583 	lda	sp,3(sp)
                           8584 ;	genLabel
   1C96                    8585 00132$:
                           8586 ;	square.c 1324
                           8587 ;	genCall
                           8588 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1C96 CD 00 00           8589 	call	_wait_vbl_done
                           8590 ;	square.c 1325
                           8591 ;	genIpush
                           8592 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1C99 3E 05              8593 	ld	a,#0x05
   1C9B F5                 8594 	push	af
   1C9C 33                 8595 	inc	sp
                           8596 ;	genCall
   1C9D CD 00 00           8597 	call	_performantdelay
   1CA0 E8 01              8598 	lda	sp,1(sp)
                           8599 ;	genLabel
   1CA2                    8600 00134$:
                           8601 ;	square.c 1356
                           8602 ;	genCmpEq
                           8603 ;	AOP_HL for _padext
                           8604 ; genCmpEq: left 1, right 1, result 0
   1CA2 21 6E 01           8605 	ld	hl,#_padext
   1CA5 7E                 8606 	ld	a,(hl)
   1CA6 FE 14              8607 	cp	a,#0x14
   1CA8 C2 BC 1C           8608 	jp	nz,00136$
   1CAB 18 03              8609 	jr	00226$
   1CAD                    8610 00225$:
   1CAD C3 BC 1C           8611 	jp	00136$
   1CB0                    8612 00226$:
                           8613 ;	square.c 1358
                           8614 ;	genCall
                           8615 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1CB0 CD 3B 06           8616 	call	_increaseOffStep
                           8617 ;	square.c 1359
                           8618 ;	genIpush
                           8619 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1CB3 3E 05              8620 	ld	a,#0x05
   1CB5 F5                 8621 	push	af
   1CB6 33                 8622 	inc	sp
                           8623 ;	genCall
   1CB7 CD 00 00           8624 	call	_performantdelay
   1CBA E8 01              8625 	lda	sp,1(sp)
                           8626 ;	genLabel
   1CBC                    8627 00136$:
                           8628 ;	square.c 1362
                           8629 ;	genCmpEq
                           8630 ;	AOP_HL for _padext
                           8631 ; genCmpEq: left 1, right 1, result 0
   1CBC 21 6E 01           8632 	ld	hl,#_padext
   1CBF 7E                 8633 	ld	a,(hl)
   1CC0 FE 18              8634 	cp	a,#0x18
   1CC2 C2 D6 1C           8635 	jp	nz,00138$
   1CC5 18 03              8636 	jr	00228$
   1CC7                    8637 00227$:
   1CC7 C3 D6 1C           8638 	jp	00138$
   1CCA                    8639 00228$:
                           8640 ;	square.c 1364
                           8641 ;	genCall
                           8642 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1CCA CD F7 06           8643 	call	_decreaseOffStep
                           8644 ;	square.c 1365
                           8645 ;	genIpush
                           8646 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1CCD 3E 05              8647 	ld	a,#0x05
   1CCF F5                 8648 	push	af
   1CD0 33                 8649 	inc	sp
                           8650 ;	genCall
   1CD1 CD 00 00           8651 	call	_performantdelay
   1CD4 E8 01              8652 	lda	sp,1(sp)
                           8653 ;	genLabel
   1CD6                    8654 00138$:
                           8655 ;	square.c 1368
                           8656 ;	genCmpEq
                           8657 ;	AOP_HL for _padext
                           8658 ; genCmpEq: left 1, right 1, result 0
   1CD6 21 6E 01           8659 	ld	hl,#_padext
   1CD9 7E                 8660 	ld	a,(hl)
   1CDA FE 11              8661 	cp	a,#0x11
   1CDC C2 F0 1C           8662 	jp	nz,00140$
   1CDF 18 03              8663 	jr	00230$
   1CE1                    8664 00229$:
   1CE1 C3 F0 1C           8665 	jp	00140$
   1CE4                    8666 00230$:
                           8667 ;	square.c 1370
                           8668 ;	genCall
                           8669 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1CE4 CD 6A 0B           8670 	call	_increaseSwing
                           8671 ;	square.c 1371
                           8672 ;	genIpush
                           8673 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1CE7 3E 05              8674 	ld	a,#0x05
   1CE9 F5                 8675 	push	af
   1CEA 33                 8676 	inc	sp
                           8677 ;	genCall
   1CEB CD 00 00           8678 	call	_performantdelay
   1CEE E8 01              8679 	lda	sp,1(sp)
                           8680 ;	genLabel
   1CF0                    8681 00140$:
                           8682 ;	square.c 1374
                           8683 ;	genCmpEq
                           8684 ;	AOP_HL for _padext
                           8685 ; genCmpEq: left 1, right 1, result 0
   1CF0 21 6E 01           8686 	ld	hl,#_padext
   1CF3 7E                 8687 	ld	a,(hl)
   1CF4 FE 12              8688 	cp	a,#0x12
   1CF6 C2 0A 1D           8689 	jp	nz,00142$
   1CF9 18 03              8690 	jr	00232$
   1CFB                    8691 00231$:
   1CFB C3 0A 1D           8692 	jp	00142$
   1CFE                    8693 00232$:
                           8694 ;	square.c 1376
                           8695 ;	genCall
                           8696 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1CFE CD FA 0B           8697 	call	_decreaseSwing
                           8698 ;	square.c 1377
                           8699 ;	genIpush
                           8700 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1D01 3E 05              8701 	ld	a,#0x05
   1D03 F5                 8702 	push	af
   1D04 33                 8703 	inc	sp
                           8704 ;	genCall
   1D05 CD 00 00           8705 	call	_performantdelay
   1D08 E8 01              8706 	lda	sp,1(sp)
                           8707 ;	genLabel
   1D0A                    8708 00142$:
                           8709 ;	square.c 1380
                           8710 ;	genCmpEq
                           8711 ;	AOP_HL for _padext
                           8712 ; genCmpEq: left 1, right 1, result 0
   1D0A 21 6E 01           8713 	ld	hl,#_padext
   1D0D 7E                 8714 	ld	a,(hl)
   1D0E FE 30              8715 	cp	a,#0x30
   1D10 C2 20 1D           8716 	jp	nz,00144$
   1D13 18 03              8717 	jr	00234$
   1D15                    8718 00233$:
   1D15 C3 20 1D           8719 	jp	00144$
   1D18                    8720 00234$:
                           8721 ;	square.c 1382
                           8722 ;	genAssign
                           8723 ;	AOP_HL for _syncToDrum
   1D18 21 25 01           8724 	ld	hl,#_syncToDrum
   1D1B 36 01              8725 	ld	(hl),#0x01
                           8726 ;	square.c 1384
                           8727 ;	genCall
                           8728 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1D1D CD 00 00           8729 	call	_waitpadup
                           8730 ;	genLabel
   1D20                    8731 00144$:
                           8732 ;	square.c 1388
                           8733 ;	genCmpEq
                           8734 ;	AOP_HL for _padext
                           8735 ; genCmpEq: left 1, right 1, result 0
   1D20 21 6E 01           8736 	ld	hl,#_padext
   1D23 7E                 8737 	ld	a,(hl)
   1D24 FE 21              8738 	cp	a,#0x21
   1D26 C2 3A 1D           8739 	jp	nz,00146$
   1D29 18 03              8740 	jr	00236$
   1D2B                    8741 00235$:
   1D2B C3 3A 1D           8742 	jp	00146$
   1D2E                    8743 00236$:
                           8744 ;	square.c 1390
                           8745 ;	genCall
                           8746 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1D2E CD D0 15           8747 	call	_savePattern
                           8748 ;	square.c 1391
                           8749 ;	genIpush
                           8750 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1D31 3E 05              8751 	ld	a,#0x05
   1D33 F5                 8752 	push	af
   1D34 33                 8753 	inc	sp
                           8754 ;	genCall
   1D35 CD 00 00           8755 	call	_performantdelay
   1D38 E8 01              8756 	lda	sp,1(sp)
                           8757 ;	genLabel
   1D3A                    8758 00146$:
                           8759 ;	square.c 1394
                           8760 ;	genCmpEq
                           8761 ;	AOP_HL for _padext
                           8762 ; genCmpEq: left 1, right 1, result 0
   1D3A 21 6E 01           8763 	ld	hl,#_padext
   1D3D 7E                 8764 	ld	a,(hl)
   1D3E FE 22              8765 	cp	a,#0x22
   1D40 C2 85 1D           8766 	jp	nz,00153$
   1D43 18 03              8767 	jr	00238$
   1D45                    8768 00237$:
   1D45 C3 85 1D           8769 	jp	00153$
   1D48                    8770 00238$:
                           8771 ;	square.c 1397
                           8772 ;	genCmpGt
                           8773 ;	AOP_HL for _currentSaveSlot
   1D48 3E 03              8774 	ld	a,#0x03
   1D4A 21 35 01           8775 	ld	hl,#_currentSaveSlot
   1D4D 96                 8776 	sub	a,(hl)
   1D4E DA 7C 1D           8777 	jp	c,00151$
                           8778 ;	genJumpTab
                           8779 ;	AOP_HL for _currentSaveSlot
   1D51 5E                 8780 	ld	e,(hl)
   1D52 16 00              8781 	ld	d,#0x00
   1D54 21 5B 1D           8782 	ld	hl,#00239$
   1D57 19                 8783 	add	hl,de
   1D58 19                 8784 	add	hl,de
   1D59 19                 8785 	add	hl,de
   1D5A E9                 8786 	jp	(hl)
   1D5B                    8787 00239$:
   1D5B C3 67 1D           8788 	jp	00147$
   1D5E C3 6D 1D           8789 	jp	00148$
   1D61 C3 73 1D           8790 	jp	00149$
   1D64 C3 79 1D           8791 	jp	00150$
                           8792 ;	square.c 1400
                           8793 ;	genLabel
   1D67                    8794 00147$:
                           8795 ;	genCall
                           8796 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1D67 CD 30 0E           8797 	call	_loadA
                           8798 ;	square.c 1401
                           8799 ;	genGoto
   1D6A C3 7C 1D           8800 	jp	00151$
                           8801 ;	square.c 1403
                           8802 ;	genLabel
   1D6D                    8803 00148$:
                           8804 ;	genCall
                           8805 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1D6D CD 18 10           8806 	call	_loadB
                           8807 ;	square.c 1404
                           8808 ;	genGoto
   1D70 C3 7C 1D           8809 	jp	00151$
                           8810 ;	square.c 1407
                           8811 ;	genLabel
   1D73                    8812 00149$:
                           8813 ;	genCall
                           8814 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1D73 CD 00 12           8815 	call	_loadC
                           8816 ;	square.c 1408
                           8817 ;	genGoto
   1D76 C3 7C 1D           8818 	jp	00151$
                           8819 ;	square.c 1410
                           8820 ;	genLabel
   1D79                    8821 00150$:
                           8822 ;	genCall
                           8823 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1D79 CD E8 13           8824 	call	_loadD
                           8825 ;	square.c 1412
                           8826 ;	genLabel
   1D7C                    8827 00151$:
                           8828 ;	square.c 1413
                           8829 ;	genIpush
                           8830 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1D7C 3E 05              8831 	ld	a,#0x05
   1D7E F5                 8832 	push	af
   1D7F 33                 8833 	inc	sp
                           8834 ;	genCall
   1D80 CD 00 00           8835 	call	_performantdelay
   1D83 E8 01              8836 	lda	sp,1(sp)
                           8837 ;	genLabel
   1D85                    8838 00153$:
                           8839 ;	square.c 1416
                           8840 ;	genCmpEq
                           8841 ;	AOP_HL for _padext
                           8842 ; genCmpEq: left 1, right 1, result 0
   1D85 21 6E 01           8843 	ld	hl,#_padext
   1D88 7E                 8844 	ld	a,(hl)
   1D89 FE 24              8845 	cp	a,#0x24
   1D8B C2 C8 1D           8846 	jp	nz,00157$
   1D8E 18 03              8847 	jr	00241$
   1D90                    8848 00240$:
   1D90 C3 C8 1D           8849 	jp	00157$
   1D93                    8850 00241$:
                           8851 ;	square.c 1418
                           8852 ;	genCmpLt
                           8853 ;	AOP_HL for _currentSaveSlot
   1D93 21 35 01           8854 	ld	hl,#_currentSaveSlot
   1D96 7E                 8855 	ld	a,(hl)
   1D97 FE 03              8856 	cp	#0x03
   1D99 D2 BF 1D           8857 	jp	nc,00155$
                           8858 ;	square.c 1420
                           8859 ;	genPlus
                           8860 ;	AOP_HL for _currentSaveSlot
                           8861 ;	genPlusIncr
   1D9C 34                 8862 	inc	(hl)
                           8863 ;	square.c 1421
                           8864 ;	genIpush
                           8865 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1D9D 21 06 0C           8866 	ld	hl,#0x0C06
   1DA0 E5                 8867 	push	hl
                           8868 ;	genCall
   1DA1 CD 00 00           8869 	call	_set_sprite_tile
   1DA4 E8 02              8870 	lda	sp,2(sp)
                           8871 ;	square.c 1422
                           8872 ;	genPlus
                           8873 ;	AOP_HL for _currentSaveSlot
                           8874 ;	Can't optimise plus by inc, falling back to the normal way
   1DA6 3E 10              8875 	ld	a,#<_savelut
   1DA8 21 35 01           8876 	ld	hl,#_currentSaveSlot
   1DAB 86                 8877 	add	a,(hl)
   1DAC 4F                 8878 	ld	c,a
   1DAD 3E 01              8879 	ld	a,#>_savelut
   1DAF CE 00              8880 	adc	a,#0x00
   1DB1 47                 8881 	ld	b,a
                           8882 ;	genPointerGet
   1DB2 0A                 8883 	ld	a,(bc)
                           8884 ;	genIpush
                           8885 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1DB3 4F                 8886 	ld	c,a
   1DB4 F5                 8887 	push	af
   1DB5 33                 8888 	inc	sp
                           8889 ;	genIpush
   1DB6 21 06 A0           8890 	ld	hl,#0xA006
   1DB9 E5                 8891 	push	hl
                           8892 ;	genCall
   1DBA CD 00 00           8893 	call	_move_sprite
   1DBD E8 03              8894 	lda	sp,3(sp)
                           8895 ;	genLabel
   1DBF                    8896 00155$:
                           8897 ;	square.c 1424
                           8898 ;	genIpush
                           8899 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1DBF 3E 05              8900 	ld	a,#0x05
   1DC1 F5                 8901 	push	af
   1DC2 33                 8902 	inc	sp
                           8903 ;	genCall
   1DC3 CD 00 00           8904 	call	_performantdelay
   1DC6 E8 01              8905 	lda	sp,1(sp)
                           8906 ;	genLabel
   1DC8                    8907 00157$:
                           8908 ;	square.c 1427
                           8909 ;	genCmpEq
                           8910 ;	AOP_HL for _padext
                           8911 ; genCmpEq: left 1, right 1, result 0
   1DC8 21 6E 01           8912 	ld	hl,#_padext
   1DCB 7E                 8913 	ld	a,(hl)
   1DCC FE 28              8914 	cp	a,#0x28
   1DCE C2 3B 1A           8915 	jp	nz,00163$
   1DD1 18 03              8916 	jr	00243$
   1DD3                    8917 00242$:
   1DD3 C3 3B 1A           8918 	jp	00163$
   1DD6                    8919 00243$:
                           8920 ;	square.c 1429
                           8921 ;	genCmpGt
                           8922 ;	AOP_HL for _currentSaveSlot
   1DD6 3E 00              8923 	ld	a,#0x00
   1DD8 21 35 01           8924 	ld	hl,#_currentSaveSlot
   1DDB 96                 8925 	sub	a,(hl)
   1DDC D2 02 1E           8926 	jp	nc,00159$
                           8927 ;	square.c 1431
                           8928 ;	genMinus
                           8929 ;	AOP_HL for _currentSaveSlot
   1DDF 35                 8930 	dec	(hl)
                           8931 ;	square.c 1432
                           8932 ;	genIpush
                           8933 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1DE0 21 06 0C           8934 	ld	hl,#0x0C06
   1DE3 E5                 8935 	push	hl
                           8936 ;	genCall
   1DE4 CD 00 00           8937 	call	_set_sprite_tile
   1DE7 E8 02              8938 	lda	sp,2(sp)
                           8939 ;	square.c 1433
                           8940 ;	genPlus
                           8941 ;	AOP_HL for _currentSaveSlot
                           8942 ;	Can't optimise plus by inc, falling back to the normal way
   1DE9 3E 10              8943 	ld	a,#<_savelut
   1DEB 21 35 01           8944 	ld	hl,#_currentSaveSlot
   1DEE 86                 8945 	add	a,(hl)
   1DEF 4F                 8946 	ld	c,a
   1DF0 3E 01              8947 	ld	a,#>_savelut
   1DF2 CE 00              8948 	adc	a,#0x00
   1DF4 47                 8949 	ld	b,a
                           8950 ;	genPointerGet
   1DF5 0A                 8951 	ld	a,(bc)
                           8952 ;	genIpush
                           8953 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1DF6 4F                 8954 	ld	c,a
   1DF7 F5                 8955 	push	af
   1DF8 33                 8956 	inc	sp
                           8957 ;	genIpush
   1DF9 21 06 A0           8958 	ld	hl,#0xA006
   1DFC E5                 8959 	push	hl
                           8960 ;	genCall
   1DFD CD 00 00           8961 	call	_move_sprite
   1E00 E8 03              8962 	lda	sp,3(sp)
                           8963 ;	genLabel
   1E02                    8964 00159$:
                           8965 ;	square.c 1435
                           8966 ;	genIpush
                           8967 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1E02 3E 05              8968 	ld	a,#0x05
   1E04 F5                 8969 	push	af
   1E05 33                 8970 	inc	sp
                           8971 ;	genCall
   1E06 CD 00 00           8972 	call	_performantdelay
   1E09 E8 01              8973 	lda	sp,1(sp)
                           8974 ;	genGoto
   1E0B C3 3B 1A           8975 	jp	00163$
                           8976 ;	genLabel
   1E0E                    8977 00165$:
                           8978 ;	genEndFunction
   1E0E E8 03              8979 	lda	sp,3(sp)
   1E10 C9                 8980 	ret
   1E11                    8981 ___main_end:
                           8982 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 ___decreaseOffStep_end             078E R
  0 ___decreaseOffStep_start           06F7 R
  0 ___decreasePulses_end              0B6A R
  0 ___decreasePulses_start            0A65 R
  0 ___decreaseSteps_end               0960 R
  0 ___decreaseSteps_start             0877 R
  0 ___decreaseSwing_end               0C8F R
  0 ___decreaseSwing_start             0BFA R
  0 ___fillDrumA_end                   0264 R
  0 ___fillDrumA_start                 0095 R
  0 ___fillDrumB_end                   0433 R
  0 ___fillDrumB_start                 0264 R
  0 ___fillDrumC_end                   0602 R
  0 ___fillDrumC_start                 0433 R
  0 ___increaseOffStep_end             06F7 R
  0 ___increaseOffStep_start           063B R
  0 ___increasePulses_end              0A65 R
  0 ___increasePulses_start            0960 R
  0 ___increaseSteps_end               0877 R
  0 ___increaseSteps_start             078E R
  0 ___increaseSwing_end               0BFA R
  0 ___increaseSwing_start             0B6A R
  0 ___loadA_end                       1018 R
  0 ___loadA_start                     0E30 R
  0 ___loadB_end                       1200 R
  0 ___loadB_start                     1018 R
  0 ___loadC_end                       13E8 R
  0 ___loadC_start                     1200 R
  0 ___loadD_end                       15D0 R
  0 ___loadD_start                     13E8 R
  0 ___main_end                        1E11 R
  0 ___main_start                      1791 R
  0 ___makeASound_end                  0063 R
  0 ___makeASound_start                0044 R
  0 ___makeBSound_end                  007C R
  0 ___makeBSound_start                0063 R
  0 ___makeCSound_end                  0095 R
  0 ___makeCSound_start                007C R
  0 ___master_end                      0E15 R
  0 ___master_start                    0E00 R
  0 ___performantdelay_end             0014 R
  0 ___performantdelay_start           0000 R
  0 ___player_end                      0E2C R
  0 ___player_start                    0E15 R
  0 ___rand_end                        0044 R
  0 ___rand_start                      0014 R
  0 ___savePattern_end                 1791 R
  0 ___savePattern_start               15D0 R
  0 ___setupDrum_end                   063B R
  0 ___setupDrum_start                 0602 R
  0 ___sync_end                        0E00 R
  0 ___sync_start                      0DC3 R
  0 ___tick_end                        0DC3 R
  0 ___tick_start                      0C8F R
  0 ___tim_end                         0E30 R
  0 ___tim_start                       0E2C R
    __initrleblock                     **** GX
    __moduchar_rrx_s                   **** GX
    __muluint_rrx_s                    **** GX
    _add_TIM                           **** GX
  1 _bob                               016A GR
  1 _bucket                            0114 GR
  1 _cDelay                            0133 GR
  1 _cOffStep                          0134 GR
  1 _clkA                              0129 GR
  1 _clkB                              012C GR
  1 _clkC                              012F GR
    _clock                             **** GX
  1 _clockToSync                       0126 GR
  1 _currentSaveSlot                   0135 GR
  1 _current_rand                      0166 R
  1 _dXlut                             00D0 GR
  1 _dYlut                             00F0 GR
  0 _decreaseOffStep                   06F7 GR
  0 _decreasePulses                    0A65 GR
  0 _decreaseSteps                     0877 GR
  0 _decreaseSwing                     0BFA GR
    _delay                             **** GX
  1 _delayA                            0121 GR
  1 _delayB                            0122 GR
  1 _delayC                            0123 GR
    _disable_interrupts                **** GX
  1 _drumA                             0070 GR
  1 _drumB                             0090 GR
  1 _drumC                             00B0 GR
    _enable_interrupts                 **** GX
  1 _f                                 011C GR
  0 _fillDrumA                         0095 GR
  0 _fillDrumB                         0264 GR
  0 _fillDrumC                         0433 GR
  1 _first                             011A GR
  1 _g                                 0124 GR
  1 _i                                 0115 GR
  0 _increaseOffStep                   063B GR
  0 _increasePulses                    0960 GR
  0 _increaseSteps                     078E GR
  0 _increaseSwing                     0B6A GR
  1 _joy                               016F GR
    _joypad                            **** GX
  1 _last                              011B GR
  0 _loadA                             0E30 GR
  0 _loadB                             1018 GR
  0 _loadC                             1200 GR
  0 _loadD                             13E8 GR
  0 _main                              1791 GR
  0 _makeASound                        0044 GR
  0 _makeBSound                        0063 GR
  0 _makeCSound                        007C GR
  0 _master                            0E00 GR
  1 _midiC                             0030 GR
  1 _modus                             016D GR
    _move_sprite                       **** GX
  1 _numberOfPulsesA                   0127 GR
  1 _numberOfPulsesB                   012A GR
  1 _numberOfPulsesC                   012D GR
  1 _offStepA                          0130 GR
  1 _offStepB                          0131 GR
  1 _offStepC                          0132 GR
  1 _offsetC                           0040 GR
  1 _pad                               0170 GR
  1 _padext                            016E GR
  0 _performantdelay                   0000 GR
  0 _player                            0E15 GR
  1 _pop                               016C GR
  0 _rand                              0014 GR
  1 _randA                             0117 GR
  1 _randB                             0118 GR
  1 _randC                             0119 GR
  1 _samp_freq                         0167 GR
  1 _saveC                             0060 GR
  0 _savePattern                       15D0 GR
  1 _savelut                           0110 GR
  1 _seldrum                           0171 GR
    _set_interrupts                    **** GX
    _set_sprite_data                   **** GX
    _set_sprite_tile                   **** GX
  0 _setupDrum                         0602 GR
  1 _squareA                           0000 GR
  1 _squareB                           0010 GR
  1 _squareC                           0020 GR
  1 _storeADA                          013F GR
  1 _storeADB                          0140 GR
  1 _storeADC                          0141 GR
  1 _storeAOA                          013C GR
  1 _storeAOB                          013D GR
  1 _storeAOC                          013E GR
  1 _storeAPA                          0136 GR
  1 _storeAPB                          0138 GR
  1 _storeAPC                          013A GR
  1 _storeASA                          0137 GR
  1 _storeASB                          0139 GR
  1 _storeASC                          013B GR
  1 _storeBDA                          014B GR
  1 _storeBDB                          014C GR
  1 _storeBDC                          014D GR
  1 _storeBOA                          0148 GR
  1 _storeBOB                          0149 GR
  1 _storeBOC                          014A GR
  1 _storeBPA                          0142 GR
  1 _storeBPB                          0144 GR
  1 _storeBPC                          0146 GR
  1 _storeBSA                          0143 GR
  1 _storeBSB                          0145 GR
  1 _storeBSC                          0147 GR
  1 _storeCDA                          0157 GR
  1 _storeCDB                          0158 GR
  1 _storeCDC                          0159 GR
  1 _storeCOA                          0154 GR
  1 _storeCOB                          0155 GR
  1 _storeCOC                          0156 GR
  1 _storeCPA                          014E GR
  1 _storeCPB                          0150 GR
  1 _storeCPC                          0152 GR
  1 _storeCSA                          014F GR
  1 _storeCSB                          0151 GR
  1 _storeCSC                          0153 GR
  1 _storeDDA                          0163 GR
  1 _storeDDB                          0164 GR
  1 _storeDDC                          0165 GR
  1 _storeDOA                          0160 GR
  1 _storeDOB                          0161 GR
  1 _storeDOC                          0162 GR
  1 _storeDPA                          015A GR
  1 _storeDPB                          015C GR
  1 _storeDPC                          015E GR
  1 _storeDSA                          015B GR
  1 _storeDSB                          015D GR
  1 _storeDSC                          015F GR
  1 _swingC                            0050 GR
  0 _sync                              0DC3 GR
  1 _syncToDrum                        0125 GR
  1 _tempo                             0168 GR
  0 _tick                              0C8F GR
  0 _tim                               0E2C GR
  1 _todd                              016B GR
  1 _totalStepsA                       0128 GR
  1 _totalStepsB                       012B GR
  1 _totalStepsC                       012E GR
    _wait_vbl_done                     **** GX
    _waitpadup                         **** GX
  1 _watch                             0169 GR
  1 _x                                 011D GR
  1 _xA                                011E GR
  1 _xB                                011F GR
  1 _xC                                0120 GR
  1 _y                                 0116 GR

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size 1E11   flags 0
   1 _DATA                              size  172   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size  108   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
